<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.1" created="2013-05-07 21:59" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>gregs</title>
	<link>http://gregs.tcias.co.uk</link>
	<description>helping me remember what I figure out</description>
	<pubDate>Tue, 07 May 2013 21:59:34 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://gregs.tcias.co.uk</wp:base_site_url>
	<wp:base_blog_url>http://gregs.tcias.co.uk</wp:base_blog_url>

	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>gregs</wp:author_login><wp:author_email>gregs@tcias.co.uk</wp:author_email><wp:author_display_name><![CDATA[gregs]]></wp:author_display_name><wp:author_first_name><![CDATA[Greg]]></wp:author_first_name><wp:author_last_name><![CDATA[Stewart]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>29</wp:term_id><wp:category_nicename>comps</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[comps]]></wp:cat_name><wp:category_description><![CDATA[Computers, servers, programming, code samples]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>38</wp:term_id><wp:category_nicename>creative</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[creative]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>css</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[CSS]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>32</wp:term_id><wp:category_nicename>database</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[database]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>37</wp:term_id><wp:category_nicename>design</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[design]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>34</wp:term_id><wp:category_nicename>eclipse</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[eclipse]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>24</wp:term_id><wp:category_nicename>email</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[email]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>14</wp:term_id><wp:category_nicename>google</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[google]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>41</wp:term_id><wp:category_nicename>grails</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[grails]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>javascript</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[JavaScript]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>linode</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[linode]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>17</wp:term_id><wp:category_nicename>log</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[log]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>26</wp:term_id><wp:category_nicename>mac</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[mac]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>15</wp:term_id><wp:category_nicename>maps</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[maps]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>102</wp:term_id><wp:category_nicename>mobile</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[mobile]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>13</wp:term_id><wp:category_nicename>ms-sql</wp:category_nicename><wp:category_parent>database</wp:category_parent><wp:cat_name><![CDATA[MS SQL]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>mysql</wp:category_nicename><wp:category_parent>database</wp:category_parent><wp:cat_name><![CDATA[MySQL]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>73</wp:term_id><wp:category_nicename>node-js</wp:category_nicename><wp:category_parent>javascript</wp:category_parent><wp:cat_name><![CDATA[node.js]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>33</wp:term_id><wp:category_nicename>oracle</wp:category_nicename><wp:category_parent>database</wp:category_parent><wp:cat_name><![CDATA[Oracle]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>27</wp:term_id><wp:category_nicename>os-x</wp:category_nicename><wp:category_parent>mac</wp:category_parent><wp:cat_name><![CDATA[os x]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>18</wp:term_id><wp:category_nicename>parse</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[parse]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>23</wp:term_id><wp:category_nicename>rendering</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[rendering]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>30</wp:term_id><wp:category_nicename>rl</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[RL]]></wp:cat_name><wp:category_description><![CDATA[Real life]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>49</wp:term_id><wp:category_nicename>ruby</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[ruby]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>25</wp:term_id><wp:category_nicename>sendmail</wp:category_nicename><wp:category_parent>email</wp:category_parent><wp:cat_name><![CDATA[sendmail]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>35</wp:term_id><wp:category_nicename>svn</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[svn]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>16</wp:term_id><wp:category_nicename>tdd</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[tdd]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>61</wp:term_id><wp:category_nicename>tropo</wp:category_nicename><wp:category_parent>ruby</wp:category_parent><wp:cat_name><![CDATA[tropo]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>tumble</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[tumble]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>28</wp:term_id><wp:category_nicename>vmware</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[vmware]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>20</wp:term_id><wp:category_nicename>web-server</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[web server]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>windows</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[Windows]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>nix</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[*nix]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>31</wp:term_id><wp:category_nicename>apache</wp:category_nicename><wp:category_parent>web-server</wp:category_parent><wp:cat_name><![CDATA[apache]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>22</wp:term_id><wp:category_nicename>browser</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[browser]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>coldfusion</wp:category_nicename><wp:category_parent>comps</wp:category_parent><wp:cat_name><![CDATA[ColdFusion]]></wp:cat_name><wp:category_description><![CDATA[All things ColdFusion]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>36</wp:term_id><wp:category_nicename>debian</wp:category_nicename><wp:category_parent>nix</wp:category_parent><wp:cat_name><![CDATA[debian]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>21</wp:term_id><wp:category_nicename>iis</wp:category_nicename><wp:category_parent>web-server</wp:category_parent><wp:cat_name><![CDATA[iis]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>76</wp:term_id><wp:category_nicename>iphone</wp:category_nicename><wp:category_parent>mac</wp:category_parent><wp:cat_name><![CDATA[iphone]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>40</wp:term_id><wp:category_nicename>jetty</wp:category_nicename><wp:category_parent>web-server</wp:category_parent><wp:cat_name><![CDATA[jetty]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>machii</wp:category_nicename><wp:category_parent>coldfusion</wp:category_parent><wp:cat_name><![CDATA[mach-ii]]></wp:cat_name><wp:category_description><![CDATA[All things mach-ii]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>photos</wp:category_nicename><wp:category_parent>rl</wp:category_parent><wp:cat_name><![CDATA[photos]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>56</wp:term_id><wp:category_nicename>rails</wp:category_nicename><wp:category_parent>ruby</wp:category_parent><wp:cat_name><![CDATA[rails]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>39</wp:term_id><wp:category_nicename>ssl</wp:category_nicename><wp:category_parent>web-server</wp:category_parent><wp:cat_name><![CDATA[ssl]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>42</wp:term_id><wp:category_nicename>stubbie</wp:category_nicename><wp:category_parent>tdd</wp:category_parent><wp:cat_name><![CDATA[stubbie]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>260</wp:term_id><wp:tag_slug>callback</wp:tag_slug><wp:tag_name><![CDATA[$.callback]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>588</wp:term_id><wp:tag_slug>end</wp:tag_slug><wp:tag_name><![CDATA[.end()]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>394</wp:term_id><wp:tag_slug>off</wp:tag_slug><wp:tag_name><![CDATA[.off()]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>393</wp:term_id><wp:tag_slug>on</wp:tag_slug><wp:tag_name><![CDATA[.on()]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>589</wp:term_id><wp:tag_slug>prevall</wp:tag_slug><wp:tag_name><![CDATA[.prevAll()]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>587</wp:term_id><wp:tag_slug>slice</wp:tag_slug><wp:tag_name><![CDATA[.slice()]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>643</wp:term_id><wp:tag_slug>1k</wp:tag_slug><wp:tag_name><![CDATA[1k]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>363</wp:term_id><wp:tag_slug>2d</wp:tag_slug><wp:tag_name><![CDATA[2d]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>110</wp:term_id><wp:tag_slug>3d</wp:tag_slug><wp:tag_name><![CDATA[3d]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>750</wp:term_id><wp:tag_slug>target</wp:tag_slug><wp:tag_name><![CDATA[:target]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>748</wp:term_id><wp:tag_slug>accelerometer</wp:tag_slug><wp:tag_name><![CDATA[accelerometer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>697</wp:term_id><wp:tag_slug>ace</wp:tag_slug><wp:tag_name><![CDATA[ace]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>273</wp:term_id><wp:tag_slug>acl</wp:tag_slug><wp:tag_name><![CDATA[acl]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>343</wp:term_id><wp:tag_slug>addy</wp:tag_slug><wp:tag_name><![CDATA[Addy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>559</wp:term_id><wp:tag_slug>administration</wp:tag_slug><wp:tag_name><![CDATA[administration]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>811</wp:term_id><wp:tag_slug>aggregator</wp:tag_slug><wp:tag_name><![CDATA[aggregator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>767</wp:term_id><wp:tag_slug>algorithm</wp:tag_slug><wp:tag_name><![CDATA[algorithm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>266</wp:term_id><wp:tag_slug>alice-js</wp:tag_slug><wp:tag_name><![CDATA[alice.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>845</wp:term_id><wp:tag_slug>amazon</wp:tag_slug><wp:tag_name><![CDATA[amazon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>694</wp:term_id><wp:tag_slug>analysis</wp:tag_slug><wp:tag_name><![CDATA[analysis]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>874</wp:term_id><wp:tag_slug>android</wp:tag_slug><wp:tag_name><![CDATA[android]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>875</wp:term_id><wp:tag_slug>angular-js</wp:tag_slug><wp:tag_name><![CDATA[angular.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>861</wp:term_id><wp:tag_slug>angularjs</wp:tag_slug><wp:tag_name><![CDATA[angularjs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>824</wp:term_id><wp:tag_slug>animated</wp:tag_slug><wp:tag_name><![CDATA[animated]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>212</wp:term_id><wp:tag_slug>animation</wp:tag_slug><wp:tag_name><![CDATA[animation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>251</wp:term_id><wp:tag_slug>animations</wp:tag_slug><wp:tag_name><![CDATA[animations]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>apache</wp:tag_slug><wp:tag_name><![CDATA[apache]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>apache2</wp:tag_slug><wp:tag_name><![CDATA[apache2]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>217</wp:term_id><wp:tag_slug>api</wp:tag_slug><wp:tag_name><![CDATA[api]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>120</wp:term_id><wp:tag_slug>app</wp:tag_slug><wp:tag_name><![CDATA[app]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>835</wp:term_id><wp:tag_slug>app-scrolls</wp:tag_slug><wp:tag_name><![CDATA[app scrolls]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>719</wp:term_id><wp:tag_slug>application</wp:tag_slug><wp:tag_name><![CDATA[application]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>228</wp:term_id><wp:tag_slug>application-cache</wp:tag_slug><wp:tag_name><![CDATA[application cache]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>802</wp:term_id><wp:tag_slug>architecture</wp:tag_slug><wp:tag_name><![CDATA[architecture]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>142</wp:term_id><wp:tag_slug>arduino</wp:tag_slug><wp:tag_name><![CDATA[arduino]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>849</wp:term_id><wp:tag_slug>armory</wp:tag_slug><wp:tag_name><![CDATA[armory]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>826</wp:term_id><wp:tag_slug>arrows</wp:tag_slug><wp:tag_name><![CDATA[arrows]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>364</wp:term_id><wp:tag_slug>art</wp:tag_slug><wp:tag_name><![CDATA[art]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>528</wp:term_id><wp:tag_slug>ascii</wp:tag_slug><wp:tag_name><![CDATA[ascii]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>229</wp:term_id><wp:tag_slug>asset-management</wp:tag_slug><wp:tag_name><![CDATA[asset management]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>844</wp:term_id><wp:tag_slug>assets</wp:tag_slug><wp:tag_name><![CDATA[assets]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>218</wp:term_id><wp:tag_slug>async</wp:tag_slug><wp:tag_name><![CDATA[async]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>428</wp:term_id><wp:tag_slug>asynchronous</wp:tag_slug><wp:tag_name><![CDATA[asynchronous]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>108</wp:term_id><wp:tag_slug>audio</wp:tag_slug><wp:tag_name><![CDATA[audio]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>703</wp:term_id><wp:tag_slug>authentication</wp:tag_slug><wp:tag_name><![CDATA[authentication]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>358</wp:term_id><wp:tag_slug>automation</wp:tag_slug><wp:tag_name><![CDATA[automation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>autotest</wp:tag_slug><wp:tag_name><![CDATA[autotest]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>567</wp:term_id><wp:tag_slug>azure</wp:tag_slug><wp:tag_name><![CDATA[azure]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>139</wp:term_id><wp:tag_slug>backbone-js</wp:tag_slug><wp:tag_name><![CDATA[backbone.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>259</wp:term_id><wp:tag_slug>background</wp:tag_slug><wp:tag_name><![CDATA[background]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>778</wp:term_id><wp:tag_slug>backgrounds</wp:tag_slug><wp:tag_name><![CDATA[backgrounds]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>881</wp:term_id><wp:tag_slug>backup</wp:tag_slug><wp:tag_name><![CDATA[backup]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>122</wp:term_id><wp:tag_slug>bad</wp:tag_slug><wp:tag_name><![CDATA[bad]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>312</wp:term_id><wp:tag_slug>balancer</wp:tag_slug><wp:tag_name><![CDATA[balancer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>864</wp:term_id><wp:tag_slug>bananabread</wp:tag_slug><wp:tag_name><![CDATA[bananabread]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>167</wp:term_id><wp:tag_slug>batman-js</wp:tag_slug><wp:tag_name><![CDATA[batman.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>619</wp:term_id><wp:tag_slug>bbc</wp:tag_slug><wp:tag_name><![CDATA[bbc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>85</wp:term_id><wp:tag_slug>bdd</wp:tag_slug><wp:tag_name><![CDATA[bdd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>244</wp:term_id><wp:tag_slug>beautiful</wp:tag_slug><wp:tag_name><![CDATA[beautiful]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>574</wp:term_id><wp:tag_slug>best-practice</wp:tag_slug><wp:tag_name><![CDATA[best practice]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>865</wp:term_id><wp:tag_slug>bitwise</wp:tag_slug><wp:tag_name><![CDATA[bitwise]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>682</wp:term_id><wp:tag_slug>blame</wp:tag_slug><wp:tag_name><![CDATA[blame]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>848</wp:term_id><wp:tag_slug>blizzard</wp:tag_slug><wp:tag_name><![CDATA[blizzard]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>135</wp:term_id><wp:tag_slug>block</wp:tag_slug><wp:tag_name><![CDATA[block]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>124</wp:term_id><wp:tag_slug>blog</wp:tag_slug><wp:tag_name><![CDATA[blog]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>193</wp:term_id><wp:tag_slug>bogart</wp:tag_slug><wp:tag_name><![CDATA[bogart]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>107</wp:term_id><wp:tag_slug>boilerplate</wp:tag_slug><wp:tag_name><![CDATA[boilerplate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>592</wp:term_id><wp:tag_slug>book</wp:tag_slug><wp:tag_name><![CDATA[book]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>701</wp:term_id><wp:tag_slug>bookmarklet</wp:tag_slug><wp:tag_name><![CDATA[bookmarklet]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>698</wp:term_id><wp:tag_slug>bootstrap</wp:tag_slug><wp:tag_name><![CDATA[bootstrap]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>309</wp:term_id><wp:tag_slug>bouncy</wp:tag_slug><wp:tag_name><![CDATA[bouncy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>140</wp:term_id><wp:tag_slug>box</wp:tag_slug><wp:tag_name><![CDATA[box]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>171</wp:term_id><wp:tag_slug>box2d</wp:tag_slug><wp:tag_name><![CDATA[box2d]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>869</wp:term_id><wp:tag_slug>boxcar</wp:tag_slug><wp:tag_name><![CDATA[boxcar]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>775</wp:term_id><wp:tag_slug>branch</wp:tag_slug><wp:tag_name><![CDATA[branch]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>536</wp:term_id><wp:tag_slug>breakpoint-js</wp:tag_slug><wp:tag_name><![CDATA[breakpoint.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>786</wp:term_id><wp:tag_slug>breakpoints</wp:tag_slug><wp:tag_name><![CDATA[breakpoints]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>709</wp:term_id><wp:tag_slug>brew</wp:tag_slug><wp:tag_name><![CDATA[brew]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>browser</wp:tag_slug><wp:tag_name><![CDATA[browser]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>367</wp:term_id><wp:tag_slug>brunch</wp:tag_slug><wp:tag_name><![CDATA[brunch]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>827</wp:term_id><wp:tag_slug>bubble</wp:tag_slug><wp:tag_name><![CDATA[bubble]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>828</wp:term_id><wp:tag_slug>bubbles</wp:tag_slug><wp:tag_name><![CDATA[bubbles]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>284</wp:term_id><wp:tag_slug>build</wp:tag_slug><wp:tag_name><![CDATA[build]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>685</wp:term_id><wp:tag_slug>builder</wp:tag_slug><wp:tag_name><![CDATA[builder]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>872</wp:term_id><wp:tag_slug>burn-your-idols</wp:tag_slug><wp:tag_name><![CDATA[burn your idols]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>530</wp:term_id><wp:tag_slug>c</wp:tag_slug><wp:tag_name><![CDATA[c#]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>720</wp:term_id><wp:tag_slug>cables</wp:tag_slug><wp:tag_name><![CDATA[cables]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>780</wp:term_id><wp:tag_slug>cache</wp:tag_slug><wp:tag_name><![CDATA[cache]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>742</wp:term_id><wp:tag_slug>calendar</wp:tag_slug><wp:tag_name><![CDATA[calendar]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>219</wp:term_id><wp:tag_slug>callbacks</wp:tag_slug><wp:tag_name><![CDATA[callbacks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>851</wp:term_id><wp:tag_slug>cancan</wp:tag_slug><wp:tag_name><![CDATA[cancan]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>93</wp:term_id><wp:tag_slug>canvas</wp:tag_slug><wp:tag_name><![CDATA[canvas]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>186</wp:term_id><wp:tag_slug>capistrano</wp:tag_slug><wp:tag_name><![CDATA[capistrano]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>790</wp:term_id><wp:tag_slug>ccs3</wp:tag_slug><wp:tag_name><![CDATA[ccs3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>184</wp:term_id><wp:tag_slug>cd</wp:tag_slug><wp:tag_name><![CDATA[cd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>104</wp:term_id><wp:tag_slug>charts</wp:tag_slug><wp:tag_name><![CDATA[charts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>843</wp:term_id><wp:tag_slug>cheatsheet</wp:tag_slug><wp:tag_name><![CDATA[cheatsheet]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>624</wp:term_id><wp:tag_slug>checkbox</wp:tag_slug><wp:tag_name><![CDATA[checkbox]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>347</wp:term_id><wp:tag_slug>chrome</wp:tag_slug><wp:tag_name><![CDATA[chrome]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>185</wp:term_id><wp:tag_slug>ci</wp:tag_slug><wp:tag_name><![CDATA[ci]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>339</wp:term_id><wp:tag_slug>client</wp:tag_slug><wp:tag_name><![CDATA[client]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>894</wp:term_id><wp:tag_slug>closure</wp:tag_slug><wp:tag_name><![CDATA[closure]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>672</wp:term_id><wp:tag_slug>cloud</wp:tag_slug><wp:tag_name><![CDATA[cloud]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>794</wp:term_id><wp:tag_slug>clouds</wp:tag_slug><wp:tag_name><![CDATA[clouds]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>178</wp:term_id><wp:tag_slug>code</wp:tag_slug><wp:tag_name><![CDATA[code]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>821</wp:term_id><wp:tag_slug>code-review</wp:tag_slug><wp:tag_name><![CDATA[code review]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>381</wp:term_id><wp:tag_slug>code-coverage</wp:tag_slug><wp:tag_name><![CDATA[code-coverage]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>132</wp:term_id><wp:tag_slug>coding</wp:tag_slug><wp:tag_name><![CDATA[coding]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>380</wp:term_id><wp:tag_slug>coding-tools</wp:tag_slug><wp:tag_name><![CDATA[coding-tools]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>590</wp:term_id><wp:tag_slug>cofeescript</wp:tag_slug><wp:tag_name><![CDATA[cofeescript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>275</wp:term_id><wp:tag_slug>coffee-script</wp:tag_slug><wp:tag_name><![CDATA[coffee-script]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>114</wp:term_id><wp:tag_slug>coffeescript</wp:tag_slug><wp:tag_name><![CDATA[coffeescript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>coldfusion-2</wp:tag_slug><wp:tag_name><![CDATA[coldfusion]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>615</wp:term_id><wp:tag_slug>combine</wp:tag_slug><wp:tag_name><![CDATA[combine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>372</wp:term_id><wp:tag_slug>comments</wp:tag_slug><wp:tag_name><![CDATA[comments]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>785</wp:term_id><wp:tag_slug>comparison</wp:tag_slug><wp:tag_name><![CDATA[comparison]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>103</wp:term_id><wp:tag_slug>compatibility</wp:tag_slug><wp:tag_name><![CDATA[compatibility]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>335</wp:term_id><wp:tag_slug>component</wp:tag_slug><wp:tag_name><![CDATA[component]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>833</wp:term_id><wp:tag_slug>compression</wp:tag_slug><wp:tag_name><![CDATA[compression]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>277</wp:term_id><wp:tag_slug>concurrency</wp:tag_slug><wp:tag_name><![CDATA[concurrency]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>371</wp:term_id><wp:tag_slug>conditional</wp:tag_slug><wp:tag_name><![CDATA[conditional]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>878</wp:term_id><wp:tag_slug>conditional-loading</wp:tag_slug><wp:tag_name><![CDATA[conditional loading]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>204</wp:term_id><wp:tag_slug>console</wp:tag_slug><wp:tag_name><![CDATA[console]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>863</wp:term_id><wp:tag_slug>context</wp:tag_slug><wp:tag_name><![CDATA[context]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>183</wp:term_id><wp:tag_slug>continuous</wp:tag_slug><wp:tag_name><![CDATA[continuous]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>633</wp:term_id><wp:tag_slug>controller</wp:tag_slug><wp:tag_name><![CDATA[controller]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>322</wp:term_id><wp:tag_slug>conversion</wp:tag_slug><wp:tag_name><![CDATA[conversion]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>115</wp:term_id><wp:tag_slug>convert</wp:tag_slug><wp:tag_name><![CDATA[convert]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>137</wp:term_id><wp:tag_slug>couchdb</wp:tag_slug><wp:tag_name><![CDATA[couchdb]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>208</wp:term_id><wp:tag_slug>countdown-js</wp:tag_slug><wp:tag_name><![CDATA[countdown.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>345</wp:term_id><wp:tag_slug>coverage</wp:tag_slug><wp:tag_name><![CDATA[coverage]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>216</wp:term_id><wp:tag_slug>creditcard</wp:tag_slug><wp:tag_name><![CDATA[creditcard]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>838</wp:term_id><wp:tag_slug>cross</wp:tag_slug><wp:tag_name><![CDATA[cross]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>109</wp:term_id><wp:tag_slug>crossbrowser</wp:tag_slug><wp:tag_name><![CDATA[crossbrowser]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>94</wp:term_id><wp:tag_slug>css-2</wp:tag_slug><wp:tag_name><![CDATA[css]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>546</wp:term_id><wp:tag_slug>css-less-responsive</wp:tag_slug><wp:tag_name><![CDATA[css less responsive]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>548</wp:term_id><wp:tag_slug>css-text-truncation</wp:tag_slug><wp:tag_name><![CDATA[css text truncation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>644</wp:term_id><wp:tag_slug>css1k</wp:tag_slug><wp:tag_name><![CDATA[css1k]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>125</wp:term_id><wp:tag_slug>css3</wp:tag_slug><wp:tag_name><![CDATA[css3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>194</wp:term_id><wp:tag_slug>cube</wp:tag_slug><wp:tag_name><![CDATA[cube]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>281</wp:term_id><wp:tag_slug>cucumber</wp:tag_slug><wp:tag_name><![CDATA[cucumber]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>314</wp:term_id><wp:tag_slug>cucumber-js</wp:tag_slug><wp:tag_name><![CDATA[cucumber.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>321</wp:term_id><wp:tag_slug>currency</wp:tag_slug><wp:tag_name><![CDATA[currency]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>581</wp:term_id><wp:tag_slug>custom-events</wp:tag_slug><wp:tag_name><![CDATA[custom events]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>174</wp:term_id><wp:tag_slug>d3-js</wp:tag_slug><wp:tag_name><![CDATA[d3.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>290</wp:term_id><wp:tag_slug>dart</wp:tag_slug><wp:tag_name><![CDATA[dart]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>131</wp:term_id><wp:tag_slug>data</wp:tag_slug><wp:tag_name><![CDATA[data]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>database</wp:tag_slug><wp:tag_name><![CDATA[database]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>280</wp:term_id><wp:tag_slug>datamapper</wp:tag_slug><wp:tag_name><![CDATA[Datamapper]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>880</wp:term_id><wp:tag_slug>dates</wp:tag_slug><wp:tag_name><![CDATA[dates]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>debian</wp:tag_slug><wp:tag_name><![CDATA[debian]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>205</wp:term_id><wp:tag_slug>debug</wp:tag_slug><wp:tag_name><![CDATA[debug]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>373</wp:term_id><wp:tag_slug>debugging</wp:tag_slug><wp:tag_name><![CDATA[debugging]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>888</wp:term_id><wp:tag_slug>decentralised</wp:tag_slug><wp:tag_name><![CDATA[decentralised]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>539</wp:term_id><wp:tag_slug>deconstructed</wp:tag_slug><wp:tag_name><![CDATA[deconstructed]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>629</wp:term_id><wp:tag_slug>decorator</wp:tag_slug><wp:tag_name><![CDATA[decorator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>708</wp:term_id><wp:tag_slug>defered</wp:tag_slug><wp:tag_name><![CDATA[defered]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>817</wp:term_id><wp:tag_slug>delicious</wp:tag_slug><wp:tag_name><![CDATA[delicious]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>791</wp:term_id><wp:tag_slug>demo</wp:tag_slug><wp:tag_name><![CDATA[demo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>153</wp:term_id><wp:tag_slug>demos</wp:tag_slug><wp:tag_name><![CDATA[demos]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>397</wp:term_id><wp:tag_slug>derby</wp:tag_slug><wp:tag_name><![CDATA[derby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>design</wp:tag_slug><wp:tag_name><![CDATA[design]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>258</wp:term_id><wp:tag_slug>desktop</wp:tag_slug><wp:tag_name><![CDATA[desktop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>376</wp:term_id><wp:tag_slug>detection</wp:tag_slug><wp:tag_name><![CDATA[detection]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>714</wp:term_id><wp:tag_slug>dev</wp:tag_slug><wp:tag_name><![CDATA[dev]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>90</wp:term_id><wp:tag_slug>development</wp:tag_slug><wp:tag_name><![CDATA[development]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>850</wp:term_id><wp:tag_slug>devise</wp:tag_slug><wp:tag_name><![CDATA[devise]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>disk</wp:tag_slug><wp:tag_name><![CDATA[disk]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>879</wp:term_id><wp:tag_slug>displaying</wp:tag_slug><wp:tag_name><![CDATA[displaying]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>533</wp:term_id><wp:tag_slug>dnode</wp:tag_slug><wp:tag_name><![CDATA[dnode]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>175</wp:term_id><wp:tag_slug>document</wp:tag_slug><wp:tag_name><![CDATA[document]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>379</wp:term_id><wp:tag_slug>documentation</wp:tag_slug><wp:tag_name><![CDATA[documentation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>549</wp:term_id><wp:tag_slug>documentation-search-searchable-css-html-javascript</wp:tag_slug><wp:tag_name><![CDATA[documentation search searchable css html javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>653</wp:term_id><wp:tag_slug>documentup</wp:tag_slug><wp:tag_name><![CDATA[DocumentUp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>601</wp:term_id><wp:tag_slug>dojo</wp:tag_slug><wp:tag_name><![CDATA[dojo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>337</wp:term_id><wp:tag_slug>dom</wp:tag_slug><wp:tag_name><![CDATA[dom]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>605</wp:term_id><wp:tag_slug>doodle</wp:tag_slug><wp:tag_name><![CDATA[doodle]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>download</wp:tag_slug><wp:tag_name><![CDATA[download]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>176</wp:term_id><wp:tag_slug>driven</wp:tag_slug><wp:tag_name><![CDATA[driven]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>751</wp:term_id><wp:tag_slug>dropdown</wp:tag_slug><wp:tag_name><![CDATA[dropdown]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>586</wp:term_id><wp:tag_slug>dsl</wp:tag_slug><wp:tag_name><![CDATA[dsl]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>825</wp:term_id><wp:tag_slug>easel-js</wp:tag_slug><wp:tag_name><![CDATA[easel.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>91</wp:term_id><wp:tag_slug>easeljs</wp:tag_slug><wp:tag_name><![CDATA[easeljs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>155</wp:term_id><wp:tag_slug>editing</wp:tag_slug><wp:tag_name><![CDATA[editing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>146</wp:term_id><wp:tag_slug>editor</wp:tag_slug><wp:tag_name><![CDATA[editor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>351</wp:term_id><wp:tag_slug>element</wp:tag_slug><wp:tag_name><![CDATA[element]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>email</wp:tag_slug><wp:tag_name><![CDATA[email]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>627</wp:term_id><wp:tag_slug>ember-js</wp:tag_slug><wp:tag_name><![CDATA[ember.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>147</wp:term_id><wp:tag_slug>engine</wp:tag_slug><wp:tag_name><![CDATA[engine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>857</wp:term_id><wp:tag_slug>epub</wp:tag_slug><wp:tag_name><![CDATA[epub]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>580</wp:term_id><wp:tag_slug>es5</wp:tag_slug><wp:tag_name><![CDATA[es5]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>639</wp:term_id><wp:tag_slug>event</wp:tag_slug><wp:tag_name><![CDATA[event]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>749</wp:term_id><wp:tag_slug>events</wp:tag_slug><wp:tag_name><![CDATA[events]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>213</wp:term_id><wp:tag_slug>examples</wp:tag_slug><wp:tag_name><![CDATA[examples]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>318</wp:term_id><wp:tag_slug>exchange</wp:tag_slug><wp:tag_name><![CDATA[exchange]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>691</wp:term_id><wp:tag_slug>execution</wp:tag_slug><wp:tag_name><![CDATA[execution]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>136</wp:term_id><wp:tag_slug>explained</wp:tag_slug><wp:tag_name><![CDATA[explained]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>805</wp:term_id><wp:tag_slug>extending</wp:tag_slug><wp:tag_name><![CDATA[extending]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>532</wp:term_id><wp:tag_slug>fabrics-js</wp:tag_slug><wp:tag_name><![CDATA[fabrics.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>342</wp:term_id><wp:tag_slug>facade</wp:tag_slug><wp:tag_name><![CDATA[facade]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>724</wp:term_id><wp:tag_slug>face</wp:tag_slug><wp:tag_name><![CDATA[face]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>283</wp:term_id><wp:tag_slug>facebook</wp:tag_slug><wp:tag_name><![CDATA[facebook]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>525</wp:term_id><wp:tag_slug>face_detection</wp:tag_slug><wp:tag_name><![CDATA[face_detection]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>130</wp:term_id><wp:tag_slug>faker</wp:tag_slug><wp:tag_name><![CDATA[faker]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>779</wp:term_id><wp:tag_slug>fallback</wp:tag_slug><wp:tag_name><![CDATA[fallback]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>263</wp:term_id><wp:tag_slug>falsey</wp:tag_slug><wp:tag_name><![CDATA[falsey]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>236</wp:term_id><wp:tag_slug>favicon</wp:tag_slug><wp:tag_name><![CDATA[favicon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>695</wp:term_id><wp:tag_slug>file</wp:tag_slug><wp:tag_name><![CDATA[file]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>675</wp:term_id><wp:tag_slug>file-watcher</wp:tag_slug><wp:tag_name><![CDATA[File-Watcher]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>781</wp:term_id><wp:tag_slug>filter</wp:tag_slug><wp:tag_name><![CDATA[filter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>810</wp:term_id><wp:tag_slug>filtering</wp:tag_slug><wp:tag_name><![CDATA[filtering]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>53</wp:term_id><wp:tag_slug>find-duplicates</wp:tag_slug><wp:tag_name><![CDATA[find duplicates]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>868</wp:term_id><wp:tag_slug>finding</wp:tag_slug><wp:tag_name><![CDATA[finding]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>734</wp:term_id><wp:tag_slug>fir</wp:tag_slug><wp:tag_name><![CDATA[fir]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>873</wp:term_id><wp:tag_slug>firefox</wp:tag_slug><wp:tag_name><![CDATA[firefox]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>814</wp:term_id><wp:tag_slug>flickr</wp:tag_slug><wp:tag_name><![CDATA[flickr]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>737</wp:term_id><wp:tag_slug>float</wp:tag_slug><wp:tag_name><![CDATA[float]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>375</wp:term_id><wp:tag_slug>font</wp:tag_slug><wp:tag_name><![CDATA[font]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>617</wp:term_id><wp:tag_slug>font-face</wp:tag_slug><wp:tag_name><![CDATA[font-face]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>232</wp:term_id><wp:tag_slug>fonts</wp:tag_slug><wp:tag_name><![CDATA[fonts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>816</wp:term_id><wp:tag_slug>foodspotting</wp:tag_slug><wp:tag_name><![CDATA[foodspotting]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>687</wp:term_id><wp:tag_slug>for-loop</wp:tag_slug><wp:tag_name><![CDATA[for loop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>796</wp:term_id><wp:tag_slug>foresight-js</wp:tag_slug><wp:tag_name><![CDATA[foresight.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>776</wp:term_id><wp:tag_slug>fork</wp:tag_slug><wp:tag_name><![CDATA[Fork]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>143</wp:term_id><wp:tag_slug>form</wp:tag_slug><wp:tag_name><![CDATA[form]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>165</wp:term_id><wp:tag_slug>framework</wp:tag_slug><wp:tag_name><![CDATA[framework]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>235</wp:term_id><wp:tag_slug>free</wp:tag_slug><wp:tag_name><![CDATA[free]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>713</wp:term_id><wp:tag_slug>front-end</wp:tag_slug><wp:tag_name><![CDATA[front end]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>818</wp:term_id><wp:tag_slug>fronted</wp:tag_slug><wp:tag_name><![CDATA[Fronted]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>706</wp:term_id><wp:tag_slug>functional</wp:tag_slug><wp:tag_name><![CDATA[functional]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>89</wp:term_id><wp:tag_slug>game</wp:tag_slug><wp:tag_name><![CDATA[game]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>88</wp:term_id><wp:tag_slug>gamedev</wp:tag_slug><wp:tag_name><![CDATA[gamedev]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>632</wp:term_id><wp:tag_slug>gamepad</wp:tag_slug><wp:tag_name><![CDATA[gamepad]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>365</wp:term_id><wp:tag_slug>games</wp:tag_slug><wp:tag_name><![CDATA[games]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>129</wp:term_id><wp:tag_slug>gem</wp:tag_slug><wp:tag_name><![CDATA[gem]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>50</wp:term_id><wp:tag_slug>gems</wp:tag_slug><wp:tag_name><![CDATA[gems]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>generator</wp:tag_slug><wp:tag_name><![CDATA[generator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>79</wp:term_id><wp:tag_slug>geo</wp:tag_slug><wp:tag_name><![CDATA[geo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>585</wp:term_id><wp:tag_slug>geolocation</wp:tag_slug><wp:tag_name><![CDATA[geolocation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>564</wp:term_id><wp:tag_slug>gesture</wp:tag_slug><wp:tag_name><![CDATA[gesture]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>563</wp:term_id><wp:tag_slug>gestures</wp:tag_slug><wp:tag_name><![CDATA[gestures]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>151</wp:term_id><wp:tag_slug>ghostbuster</wp:tag_slug><wp:tag_name><![CDATA[ghostbuster]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug>gis</wp:tag_slug><wp:tag_name><![CDATA[gis]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>679</wp:term_id><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>377</wp:term_id><wp:tag_slug>github</wp:tag_slug><wp:tag_name><![CDATA[Github]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>google</wp:tag_slug><wp:tag_name><![CDATA[google]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>188</wp:term_id><wp:tag_slug>google-2</wp:tag_slug><wp:tag_name><![CDATA[google+]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>gource</wp:tag_slug><wp:tag_name><![CDATA[gource]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>666</wp:term_id><wp:tag_slug>gradient</wp:tag_slug><wp:tag_name><![CDATA[gradient]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>225</wp:term_id><wp:tag_slug>graph</wp:tag_slug><wp:tag_name><![CDATA[graph]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>584</wp:term_id><wp:tag_slug>graph-database</wp:tag_slug><wp:tag_name><![CDATA[graph database]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>550</wp:term_id><wp:tag_slug>graphs</wp:tag_slug><wp:tag_name><![CDATA[graphs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>554</wp:term_id><wp:tag_slug>gravatar</wp:tag_slug><wp:tag_name><![CDATA[gravatar]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>594</wp:term_id><wp:tag_slug>great-design</wp:tag_slug><wp:tag_name><![CDATA[great design]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>224</wp:term_id><wp:tag_slug>gremlin</wp:tag_slug><wp:tag_name><![CDATA[gremlin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>683</wp:term_id><wp:tag_slug>grep</wp:tag_slug><wp:tag_name><![CDATA[grep]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>891</wp:term_id><wp:tag_slug>grid</wp:tag_slug><wp:tag_name><![CDATA[grid]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>540</wp:term_id><wp:tag_slug>growlnotify-brew-1-2-fix</wp:tag_slug><wp:tag_name><![CDATA[growlnotify brew 1.2 fix]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>390</wp:term_id><wp:tag_slug>guard</wp:tag_slug><wp:tag_name><![CDATA[guard]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>274</wp:term_id><wp:tag_slug>guard-js</wp:tag_slug><wp:tag_name><![CDATA[guard.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>190</wp:term_id><wp:tag_slug>gui</wp:tag_slug><wp:tag_name><![CDATA[gui]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>134</wp:term_id><wp:tag_slug>guide</wp:tag_slug><wp:tag_name><![CDATA[guide]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>889</wp:term_id><wp:tag_slug>gzip</wp:tag_slug><wp:tag_name><![CDATA[gzip]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>370</wp:term_id><wp:tag_slug>hacks</wp:tag_slug><wp:tag_name><![CDATA[hacks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>648</wp:term_id><wp:tag_slug>haml</wp:tag_slug><wp:tag_name><![CDATA[haml]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>707</wp:term_id><wp:tag_slug>haskell</wp:tag_slug><wp:tag_name><![CDATA[haskell]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>651</wp:term_id><wp:tag_slug>hastebin</wp:tag_slug><wp:tag_name><![CDATA[hastebin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>762</wp:term_id><wp:tag_slug>hci</wp:tag_slug><wp:tag_name><![CDATA[hci]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>150</wp:term_id><wp:tag_slug>headless</wp:tag_slug><wp:tag_name><![CDATA[headless]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>heroku</wp:tag_slug><wp:tag_name><![CDATA[heroku]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>798</wp:term_id><wp:tag_slug>high</wp:tag_slug><wp:tag_name><![CDATA[high]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>797</wp:term_id><wp:tag_slug>high-resolution</wp:tag_slug><wp:tag_name><![CDATA[high-resolution]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>531</wp:term_id><wp:tag_slug>hiro-js</wp:tag_slug><wp:tag_name><![CDATA[hiro.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>357</wp:term_id><wp:tag_slug>home</wp:tag_slug><wp:tag_name><![CDATA[home]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>819</wp:term_id><wp:tag_slug>homebrew</wp:tag_slug><wp:tag_name><![CDATA[homebrew]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>83</wp:term_id><wp:tag_slug>hometrack</wp:tag_slug><wp:tag_name><![CDATA[hometrack]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>688</wp:term_id><wp:tag_slug>hover</wp:tag_slug><wp:tag_name><![CDATA[hover]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>876</wp:term_id><wp:tag_slug>how-to</wp:tag_slug><wp:tag_name><![CDATA[how-to]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>385</wp:term_id><wp:tag_slug>howto</wp:tag_slug><wp:tag_name><![CDATA[howto]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>334</wp:term_id><wp:tag_slug>html</wp:tag_slug><wp:tag_name><![CDATA[html]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>87</wp:term_id><wp:tag_slug>html5</wp:tag_slug><wp:tag_name><![CDATA[html5]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>313</wp:term_id><wp:tag_slug>https</wp:tag_slug><wp:tag_name><![CDATA[https]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>355</wp:term_id><wp:tag_slug>hubot</wp:tag_slug><wp:tag_name><![CDATA[hubot]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>631</wp:term_id><wp:tag_slug>ibooks</wp:tag_slug><wp:tag_name><![CDATA[iBooks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>760</wp:term_id><wp:tag_slug>icon</wp:tag_slug><wp:tag_name><![CDATA[icon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>739</wp:term_id><wp:tag_slug>iconic</wp:tag_slug><wp:tag_name><![CDATA[iconic]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>234</wp:term_id><wp:tag_slug>icons</wp:tag_slug><wp:tag_name><![CDATA[icons]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>387</wp:term_id><wp:tag_slug>ie</wp:tag_slug><wp:tag_name><![CDATA[ie]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>111</wp:term_id><wp:tag_slug>image</wp:tag_slug><wp:tag_name><![CDATA[image]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>735</wp:term_id><wp:tag_slug>image-replacement</wp:tag_slug><wp:tag_name><![CDATA[image replacement]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>800</wp:term_id><wp:tag_slug>images</wp:tag_slug><wp:tag_name><![CDATA[images]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>579</wp:term_id><wp:tag_slug>impress-js</wp:tag_slug><wp:tag_name><![CDATA[impress.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>352</wp:term_id><wp:tag_slug>index</wp:tag_slug><wp:tag_name><![CDATA[index]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>795</wp:term_id><wp:tag_slug>infinite</wp:tag_slug><wp:tag_name><![CDATA[infinite]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>604</wp:term_id><wp:tag_slug>information</wp:tag_slug><wp:tag_name><![CDATA[information]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>616</wp:term_id><wp:tag_slug>initializr</wp:tag_slug><wp:tag_name><![CDATA[initializr]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>736</wp:term_id><wp:tag_slug>inline-block</wp:tag_slug><wp:tag_name><![CDATA[inline-block]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>782</wp:term_id><wp:tag_slug>inspector</wp:tag_slug><wp:tag_name><![CDATA[inspector]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>573</wp:term_id><wp:tag_slug>inspiration</wp:tag_slug><wp:tag_name><![CDATA[inspiration]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>install</wp:tag_slug><wp:tag_name><![CDATA[install]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>710</wp:term_id><wp:tag_slug>installer</wp:tag_slug><wp:tag_name><![CDATA[installer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>197</wp:term_id><wp:tag_slug>integration</wp:tag_slug><wp:tag_name><![CDATA[integration]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>607</wp:term_id><wp:tag_slug>intentions</wp:tag_slug><wp:tag_name><![CDATA[intentions]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>593</wp:term_id><wp:tag_slug>interactive</wp:tag_slug><wp:tag_name><![CDATA[interactive]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>572</wp:term_id><wp:tag_slug>interface</wp:tag_slug><wp:tag_name><![CDATA[interface]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>715</wp:term_id><wp:tag_slug>interview</wp:tag_slug><wp:tag_name><![CDATA[interview]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>561</wp:term_id><wp:tag_slug>ios</wp:tag_slug><wp:tag_name><![CDATA[ios]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>286</wp:term_id><wp:tag_slug>ios5</wp:tag_slug><wp:tag_name><![CDATA[ios5]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>830</wp:term_id><wp:tag_slug>ipad</wp:tag_slug><wp:tag_name><![CDATA[ipad]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>iphone</wp:tag_slug><wp:tag_name><![CDATA[iphone]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>362</wp:term_id><wp:tag_slug>irish</wp:tag_slug><wp:tag_name><![CDATA[irish]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>575</wp:term_id><wp:tag_slug>isotope</wp:tag_slug><wp:tag_name><![CDATA[isotope]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>itext</wp:tag_slug><wp:tag_name><![CDATA[itext]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>729</wp:term_id><wp:tag_slug>jake</wp:tag_slug><wp:tag_name><![CDATA[jake]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>86</wp:term_id><wp:tag_slug>jasmine</wp:tag_slug><wp:tag_name><![CDATA[jasmine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>892</wp:term_id><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>168</wp:term_id><wp:tag_slug>javascrip</wp:tag_slug><wp:tag_name><![CDATA[javascrip]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>javascript-2</wp:tag_slug><wp:tag_name><![CDATA[javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>541</wp:term_id><wp:tag_slug>javascript-coffeescript-sass-ruby-guard</wp:tag_slug><wp:tag_name><![CDATA[javascript coffeescript sass ruby guard]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>391</wp:term_id><wp:tag_slug>jessie</wp:tag_slug><wp:tag_name><![CDATA[jessie]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>101</wp:term_id><wp:tag_slug>jquery</wp:tag_slug><wp:tag_name><![CDATA[jquery]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>807</wp:term_id><wp:tag_slug>js1k</wp:tag_slug><wp:tag_name><![CDATA[js1k]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>116</wp:term_id><wp:tag_slug>js2coffee</wp:tag_slug><wp:tag_name><![CDATA[js2coffee]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>733</wp:term_id><wp:tag_slug>jslint</wp:tag_slug><wp:tag_name><![CDATA[jslint]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>732</wp:term_id><wp:tag_slug>jsmin</wp:tag_slug><wp:tag_name><![CDATA[jsmin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>315</wp:term_id><wp:tag_slug>json</wp:tag_slug><wp:tag_name><![CDATA[json]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>247</wp:term_id><wp:tag_slug>jstestdriver</wp:tag_slug><wp:tag_name><![CDATA[jsTestDriver]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>744</wp:term_id><wp:tag_slug>kalendae</wp:tag_slug><wp:tag_name><![CDATA[Kalendae]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>630</wp:term_id><wp:tag_slug>kendo</wp:tag_slug><wp:tag_name><![CDATA[kendo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>233</wp:term_id><wp:tag_slug>kerning</wp:tag_slug><wp:tag_name><![CDATA[kerning]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>179</wp:term_id><wp:tag_slug>kids</wp:tag_slug><wp:tag_name><![CDATA[kids]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>662</wp:term_id><wp:tag_slug>knockout-js</wp:tag_slug><wp:tag_name><![CDATA[knockout.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>756</wp:term_id><wp:tag_slug>knowledge</wp:tag_slug><wp:tag_name><![CDATA[knowledge]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>257</wp:term_id><wp:tag_slug>layer</wp:tag_slug><wp:tag_name><![CDATA[layer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>576</wp:term_id><wp:tag_slug>layout</wp:tag_slug><wp:tag_name><![CDATA[layout]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>569</wp:term_id><wp:tag_slug>lazy</wp:tag_slug><wp:tag_name><![CDATA[Lazy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>867</wp:term_id><wp:tag_slug>leaks</wp:tag_slug><wp:tag_name><![CDATA[leaks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>177</wp:term_id><wp:tag_slug>learning</wp:tag_slug><wp:tag_name><![CDATA[learning]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>622</wp:term_id><wp:tag_slug>led</wp:tag_slug><wp:tag_name><![CDATA[led]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>538</wp:term_id><wp:tag_slug>libraries</wp:tag_slug><wp:tag_name><![CDATA[libraries]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>172</wp:term_id><wp:tag_slug>library</wp:tag_slug><wp:tag_name><![CDATA[library]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>256</wp:term_id><wp:tag_slug>lifehacker</wp:tag_slug><wp:tag_name><![CDATA[lifehacker]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>353</wp:term_id><wp:tag_slug>lime-js</wp:tag_slug><wp:tag_name><![CDATA[lime.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>570</wp:term_id><wp:tag_slug>list</wp:tag_slug><wp:tag_name><![CDATA[list]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>267</wp:term_id><wp:tag_slug>list-js</wp:tag_slug><wp:tag_name><![CDATA[list.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>270</wp:term_id><wp:tag_slug>lists</wp:tag_slug><wp:tag_name><![CDATA[lists]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>307</wp:term_id><wp:tag_slug>literal</wp:tag_slug><wp:tag_name><![CDATA[literal]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>154</wp:term_id><wp:tag_slug>live</wp:tag_slug><wp:tag_name><![CDATA[live]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>311</wp:term_id><wp:tag_slug>load</wp:tag_slug><wp:tag_name><![CDATA[load]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>746</wp:term_id><wp:tag_slug>loader</wp:tag_slug><wp:tag_name><![CDATA[loader]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>426</wp:term_id><wp:tag_slug>loading</wp:tag_slug><wp:tag_name><![CDATA[loading]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>612</wp:term_id><wp:tag_slug>localisation</wp:tag_slug><wp:tag_name><![CDATA[localisation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>747</wp:term_id><wp:tag_slug>localstorage</wp:tag_slug><wp:tag_name><![CDATA[localStorage]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>log</wp:tag_slug><wp:tag_name><![CDATA[log]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>553</wp:term_id><wp:tag_slug>logger</wp:tag_slug><wp:tag_name><![CDATA[logger]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>693</wp:term_id><wp:tag_slug>logging</wp:tag_slug><wp:tag_name><![CDATA[logging]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>356</wp:term_id><wp:tag_slug>logo</wp:tag_slug><wp:tag_name><![CDATA[logo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>598</wp:term_id><wp:tag_slug>macgap</wp:tag_slug><wp:tag_name><![CDATA[macgap]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>684</wp:term_id><wp:tag_slug>macruby</wp:tag_slug><wp:tag_name><![CDATA[macruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>245</wp:term_id><wp:tag_slug>magazine</wp:tag_slug><wp:tag_name><![CDATA[magazine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>711</wp:term_id><wp:tag_slug>management</wp:tag_slug><wp:tag_name><![CDATA[management]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>145</wp:term_id><wp:tag_slug>map</wp:tag_slug><wp:tag_name><![CDATA[map]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>80</wp:term_id><wp:tag_slug>mapping</wp:tag_slug><wp:tag_name><![CDATA[mapping]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>maps</wp:tag_slug><wp:tag_name><![CDATA[maps]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>250</wp:term_id><wp:tag_slug>math</wp:tag_slug><wp:tag_name><![CDATA[math]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>893</wp:term_id><wp:tag_slug>maven</wp:tag_slug><wp:tag_name><![CDATA[maven]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>582</wp:term_id><wp:tag_slug>media-queries</wp:tag_slug><wp:tag_name><![CDATA[media queries]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>341</wp:term_id><wp:tag_slug>mediator</wp:tag_slug><wp:tag_name><![CDATA[mediator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>866</wp:term_id><wp:tag_slug>memory</wp:tag_slug><wp:tag_name><![CDATA[memory]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>556</wp:term_id><wp:tag_slug>menu</wp:tag_slug><wp:tag_name><![CDATA[menu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>merge</wp:tag_slug><wp:tag_name><![CDATA[merge]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>840</wp:term_id><wp:tag_slug>messaging</wp:tag_slug><wp:tag_name><![CDATA[messaging]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>841</wp:term_id><wp:tag_slug>meteor</wp:tag_slug><wp:tag_name><![CDATA[meteor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>650</wp:term_id><wp:tag_slug>middleman</wp:tag_slug><wp:tag_name><![CDATA[middleman]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>808</wp:term_id><wp:tag_slug>minecraft</wp:tag_slug><wp:tag_name><![CDATA[minecraft]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>522</wp:term_id><wp:tag_slug>mistakes</wp:tag_slug><wp:tag_name><![CDATA[mistakes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>854</wp:term_id><wp:tag_slug>mixins</wp:tag_slug><wp:tag_name><![CDATA[mixins]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>271</wp:term_id><wp:tag_slug>mmo</wp:tag_slug><wp:tag_name><![CDATA[mmo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>870</wp:term_id><wp:tag_slug>mo-farah</wp:tag_slug><wp:tag_name><![CDATA[Mo Farah]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>102</wp:term_id><wp:tag_slug>mobile</wp:tag_slug><wp:tag_name><![CDATA[mobile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>543</wp:term_id><wp:tag_slug>mobile-ui-patterns</wp:tag_slug><wp:tag_name><![CDATA[mobile ui patterns]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>524</wp:term_id><wp:tag_slug>mocha</wp:tag_slug><wp:tag_name><![CDATA[mocha]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>803</wp:term_id><wp:tag_slug>mochito</wp:tag_slug><wp:tag_name><![CDATA[mochito]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>535</wp:term_id><wp:tag_slug>mock</wp:tag_slug><wp:tag_name><![CDATA[mock]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>210</wp:term_id><wp:tag_slug>modal</wp:tag_slug><wp:tag_name><![CDATA[modal]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>336</wp:term_id><wp:tag_slug>model</wp:tag_slug><wp:tag_name><![CDATA[model]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>158</wp:term_id><wp:tag_slug>modernizr</wp:tag_slug><wp:tag_name><![CDATA[modernizr]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>323</wp:term_id><wp:tag_slug>module</wp:tag_slug><wp:tag_name><![CDATA[module]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>249</wp:term_id><wp:tag_slug>modules</wp:tag_slug><wp:tag_name><![CDATA[modules]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>320</wp:term_id><wp:tag_slug>money-js</wp:tag_slug><wp:tag_name><![CDATA[money.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>119</wp:term_id><wp:tag_slug>mongodb</wp:tag_slug><wp:tag_name><![CDATA[mongodb]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>547</wp:term_id><wp:tag_slug>mongodb-tutorial</wp:tag_slug><wp:tag_name><![CDATA[mongodb tutorial]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>227</wp:term_id><wp:tag_slug>monitoring</wp:tag_slug><wp:tag_name><![CDATA[monitoring]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>398</wp:term_id><wp:tag_slug>mozilla</wp:tag_slug><wp:tag_name><![CDATA[mozilla]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>52</wp:term_id><wp:tag_slug>mssql</wp:tag_slug><wp:tag_name><![CDATA[mssql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>166</wp:term_id><wp:tag_slug>mulberry</wp:tag_slug><wp:tag_name><![CDATA[mulberry]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>621</wp:term_id><wp:tag_slug>multiplayer</wp:tag_slug><wp:tag_name><![CDATA[multiplayer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>427</wp:term_id><wp:tag_slug>multiple</wp:tag_slug><wp:tag_name><![CDATA[multiple]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>261</wp:term_id><wp:tag_slug>mvc</wp:tag_slug><wp:tag_name><![CDATA[mvc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>625</wp:term_id><wp:tag_slug>mvp</wp:tag_slug><wp:tag_name><![CDATA[mvp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>565</wp:term_id><wp:tag_slug>mysql-2</wp:tag_slug><wp:tag_name><![CDATA[mysql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>705</wp:term_id><wp:tag_slug>names</wp:tag_slug><wp:tag_name><![CDATA[names]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>169</wp:term_id><wp:tag_slug>namespace</wp:tag_slug><wp:tag_name><![CDATA[namespace]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>600</wp:term_id><wp:tag_slug>native-app</wp:tag_slug><wp:tag_name><![CDATA[native app]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>668</wp:term_id><wp:tag_slug>nav</wp:tag_slug><wp:tag_name><![CDATA[nav]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>223</wp:term_id><wp:tag_slug>neo4j</wp:tag_slug><wp:tag_name><![CDATA[neo4j]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>359</wp:term_id><wp:tag_slug>nest</wp:tag_slug><wp:tag_name><![CDATA[nest]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>nginx</wp:tag_slug><wp:tag_name><![CDATA[nginx]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>730</wp:term_id><wp:tag_slug>node-jake</wp:tag_slug><wp:tag_name><![CDATA[node-jake]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>731</wp:term_id><wp:tag_slug>node-jsmin</wp:tag_slug><wp:tag_name><![CDATA[node-jsmin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>node-js</wp:tag_slug><wp:tag_name><![CDATA[node.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>202</wp:term_id><wp:tag_slug>nodes</wp:tag_slug><wp:tag_name><![CDATA[nodes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>860</wp:term_id><wp:tag_slug>nokogiri</wp:tag_slug><wp:tag_name><![CDATA[nokogiri]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>161</wp:term_id><wp:tag_slug>normalize-css</wp:tag_slug><wp:tag_name><![CDATA[normalize.css]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>191</wp:term_id><wp:tag_slug>nosql</wp:tag_slug><wp:tag_name><![CDATA[nosql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>237</wp:term_id><wp:tag_slug>notification</wp:tag_slug><wp:tag_name><![CDATA[notification]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>677</wp:term_id><wp:tag_slug>notify</wp:tag_slug><wp:tag_name><![CDATA[notify]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>661</wp:term_id><wp:tag_slug>noun-project</wp:tag_slug><wp:tag_name><![CDATA[noun project]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>806</wp:term_id><wp:tag_slug>npm</wp:tag_slug><wp:tag_name><![CDATA[npm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>126</wp:term_id><wp:tag_slug>object</wp:tag_slug><wp:tag_name><![CDATA[object]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>853</wp:term_id><wp:tag_slug>observables</wp:tag_slug><wp:tag_name><![CDATA[observables]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>852</wp:term_id><wp:tag_slug>observer</wp:tag_slug><wp:tag_name><![CDATA[observer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>764</wp:term_id><wp:tag_slug>obtvse</wp:tag_slug><wp:tag_name><![CDATA[obtvse]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>222</wp:term_id><wp:tag_slug>ohmyzsh</wp:tag_slug><wp:tag_name><![CDATA[ohmyzsh]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>871</wp:term_id><wp:tag_slug>olympics</wp:tag_slug><wp:tag_name><![CDATA[olympics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>883</wp:term_id><wp:tag_slug>online</wp:tag_slug><wp:tag_name><![CDATA[online]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>635</wp:term_id><wp:tag_slug>onpaste</wp:tag_slug><wp:tag_name><![CDATA[onPaste]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>180</wp:term_id><wp:tag_slug>oo</wp:tag_slug><wp:tag_name><![CDATA[OO]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>128</wp:term_id><wp:tag_slug>oocss</wp:tag_slug><wp:tag_name><![CDATA[oocss]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>523</wp:term_id><wp:tag_slug>oop</wp:tag_slug><wp:tag_name><![CDATA[oop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>316</wp:term_id><wp:tag_slug>open</wp:tag_slug><wp:tag_name><![CDATA[open]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>757</wp:term_id><wp:tag_slug>openstreetmap</wp:tag_slug><wp:tag_name><![CDATA[openstreetmap]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>396</wp:term_id><wp:tag_slug>operator</wp:tag_slug><wp:tag_name><![CDATA[operator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>242</wp:term_id><wp:tag_slug>optimization</wp:tag_slug><wp:tag_name><![CDATA[optimization]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>127</wp:term_id><wp:tag_slug>oriented</wp:tag_slug><wp:tag_name><![CDATA[oriented]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>279</wp:term_id><wp:tag_slug>orm</wp:tag_slug><wp:tag_name><![CDATA[orm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>344</wp:term_id><wp:tag_slug>osmani</wp:tag_slug><wp:tag_name><![CDATA[Osmani]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>51</wp:term_id><wp:tag_slug>osx</wp:tag_slug><wp:tag_name><![CDATA[osx]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>97</wp:term_id><wp:tag_slug>out</wp:tag_slug><wp:tag_name><![CDATA[out]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>287</wp:term_id><wp:tag_slug>overview</wp:tag_slug><wp:tag_name><![CDATA[overview]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>282</wp:term_id><wp:tag_slug>padrino</wp:tag_slug><wp:tag_name><![CDATA[padrino]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>670</wp:term_id><wp:tag_slug>page</wp:tag_slug><wp:tag_name><![CDATA[page]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>641</wp:term_id><wp:tag_slug>panels</wp:tag_slug><wp:tag_name><![CDATA[panels]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>663</wp:term_id><wp:tag_slug>parallax</wp:tag_slug><wp:tag_name><![CDATA[parallax]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>278</wp:term_id><wp:tag_slug>parallelism</wp:tag_slug><wp:tag_name><![CDATA[parallelism]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>555</wp:term_id><wp:tag_slug>parser</wp:tag_slug><wp:tag_name><![CDATA[parser]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>638</wp:term_id><wp:tag_slug>paste</wp:tag_slug><wp:tag_name><![CDATA[paste]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>636</wp:term_id><wp:tag_slug>paste-bin</wp:tag_slug><wp:tag_name><![CDATA[paste bin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>557</wp:term_id><wp:tag_slug>path</wp:tag_slug><wp:tag_name><![CDATA[path]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>324</wp:term_id><wp:tag_slug>pattern</wp:tag_slug><wp:tag_name><![CDATA[pattern]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>170</wp:term_id><wp:tag_slug>patterns</wp:tag_slug><wp:tag_name><![CDATA[patterns]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>361</wp:term_id><wp:tag_slug>paul</wp:tag_slug><wp:tag_name><![CDATA[paul]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>206</wp:term_id><wp:tag_slug>paul-irish</wp:tag_slug><wp:tag_name><![CDATA[paul irish]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>272</wp:term_id><wp:tag_slug>pay</wp:tag_slug><wp:tag_name><![CDATA[pay]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>215</wp:term_id><wp:tag_slug>payments</wp:tag_slug><wp:tag_name><![CDATA[payments]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>pdf</wp:tag_slug><wp:tag_name><![CDATA[pdf]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>241</wp:term_id><wp:tag_slug>performance</wp:tag_slug><wp:tag_name><![CDATA[performance]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>611</wp:term_id><wp:tag_slug>personalisation</wp:tag_slug><wp:tag_name><![CDATA[personalisation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>152</wp:term_id><wp:tag_slug>phantom-js</wp:tag_slug><wp:tag_name><![CDATA[phantom.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>164</wp:term_id><wp:tag_slug>phonegap</wp:tag_slug><wp:tag_name><![CDATA[phonegap]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>112</wp:term_id><wp:tag_slug>photo</wp:tag_slug><wp:tag_name><![CDATA[photo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>583</wp:term_id><wp:tag_slug>photoshop</wp:tag_slug><wp:tag_name><![CDATA[photoshop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>173</wp:term_id><wp:tag_slug>physics</wp:tag_slug><wp:tag_name><![CDATA[physics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>265</wp:term_id><wp:tag_slug>physics-js</wp:tag_slug><wp:tag_name><![CDATA[physics.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>740</wp:term_id><wp:tag_slug>pictogram</wp:tag_slug><wp:tag_name><![CDATA[pictogram]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>765</wp:term_id><wp:tag_slug>platform</wp:tag_slug><wp:tag_name><![CDATA[platform]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>138</wp:term_id><wp:tag_slug>plugin</wp:tag_slug><wp:tag_name><![CDATA[plugin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>159</wp:term_id><wp:tag_slug>polyfill</wp:tag_slug><wp:tag_name><![CDATA[polyfill]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>793</wp:term_id><wp:tag_slug>pong</wp:tag_slug><wp:tag_name><![CDATA[pong]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>890</wp:term_id><wp:tag_slug>positionsticky</wp:tag_slug><wp:tag_name><![CDATA[position:sticky]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>99</wp:term_id><wp:tag_slug>prefetch</wp:tag_slug><wp:tag_name><![CDATA[prefetch]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>100</wp:term_id><wp:tag_slug>prefetching</wp:tag_slug><wp:tag_name><![CDATA[prefetching]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>198</wp:term_id><wp:tag_slug>prefixer</wp:tag_slug><wp:tag_name><![CDATA[prefixer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>246</wp:term_id><wp:tag_slug>presentation</wp:tag_slug><wp:tag_name><![CDATA[presentation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>877</wp:term_id><wp:tag_slug>presidential</wp:tag_slug><wp:tag_name><![CDATA[presidential]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>182</wp:term_id><wp:tag_slug>principles</wp:tag_slug><wp:tag_name><![CDATA[principles]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>658</wp:term_id><wp:tag_slug>productivity</wp:tag_slug><wp:tag_name><![CDATA[productivity]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>609</wp:term_id><wp:tag_slug>programming</wp:tag_slug><wp:tag_name><![CDATA[programming]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>389</wp:term_id><wp:tag_slug>project</wp:tag_slug><wp:tag_name><![CDATA[project]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>252</wp:term_id><wp:tag_slug>properties</wp:tag_slug><wp:tag_name><![CDATA[properties]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>657</wp:term_id><wp:tag_slug>prototype</wp:tag_slug><wp:tag_name><![CDATA[prototype]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>310</wp:term_id><wp:tag_slug>proxy</wp:tag_slug><wp:tag_name><![CDATA[proxy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>388</wp:term_id><wp:tag_slug>pseudo-class</wp:tag_slug><wp:tag_name><![CDATA[pseudo-class]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>369</wp:term_id><wp:tag_slug>pubsub</wp:tag_slug><wp:tag_name><![CDATA[pub/sub]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>712</wp:term_id><wp:tag_slug>pulldown</wp:tag_slug><wp:tag_name><![CDATA[pulldown]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>230</wp:term_id><wp:tag_slug>pulse</wp:tag_slug><wp:tag_name><![CDATA[pulse]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>696</wp:term_id><wp:tag_slug>push</wp:tag_slug><wp:tag_name><![CDATA[push]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>552</wp:term_id><wp:tag_slug>qooxdoo</wp:tag_slug><wp:tag_name><![CDATA[qooxdoo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>716</wp:term_id><wp:tag_slug>questions</wp:tag_slug><wp:tag_name><![CDATA[questions]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>689</wp:term_id><wp:tag_slug>queue</wp:tag_slug><wp:tag_name><![CDATA[queue]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>248</wp:term_id><wp:tag_slug>qunit</wp:tag_slug><wp:tag_name><![CDATA[qunit]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>614</wp:term_id><wp:tag_slug>r-js</wp:tag_slug><wp:tag_name><![CDATA[r.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>717</wp:term_id><wp:tag_slug>rack</wp:tag_slug><wp:tag_name><![CDATA[rack]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>727</wp:term_id><wp:tag_slug>radio-js</wp:tag_slug><wp:tag_name><![CDATA[radio.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>855</wp:term_id><wp:tag_slug>raf</wp:tag_slug><wp:tag_name><![CDATA[raf]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>56</wp:term_id><wp:tag_slug>rails</wp:tag_slug><wp:tag_name><![CDATA[rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>55</wp:term_id><wp:tag_slug>rake</wp:tag_slug><wp:tag_name><![CDATA[rake]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>766</wp:term_id><wp:tag_slug>ranking</wp:tag_slug><wp:tag_name><![CDATA[ranking]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>722</wp:term_id><wp:tag_slug>raphael</wp:tag_slug><wp:tag_name><![CDATA[raphael]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>319</wp:term_id><wp:tag_slug>rates</wp:tag_slug><wp:tag_name><![CDATA[rates]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>768</wp:term_id><wp:tag_slug>rating</wp:tag_slug><wp:tag_name><![CDATA[rating]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>842</wp:term_id><wp:tag_slug>realtime</wp:tag_slug><wp:tag_name><![CDATA[realtime]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>774</wp:term_id><wp:tag_slug>rebase</wp:tag_slug><wp:tag_name><![CDATA[rebase]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>837</wp:term_id><wp:tag_slug>recipes</wp:tag_slug><wp:tag_name><![CDATA[recipes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>725</wp:term_id><wp:tag_slug>recognition</wp:tag_slug><wp:tag_name><![CDATA[recognition]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>226</wp:term_id><wp:tag_slug>recommendation</wp:tag_slug><wp:tag_name><![CDATA[recommendation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>858</wp:term_id><wp:tag_slug>reddit</wp:tag_slug><wp:tag_name><![CDATA[reddit]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>384</wp:term_id><wp:tag_slug>redis</wp:tag_slug><wp:tag_name><![CDATA[redis]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>690</wp:term_id><wp:tag_slug>refactoring</wp:tag_slug><wp:tag_name><![CDATA[refactoring]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>253</wp:term_id><wp:tag_slug>reference</wp:tag_slug><wp:tag_name><![CDATA[reference]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>163</wp:term_id><wp:tag_slug>reflection</wp:tag_slug><wp:tag_name><![CDATA[reflection]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>297</wp:term_id><wp:tag_slug>reflow</wp:tag_slug><wp:tag_name><![CDATA[reflow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>676</wp:term_id><wp:tag_slug>refresh</wp:tag_slug><wp:tag_name><![CDATA[refresh]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>754</wp:term_id><wp:tag_slug>refresher</wp:tag_slug><wp:tag_name><![CDATA[refresher]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>792</wp:term_id><wp:tag_slug>remote</wp:tag_slug><wp:tag_name><![CDATA[remote]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>784</wp:term_id><wp:tag_slug>reporting</wp:tag_slug><wp:tag_name><![CDATA[reporting]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>856</wp:term_id><wp:tag_slug>requestanimationframe</wp:tag_slug><wp:tag_name><![CDATA[requestAnimationFrame]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>203</wp:term_id><wp:tag_slug>require</wp:tag_slug><wp:tag_name><![CDATA[require()]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>214</wp:term_id><wp:tag_slug>require-js</wp:tag_slug><wp:tag_name><![CDATA[require.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>160</wp:term_id><wp:tag_slug>reset</wp:tag_slug><wp:tag_name><![CDATA[reset]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>799</wp:term_id><wp:tag_slug>resolution</wp:tag_slug><wp:tag_name><![CDATA[resolution]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>608</wp:term_id><wp:tag_slug>resolutions</wp:tag_slug><wp:tag_name><![CDATA[resolutions]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>148</wp:term_id><wp:tag_slug>responsive</wp:tag_slug><wp:tag_name><![CDATA[responsive]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>537</wp:term_id><wp:tag_slug>responsive_design</wp:tag_slug><wp:tag_name><![CDATA[responsive_design]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>726</wp:term_id><wp:tag_slug>restore</wp:tag_slug><wp:tag_name><![CDATA[restore]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>831</wp:term_id><wp:tag_slug>retina</wp:tag_slug><wp:tag_name><![CDATA[retina]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>834</wp:term_id><wp:tag_slug>retina-js</wp:tag_slug><wp:tag_name><![CDATA[retina.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>211</wp:term_id><wp:tag_slug>reveal-js</wp:tag_slug><wp:tag_name><![CDATA[reveal.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>626</wp:term_id><wp:tag_slug>review</wp:tag_slug><wp:tag_name><![CDATA[review]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>606</wp:term_id><wp:tag_slug>revolution</wp:tag_slug><wp:tag_name><![CDATA[revolution]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>667</wp:term_id><wp:tag_slug>ribbon</wp:tag_slug><wp:tag_name><![CDATA[ribbon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>551</wp:term_id><wp:tag_slug>rickshaw</wp:tag_slug><wp:tag_name><![CDATA[rickshaw]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>105</wp:term_id><wp:tag_slug>ripple</wp:tag_slug><wp:tag_name><![CDATA[ripple]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>618</wp:term_id><wp:tag_slug>roboto</wp:tag_slug><wp:tag_name><![CDATA[roboto]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>96</wp:term_id><wp:tag_slug>round</wp:tag_slug><wp:tag_name><![CDATA[round]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>620</wp:term_id><wp:tag_slug>round-borders</wp:tag_slug><wp:tag_name><![CDATA[round borders]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>95</wp:term_id><wp:tag_slug>rounded</wp:tag_slug><wp:tag_name><![CDATA[rounded]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>809</wp:term_id><wp:tag_slug>routes</wp:tag_slug><wp:tag_name><![CDATA[routes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>534</wp:term_id><wp:tag_slug>rpc</wp:tag_slug><wp:tag_name><![CDATA[rpc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>773</wp:term_id><wp:tag_slug>rpg</wp:tag_slug><wp:tag_name><![CDATA[rpg]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>rspec</wp:tag_slug><wp:tag_name><![CDATA[rspec]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>49</wp:term_id><wp:tag_slug>ruby</wp:tag_slug><wp:tag_name><![CDATA[ruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>48</wp:term_id><wp:tag_slug>ruby-gems</wp:tag_slug><wp:tag_name><![CDATA[ruby gems]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>544</wp:term_id><wp:tag_slug>ruby-json-builder-dsl</wp:tag_slug><wp:tag_name><![CDATA[ruby json builder dsl]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>545</wp:term_id><wp:tag_slug>ruby-moxy-mock-proxy-library</wp:tag_slug><wp:tag_name><![CDATA[ruby moxy mock proxy library]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>822</wp:term_id><wp:tag_slug>rubymotion</wp:tag_slug><wp:tag_name><![CDATA[RubyMotion]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>189</wp:term_id><wp:tag_slug>rvm</wp:tag_slug><wp:tag_name><![CDATA[rvm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>846</wp:term_id><wp:tag_slug>s3</wp:tag_slug><wp:tag_name><![CDATA[s3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>117</wp:term_id><wp:tag_slug>sass</wp:tag_slug><wp:tag_name><![CDATA[sass]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>673</wp:term_id><wp:tag_slug>saucelabs</wp:tag_slug><wp:tag_name><![CDATA[saucelabs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>859</wp:term_id><wp:tag_slug>scraping</wp:tag_slug><wp:tag_name><![CDATA[scraping]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>239</wp:term_id><wp:tag_slug>screen</wp:tag_slug><wp:tag_name><![CDATA[screen]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>745</wp:term_id><wp:tag_slug>scrip</wp:tag_slug><wp:tag_name><![CDATA[scrip]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>529</wp:term_id><wp:tag_slug>script</wp:tag_slug><wp:tag_name><![CDATA[script#]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>836</wp:term_id><wp:tag_slug>scrolls</wp:tag_slug><wp:tag_name><![CDATA[scrolls]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>123</wp:term_id><wp:tag_slug>scss</wp:tag_slug><wp:tag_name><![CDATA[scss]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>269</wp:term_id><wp:tag_slug>searchable</wp:tag_slug><wp:tag_name><![CDATA[searchable]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>665</wp:term_id><wp:tag_slug>selector</wp:tag_slug><wp:tag_name><![CDATA[selector]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>671</wp:term_id><wp:tag_slug>selenium</wp:tag_slug><wp:tag_name><![CDATA[selenium]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>566</wp:term_id><wp:tag_slug>sequelize</wp:tag_slug><wp:tag_name><![CDATA[sequelize]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>674</wp:term_id><wp:tag_slug>serenade-js</wp:tag_slug><wp:tag_name><![CDATA[serenade.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>628</wp:term_id><wp:tag_slug>series</wp:tag_slug><wp:tag_name><![CDATA[series]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>558</wp:term_id><wp:tag_slug>server</wp:tag_slug><wp:tag_name><![CDATA[server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>350</wp:term_id><wp:tag_slug>service</wp:tag_slug><wp:tag_name><![CDATA[service]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>603</wp:term_id><wp:tag_slug>session</wp:tag_slug><wp:tag_name><![CDATA[session]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>602</wp:term_id><wp:tag_slug>session-js</wp:tag_slug><wp:tag_name><![CDATA[session.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>157</wp:term_id><wp:tag_slug>shadow</wp:tag_slug><wp:tag_name><![CDATA[shadow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>637</wp:term_id><wp:tag_slug>sharing</wp:tag_slug><wp:tag_name><![CDATA[sharing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>shell</wp:tag_slug><wp:tag_name><![CDATA[shell]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>728</wp:term_id><wp:tag_slug>should</wp:tag_slug><wp:tag_name><![CDATA[should]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>660</wp:term_id><wp:tag_slug>simple</wp:tag_slug><wp:tag_name><![CDATA[simple]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>649</wp:term_id><wp:tag_slug>sinatra</wp:tag_slug><wp:tag_name><![CDATA[sinatra]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>847</wp:term_id><wp:tag_slug>sinon-js</wp:tag_slug><wp:tag_name><![CDATA[sinon.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>240</wp:term_id><wp:tag_slug>size</wp:tag_slug><wp:tag_name><![CDATA[size]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>647</wp:term_id><wp:tag_slug>sled</wp:tag_slug><wp:tag_name><![CDATA[sled]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>700</wp:term_id><wp:tag_slug>slider</wp:tag_slug><wp:tag_name><![CDATA[slider]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>640</wp:term_id><wp:tag_slug>sliding</wp:tag_slug><wp:tag_name><![CDATA[sliding]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>591</wp:term_id><wp:tag_slug>smooth-coffeescript</wp:tag_slug><wp:tag_name><![CDATA[smooth coffeescript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>560</wp:term_id><wp:tag_slug>snippets</wp:tag_slug><wp:tag_name><![CDATA[snippets]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>887</wp:term_id><wp:tag_slug>social-network</wp:tag_slug><wp:tag_name><![CDATA[social network]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug>socket-io</wp:tag_slug><wp:tag_name><![CDATA[socket.io]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>181</wp:term_id><wp:tag_slug>solid</wp:tag_slug><wp:tag_name><![CDATA[SOLID]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>268</wp:term_id><wp:tag_slug>sortable</wp:tag_slug><wp:tag_name><![CDATA[sortable]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>769</wp:term_id><wp:tag_slug>sorting</wp:tag_slug><wp:tag_name><![CDATA[sorting]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>815</wp:term_id><wp:tag_slug>soundcloud</wp:tag_slug><wp:tag_name><![CDATA[soundcloud]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>317</wp:term_id><wp:tag_slug>source</wp:tag_slug><wp:tag_name><![CDATA[source]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>space</wp:tag_slug><wp:tag_name><![CDATA[space]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>527</wp:term_id><wp:tag_slug>sparklines</wp:tag_slug><wp:tag_name><![CDATA[sparklines]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>829</wp:term_id><wp:tag_slug>speech</wp:tag_slug><wp:tag_name><![CDATA[speech]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>383</wp:term_id><wp:tag_slug>spine-mobile</wp:tag_slug><wp:tag_name><![CDATA[spine mobile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>382</wp:term_id><wp:tag_slug>spine-js</wp:tag_slug><wp:tag_name><![CDATA[spine.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>333</wp:term_id><wp:tag_slug>spinners</wp:tag_slug><wp:tag_name><![CDATA[spinners]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>777</wp:term_id><wp:tag_slug>sprite3d</wp:tag_slug><wp:tag_name><![CDATA[sprite3d]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>308</wp:term_id><wp:tag_slug>spyon</wp:tag_slug><wp:tag_name><![CDATA[spyOn]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>54</wp:term_id><wp:tag_slug>sql</wp:tag_slug><wp:tag_name><![CDATA[sql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>squeeze</wp:tag_slug><wp:tag_name><![CDATA[squeeze]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>338</wp:term_id><wp:tag_slug>ssh</wp:tag_slug><wp:tag_name><![CDATA[ssh]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>692</wp:term_id><wp:tag_slug>startup</wp:tag_slug><wp:tag_name><![CDATA[startup]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>201</wp:term_id><wp:tag_slug>static</wp:tag_slug><wp:tag_name><![CDATA[static]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>770</wp:term_id><wp:tag_slug>statistics</wp:tag_slug><wp:tag_name><![CDATA[statistics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>664</wp:term_id><wp:tag_slug>stellar-js</wp:tag_slug><wp:tag_name><![CDATA[stellar.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>882</wp:term_id><wp:tag_slug>storage</wp:tag_slug><wp:tag_name><![CDATA[storage]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>192</wp:term_id><wp:tag_slug>storm</wp:tag_slug><wp:tag_name><![CDATA[storm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>753</wp:term_id><wp:tag_slug>streaming</wp:tag_slug><wp:tag_name><![CDATA[streaming]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>stubbie</wp:tag_slug><wp:tag_name><![CDATA[stubbie]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>stubs</wp:tag_slug><wp:tag_name><![CDATA[stubs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>133</wp:term_id><wp:tag_slug>style</wp:tag_slug><wp:tag_name><![CDATA[style]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>801</wp:term_id><wp:tag_slug>styleguide</wp:tag_slug><wp:tag_name><![CDATA[styleguide]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>162</wp:term_id><wp:tag_slug>styling</wp:tag_slug><wp:tag_name><![CDATA[styling]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>118</wp:term_id><wp:tag_slug>stylus</wp:tag_slug><wp:tag_name><![CDATA[stylus]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>761</wp:term_id><wp:tag_slug>svbtle</wp:tag_slug><wp:tag_name><![CDATA[svbtle]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>659</wp:term_id><wp:tag_slug>symbols</wp:tag_slug><wp:tag_name><![CDATA[symbols]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>623</wp:term_id><wp:tag_slug>synchronised-browsing</wp:tag_slug><wp:tag_name><![CDATA[synchronised browsing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>98</wp:term_id><wp:tag_slug>tabs</wp:tag_slug><wp:tag_name><![CDATA[tabs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>tdd</wp:tag_slug><wp:tag_name><![CDATA[tdd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>tdd-stubs-generator</wp:tag_slug><wp:tag_name><![CDATA[tdd stubs generator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>141</wp:term_id><wp:tag_slug>teaguedino</wp:tag_slug><wp:tag_name><![CDATA[teaguedino]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>718</wp:term_id><wp:tag_slug>template</wp:tag_slug><wp:tag_name><![CDATA[template]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>885</wp:term_id><wp:tag_slug>tent</wp:tag_slug><wp:tag_name><![CDATA[tent]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>886</wp:term_id><wp:tag_slug>tent-io</wp:tag_slug><wp:tag_name><![CDATA[tent.io]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>340</wp:term_id><wp:tag_slug>terminal</wp:tag_slug><wp:tag_name><![CDATA[terminal]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>332</wp:term_id><wp:tag_slug>terminology</wp:tag_slug><wp:tag_name><![CDATA[terminology]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>264</wp:term_id><wp:tag_slug>terse</wp:tag_slug><wp:tag_name><![CDATA[terse]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>783</wp:term_id><wp:tag_slug>test</wp:tag_slug><wp:tag_name><![CDATA[test]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>832</wp:term_id><wp:tag_slug>tester</wp:tag_slug><wp:tag_name><![CDATA[tester]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>106</wp:term_id><wp:tag_slug>testing</wp:tag_slug><wp:tag_name><![CDATA[testing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>348</wp:term_id><wp:tag_slug>testling</wp:tag_slug><wp:tag_name><![CDATA[testling]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>156</wp:term_id><wp:tag_slug>text</wp:tag_slug><wp:tag_name><![CDATA[text]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>699</wp:term_id><wp:tag_slug>theme</wp:tag_slug><wp:tag_name><![CDATA[theme]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>655</wp:term_id><wp:tag_slug>themes</wp:tag_slug><wp:tag_name><![CDATA[themes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>360</wp:term_id><wp:tag_slug>thermostat</wp:tag_slug><wp:tag_name><![CDATA[thermostat]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>596</wp:term_id><wp:tag_slug>third-party-code</wp:tag_slug><wp:tag_name><![CDATA[third party code]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>686</wp:term_id><wp:tag_slug>this</wp:tag_slug><wp:tag_name><![CDATA[this]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>325</wp:term_id><wp:tag_slug>thoughtworker</wp:tag_slug><wp:tag_name><![CDATA[thoughtworker]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>84</wp:term_id><wp:tag_slug>thoughtworks</wp:tag_slug><wp:tag_name><![CDATA[thoughtworks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>144</wp:term_id><wp:tag_slug>tiled</wp:tag_slug><wp:tag_name><![CDATA[tiled]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>812</wp:term_id><wp:tag_slug>timeline</wp:tag_slug><wp:tag_name><![CDATA[timeline]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>207</wp:term_id><wp:tag_slug>timer</wp:tag_slug><wp:tag_name><![CDATA[timer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>680</wp:term_id><wp:tag_slug>tips</wp:tag_slug><wp:tag_name><![CDATA[tips]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>374</wp:term_id><wp:tag_slug>titanium</wp:tag_slug><wp:tag_name><![CDATA[titanium]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>346</wp:term_id><wp:tag_slug>tool</wp:tag_slug><wp:tag_name><![CDATA[tool]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>238</wp:term_id><wp:tag_slug>tools</wp:tag_slug><wp:tag_name><![CDATA[tools]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>366</wp:term_id><wp:tag_slug>toolset</wp:tag_slug><wp:tag_name><![CDATA[toolset]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>354</wp:term_id><wp:tag_slug>touch</wp:tag_slug><wp:tag_name><![CDATA[touch]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>678</wp:term_id><wp:tag_slug>touchy-js</wp:tag_slug><wp:tag_name><![CDATA[touchy.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>723</wp:term_id><wp:tag_slug>tower-js</wp:tag_slug><wp:tag_name><![CDATA[tower.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>tracking</wp:tag_slug><wp:tag_name><![CDATA[tracking]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>386</wp:term_id><wp:tag_slug>transitions</wp:tag_slug><wp:tag_name><![CDATA[transitions]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>392</wp:term_id><wp:tag_slug>travis</wp:tag_slug><wp:tag_name><![CDATA[travis]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>681</wp:term_id><wp:tag_slug>tricks</wp:tag_slug><wp:tag_name><![CDATA[tricks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>741</wp:term_id><wp:tag_slug>trigger-io</wp:tag_slug><wp:tag_name><![CDATA[trigger.io]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>tropo</wp:tag_slug><wp:tag_name><![CDATA[tropo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>262</wp:term_id><wp:tag_slug>truthy</wp:tag_slug><wp:tag_name><![CDATA[truthy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>669</wp:term_id><wp:tag_slug>turn-js</wp:tag_slug><wp:tag_name><![CDATA[turn.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>221</wp:term_id><wp:tag_slug>tutorial</wp:tag_slug><wp:tag_name><![CDATA[tutorial]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>613</wp:term_id><wp:tag_slug>tutorials</wp:tag_slug><wp:tag_name><![CDATA[tutorials]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>tweets</wp:tag_slug><wp:tag_name><![CDATA[tweets]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>twitter</wp:tag_slug><wp:tag_name><![CDATA[twitter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>702</wp:term_id><wp:tag_slug>two-factor</wp:tag_slug><wp:tag_name><![CDATA[two-factor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>758</wp:term_id><wp:tag_slug>types</wp:tag_slug><wp:tag_name><![CDATA[types]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>231</wp:term_id><wp:tag_slug>typography</wp:tag_slug><wp:tag_name><![CDATA[typography]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>121</wp:term_id><wp:tag_slug>uglyjs</wp:tag_slug><wp:tag_name><![CDATA[uglyjs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>243</wp:term_id><wp:tag_slug>ui</wp:tag_slug><wp:tag_name><![CDATA[ui]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>187</wp:term_id><wp:tag_slug>unicorn</wp:tag_slug><wp:tag_name><![CDATA[unicorn]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>199</wp:term_id><wp:tag_slug>unittest</wp:tag_slug><wp:tag_name><![CDATA[unittest]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>unix</wp:tag_slug><wp:tag_name><![CDATA[unix]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>578</wp:term_id><wp:tag_slug>url</wp:tag_slug><wp:tag_name><![CDATA[url]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>652</wp:term_id><wp:tag_slug>url-shortner</wp:tag_slug><wp:tag_name><![CDATA[url shortner]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>577</wp:term_id><wp:tag_slug>url-js</wp:tag_slug><wp:tag_name><![CDATA[url.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>646</wp:term_id><wp:tag_slug>usability</wp:tag_slug><wp:tag_name><![CDATA[usability]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>896</wp:term_id><wp:tag_slug>user-journeys</wp:tag_slug><wp:tag_name><![CDATA[user journeys]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>645</wp:term_id><wp:tag_slug>user-testing</wp:tag_slug><wp:tag_name><![CDATA[user testing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>571</wp:term_id><wp:tag_slug>ux</wp:tag_slug><wp:tag_name><![CDATA[ux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>200</wp:term_id><wp:tag_slug>v8</wp:tag_slug><wp:tag_name><![CDATA[v8]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>704</wp:term_id><wp:tag_slug>variable</wp:tag_slug><wp:tag_name><![CDATA[variable]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>755</wp:term_id><wp:tag_slug>vector</wp:tag_slug><wp:tag_name><![CDATA[vector]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>92</wp:term_id><wp:tag_slug>video</wp:tag_slug><wp:tag_name><![CDATA[video]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>642</wp:term_id><wp:tag_slug>video-js</wp:tag_slug><wp:tag_name><![CDATA[video.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>113</wp:term_id><wp:tag_slug>viewer</wp:tag_slug><wp:tag_name><![CDATA[viewer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>788</wp:term_id><wp:tag_slug>viewport</wp:tag_slug><wp:tag_name><![CDATA[viewport]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>789</wp:term_id><wp:tag_slug>viewporter</wp:tag_slug><wp:tag_name><![CDATA[viewporter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>813</wp:term_id><wp:tag_slug>vimeo</wp:tag_slug><wp:tag_name><![CDATA[vimeo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>610</wp:term_id><wp:tag_slug>visitor-js</wp:tag_slug><wp:tag_name><![CDATA[visitor.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>771</wp:term_id><wp:tag_slug>visualisation</wp:tag_slug><wp:tag_name><![CDATA[visualisation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>195</wp:term_id><wp:tag_slug>visualization</wp:tag_slug><wp:tag_name><![CDATA[visualization]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>209</wp:term_id><wp:tag_slug>visualizer-js</wp:tag_slug><wp:tag_name><![CDATA[visualizer.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>823</wp:term_id><wp:tag_slug>watch-later</wp:tag_slug><wp:tag_name><![CDATA[watch later]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>759</wp:term_id><wp:tag_slug>watercolour</wp:tag_slug><wp:tag_name><![CDATA[watercolour]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>149</wp:term_id><wp:tag_slug>web</wp:tag_slug><wp:tag_name><![CDATA[web]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>web-server</wp:tag_slug><wp:tag_name><![CDATA[web server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>895</wp:term_id><wp:tag_slug>web-driver</wp:tag_slug><wp:tag_name><![CDATA[web-driver]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>285</wp:term_id><wp:tag_slug>webapps</wp:tag_slug><wp:tag_name><![CDATA[webapps]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>368</wp:term_id><wp:tag_slug>webdesign</wp:tag_slug><wp:tag_name><![CDATA[webdesign]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>562</wp:term_id><wp:tag_slug>webkit</wp:tag_slug><wp:tag_name><![CDATA[webkit]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>542</wp:term_id><wp:tag_slug>webkit-css3-form</wp:tag_slug><wp:tag_name><![CDATA[webkit css3 form]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>378</wp:term_id><wp:tag_slug>website</wp:tag_slug><wp:tag_name><![CDATA[website]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>349</wp:term_id><wp:tag_slug>websockets</wp:tag_slug><wp:tag_name><![CDATA[WebSockets]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>526</wp:term_id><wp:tag_slug>websql</wp:tag_slug><wp:tag_name><![CDATA[WebSQL]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>599</wp:term_id><wp:tag_slug>webvie</wp:tag_slug><wp:tag_name><![CDATA[WebVie]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>743</wp:term_id><wp:tag_slug>widget</wp:tag_slug><wp:tag_name><![CDATA[widget]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>772</wp:term_id><wp:tag_slug>wind</wp:tag_slug><wp:tag_name><![CDATA[wind]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>839</wp:term_id><wp:tag_slug>window</wp:tag_slug><wp:tag_name><![CDATA[window]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>884</wp:term_id><wp:tag_slug>window-navigator-online</wp:tag_slug><wp:tag_name><![CDATA[window.navigator.online]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>568</wp:term_id><wp:tag_slug>windows-2</wp:tag_slug><wp:tag_name><![CDATA[windows]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>656</wp:term_id><wp:tag_slug>wireframe</wp:tag_slug><wp:tag_name><![CDATA[wireframe]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>654</wp:term_id><wp:tag_slug>wordpress</wp:tag_slug><wp:tag_name><![CDATA[wordpress]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>254</wp:term_id><wp:tag_slug>work</wp:tag_slug><wp:tag_name><![CDATA[work]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>255</wp:term_id><wp:tag_slug>workflow</wp:tag_slug><wp:tag_name><![CDATA[workflow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>721</wp:term_id><wp:tag_slug>world</wp:tag_slug><wp:tag_name><![CDATA[World]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>595</wp:term_id><wp:tag_slug>write</wp:tag_slug><wp:tag_name><![CDATA[write]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>763</wp:term_id><wp:tag_slug>writing</wp:tag_slug><wp:tag_name><![CDATA[writing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>752</wp:term_id><wp:tag_slug>wysiwyg</wp:tag_slug><wp:tag_name><![CDATA[wysiwyg]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>634</wp:term_id><wp:tag_slug>xbox</wp:tag_slug><wp:tag_name><![CDATA[xbox]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>597</wp:term_id><wp:tag_slug>xcode</wp:tag_slug><wp:tag_name><![CDATA[xcode]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>804</wp:term_id><wp:tag_slug>yahoo</wp:tag_slug><wp:tag_name><![CDATA[yahoo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>862</wp:term_id><wp:tag_slug>yeoman</wp:tag_slug><wp:tag_name><![CDATA[yeoman]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>738</wp:term_id><wp:tag_slug>youtube</wp:tag_slug><wp:tag_name><![CDATA[youtube]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>521</wp:term_id><wp:tag_slug>zepto</wp:tag_slug><wp:tag_name><![CDATA[zepto]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>196</wp:term_id><wp:tag_slug>zombie-js</wp:tag_slug><wp:tag_name><![CDATA[zombie.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>220</wp:term_id><wp:tag_slug>zsh</wp:tag_slug><wp:tag_name><![CDATA[zsh]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>787</wp:term_id><wp:tag_slug>zynga</wp:tag_slug><wp:tag_name><![CDATA[zynga]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>395</wp:term_id><wp:tag_slug>395</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>399</wp:term_id><wp:tag_slug>399</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>400</wp:term_id><wp:tag_slug>400</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>401</wp:term_id><wp:tag_slug>401</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>402</wp:term_id><wp:tag_slug>402</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>403</wp:term_id><wp:tag_slug>403</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>404</wp:term_id><wp:tag_slug>404</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>405</wp:term_id><wp:tag_slug>405</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>406</wp:term_id><wp:tag_slug>406</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>407</wp:term_id><wp:tag_slug>407</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>408</wp:term_id><wp:tag_slug>408</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>409</wp:term_id><wp:tag_slug>409</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>410</wp:term_id><wp:tag_slug>410</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>411</wp:term_id><wp:tag_slug>411</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>412</wp:term_id><wp:tag_slug>412</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>413</wp:term_id><wp:tag_slug>413</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>414</wp:term_id><wp:tag_slug>414</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>415</wp:term_id><wp:tag_slug>415</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>416</wp:term_id><wp:tag_slug>416</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>417</wp:term_id><wp:tag_slug>417</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>418</wp:term_id><wp:tag_slug>418</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>419</wp:term_id><wp:tag_slug>419</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>420</wp:term_id><wp:tag_slug>420</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>421</wp:term_id><wp:tag_slug>421</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>422</wp:term_id><wp:tag_slug>422</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>423</wp:term_id><wp:tag_slug>423</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>424</wp:term_id><wp:tag_slug>424</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>425</wp:term_id><wp:tag_slug>425</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>429</wp:term_id><wp:tag_slug>429</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>430</wp:term_id><wp:tag_slug>430</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>431</wp:term_id><wp:tag_slug>431</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>432</wp:term_id><wp:tag_slug>432</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>433</wp:term_id><wp:tag_slug>433</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>434</wp:term_id><wp:tag_slug>434</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>435</wp:term_id><wp:tag_slug>435</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>436</wp:term_id><wp:tag_slug>436</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>437</wp:term_id><wp:tag_slug>437</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>438</wp:term_id><wp:tag_slug>438</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>439</wp:term_id><wp:tag_slug>439</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>440</wp:term_id><wp:tag_slug>440</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>441</wp:term_id><wp:tag_slug>441</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>442</wp:term_id><wp:tag_slug>442</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>443</wp:term_id><wp:tag_slug>443</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>444</wp:term_id><wp:tag_slug>444</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>445</wp:term_id><wp:tag_slug>445</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>446</wp:term_id><wp:tag_slug>446</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>447</wp:term_id><wp:tag_slug>447</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>518</wp:term_id><wp:tag_slug>518</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>448</wp:term_id><wp:tag_slug>448</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>449</wp:term_id><wp:tag_slug>449</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>450</wp:term_id><wp:tag_slug>450</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>451</wp:term_id><wp:tag_slug>451</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>452</wp:term_id><wp:tag_slug>452</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>453</wp:term_id><wp:tag_slug>453</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>454</wp:term_id><wp:tag_slug>454</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>455</wp:term_id><wp:tag_slug>455</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>456</wp:term_id><wp:tag_slug>456</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>457</wp:term_id><wp:tag_slug>457</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>458</wp:term_id><wp:tag_slug>458</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>459</wp:term_id><wp:tag_slug>459</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>460</wp:term_id><wp:tag_slug>460</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>461</wp:term_id><wp:tag_slug>461</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>462</wp:term_id><wp:tag_slug>462</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>463</wp:term_id><wp:tag_slug>463</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>464</wp:term_id><wp:tag_slug>464</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>465</wp:term_id><wp:tag_slug>465</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>466</wp:term_id><wp:tag_slug>466</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>467</wp:term_id><wp:tag_slug>467</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>468</wp:term_id><wp:tag_slug>468</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>469</wp:term_id><wp:tag_slug>469</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>470</wp:term_id><wp:tag_slug>470</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>471</wp:term_id><wp:tag_slug>471</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>472</wp:term_id><wp:tag_slug>472</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>473</wp:term_id><wp:tag_slug>473</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>515</wp:term_id><wp:tag_slug>515</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>474</wp:term_id><wp:tag_slug>474</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>512</wp:term_id><wp:tag_slug>512</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>475</wp:term_id><wp:tag_slug>475</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>476</wp:term_id><wp:tag_slug>476</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>511</wp:term_id><wp:tag_slug>511</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>510</wp:term_id><wp:tag_slug>510</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>509</wp:term_id><wp:tag_slug>509</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>506</wp:term_id><wp:tag_slug>506</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>477</wp:term_id><wp:tag_slug>477</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>478</wp:term_id><wp:tag_slug>478</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>479</wp:term_id><wp:tag_slug>479</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>504</wp:term_id><wp:tag_slug>504</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>501</wp:term_id><wp:tag_slug>501</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>480</wp:term_id><wp:tag_slug>480</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>481</wp:term_id><wp:tag_slug>481</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>482</wp:term_id><wp:tag_slug>482</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>483</wp:term_id><wp:tag_slug>483</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>484</wp:term_id><wp:tag_slug>484</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>485</wp:term_id><wp:tag_slug>485</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>486</wp:term_id><wp:tag_slug>486</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>487</wp:term_id><wp:tag_slug>487</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>488</wp:term_id><wp:tag_slug>488</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>489</wp:term_id><wp:tag_slug>489</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>490</wp:term_id><wp:tag_slug>490</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>491</wp:term_id><wp:tag_slug>491</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>492</wp:term_id><wp:tag_slug>492</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>493</wp:term_id><wp:tag_slug>493</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>494</wp:term_id><wp:tag_slug>494</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>495</wp:term_id><wp:tag_slug>495</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>496</wp:term_id><wp:tag_slug>496</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>497</wp:term_id><wp:tag_slug>497</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>498</wp:term_id><wp:tag_slug>498</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>499</wp:term_id><wp:tag_slug>499</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>500</wp:term_id><wp:tag_slug>500</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>502</wp:term_id><wp:tag_slug>502</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>503</wp:term_id><wp:tag_slug>503</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>505</wp:term_id><wp:tag_slug>505</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>507</wp:term_id><wp:tag_slug>507</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>508</wp:term_id><wp:tag_slug>508</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>513</wp:term_id><wp:tag_slug>513</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>514</wp:term_id><wp:tag_slug>514</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>516</wp:term_id><wp:tag_slug>516</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>517</wp:term_id><wp:tag_slug>517</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>519</wp:term_id><wp:tag_slug>519</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>520</wp:term_id><wp:tag_slug>520</wp:tag_slug><wp:tag_name><![CDATA[||]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>276</wp:term_id><wp:tag_slug>276</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>288</wp:term_id><wp:tag_slug>288</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>289</wp:term_id><wp:tag_slug>289</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>291</wp:term_id><wp:tag_slug>291</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>292</wp:term_id><wp:tag_slug>292</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>293</wp:term_id><wp:tag_slug>293</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>294</wp:term_id><wp:tag_slug>294</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>295</wp:term_id><wp:tag_slug>295</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>296</wp:term_id><wp:tag_slug>296</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>298</wp:term_id><wp:tag_slug>298</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>299</wp:term_id><wp:tag_slug>299</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>300</wp:term_id><wp:tag_slug>300</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>301</wp:term_id><wp:tag_slug>301</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>302</wp:term_id><wp:tag_slug>302</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>303</wp:term_id><wp:tag_slug>303</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>304</wp:term_id><wp:tag_slug>304</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>305</wp:term_id><wp:tag_slug>305</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>306</wp:term_id><wp:tag_slug>306</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>326</wp:term_id><wp:tag_slug>326</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>327</wp:term_id><wp:tag_slug>327</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>328</wp:term_id><wp:tag_slug>328</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>329</wp:term_id><wp:tag_slug>329</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>330</wp:term_id><wp:tag_slug>330</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>331</wp:term_id><wp:tag_slug>331</wp:tag_slug><wp:tag_name><![CDATA[||=]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=</generator>

	<item>
		<title>Firebug screenshot 1</title>
		<link>http://gregs.tcias.co.uk/2006/02/23/firebug/firebug-screenshot-1/</link>
		<pubDate>Mon, 05 Feb 2007 13:19:02 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>435</wp:post_id>
		<wp:post_date>2007-02-06 00:19:02</wp:post_date>
		<wp:post_date_gmt>2007-02-05 13:19:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>firebug-screenshot-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>163</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/tcias/public_html/wordpress/wp-content/uploads/2007/02/firebug1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[s:190:"a:4:{s:5:"width";i:550;s:6:"height";i:121;s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:75:"C:\Code\uk\co\tcias\gregs-wordpress/wp-content/uploads/2007/02/firebug1.png";}";]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Firebug screenshot 2</title>
		<link>http://gregs.tcias.co.uk/2006/02/23/firebug/firebug-screenshot-2/</link>
		<pubDate>Mon, 05 Feb 2007 13:19:59 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>436</wp:post_id>
		<wp:post_date>2007-02-06 00:19:59</wp:post_date>
		<wp:post_date_gmt>2007-02-05 13:19:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>firebug-screenshot-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>163</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/tcias/public_html/wordpress/wp-content/uploads/2007/02/firebug2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[s:190:"a:4:{s:5:"width";i:550;s:6:"height";i:218;s:14:"hwstring_small";s:23:"height='50' width='128'";s:4:"file";s:75:"C:\Code\uk\co\tcias\gregs-wordpress/wp-content/uploads/2007/02/firebug2.png";}";]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Firebug screenshot 3</title>
		<link>http://gregs.tcias.co.uk/2006/02/23/firebug/firebug-screenshot-3/</link>
		<pubDate>Mon, 05 Feb 2007 13:20:25 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>437</wp:post_id>
		<wp:post_date>2007-02-06 00:20:25</wp:post_date>
		<wp:post_date_gmt>2007-02-05 13:20:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>firebug-screenshot-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>163</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/tcias/public_html/wordpress/wp-content/uploads/2007/02/firebug3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[s:190:"a:4:{s:5:"width";i:550;s:6:"height";i:257;s:14:"hwstring_small";s:23:"height='59' width='128'";s:4:"file";s:75:"C:\Code\uk\co\tcias\gregs-wordpress/wp-content/uploads/2007/02/firebug3.png";}";]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Validate zip file</title>
		<link>http://gregs.tcias.co.uk/2005/10/31/generic-form-validation-part-ii/validate-zip-file/</link>
		<pubDate>Mon, 05 Feb 2007 13:24:14 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2007/02/validate.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>438</wp:post_id>
		<wp:post_date>2007-02-06 00:24:14</wp:post_date>
		<wp:post_date_gmt>2007-02-05 13:24:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>validate-zip-file</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>357</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2007/02/validate.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/tcias/public_html/wordpress/wp-content/uploads/2007/02/validate.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[s:6:"a:0:{}";]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CMA screenshot</title>
		<link>http://gregs.tcias.co.uk/2005/08/23/busy/cma-screenshot/</link>
		<pubDate>Mon, 05 Feb 2007 23:37:16 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2007/02/bigcma.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>439</wp:post_id>
		<wp:post_date>2007-02-06 10:37:16</wp:post_date>
		<wp:post_date_gmt>2007-02-05 23:37:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cma-screenshot</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>146</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2007/02/bigcma.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/tcias/public_html/wordpress/wp-content/uploads/2007/02/bigcma.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[s:189:"a:4:{s:5:"width";i:1112;s:6:"height";i:681;s:14:"hwstring_small";s:23:"height='78' width='128'";s:4:"file";s:73:"C:\Code\uk\co\tcias\gregs-wordpress/wp-content/uploads/2007/02/bigcma.png";}";]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hamish // August 2003 - 16th September 2004</title>
		<link>http://gregs.tcias.co.uk/2004/09/17/hamish/hamish-august-2003-16th-september-2004/</link>
		<pubDate>Wed, 07 Feb 2007 12:10:31 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2007/02/p1001635.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>440</wp:post_id>
		<wp:post_date>2007-02-07 23:10:31</wp:post_date>
		<wp:post_date_gmt>2007-02-07 12:10:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hamish-august-2003-16th-september-2004</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>38</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2007/02/p1001635.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/tcias/public_html/wordpress/wp-content/uploads/2007/02/p1001635.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[s:190:"a:4:{s:5:"width";i:294;s:6:"height";i:195;s:14:"hwstring_small";s:23:"height='84' width='128'";s:4:"file";s:75:"C:\Code\uk\co\tcias\gregs-wordpress/wp-content/uploads/2007/02/p1001635.jpg";}";]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Form.zip</title>
		<link>http://gregs.tcias.co.uk/2004/08/24/form-component-updated/formzip/</link>
		<pubDate>Tue, 22 Apr 2008 07:41:16 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2008/04/form.zip</guid>
		<description></description>
		<content:encoded><![CDATA[See the post.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>464</wp:post_id>
		<wp:post_date>2008-04-22 18:41:16</wp:post_date>
		<wp:post_date_gmt>2008-04-22 07:41:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>formzip</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>56</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2008/04/form.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/tcias/public_html/wordpress/wp-content/uploads/2008/04/form.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[s:6:"a:0:{}";]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>i-took-the-2008-survey</title>
		<link>http://gregs.tcias.co.uk/2008/07/30/i-took-it/i-took-the-2008-survey/</link>
		<pubDate>Wed, 30 Jul 2008 05:05:40 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2008/07/i-took-the-2008-survey.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[I took the 2008 survey]]></excerpt:encoded>
		<wp:post_id>472</wp:post_id>
		<wp:post_date>2008-07-30 01:05:40</wp:post_date>
		<wp:post_date_gmt>2008-07-30 05:05:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-took-the-2008-survey</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>471</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2008/07/i-took-the-2008-survey.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/tcias/public_html/wordpress/wp-content/uploads/2008/07/i-took-the-2008-survey.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:180;s:6:"height";i:46;s:14:"hwstring_small";s:23:"height='32' width='128'";s:4:"file";s:87:"/home/tcias/public_html/wordpress/wp-content/uploads/2008/07/i-took-the-2008-survey.gif";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:33:"i-took-the-2008-survey-150x46.gif";s:5:"width";i:150;s:6:"height";i:46;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IOGraphica - 7.1 hours (from 9-31 to 17-00)</title>
		<link>http://gregs.tcias.co.uk/2010/03/14/iograph/iographica-7-1-hours-from-9-31-to-17-00/</link>
		<pubDate>Mon, 15 Mar 2010 03:55:40 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2010/03/IOGraphica-7.1-hours-from-9-31-to-17-00.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>483</wp:post_id>
		<wp:post_date>2010-03-14 23:55:40</wp:post_date>
		<wp:post_date_gmt>2010-03-15 03:55:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iographica-7-1-hours-from-9-31-to-17-00</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>482</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2010/03/IOGraphica-7.1-hours-from-9-31-to-17-00.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/03/IOGraphica-7.1-hours-from-9-31-to-17-00.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1280";s:6:"height";s:3:"800";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:51:"2010/03/IOGraphica-7.1-hours-from-9-31-to-17-00.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:51:"IOGraphica-7.1-hours-from-9-31-to-17-00-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:51:"IOGraphica-7.1-hours-from-9-31-to-17-00-300x187.png";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:5:"large";a:3:{s:4:"file";s:52:"IOGraphica-7.1-hours-from-9-31-to-17-00-1024x640.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"640";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Angus (August 2003 - 21/February 2011)</title>
		<link>http://gregs.tcias.co.uk/2011/02/24/angus/6645g9e_20/</link>
		<pubDate>Thu, 24 Feb 2011 10:06:10 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2011/02/6645g9e_20.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>629</wp:post_id>
		<wp:post_date>2011-02-24 06:06:10</wp:post_date>
		<wp:post_date_gmt>2011-02-24 10:06:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>6645g9e_20</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>620</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2011/02/6645g9e_20.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/02/6645g9e_20.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"800";s:6:"height";s:3:"533";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:23:"2011/02/6645g9e_20.jpeg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-04-05 at 3.25.59 PM</title>
		<link>http://gregs.tcias.co.uk/2011/04/05/node-js-chat-server/screen-shot-2011-04-05-at-3-25-59-pm/</link>
		<pubDate>Tue, 05 Apr 2011 14:26:40 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-05-at-3.25.59-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>659</wp:post_id>
		<wp:post_date>2011-04-05 10:26:40</wp:post_date>
		<wp:post_date_gmt>2011-04-05 14:26:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-04-05-at-3-25-59-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>656</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-05-at-3.25.59-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/Screen-shot-2011-04-05-at-3.25.59-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"662";s:6:"height";s:3:"715";s:14:"hwstring_small";s:22:"height='96' width='88'";s:4:"file";s:48:"2011/04/Screen-shot-2011-04-05-at-3.25.59-PM.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-04-14 at 10.03.21 AM</title>
		<link>http://gregs.tcias.co.uk/?attachment_id=664</link>
		<pubDate>Thu, 14 Apr 2011 09:06:04 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-14-at-10.03.21-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>664</wp:post_id>
		<wp:post_date>2011-04-14 05:06:04</wp:post_date>
		<wp:post_date_gmt>2011-04-14 09:06:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-04-14-at-10-03-21-am</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-14-at-10.03.21-AM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/Screen-shot-2011-04-14-at-10.03.21-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:4:"1021";s:6:"height";s:3:"742";s:14:"hwstring_small";s:23:"height='93' width='128'";s:4:"file";s:49:"2011/04/Screen-shot-2011-04-14-at-10.03.21-AM.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-04-14 at 10.06.34 AM</title>
		<link>http://gregs.tcias.co.uk/?attachment_id=665</link>
		<pubDate>Thu, 14 Apr 2011 09:06:50 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-14-at-10.06.34-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>665</wp:post_id>
		<wp:post_date>2011-04-14 05:06:50</wp:post_date>
		<wp:post_date_gmt>2011-04-14 09:06:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-04-14-at-10-06-34-am</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-14-at-10.06.34-AM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/Screen-shot-2011-04-14-at-10.06.34-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:4:"1013";s:6:"height";s:3:"728";s:14:"hwstring_small";s:23:"height='91' width='128'";s:4:"file";s:49:"2011/04/Screen-shot-2011-04-14-at-10.06.34-AM.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-04-14 at 11.29.19 AM</title>
		<link>http://gregs.tcias.co.uk/?attachment_id=666</link>
		<pubDate>Thu, 14 Apr 2011 10:29:56 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-14-at-11.29.19-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>666</wp:post_id>
		<wp:post_date>2011-04-14 06:29:56</wp:post_date>
		<wp:post_date_gmt>2011-04-14 10:29:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-04-14-at-11-29-19-am</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-14-at-11.29.19-AM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/Screen-shot-2011-04-14-at-11.29.19-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"665";s:6:"height";s:3:"335";s:14:"hwstring_small";s:23:"height='64' width='128'";s:4:"file";s:49:"2011/04/Screen-shot-2011-04-14-at-11.29.19-AM.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Greg&#039;s Iphone tracking</title>
		<link>http://gregs.tcias.co.uk/2011/04/21/iphone-tracking/screen-shot-2011-04-21-at-9-33-07-am/</link>
		<pubDate>Thu, 21 Apr 2011 08:47:21 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-21-at-9.33.07-AM.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>668</wp:post_id>
		<wp:post_date>2011-04-21 04:47:21</wp:post_date>
		<wp:post_date_gmt>2011-04-21 08:47:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-04-21-at-9-33-07-am</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>667</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-21-at-9.33.07-AM.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/Screen-shot-2011-04-21-at-9.33.07-AM.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:4:"1002";s:6:"height";s:3:"741";s:14:"hwstring_small";s:23:"height='94' width='128'";s:4:"file";s:48:"2011/04/Screen-shot-2011-04-21-at-9.33.07-AM.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Greg's Iphone tracking]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Oh My Zsh</title>
		<link>http://gregs.tcias.co.uk/2011/05/20/oh-my-zsh/screen-shot-2011-05-20-at-4-23-36-pm/</link>
		<pubDate>Fri, 20 May 2011 15:27:03 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2011/05/Screen-shot-2011-05-20-at-4.23.36-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>684</wp:post_id>
		<wp:post_date>2011-05-20 11:27:03</wp:post_date>
		<wp:post_date_gmt>2011-05-20 15:27:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-05-20-at-4-23-36-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>683</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2011/05/Screen-shot-2011-05-20-at-4.23.36-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-20-at-4.23.36-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"533";s:6:"height";s:3:"156";s:14:"hwstring_small";s:23:"height='37' width='128'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-20-at-4.23.36-PM.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>zepto.pageswipe</title>
		<link>http://gregs.tcias.co.uk/?attachment_id=1094</link>
		<pubDate>Mon, 30 Apr 2012 20:33:23 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2012/04/zepto.pageswipe.htm</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1094</wp:post_id>
		<wp:post_date>2012-04-30 21:33:23</wp:post_date>
		<wp:post_date_gmt>2012-04-30 20:33:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zepto-pageswipe-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2012/04/zepto.pageswipe.htm</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/zepto.pageswipe.htm]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>zepto.utility.functions</title>
		<link>http://gregs.tcias.co.uk/?attachment_id=1095</link>
		<pubDate>Mon, 30 Apr 2012 20:33:23 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2012/04/zepto.utility.functions.js</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1095</wp:post_id>
		<wp:post_date>2012-04-30 21:33:23</wp:post_date>
		<wp:post_date_gmt>2012-04-30 20:33:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zepto-utility-functions</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2012/04/zepto.utility.functions.js</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/zepto.utility.functions.js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>zepto.pageswipe</title>
		<link>http://gregs.tcias.co.uk/?attachment_id=1096</link>
		<pubDate>Mon, 30 Apr 2012 20:34:06 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2012/04/zepto.pageswipe.js</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1096</wp:post_id>
		<wp:post_date>2012-04-30 21:34:06</wp:post_date>
		<wp:post_date_gmt>2012-04-30 20:34:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zepto-pageswipe</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2012/04/zepto.pageswipe.js</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/zepto.pageswipe.js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>swipe</title>
		<link>http://gregs.tcias.co.uk/?attachment_id=1097</link>
		<pubDate>Mon, 30 Apr 2012 20:34:06 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2012/04/swipe.css</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1097</wp:post_id>
		<wp:post_date>2012-04-30 21:34:06</wp:post_date>
		<wp:post_date_gmt>2012-04-30 20:34:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swipe</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2012/04/swipe.css</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/swipe.css]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CFMX 6.0</title>
		<link>http://gregs.tcias.co.uk/?p=109</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I really should have known better than to develop using CFMX 6.1 and then run it on CFMX 6.0. There were a few things that came back to bite me. I was building an small app that was going to use JSRS to do calls to the database and display results to the template without having to reload the page. I used the scripts provided by Grant Szabo in his article: <a href="http://www.sys-con.com/story/?storyid=43998" title="JavaScript Remote Scripting with ColdFusion MX">JavaScript Remote Scripting with ColdFusion MX</a>. The scripts work fine in 6.1, however 6.0 takes exception to a few things.</p>
<ol>
	<li>Firstly you can't reference the request scope from within a CFC. Which frankly is a good thing, as from what I have read over recent months it's a good idea to encapsulate your code and pass information in. So I can't help but wonder why the behaviour appears to be correct in CFMX 6.0 (i.e. you can't reference it) and not so in CFMX 6.1 (i.e. yes you can).</li>
	<li>Secondly the script relied on having the result of the queries being written to the template and then onLoad executing a JavaScript function. Again in CFMX 6.1 no problem doing that from within the component, but not so in CFMX 6.0</li>
</ol>
<p>I have modified the components to take these things into consideration and also changed the some of the scripts. All data is now passed into the component explicitly and in the case of the output to template, the result is passed back to the calling template and then output. And now it works for both versions, while adhering to some CFC development recommendations.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2004-06-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>apt-get dry run</title>
		<link>http://gregs.tcias.co.uk/?p=126</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=126</guid>
		<description></description>
		<content:encoded><![CDATA[One of the features I like most about Debian is the package manager (apt). It's simply awesome when it comes to managing package dependencies or just simply keeping your system up-to-date. A while back though I ran into trouble when using apt-get upgrade (to cut a long story short, not the package managers fault but mine), but it left me wishing that I could do a dry run of an upgrade to see what would be happening. And of course you can:

[code]
apt-get -s upgrade
[/code]

On hitting the return key the process of upgrading your packages proceeds as before, but without actually installing anything. Very neat.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date>2005-02-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Securing your Mach-ii setup</title>
		<link>http://gregs.tcias.co.uk/?p=133</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=133</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>Introduction</h4>
Here are my thoughts on setting up a <a href="http://www.mach-ii.com/" title="Get the framework">mach-ii site</a>, I am going to assume that you have some knowledge of the framework, like what the mach-ii.xml file is. Also I am assuming that you have configured your web server to use virtual hosts and that you'll be using one of these virtual hosts for your development. This is not a getting started guide in OO and mach-ii, for that have a read of Trond Ulseth's <a href="http://tutorial345.easycfm.com/" title="Mach-ii for newbies - part 1 Getting started">Mach-ii for newbies - part 1 Getting started</a>.
<h4>The core files</h4>
First off place the Mach-ii core files outside of the webroot so if you have a webroot located here

<code>[code]c:\Projects\htdocs[/code]</code>

You might want to consider creating a "webapps" (you can call it whatever and place whereever [as long as it;s outside of the webroot] you like really) folder like such:

<code>[code]c:\Projects\webapps[/code]</code>

And placing your mach-ii core files there

<code>[code]C:\Projects\webapps\MachII[/code]</code>

Next you should create a ColdFusion mapping called "MachII" to the Mach-II folder, just as the normal Mach-ii instructions show.

Now you may wonder what the point is of creating a webapps folder just for your Mach-ii core files and even why you should place your Mach-ii core files outside of the webroot. Well security is the obvious answer, you don't really want just any one browsing your CFCs now, even less someone getting access to your mach-ii.xml file.
<h4>Setting up your site.</h4>
Next let's take a look at how we can shore up the rest of your application. As an example we'll be using the MachAppSkeleton, so go ahead <a href="http://www.mach-ii.com/downloads/MachAppSkeleton_3.zip" title="Mach-II Application Code Skeleton - Updated 2003/01/22">download these from mach-ii.com</a> and extract them into your webroot. The best way to protect your CFCs and mach-ii.xml file is to also keep them outside of your webroot and that's where the webapps folder comes in.

So back to the administrator to create another mapping. Now depending on your project you could create a single mapping or one for each application you are developing. In our case, a simple webapps mapping works very well.

Now create another MachAppSkeleton folder in the webapps folder and move the config. filters, model and plugin directories from your webroot to that new folder. And the views? You can safely keep those in the webroot of your webserver.

Ok we are nearly ready to launch our skeleton app, but first we need to edit a few files. First we'll want to edit our index.cfm (under c:\Projects\htdocs\MachAppSkeleton\) and change it from:

[code]<!--- Set the path to the application's mach-ii.xml file. --->
<cfset machii_config_path="ExpandPath('config/machii.xml')/>[/code]</cfset>

To:

[code]<!--- Set the path to the application's mach-ii.xml file. --->
<cfset machii_config_path="ExpandPath('/webapp/machii.xml')/>[/code]

If you were to now attempt to browse your site it would not return a page so we'll quickly edit the mach-ii.xml file and create a quick view. Ok so open your mach-ii.xml file locate:

[code]

<property name="applicationRoot" value="/APPLICATION_ROOT"></property>[/code]Change that to:

[code]

<property name="applicationRoot" value="/"></property>[/code]If you are not using ?? you can try and change that value from "/" to /MachAppSkeleton. We'll leave the defaultEvent unchanged at this point, so skip down to:

[code]<event-handler event="DEFAULT_EVENT" access="public">
<!-- any legal elements -->
</event-handler>[/code]

And change that to:

[code]<event-handler event="DEFAULT_EVENT" access="public">
<view-page name="helloWorld">
</view-page>[/code]</event-handler>

Nearly done now, we just specified a view so jump down in the mach-ii.xml file to:

[code]
<!-- PAGE-VIEWS -->

<page-views>
<page-view name="NEW_VIEW_NAME" page="/views/NEW_VIEW_FILE.cfm"></page-view>
<page-view name="exception" page="/views/exception.cfm"></page-view> </page-views>[/code]And change that to:[code]<!-- PAGE-VIEWS -->

<page-views>
<page-view name="helloWorld" page="/views/helloWorld.cfm"></page-view>
<page-view name="exception" page="/views/exception.cfm"></page-view> </page-views>[/code]The final step before hitting your browser, creating the actual view "hellWorld.cfm". Simply copy and paste the following code into the a cfm template called helloWorld.cfm and save it to your views folder:[code]<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<h1>Hooray</h1>
If you can read this, then everything is just dandy!![/code]

Right if you open up your browser and view the site you just set up. If you are using virtual hosts: http://www.mydomain.com/ or if you specified a subfolder to your webroot as the application root try http://localhost/MachAppSkeleton/. You should see this:

(completed site browser view.png)
<h4>A few more points</h4>
Now having to keep your code and work on it in two different locations is a little painful: so I can recommend using symbolic links. We are going off on a slight tangent here, but it'll make your life easier if you maintain everything within a site in Dreamweaver (or whatever your favourite editor is). Do note though that if you apply this, you will be able to access your CFCs and configuration xml file with your web browser, so do not apply these steps to your production environment!!! To be completely clear only apply them to your development environment.
<h5>Unix</h5>
On a unix system you can the "ln -s" command to create your links. So assuming that you have set your /Projects/htdocs/MachAppSkeleton as your site root in Dreamweaver, then you would want to create the following links from /Projects/webapps/MachAppSkeleton:

[code]ln -s /Projects/webapps/MachAppSkeleton/config /Projects/htdocs/MachAppSkeleton/config
ln -s /Projects/webapps/MachAppSkeleton/model /Projects/htdocs/MachAppSkeleton/model
ln -s /Projects/webapps/MachAppSkeleton/filters /Projects/htdocs/MachAppSkeleton/filters
ln -s /Projects/webapps/MachAppSkeleton/plugins /Projects/htdocs/MachAppSkeleton/plugins[/code]
<h5>Windows</h5>
On a windows system there is no built in way to create symbolic links so you either need access to the Windows Resource Kit (the utility is called dlink) or head on over to <a href="http://www.sysinternals.com/ntw2k/source/misc.shtml#junction" title="Junction">http://www.sysinternals.com/ntw2k/source/misc.shtml#junction</a> and download the utility called junction. And here is how you would use junction utility:

[code]junction c:\Projects\htdocs\MachAppSkeleton\config c:\Projects\webapps\MachAppSkeleton\config
junction c:\Projects\htdocs\MachAppSkeleton\filters c:\Projects\webapps\MachAppSkeleton\filters
junction c:\Projects\htdocs\MachAppSkeleton\model c:\Projects\webapps\MachAppSkeleton\model
junction c:\Projects\htdocs\MachAppSkeleton\plugins c:\Projects\webapps\MachAppSkeleton\plugins[/code]

Also when you come to work with your listeners, plugins, filters and whatever other objects you decide to create you'll need to provide the full path (in terms of the ColdFusion mapping) to these. For example, if you had an application listener, previously you would have defined it in mach-ii.xml as follows:

[code]
<listener name="applicationListener" type="model.applicationListener">     <invoker type="MachII.framework.invokers.CFCInvoker_Event"></invoker> </listener>[/code]Instead you need to do this now:

[code]
<listener name="applicationListener" type="webapps.MachAppSkeleton.model.applicationListener">      <invoker type="MachII.framework.invokers.CFCInvoker_Event"></invoker> </listener>[/code]Equally if you were to call an object from within your listener you would need to declare it like this:

[code]variables.appConstants = createObject("component", "webapps.MachAppSkeleton.model.applicationConstantsBean").init();[/code]

And since certain return types can be objects, you would need to define the return type like such for example:

[code]<!--- CONSTRUCTOR --->
<cffunction name="init" access="public" returntype="webapps.MachAppSkeleton.model.ApplicationConstantsBean" output="false"></cffunction>[/code]

The above are all good reasons to resort to a individual ColdFusion mapping for each application as you could at least save yourself the hassle of typing "webapps."
<h4>Some resources</h4>
<ol>
	<li><a href="http://www.corfield.org/index.cfm?event=machii.main" title="Mach II @ corfield org">http://www.corfield.org/index.cfm?event=machii.main</a></li>
	<li><a href="http://livedocs.macromedia.com/wtg/public/machiidevguide/concepts.html" title="Mach II Development Guide - Concepts &amp; Core Files">http://livedocs.macromedia.com/wtg/public/machiidevguide/concepts.html</a></li>
	<li><a href="http://livedocs.macromedia.com/wtg/public/machiidevguide/structure.html" title="Mach II Development Guide - Application Structure &amp; Design"> http://livedocs.macromedia.com/wtg/public/machiidevguide/structure.html</a></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date>2005-03-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Change of direction</title>
		<link>http://gregs.tcias.co.uk/?p=167</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=167</guid>
		<description></description>
		<content:encoded><![CDATA[Well it's all change, again. Not moving or changing job this time, but I have been seconded onto a new project that's going to take me away from CFML and more into the Java/J2EE realm, which is exciting. This explains in part the relative silence over the last few weeks as I have been busy assimilating information about the new role and Oracle Portal. Hopefully normal service will resume again and you'll also be able to expect some insights into Oracle Application server]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date>2004-10-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Stephen Hayes</title>
		<link>http://gregs.tcias.co.uk/?p=169</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=169</guid>
		<description></description>
		<content:encoded><![CDATA[Thumbnails of the photos taken by Stephen Hayes over the weekend of the 15th and 16th of February 2003]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2004-10-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Wedding</title>
		<link>http://gregs.tcias.co.uk/?p=170</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[All of the wedding photos taken by parents and friends over the weekend of the 15th and 16th of February 2003]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2004-10-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>egypt</title>
		<link>http://gregs.tcias.co.uk/?p=171</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=171</guid>
		<description></description>
		<content:encoded><![CDATA[414 holiday/honeymoon snaps from all over Egypt and in no particular grouping.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date>2004-10-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vienna</title>
		<link>http://gregs.tcias.co.uk/?p=172</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=172</guid>
		<description></description>
		<content:encoded><![CDATA[Some shots taken with a new toy, a Canon EOS 300D. Really enjoying taken pictures with this camera.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2004-10-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vienna</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>user facade explained</title>
		<link>http://gregs.tcias.co.uk/?p=221</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=221</guid>
		<description></description>
		<content:encoded><![CDATA[User objects in Mach-ii.info
In our Application plugin the configure method initialise the userFacade (remember the configure method is only called when the application is initialised). So in your configure methos place the following line:

var userFacade = createObject("component","appPath.user.UserFacade");

This is what the userFacade object contains

<cfcomponent displayname="User Facade" hint="I am a facade to manipulate the user in session scope."></cfcomponent>

<cffunction name="init" access="public" returntype="userFacade" output="false" displayname="Init" hint="I initialise the component and return it's instance">
<cfreturn>
</cfreturn></cffunction>

<cffunction name="getUser" access="public" returntype="user" output="false" displayname="get user" hint="I return the user object stored in the session">
<cfreturn>
</cfreturn></cffunction>

<cffunction name="setUser" access="public" returntype="void" output="false" displayname="set user" hint="I put the user object into the session">
<cfargument name="user" required="true">
<cfset session.user="arguments.user">
</cfset></cfargument></cffunction>

<cffunction name="hasUser" access="public" returntype="boolean" output="false" displayname="has user" hint="check if the user objects exists in session">
<cfreturn>
</cfreturn></cffunction>

[the facade is the actual object that can access the session scope, it's the object that can do so safely]

Next pass the facade into properties (the property manager (pm) is created just before the userFacade):
pm.setProperty("userfacade",userFacade);

Now before each event is processed (applicationPlugin using the preEvent method) we grab the current event and retrieve our userFacade from the properties. Using the hasUser() method from the userFacade object we check if it exists.

var event = arguments.eventContext.getCurrentEvent();
var uf = getAppManager().getPropertyManager().getProperty("userfacade");
var user = 0;
//if the user doesn't have a session create it (using the facade)
if (not uf.hasUser()){
user = createObject("component","appPath.model.user.user").init();
uf.setUser(user);
}

If the user object doesn't exist in the session, we create a user object and pass it into the userFacade. The user object (a very basic implementation) can be seen below.

<cfcomponent displayname="User" hint="I model a single user."></cfcomponent>

<cffunction name="init" access="public" returntype="user" output="false" displayname="User Constructor" hint="I initialize a user.">
<cfargument name="userID" type="numeric" required="false" default="0" displayname="user ID" hint="I am the unique user ID passed in">
<cfargument name="username" type="string" required="false" displayname="my user name" hint="I am the user name">
<cfargument name="isLoggedIn" type="boolean" required="false" default="false" displayname="is logged in" hint="I am a boolean value indicating whether the use is logged in">
<cfscript>
variables.instance = structNew();
setuserID(arguments.userID);
setUsername(arguments.username);
setIsLoggedIn(arguments.isLoggedIn);
</cfscript>
<cfreturn>
</cfreturn></cfargument></cfargument></cfargument></cffunction>

<cffunction name="getMemento" access="public" returntype="struct" output="false" hint="I return a memento of this users instance data.">
<cfreturn>
</cfreturn></cffunction>

<cffunction name="setMemento" access="public" returntype="appPath.model.user.user" output="false" hint="I set this user's instance data from a new memento.">
<cfargument name="memento" type="struct" required="yes" displayname="Memento" hint="I am a memento - a struct containing data.">
<cfset variables.instance="arguments.memento">
<cfreturn>
</cfreturn></cfset></cfargument></cffunction>

<!--- GETTERS/SETTERS --->

<cffunction name="getUserID" access="package" returntype="numeric" output="false" displayname="get user ID" hint="I return userID">
<cfreturn>
</cfreturn></cffunction>

<cffunction name="setUserID" access="package" returntype="void" output="false" displayname="set user ID" hint="I set the userID">
<cfargument name="userID" type="numeric" required="true">
<cfset variables.instance.userid="arguments.userID">
</cfset>	</cfargument></cffunction>

<cffunction name="getIsLoggedIn" access="public" returntype="boolean" output="false" displayname="get is logged in" hint="I return a boolean value flagging the login status">
<cfreturn>
</cfreturn></cffunction>

<cffunction name="setIsLoggedIn" access="public" returntype="void" output="false" displayname="set the login status" hint="I set the login status">
<cfargument name="isLoggedIn" type="boolean" required="true" displayname="I am the logged in flag">
<cfset variables.instance.isloggedin="arguments.isLoggedIn">
</cfset></cfargument></cffunction>

<cffunction name="getUsername" access="package" returntype="string" output="false" displayname="get user name" hint="I return the user name">
<cfreturn>
</cfreturn></cffunction>

<cffunction name="setUsername" access="package" returntype="void" output="false" displayname="set user name" hint="I set the user name">
<cfargument name="username" type="string" required="true" displayname="I am the username passed in">
<cfset variables.instance.username="arguments.username">
</cfset></cfargument></cffunction>

<!--- <cffunction name="getUserTO" access="public" return="appPath.model.user.userTO" output="false" displayname="get user Transfer Object" hint="I return the user Transfer Object">
<cfreturn createUserTO() />
</cffunction> --->

<!--- <cffunction name="setUserFromTO" access="public" return="void" output="false" hint="set the instance data from TO">
<cfargument name="userTO" type="machii_info.model.user.userTO" />
<cfscript>
setuserID(userTO.userID);
setUsername(userTO.username);
setFirstname(userTO.firstName);
setLastname(userTO.lastName);
setEmail(userTO.email);
setPassword(userTO.password);
setPassword2(userTO.password);
setCompany(userTO.company);
setIsAdmin(userTO.isAdmin);
</cfscript>
</cffunction> --->

<!--- <cffunction name="createUserTO" access="package" return="appPath.model.user.userTO" output="false" displayname="create the user TO" hint="I create the user TO">
<cfscript>
var userTO = createObject("component", "userTO").init(argumentcollection=variables.instance,errors=variables.errors);
return userTO;
</cfscript>
</cffunction> --->

This object acts as a bean setting and returning user instance data. It also initialises and returns an instance memento and User Transfer Object (Not sure if we'll be using this). TOs are used for passing objects between application layers and also for remote calls. I don't think either is applicable here, so I commented it out.

Returning to our application plugin regardless of whether the user existed in the session (if it didn't it was created at that point), userFacade creates a userTO (by virtue of putting the user object into the userFacade) by first getting the user object out of the session and then creating thw aforemtioned userTO. This userTO is created so that the user session information can be passed into the event arguments. As seen below:

// set the session user transfer object in the event  using the facade
event.setArg("sessionUser", uf.getUser().getUserTO());

It still seems excessive, I decided to simply getting the session object and placing it into the event argument (as sessionUser). Like so:

// set the session user in the event  using the facade
event.setArg("sessionUser", uf.getUser());

OK how is it all used then?

There is a filter than can be called from event to event (i.e. when needed) called Security.cfc. This filter grabs the userFacade out of the properties and does some work:

<cfcomponent extends="MachII.framework.EventFilter" display="Security filter" hint="I am an event filter that manages security of an application"></cfcomponent>

<cffunction name="filterEvent" access="public" returntype="boolean" displayname="filterEvent method" hint="I am invoked by the Mach II framework.">
<cfargument name="event" type="MachII.framework.Event" required="true" displayname="event object" hint="I am the current event object created by the Mach II framework.">
<cfargument name="eventContext" type="MachII.framework.EventContext" required="true" displayname="eventContext object" hint="I am the current event context object created by the Mach II framework.">
<cfargument name="paramArgs" type="struct" required="false" default="#structNew()#" displayname="paramArgs structure" hint="I am the structure containing the parameters specified in the filter invocation in mach-ii.xml.">
<cfscript>
var pm = getAppManager().getPropertyManager();
var uf = pm.getProperty("userfacade");
var invalidEvent = "";
var clearEventQueue = true;
var isLoggedIn = false;</cfscript></cfargument></cfargument></cfargument></cffunction>

if (uf.hasUser()){
isLoggedIn = uf.getUser().getIsLoggedIn();
}
if ( structKeyExists( arguments.paramArgs, "invalidEvent" ) ) {
invalidEvent = arguments.paramArgs.invalidEvent;
} else {
invalidEvent = getParameter( "invalidEvent", "" );
}
if ( structKeyExists( arguments.paramArgs, "clearEventQueue" ) ) {
clearEventQueue = arguments.paramArgs.clearEventQueue;
} else {
clearEventQueue = getParameter( "clearEventQueue", true );
}
<cfif>
<cfreturn>
<cfelse>
<cfif>
<cfset>
</cfset>
<cfset>
<cfreturn>	 <!--- abort the current event handler --->
</cfreturn>
</cfset></cfif></cfelse></cfreturn></cfif>

It checks whether a there is a session user in this facade and if true looks up the boolean value for isLoggedIn. If true the processing can continue, but if not a new event can be announced (like a prompt to login). This covers event based session checks (just remember to include your filter in your event handler declarations).

The next place where our user session object comes in handy is in our views. Remember we passed in our user session object into the event args. At the top of your view set it to a local variable:

sessionUser = request.event.getArg("sessionUser");

Then in your view code you can access the user object methods (e.g. getUserID to display information). You can also do some conditional checking to control display parts (like using isLoggedIn).

So how do you log someone in?
Based on the login example provided by Ben Edwards, so look that up as I'll pick up where isLoginValid is called.

<cffunction name="isLoginValid" access="private" returntype="boolean">
<cfargument name="username" type="string" required="true">
<cfargument name="password" type="string" required="true">
<cfset qry_user="variables.userGateway.getUserByUsernamePassword(arguments.username,arguments.password)">
<cfif>
<cfset>
<cfreturn>
<cfelse>
<cfreturn>
</cfreturn>
</cfelse></cfreturn></cfset></cfif></cfset></cfargument></cfargument></cffunction>

The isLoginValid runs a quey verifying the user credentials passed. This is handed of to the userGateway, which was initialised when the listener was created (configure method).

var appConstants = getAppManager().getPropertyManager().getProperty("appConstants");
var dsn = appConstants.getDsn();
variables.userGateway = createObject("component","appPath.model.user.usergateway").init(dsn);

In addition a user DAO object is created so that we can carry out database interactions:

variables.userDAO = CreateObject("component", "appPath.model.dao.DAOFactory").init(dsn, "machii_info").getDAOFactory(dbtype).getUserDAO();

The query in isLoginValid returns a database record if found. If this is the case doLogin is called and the userID passed in:

<cffunction name="doLogin" access="private" returntype="void">
<cfargument name="userID" type="numeric" required="true">
<cfscript>
var uf = pm.getProperty("userfacade");
var user = createObject("component","appPath.model.user.user").init();
var userTO = variables.userDAO.read(arguments.userid);
user.setUserFromTO(userTO);
user.setIsLoggedIn(true);
uf.setUser(user);
</cfscript></cfargument></cffunction>

Here we retrieve the userFacade from properties and and create a new user object. The mach-ii info app again makes a use of a TO, we are not so we set the result from userDAO to a user object rather than a userTO. So our doLogin method looks like this:

<cffunction name="doLogin" access="private" returntype="void">
<cfargument name="userID" type="numeric" required="true">
<cfscript>
var uf = pm.getProperty("userfacade");
var user = createObject("component","appPath.model.user.user").init(variables.userDAO.read(arguments.userid));
user.setIsLoggedIn(true);
uf.setUser(user);
</cfscript></cfargument></cffunction>

I pass in the result from the DAO read straight into the initialisation of the user object. Now there is a slight risk because the query attempts to retrieve the record and if it's not found then it will error. HOwever since we just checked the username and password in our userGateway it should be OK. Furthermore we set the isLoggedIn to true and finally we pass the user object into the userFacade (i.e. we set the user session). Next we return to isLoginValid and return true.

What about logging out?
Again the loginListener contains a method called doLogout, which retrieves the userFacade from the properties object, set a user var holding the userFacade object and set the isLoggedIn flag to false.

<cffunction name="doLogout" access="public" returntype="void">
<cfargument name="event" type="MachII.framework.Event" required="true">
<cfscript>
var uf = pm.getProperty("userfacade");
var user = uf.getUser();
user.setIsLoggedIn(false);
</cfscript>
</cfargument></cffunction>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>221</wp:post_id>
		<wp:post_date>2004-12-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Configuring MX 6.1 to run multiple instances using JRun and Apache</title>
		<link>http://gregs.tcias.co.uk/?p=344</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=344</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This item is based on the excellent article by Brandon Purcell (<a href="http://www.bpurcell.org/macromedia/coldfusion/multiple_instances.cfm" title="ColdFusion MX 6.1 Step-by-Step Creating and Configuring Multiple Instances">ColdFusion MX 6.1 Step-by-Step Creating and Configuring Multiple Instances</a>). The point of difference here, is that I am using Apache instead of IIS and i just wanted to keep track of anything I needed to do that was different.</p>
<p>When I started I had apache already running and hence configured my CFMX installation to use this directly, but in the end things got very muddled since the Apache configuration already had CF related configuration entries and I wasn't able to distinguish between what was being handled by Jrun/CFMX or indeed by Apache. So as best practice follow what the man Purcell tells you in his article.</p>
<p>Before you start you'll need the following:</p>
<ul>
	<li>CFMX 6.1</li>
	<li>Apache</li>
</ul>
<ol>
	<li>Install everything as per points 1 through to 5. This should get you through installing CFMX 6.1 on your machine.</li>
	<li>Once the install has been completed you'll be prompted to fire up your browser and continue the configuration (the url is something like this one: http://127.0.0.1:8300/CFIDE/administrator/index.cfm). Now at this point I ran in to different problems.</li>
		<ul>
			<li>When the CFM page sreturned complete and utter rubbish. This happened when I already had Apache running and configured Jrun/CFMX to use the Apache server directly. A re-boot fixed this and I was able to access the administrator no problem an continue the configuration</li>
			<li>The second time I ran through this process, the server wasn't responding. The solution, yep you guessed it a re-boot. The pages came up slowly again initially, but after the configuration it was all fine.</li>
		</ul>
	<!--- , however one point of difference was that in point 2 I selected option 2, chose add and selected Apache as my server. So Select Apache from the drop down after selcting <strong>Add</strong>, and point to the conf folder (usually under <em>c:\Program Files\Apache Group\Apache2\conf</em>) and also to the apache executable (<em>c:\Program Files\Apache Group\Apache2\bin\apache.exe</em>). Click OK and the resume the installation as per the instructions. --->
	<li>Stop the coldfusion (CF) service from within services (labelled: "Macromedia JRun CFusion Server"). And then go to <em>C:\JRun4\servers\cfusion\cfusion-ear\</em> and copy that folder over to a directory of your choosing. I like the idea that Purcell introduces here, notably that of a template for all future server installations (he copies it over to "C:\working\cfusion-template"). Once done restart the CF service.</li>
	<li>By having chosen to use Apache at the installation time we can skip steap 9-12.</li>
	<li>I am not sure about this, but in my installation in the cfusion-ear file there was no index.cfm in the cfide/administrator folder. So I copied the entire default CFIDE folder (which at installation time was installed by default into <em>c:\Program Files\Apache Group\Apache2\htdocs\CFIDE\</em>) into the template location.</li>
	<li>Now to the jiucy bit configuring a new instance.</li>
	<li>Go to JRun admin @ http://localhost:8000/, login and select "<strong>create new server</strong>" from the top menu bar.</li>
	<li>leave the Hostname as <strong>localhost</strong>, and specify a new server name (eg: "<em>cfusion2</em>"), the server directory is now automatically populated (eg: "<em>{jrun.home}/servers/cfusion2</em>")</li>
	<li>What is JNDI [Java Naming and Directory Interface] Provider URL? - JNDI is a service that listens on a port</li>
	<li>What is web server Port number</li>
	<li>What is Web Connector Proxy Port Number?</li>
	<li>Regardless thereof, I left just as he did the settings to their defaults and selected finish.</li>
	<li>The new server is now in the listing and is stopped by default. Purcell then goes to talk about setting the new site up as a service. Follow his instructions, however thing to note is that when you type in the command be sure to match the case of your server name . Windows may not be case sensitive but Java certainly is. So switch to "<em>C:\JRun4\bin></em>" and type the following command in:</li>
		<ol>
			<li><em>jrunsvc -install cfusion2 "Macromedia JRun CFusion2 Server" "Macromedia JRun CFusion2 Server"</em></li>
			<li>or if you selected CFusion2 instead of say cfusion2: ><em>jrunsvc -install CFusion2 "Macromedia JRun CFusion2 Server" "Macromedia JRun CFusion2 Server"</em></li>
		</ol>
		<li>If all went well this is the message you should see: <em>Service "Macromedia JRun CFusion2 Server" installed with display name "Macromedia JRun CFusion2 Server"</em></li>
		<li>Now we want to deploy CF onto this server instance, so copy over the template ear file we created earlier into <em>C:\JRun4\servers\cfusion2\cfusion-ear</em> and delete the <em>default-ear</em> folder (apparently they sahre the same context root [what is that?] and that will stop the server from starting).</li>
		<li>OK, now create a folder in your webroot, or whereever you keep your websites for this new site</li>
		<li>Since I am using Apache, I also edited the httpd.conf file of my server to create a virtual host for this new site. The entry should look something like this:</li>
		<ol>
			<li>&lt;VIRTUALHOST your.ip.address.here&gt; <br />
			ServerName cfusion2<br />
 			ServerAlias www.cfusion2.dev<br />
 			DocumentRoot "c:/path/to/your/sites/folder/"<br />
			&lt;/VIRTUALHOST&gt;<br /></li>
		</ol>
		<li>restart your Apache server for the changes to take effect.</li>
		<li>Ok start the new server, using either services, command line or the management console. This could take a while as it needs to deploy the enterprise application file.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>344</wp:post_id>
		<wp:post_date>2003-12-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Design considerations, structure and CSS</title>
		<link>http://gregs.tcias.co.uk/?p=387</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=387</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When putting together a  color scheme, note it down in the style sheet or oin the style guide for future reference like such:</p>
<p><em>/*<br />
<br />
Base color scheme for Client X:<br />
<br />
Core blue: #xxxxxx<br />
<br />
Table header: #xxxxxx<br />
<br />
Table row: #xxxxxx<br />
<br />
Table row alternate: #xxxxxx<br />
<br />
Complementary orange link: #xxxxxx<br />
<br />
Faded orange (visited link): #xxxxxx<br />
<br />
Strong orange header: #xxxxxx<br />
<br />
*/</em></p>
<p>Who is your audience? Determine who it is to limit the design options and deliver a solution targeted at these so that they can reap the greatest benefit from visiting the site. In the same way it helps to know who isn't part of your audience</p>

<p>Content: Make this a priority. Always mention it in the project on-line as experience has shown that acquiring content form the client can be a slow and somtimes painful process.</p>

<p>importing external css files</p>

<p><em>@import url("real.css");<br />
<br />
/*<br />
funny how that needs the ; to work when it's alone<br />
*/<br />
<br />
/*<br />
the dodge through here prevents Flash Of Unstyled Content in ie6pc<br />
*/<br />
<br />
/*<br />
import with quotes and brackets hides css from:<br />
<br />
Netscape 4.x<br />
Win IE 3<br />
Win IE 4<br />
Mac IE 4.01<br />
Mac IE 4.5<br />
Konqueror 2.1.2<br />
Win Amaya 5.1<br />
<br />
isn't that nice to know?<br />
*/</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>387</wp:post_id>
		<wp:post_date>2003-04-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>IA considerations</title>
		<link>http://gregs.tcias.co.uk/?p=388</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=388</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Though I know that it's strictly got nothing to do with HTML and scripting I guess that the process that IA provides helps determine the site and the interface. Which is the usually implemented in HTML. IN the following is collection of resources and considerations that should form the premise of any project.</p>
<ol>
<li>don't make me think!!!</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>388</wp:post_id>
		<wp:post_date>2003-04-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Coding best practices</title>
		<link>http://gregs.tcias.co.uk/?p=389</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=389</guid>
		<description></description>
		<content:encoded><![CDATA[<p>comment your code</p>

<p>adhere to standards</p>

<p>do cross browser testing </p>

<p>level the playing field by agreeing with the client which browsers to develop for</p>

<p>validate input, be sure to be extremely strict about validation for example when numbers are required then filter everything but 0-9, and not a-z, because that would still allow for A-Z, punctuation and white space.</p>
<p>See here for info: http://m.bacarella.com/papers/secsoft/html/
This should help limit cross browser scripting. Check here for more info:
http://www.cert.org/advisories/CA-2000-02.html</p>

<p>table rendering can be sped up by using the following CSS1 declaration:</p>
<p><em>&lt;TABLE STYLE="table-layout: fixed" WIDTH="600"&gt;<br />
&lt;TR HEIGHT="30"&gt;<br />
&lt;TD WIDTH="150">happy&lt;/TD&gt;<br />
&lt;TD WIDTH="200">happy&lt;/TD&gt;<br />
&lt;TD WIDTH="250">happy&lt;/TD&gt;<br />
&lt;/TR&gt;<br />
&lt;TABLE&gt;<br /></em></p>


<p>Furthermore when working with CSS be sure not to use "_" in your style names, some borwsers will not parse this. And the validator returns an error until you fix it.</p>

<p>From webreference:
http://www.webreference.com/programming/optimize/speedup/chap10/3/</p>
<p>Use switch statements where ever possible, because if/else needs to evaluate
each condition (i.e. each if statement), where as with switch statements no
evaluation is required.</p>

<p>Reverse loops can be twice as fast as normal loops. So instead of counting
up (i++), consider counting down (i--)</p>

<p>Also should you be doing any kind of calculation in your loops, consider
moving it out of the loop. So instead of this:</p>

<p><em>for (i=0;i<iter;i++) {<br />
  d=Math.sqrt(y);<br />
  j+=i*d;<br />
}</em>
</p>

<p>Do this:</p>

<p><em>
d=Math.sqrt(y);<br />
for (i=0;i<iter;i++) {<br />
  j+=i*d;<br />
}</em></p>

<p>This technique here proved to be the fastest: Flipped Loop with Optimized Reverse Count</p>
<p><em>function loopDoWhileReverse3() {<br />
var i=iter;<br />
do<br />
{<br />
  // do something here<br />
}<br />
while (--i);<br />
}<e/m></p>

<p>do.. while loops are generally considered faster than for loops.</p>

<p>Check out more on Duff's device</p>

<p>If you have two loops that follow the same number of iterations and are
clsoe together fuse them together so instead of this:</p>

<p><em>for (i=0; i<j; i++) {<br />
  sumserv += serv(i);<br />
}<br />
for (i=0; i<j; i++) {<br />
  prodfoo *= foo(i);<br />
}</em></p>

<p>Do this:</p>

<p><em>for (i=0; i<j; i++) {<br />
  sumserv += serv(i);<br />
  prodfoo *= foo(i);<br />
}</em></p><br />

<p>Credit Card number validation formula
http://www.webreference.com/programming/carts/chap7/3/</p>

<p>Two ways to improve your database security. If you are using ColdFusion validate your input into SQL queries by way of the &lt;cfqueryparam&gt; paramater for &lt;cfquery&gt;. This helps validate the data to a strict expected type and will abort if the supplied information doesn't match. Another way and possibly better is to move this kind of checking to the database. Set up different user types that have different access privileges and hence can't execute statements like <strong>drop</strong> if say display queries are run based on URL IDs. This is pretty secure and also moves the processing to the database rather than burdening the application server further.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>389</wp:post_id>
		<wp:post_date>2003-04-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Forms and all that</title>
		<link>http://gregs.tcias.co.uk/?p=390</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=390</guid>
		<description></description>
		<content:encoded><![CDATA[<ol>
<li>use captchas (completely automated public Turing tests to tell computers and humans apart) to make registration process more secure and less succeptable to automated registrations (http://www.captcha.net/captchas/gimpy/).<li>
<li>Validate all input client side as much as possible</li>
<li>validating credit cards: Use Luhn formula to calculate whether the number supplied is in the correct format (see here for more info: http://www.webreference.com/programming/carts/chap7/3/). Also check that the card type matches the card prefixes supplied. Another check is the length of the number supplied based on a card type. Another thing to consider is when processing card numbers is checking that only numeric characters have been supplied (so first strip out any seperating characters such as "-" and then validate for numeric only). Don't forget to also validate the expiry date.<li>
<li>and then for good measure validate all user input server side again as well. Client side technologies may be disabled!!</li>
<li>When developing a form sepcify the max number of characters that can be inserted into the field. You may want to use a little JavaScript to content down the number of characters currently entered.</li>
<li>Use tab indexes. This makes navigating the form using the keyboard so much easier. Consider a form nested within a table where each form field is in a cell with content links in adjacent cells. TAbbing will result in the cursor moving left to right, not necessarily down. Tab index saolves the problem.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>390</wp:post_id>
		<wp:post_date>2003-04-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Testing suggestions</title>
		<link>http://gregs.tcias.co.uk/?p=404</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=404</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Best practive: testing one user at the beginning better than 50 at the end (Steve Krug)</p>

<p>A suggestiong for regulating your day: half hour at least, but ideally an hour before the ened of the day, spend it testing and bug logging</p>

<p>get the client involved in testing as early as possible</p>

<p>Consider testing competitors sites to see what works and doesn't (both in a functional and usability sense)</p>

<p>I like this article so much I decided to keep it close at heart where I can always review to remind me of how to apply optimisation techniques.</p>

<p>Site Optimization Tutorial<br />
Lesson 4<br />
by Paul Boutin</p>

<p>Page 1 ? Site Optimization ? Lesson 4 </p>
--------------------------------------------------------------------------------
<p>How to Time Sites</p>
<p>Now test your own site and all your bench mark sites for download times, and make copious charts of the results. I've tried different methodologies for timing page downloads, and finally hit upon the best trade-off between time required and accuracy of results. To get meaningful comparisons with a minimum amount of effort, use this method:</p>

<p>First, create a list of pages to compare. Then sit down at your test computer, clear the browser cache (unless the test calls for having certain images in cache), and load the first page. Record the time lapse. (I use my trusty dual-button, quad-mode Precise Synchrosport 910 stopwatch). Clear the cache, reset your stopwatch, and load the second page. Clear the cache and load the third, etc. After loading each page once, start over with the first one and go through the list again. After enough trials (I usually do five to seven), throw out the high and low times for each page to account for network hiccups or human error. The three to five remaining times are usually very close together. Compare the average for each site, like this: </p>

<p>Site Trial 1 Trial 2 Trial 3 Trial 4 Trial 5 Trial 6 Average
HotBot 4.68 7.25 9.91 1.18 6.50 0.92 4.90
AltaVista 1.30 1.72 9.84 8.38 9.95 0.75 5.31
Google 1.79 9.71 9.05 3.11 1.01 0.88 3.74 </p>

<p>Why don't I time the first page five times, then the second five times, then the third? Because on the Internet, server peaks and network traffic jams come and go from second to second and minute to minute. By interleaving the contestants' trials, I evenly distribute the problems (whether at one of the sites, on my ISP, or somewhere in between) throughout all the data.</p>

<p>Even then, any site can have a "bad hair day" (when its performance is unusually poor). So you need to perform comparative timings repeatedly, at different times of the day, different times of the week, and different weeks during your project. This also keeps you in-the-know about the competition's changes and improvements ? sometimes a site that was slow in April starts kicking butt in May.</p>

<p>Some developers use automated timing programs to measure or estimate page download time. But these programs only measure file size, or at best they time HTML transfers from the server. This completely ignores browser-specific and OS-specific performance issues, which are a big part of the wait perceived by the people looking at your site.</p>

<p>Those automated programs that tell you how long your page will take to download over a 14-KB modem, or measure the efficiency of your HTML, are nothing compared to a rigorous human tester. Use a real, live person to time what is actually seen on the screen, because that's what you're really trying to improve. My team keeps charts of both automated measurements and real-world tests. The automated results are almost always wrong about which page performs the best for a human reader. The money I spent on those Synchrosport 910 stopwatches for everyone has more than paid off.</p>

<p>Test Early and Often </p>

<p>I have my teams perform timing tests as soon as the first prototype of a site's pages is ready. There's never a better time to catch a problem in the making than right away. You also want to detect superior performance at the soonest possible moment so it can be leveraged or traded off as the project progresses. My teams also validate their HTML from day one through post-launch. That way, they don't end up reorganizing a mess of tags or nested tables right before launch, affecting performance or causing new bugs.</p>

<p>Speed Up Your Server</p>

<p>Of course, it's not just fast HTML that makes a site race. It's also fast servers and a fast network connection. Most webmonkeys aren't in a position to buy their own network connections and machine rooms, but that's not a problem. Let the experts do it instead: investigate co-location sites both in your area and in other geographic areas to find the one that's the best at serving your content to its intended audience. A good way to do this is by looking at the sites they already host and talking to the people who built and work with those sites.</p>

<p>If you're hosting your own site, make sure your server software is tuned for speed. Dean Gaudet's column on tuning the Apache HTTPD server is an oldie, but still a must-read. Right now, we're still throwing wrenches in our own servers, but we figure we'll be the world experts in a few more years.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>404</wp:post_id>
		<wp:post_date>2003-04-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Mass mailouts and mail applications</title>
		<link>http://gregs.tcias.co.uk/?p=405</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=405</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A set of suggestions for dealing with mass mailouts and other email related applications</p>
<ol>
<li>build in mechanism to verify that the scehduled mail out task has occured and executed properly (expected numbers vs actual numbers and log each entry)</li>

<li>consider mail server performance and know how it handles messages it can't send immediately (i.e. if the domain can't be looked up does it queue the message and send another or does it hold them up while waiting to try again, how long is the lag in processing when an incident occurs)</li>
<li>gage the number of messages to be sent</li>
<li>stager mailouts</li>
<li>Presentation in CF do this: &lt;cfset application.mailfrom = """Your name"" <your@mail_address.com>"&gt; and Johnniw Walker will appear in the sent from field in the received email message</li>
<li>Below a suggestion for PHP in the same vane, just a little more elaborate as it provides a set of headers as well to be passed by the mail message. This will stop your message from bouncing from services such as Hotmail.<br />
	<em>$myname = "Info";<br />
	$myemail = "info@teacupinastorm.com";<br />
	<br />
	$contactname = "Greg Stewart";<br />
	$contactemail = "gregs@teacupinastorm.com";<br />
	<br />
	$message = $msg;<br />
	$subject = "Invoice process run";<br />
	<br />
	$headers .= "MIME-Version: 1.0\r\n";<br />
	$headers .= "Content-type: text/html; charset=iso-8859-1\r\n";<br />
	$headers .= "From: ".$myname." &lt;".$myemail."&gt;\r\n";<br />
	$headers .= "To: ".$contactname." &lt;".$contactemail."&gt;\r\n";<br />
	$headers .= "Reply-To: ".$myname." &lt;".$myemail."&gt;\r\n";<br />
	$headers .= "X-Priority: 1\r\n";<br />
	$headers .= "X-MSMail-Priority: High\r\n";<br />
	$headers .= "X-Mailer: Just My Server";<br />
	<br />
	mail($contactemail, $subject, $message, $headers);</em></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>405</wp:post_id>
		<wp:post_date>2003-04-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Web dev links</title>
		<link>http://gregs.tcias.co.uk/?p=406</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=406</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A set of links to good web development sites and topics (all fields)</p>
<ol>
<li>web design - <a href="http://www.zeldman.com/" title="Zeldman">Zeldman</a></li>
<li>web design - <a href="http://www.alistapart.com/index.html" title="A list Apart">A List Apart</a></li>
<li>usability - <a href="http://www.sensible.com/" title="Steve Krug">Steve Krug</a></li>
<li>ia - <a href="http://www.info-arch.org/" title="Community Infrastructure for Information Architects">Community Infrastructure for Information Architects</a></li>
<li>usability - <a href="http://www.useit.com/" title="Alert Box(jakob nielsen)">Alert Box(jakob nielsen)</a></li>
<li>usability - <a href="http://usableweb.com/" title="Usable Web">Usable Web</a></li>
<li>ia - <a href="http://www.semanticstudios.com/publications/semantics/000004.php" title="In defense of search">In defense of search</a></li>
<li>web design - <a href="http://www.readinged.com/" title="Reading Ed">Reading Ed</a></li>
<li>web design - <a href="http://www.webpagesthatsuck.com/" title="Vince Flanders">Vince Flanders</a></li>
<li>css - <a href="http://www.glish.com/css/" title="CSS Layout Techniques: for Fun and Profit">CSS Layout Techniques: for Fun and Profit</a></li>
<li>web design  - <a href="http://www.meyerweb.com/" title="Eric Meyer">Eric Meyer</a></li>
<li>usability - <a href="http://uiaccess.com/" title="UIAccess">UIAccess</a></li>
<li>design - <a href="http://www.digitalthread.com/" title="Digital Thread">Digital Thread</a></li>
<li>searching - <a href="http://searchenginez.com/tutorial.html" title="Web search tutorial">Web search tutorial</a></li>
<li>accessibility - <a href="http://joeclark.org/" title="Joe Clarck">Joe Clarck</a></li>
<li>accessibility test - <a href="http://bobby.watchfire.com/bobby/html/en/index.jsp" title="Accessibility validator">Accessibility validator</a></li>
<li>design - <a href="http://www.webreference.com/authoring/graphics/color/nondesigners/" title="Colour theory">Colour theory</a></li>
<li>usability - <a href="http://wsupsy.psy.twsu.edu/surl/usabilitynews/3s/layout.htm" title="What is the Best Layout for Multiple-Column Web Pages?">What is the Best Layout for Multiple-Column Web Pages?</a></li>
<li>web design - <a href="http://www.humanfactors.com/" title="Human factors">Human factors</a></li>
<li>web design - <a href="http://www.tantek.com/CSS/Examples/boxmodelhack.html" title="CSS hack explanation for width in IE5">CSS hack explanation for width in IE5</a></li>
<li>programming - <a href="http://www.dithered.com/experiments/compression/" title="JavaScript compression">JavaScript compression</a></li>
<li>usability - <a href="http://www.adaptivepath.com/" title="Adaptive Path">Adaptive Path</a></li>
<li>ia - <a href="http://www.jjg.net/ia/visvocab/" title="Jesse James Garret">Jesse James Garret</a> and his diagram definitions</li>
<li>ia - <a href="http://www.boxesandarrows.com/" title="boxes and arrows">boxes and arrows</a></li>
<li>ia - <a href="http://www.newarchitectmag.com/" title="New architect">New architect</a></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>406</wp:post_id>
		<wp:post_date>2003-04-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>About</title>
		<link>http://gregs.tcias.co.uk/about-2/</link>
		<pubDate>Tue, 29 Apr 2008 06:54:40 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/about/</guid>
		<description></description>
		<content:encoded><![CDATA[Welcome to my little corner of the web.

This used to be where I kept track of all those things that caused me much head scratching, but over the last couple of years writing about technology (ColdFusion and web development in particular) has become a little dull and add to the fact that most of the things that do cause me head scratching, have already been solved by others makes this site's original intention kind of redundant and rather than write posts about links, i have decided to change tack.

So starting today (08/03/2009) this site will once again be my corner of the web, where I capture things that I stumble across, find interesting and don't want to forget about, but more so my photos, ideas, thoughts and comments.

I appreciate that some folks that discovered this site via <a title="fullasagoog: Rich Internet Application Goodness" href="http://www.fullasagoog.com/">Full As A Goog</a> might not appreciate have random stuff show up in their Adobe aggregator of choice. So I have asked Geoff to remove the site from the aggregator.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>465</wp:post_id>
		<wp:post_date>2008-04-29 17:54:40</wp:post_date>
		<wp:post_date_gmt>2008-04-29 06:54:40</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>about-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>travel</title>
		<link>http://gregs.tcias.co.uk/travel/</link>
		<pubDate>Sun, 08 Mar 2009 08:36:25 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?page_id=477</guid>
		<description></description>
		<content:encoded><![CDATA[Since I am currently traveling I thought I might as well use one of those services to map out where I have been, so here goes...

<div><img src="http://chart.apis.google.com/chart?cht=t&chs=440x220&chco=ffffff,3399ff,3399ff&chf=bg,s,eaf7fe&chtm=world&chld=AUATBSBECZDKEGFRGEDEVAILITLILUMQMCNLNZRUESCHUAGBUS&chd=s:0000000000000000000000000" alt="Make yours @ BigHugeLabs.com"><br><a href="http://bighugelabs.com/flickr/map.php" style="font-size: 75%">Make yours @ BigHugeLabs.com</a></div>

... pretty pathetic, after 37 years on this globe. :S]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>477</wp:post_id>
		<wp:post_date>2009-03-08 04:36:25</wp:post_date>
		<wp:post_date_gmt>2009-03-08 08:36:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>travel</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>test</title>
		<link>http://gregs.tcias.co.uk/?attachment_id=1133</link>
		<pubDate>Tue, 14 Aug 2012 11:58:20 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/wp-content/uploads/2012/08/test.html</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1133</wp:post_id>
		<wp:post_date>2012-08-14 12:58:20</wp:post_date>
		<wp:post_date_gmt>2012-08-14 11:58:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://gregs.tcias.co.uk/wp-content/uploads/2012/08/test.html</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/test.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL Password hashing and PHP</title>
		<link>http://gregs.tcias.co.uk/2005/06/09/password-hashing-and-php/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=120</guid>
		<description></description>
		<content:encoded><![CDATA[I recently upgraded MySQL from version 3.x to 4.1.12 and when I tried to access one of my web apps that was using the new database server it returned an error. I didn't make a note of the error at the time, but it was squarely pointing at an authentication problem. I remembered <a href="http://blog.daemon.com.au/archives/000304.html" title="Upgrading mySQL from 4.0 to 4.1">a post on the Daemonite blog</a> on the topic which provided the solution. Since I had re-created from scratch the user accounts that accessed the database, MySQL had used it's new password hash algorithm, but the PHP (at least version 4.3.11) <strong>mysql</strong> extension was not able to apply it. So the solution is thankfully straightforward, just reset the password using the OLD_PASSWORD function instead of just PASSWORD. Here is what you would type from within the MySQL client:

<code>[sql]UPDATE mysql.user
SET password=OLD_PASSWORD('youPassword')
WHERE user='yourUser'
AND host='localhost';[/sql]</code>

More information can be found here:
<ul>
	<li><a href="http://www.digitalpeer.com/id/mysql" title="MySql &gt;= 4.1 Client does not support authentication protocol...">MySql &gt;= 4.1 Client does not support authentication protocol...</a></li>
	<li><a href="http://dev.mysql.com/doc/mysql/en/password-hashing.html" title="5.6.9. Password Hashing in MySQL 4.1">5.6.9. Password Hashing in MySQL 4.1</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>120</wp:post_id>
		<wp:post_date>2005-06-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>password-hashing-and-php</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>mach-ii and form validation</title>
		<link>http://gregs.tcias.co.uk/?p=134</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=134</guid>
		<description></description>
		<content:encoded><![CDATA[I have just completed my 4th mach-ii application at work and once and for all I wanted to jot down, how I implemented the validation of submitted form data.

For starters you need the validateFormObject filter which you can find <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/openxcf/machii/filters/ValidateFormObject.cfc?rev=HEAD" title="Openxcf: ValidateFormObject">here</a> and extract it to your applications filter folder.

You'll need to add/register this Filter with your mach-ii.xml file as follows (bearing in mind that the type is the full qualified path to validateFormObject.cfc):

[code]<event-filter name="validateFormObject" type="filters.ValidateFormObject"></event-filter>[/code]

OK so here is how it works a user submits the form, a new event is announced, in this example <strong>doAdd</strong>, and this event looks a little as follows in my mach-ii.xml.

[code]<event-handler event="doAdd" access="public">
  <event-bean name="udvBean" type="model.udv.udv" fields="udvalue,udfvlst,uddesc" />
  <filter name="validateFormObject">
    <parameter name="formObjectName" value="udvBean"/>
    <parameter name="invalidEvent" value="formHasInvalidValues"/>
    <parameter name="clearEventQueue" value="true"/>
  </filter>
</event-handler>

<notify listener="UDVListener" method="addItem">
</notify>[/code]

So the even is announced and populates a bean using the &lt;event-bean&gt; declaration. This beans has getters and setters for all of the fields passed in, i.e. udvalue,udfvlst,uddesc. It also has a couple of getter and setter methods for a structure of errors and also a validate method. Below is a shortened snapshot of the bean in question.

[code]<cfcomponent displayname="udv component" hint="I hold all the UDV content" output="false">
<cffunction name="init" access="public" displayname="Initialise" hint="I initialise the UDV component" returntype="udv" output="false">
<cfargument name="udvalue" required="false" displayname="UD Value" hint="I hold the value for UD value" type="string"/>
<cfargument name="udfvlst" required="false" displayname="UDF Value List" hint="I hold the value for UDF value list" type="string"/>
<cfargument name="uddesc" required="false" displayname="UD Description" hint="I hold the value for UD Description" type="string"/>
  <cfscript>
    variables.instance = structNew();
    setUDValue(arguments.udvalue);
    setUdfvlst(arguments.udfvlst);
    setUddesc(arguments.uddesc);
    variables.myErrors = structNew();
  </cfscript>
<cfreturn this/>

</cffunction>
<!--- GETTERS/SETTERS --->
<cffunction name="getUDValue" access="public" returntype="string" output="false" hint="I return udvalue">
<cfreturn variables.instance.UDValue/>
</cffunction>

<cffunction name="setUDValue" access="public" returntype="void" output="false" hint="I return udvalue">
  <cfargument name="udvalue" type="string" required="true">
  <cfset variables.instance.udvalue="arguments.udvalue">
</cffunction>
... more getter and setters ...

<cffunction name="getErrors" access="public" returntype="struct" output="false">
  <cfreturn variables.instance.myErrors/>
</cffunction>
<cffunction name="setErrors" access="package" returntype="void" output="false">
  <cfargument name="myErrors" type="struct" required="true"/>
  <cfset variables.instance.myerrors=arguments.myErrors/>
</cffunction>

<!--- VALIDATE --->
<cffunction name="validate" access="public" output="false" returntype="boolean" hint="I validate this bean">
  <cfset var formerrors="structNew()"/>
  <cfset var isvalid="true"/>
  <cfif>
    <cfset formerrors.uddesc="UD value description can't be empty"/>
    <cfset isvalid="false"/>
  </cfif>
  <cfif>
    <cfset formerrors.udvalue="UD value can't be empty" />
    <cfset isvalid="false"'/>
  </cfif>
<cfreturn isValid/>
</cffunction>
</cfcomponent>[/code]

The validate method is the one that validateFormObject will call. Inside this method you can then do whatever type of validation you need. I know that the above could have been done by using another built-in filter (namely RequiredFieldsFilter), but this is just an example of using this filter. Here we carry out our validation and populate a structure with our errors (using <strong>setErrors()</strong>). The filter itself expects to receive a boolean value so if any errors were encountered we set the isValid flag to false (by default it is set to true) and return that, which causes the event queue to be cleared and a new event to be announced: formHasInvalidValues.

[code]<event-handler event="formHasInvalidValues" access="private">
  <view-page name="showFormErrors" contentkey="request.pageContent.mainBody"/>
  <announce event="layoutPage" copyeventargs="true"/>
</event-handler>[/code]

That event simply spits out the errors that were generated to a page.

<code> </code>

Sorry the form you just submitted contained the following errors:

<cfscript>
tmpyStruct = request.event.getArg('udvBean').getErrors();
WriteOutput("
<ol>");
for (idx in tmpyStruct) {
WriteOutput("
	<li>"&amp;tmpyStruct[idx]&amp;"</li>
");
}
WriteOutput("</ol>
");
<a href="http://gregs.teacupinastorm.com/wp-admin/%3Ccfoutput%3E#cgi.HTTP_REFERER#%3C/cfoutput%3E">Click here</a> to return to previous page.
</cfscript>[/code]

If on the other hand no error were encountered, true is returned and processing continues by requesting the addItem method from our listener.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>134</wp:post_id>
		<wp:post_date>2005-03-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>A revelation</title>
		<link>http://gregs.tcias.co.uk/?p=135</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=135</guid>
		<description></description>
		<content:encoded><![CDATA[When using mach-ii it is important to know this: only your listeners should be aware of the framework itself (<a href="http://www.mossyblog.com/archives/340.cfm" title="Mach-II: Listeners vs Managers">this post</a> raised the topic a while back). All your other objects should not know anything about it! You should be able to lift your BO, DAOs and whatever other objects, sometimes also referred to as the "Business logic / Data Layer", you have out of the mach-ii application and drop them seemlessly into another framework and just create the hooks that the listeners represent in mach-ii in say circuits in fusebox.

So what does this means in terms of code? Well let's look at the mach-ii.xml file and see how the controller (that's the technical term for the mach-ii.xml file) calls the listener, which in turn invokes the relevant part of the application.

[code]<event-handler event="cms.content.doAction" access="public">
  <event-bean name="contentBean" type="webapps.gregs.model.main.content" fields="contentID,title,articleContent,name,categoryID,teaser,publicationDate,expiryDate,dateAdded,metaData,isPublished"/>
  <filter name="validateFormObject">
    <parameter name="formObjectName" value="contentBean"/>
    <parameter name="invalidEvent" value="formHasInvalidValues"/>
    <parameter name="clearEventQueue" value="true"/>
  </filter>
</event-handler>

<notify listener="contentListener" method="setContent">
</notify>[/code]
This segment of the controller is called when I submit an item to the CMS. The first part deals with storing the submitted content in a bean (called: contentBean) and this submission is validated before a setContent method in my contentListener is notified. If the validation fails (see my previous post on validating form submissions) then a new event is announced otherwise we continue with the setContent method in our contentListener.[code]<cffunction name="setContentByTitle" access="public" returntype="void" output="false" displayname="Set Content By ID" hint="I return a query containing a single Content identified by it's Title">
<cfargument name="event" type="MachII.framework.Event" required="yes" displayname="Event" hint="I am the current event, containing a title field that identifies this content."></cfargument></cffunction>

<cfset content="arguments.event.getArg("></cfset>

[/code]

As you can see I pull the contentBean that was created with the help of the event-bean declaration out of the event args and store it as a local variable (content) and pass that to my application layer (variables.contentDAO.update(content) [which was created when the contentListener was initialised]). It would have been easier to just call variables.contentDAO.udpate() and then inside that method used:

[code]<cfargument name="event" type="MachII.framework.Event" required="yes" displayname="Event" hint="I am the current event, containing a title field that identifies this content.">[/code]</cfargument>

But that would have tied my implementation to the framework, because the contenDAO object would have to been aware of the MachII.framework.Event object. Yet another penny drops.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>135</wp:post_id>
		<wp:post_date>2005-03-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Creating a Google like auth token</title>
		<link>http://gregs.tcias.co.uk/?p=183</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=474</guid>
		<description></description>
		<content:encoded><![CDATA[... using CF

[code]
<!--- set the token --->
<cfset attributes.userid="15588/">The new auth variable is now a comma delimited list of values. Since we have two values in the example (userid and accountid), you'll have a comma separated list of two values.<cfset attributes.accountid="123456/">
<cfset attributes.seed="wibble&amp;wobble">
<!--- encrypt them and create a string that we can use in the URL --->
<cfset auth="toBase64(encrypt(attributes.userId">
<cfdump var="#auth#">
<!--- on any pages that needs to evaluate the token --->
<!--- convert our string back ito a binary object, then back to a string so can decrypt it --->
<cfset auth="decrypt(toString(toBinary(duplicate(auth))),">
<cfdump var="#auth#">
[/code]</cfdump></cfset></cfdump></cfset></cfset></cfset></cfset>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date>2008-05-12 03:27:09</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creative thinking - not brilliant thinking</title>
		<link>http://gregs.tcias.co.uk/2007/08/08/creative-thinking-not-brilliant-thinking/</link>
		<pubDate>Wed, 08 Aug 2007 01:03:44 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=454</guid>
		<description></description>
		<content:encoded><![CDATA[<a title="Creative thinking hacks" href="http://www.scottberkun.com/essays/56-creative-thinking-hacks/">For posterity</a>, courtesy of <a title="My secret life as a spaghetti coder" href="http://www.codeodor.com/index.cfm">Sammy Larbi</a>. <a title="My secret life as a spaghetti coder" href="http://www.codeodor.com/index.cfm">
</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>449</wp:post_id>
		<wp:post_date>2007-08-08 12:03:44</wp:post_date>
		<wp:post_date_gmt>2007-08-08 01:03:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creative-thinking-not-brilliant-thinking</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Barcelona</title>
		<link>http://gregs.tcias.co.uk/2008/01/04/barcelona/</link>
		<pubDate>Fri, 04 Jan 2008 03:20:25 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=467</guid>
		<description></description>
		<content:encoded><![CDATA[[gallery=1]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>455</wp:post_id>
		<wp:post_date>2008-01-04 14:20:25</wp:post_date>
		<wp:post_date_gmt>2008-01-04 03:20:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>barcelona</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Big Chill festival</title>
		<link>http://gregs.tcias.co.uk/2008/01/04/big-chill-fetival/</link>
		<pubDate>Fri, 04 Jan 2008 03:21:01 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/2008/01/04/big-chill-fetival/</guid>
		<description></description>
		<content:encoded><![CDATA[[gallery=2]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>456</wp:post_id>
		<wp:post_date>2008-01-04 14:21:01</wp:post_date>
		<wp:post_date_gmt>2008-01-04 03:21:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>big-chill-fetival</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Matt &amp; Kerry&#039;s wedding</title>
		<link>http://gregs.tcias.co.uk/2008/01/04/matt-kerrys-wedding/</link>
		<pubDate>Fri, 04 Jan 2008 03:22:42 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=469</guid>
		<description></description>
		<content:encoded><![CDATA[[gallery=3]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date>2008-01-04 14:22:42</wp:post_date>
		<wp:post_date_gmt>2008-01-04 03:22:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>matt-kerrys-wedding</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>San Sebastian &amp; Bilbao</title>
		<link>http://gregs.tcias.co.uk/2008/01/04/san-sebastian-bilbao/</link>
		<pubDate>Fri, 04 Jan 2008 03:23:47 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=470</guid>
		<description></description>
		<content:encoded><![CDATA[[gallery=4]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>458</wp:post_id>
		<wp:post_date>2008-01-04 14:23:47</wp:post_date>
		<wp:post_date_gmt>2008-01-04 03:23:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>san-sebastian-bilbao</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vienna</title>
		<link>http://gregs.tcias.co.uk/2008/01/04/vienna-2/</link>
		<pubDate>Fri, 04 Jan 2008 03:24:20 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/2008/01/04/vienna-2/</guid>
		<description></description>
		<content:encoded><![CDATA[[gallery=5]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>459</wp:post_id>
		<wp:post_date>2008-01-04 14:24:20</wp:post_date>
		<wp:post_date_gmt>2008-01-04 03:24:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vienna-2</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NSFW but funny as...</title>
		<link>http://gregs.tcias.co.uk/?p=474</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=474</guid>
		<description></description>
		<content:encoded><![CDATA[<a title=" F*** My Life - My life sucks but I don't give a f***" href="http://www.fmylife.com/top">F*** My Life - My life sucks but I don't give a f***</a> - Thanks Patrick!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>474</wp:post_id>
		<wp:post_date>2009-03-07 15:25:26</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Save the sea kittens</title>
		<link>http://gregs.tcias.co.uk/2009/03/10/save-the-sea-kittens/</link>
		<pubDate>Wed, 11 Mar 2009 00:55:31 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=478</guid>
		<description></description>
		<content:encoded><![CDATA[You can tell I am sleep deprived.

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="300" height="354" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.peta.org/sea_kittens/_swf/sea_kitten.swf?c=tu&amp;c1=1&amp;c2=2&amp;c3=1&amp;c7=1&amp;n=Lahnie%20under%20the%20sea&amp;d=peta.org&amp;tc=skembed" /><param name="wmode" value="transparent" /><embed type="application/x-shockwave-flash" width="300" height="354" src="http://www.peta.org/sea_kittens/_swf/sea_kitten.swf?c=tu&amp;c1=1&amp;c2=2&amp;c3=1&amp;c7=1&amp;n=Lahnie%20under%20the%20sea&amp;d=peta.org&amp;tc=skembed" wmode="transparent"></embed></object>
<a href="http://www.peta.org/sea_kittens/index.asp?c=skembed">Create Your Own Sea Kitten at peta.org</a>!

And the RL insipration...

<img src="http://farm1.static.flickr.com/208/511572181_cfca295f8d.jpg?v=0" alt="Lahnie with a Tiara" />
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>478</wp:post_id>
		<wp:post_date>2009-03-10 20:55:31</wp:post_date>
		<wp:post_date_gmt>2009-03-11 00:55:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>save-the-sea-kittens</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQL connection from Groovy</title>
		<link>http://gregs.tcias.co.uk/?p=522</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=522</guid>
		<description></description>
		<content:encoded><![CDATA[In order to connect to your SQL server you will first need to download JTDS, which you can grab from <a href="http://jtds.sourceforge.net/faq.html">here</a>. Once downloaded just copy it /usr/share/groovy/lib or if you can always create a symbolic link:

[code]
sudo ln -s /download/destination/path/jtds-1.2.5-dist/jtds-1.2.5.jar /your/destination/jtds-1.2.5.jar
[/code]

To get started, just open up your groovyConsole and import and create the connection string:

[code]
import groovy.sql.Sql
sql = Sql.newInstance("jdbc:jtds:sqlserver://ipaddress:port/database;instance=instanceName", "username", "password", "net.sourceforge.jtds.jdbc.Driver")
[/code]

If you don't uses SQL server instances, just leave off 

[code]
;instance=instanceName
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>522</wp:post_id>
		<wp:post_date>2010-09-21 16:19:43</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My tool set</title>
		<link>http://gregs.tcias.co.uk/?p=1106</link>
		<pubDate>Fri, 11 May 2012 06:32:10 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1106</guid>
		<description></description>
		<content:encoded><![CDATA[I have been asked a couple of times now about my set up and the tools I use for my day to day work, that I thought i'd put together a quick post. I am a Mac user so these tools are specific to that platform, if you know of any windows equivalents, pleas feel free to leave a comment.

General tools/languages
Homebrew
Ruby
Node.js + npm
Xcode
VMware (or virtualbox)

Browsers (in order of importance)
Google chrome canary
Google chrome
Webkit
Firefox
Safari
IE 9
Opera

Debugging
Web inspector
Weinre/ osx version
Adobe shadow

Editor
RubyMine

Utilities
CSS profiling analysis script
Start canary in outline mode gist
Sass
Android sdk
Grunt.js
Modernizr
Html5 boilerplate
Skeleton.css]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1106</wp:post_id>
		<wp:post_date>2012-05-11 07:32:10</wp:post_date>
		<wp:post_date_gmt>2012-05-11 06:32:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fronted"><![CDATA[Fronted]]></category>
		<category domain="post_tag" nicename="homebrew"><![CDATA[homebrew]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Code review</title>
		<link>http://gregs.tcias.co.uk/?p=1146</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1146</guid>
		<description></description>
		<content:encoded><![CDATA[From



<pre><code>isFullRoom:function() {
    var isFull = false,
        guests = this.model.get('numberOfAdults') + this.model.get('numberOfChildren');
    if (guests &gt;= sabre_mobile.constants.values.MAX_NUMBER_OF_GUESTS) {
       isFull=!isFull;
    }
    return isFull;
}
</code></pre>

To



<pre><code>isFullRoom:function() {
    return this.model.get('numberOfAdults') + this.model.get('numberOfChildren') &gt;= sabre_mobile.constants.values.MAX_NUMBER_OF_GUESTS;
}
</code></pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1146</wp:post_id>
		<wp:post_date>2012-09-28 15:49:59</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Javascript objects</title>
		<link>http://gregs.tcias.co.uk/?p=1167</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1167</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>Object creation:</strong></p>

<pre><code>function wibble(x) {
    this.x = x
    this.foo = function () {
        return this.x;
    }
}
</code></pre>

<p>If you instantiate he function with the new keyword, we tell JS to treat the function like a constructor.</p>

<pre><code>var wobble = new wibble(10);
console.log(wobble.foo()); // outputs 10;
</code></pre>

<p><strong>Prototype</strong>
While each new object has a foo() method it's not very OO, as it's redefined for each new object. However you can use the prototype property of the function to extend the original object.</p>

<pre><code>function wibble(x) {
    this.x = x
}

wibble.prototype.foo = function() {
    return this.x;    
};

var wobble = new wibble(15);
console.log(wobble.foo()); // outputs 15
</code></pre>

<p>Object literal:</p>

<pre><code>var myObj = {
    tmp: 1,
    foo: function (x) {
        console.log(x+(++this.tmp));
    }
};

myObj.tmp; // outputs 1
myObj.foo(3); //outputs 5
myObj.foo(3); //outputs 6
</code></pre>

<p>No need for the new keyword.</p>

<p>Closure:</p>

<pre><code>function wibble() {
    var tmp = 1;
    foo = function (x) {
        console.log(x+(++tmp));
    }
    return foo;
}

bar = wibble();
bar(3); // outputs 5
bar(3); // outputs 6
</code></pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1167</wp:post_id>
		<wp:post_date>2012-12-22 14:45:08</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What is the prototype chain?</title>
		<link>http://gregs.tcias.co.uk/?p=1169</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1169</guid>
		<description></description>
		<content:encoded><![CDATA[
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1169</wp:post_id>
		<wp:post_date>2012-12-22 14:45:50</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What are .call() and .apply()</title>
		<link>http://gregs.tcias.co.uk/?p=1171</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1171</guid>
		<description></description>
		<content:encoded><![CDATA[
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1171</wp:post_id>
		<wp:post_date>2012-12-22 14:46:30</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>This, that and the other</title>
		<link>http://gregs.tcias.co.uk/?p=1173</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1173</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Explain all of the different scope bits</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1173</wp:post_id>
		<wp:post_date>2012-12-22 14:48:02</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Module pattern</title>
		<link>http://gregs.tcias.co.uk/?p=1176</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1176</guid>
		<description></description>
		<content:encoded><![CDATA[<p>All about the module pattern in JavaScript</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1176</wp:post_id>
		<wp:post_date>2012-12-22 14:48:58</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JavaScript: Automatic submit using onChange</title>
		<link>http://gregs.tcias.co.uk/2000/10/17/javascript-automatic-submit-using-onchange/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=264</guid>
		<description></description>
		<content:encoded><![CDATA[To make life a little bit easier for end users when they use our drop down menus in forms we decided to implement a automatic form submission when they had made their choice. This is an easy feature to implement. The first thing to do is to add the <em>onChange</em> event handler to your form and in the case of a drop down menu, you add this to the opening &lt;SELECT&gt; tag, as indicated below:

[code]

<form method="post"> <select name="{your_select_name}"> <option value="-1">Select something</option> <option value="1">Option 1</option> </select> </form>[/code]

Please note that when use the <em>onChange</em> event handler you have to specify the function that is going to be executed. In this case we are going to write a function that submits the form. This is done as follows:

[code]function AutoSubmit() {
document.{your_form_name}.submit();
}[/code]

Not much this function is there? Basically we tell the browser to submit the form on this page, when a change to our select box takes place. Simple, when you know how!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date>2000-10-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-automatic-submit-using-onchange</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to do multiple inserts</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/how-to-do-multiple-inserts/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=265</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>How to do multiple inserts</h3>
<p class="1">Just recently I was been working on an application, where at one stage the user had to enter multiple records from one form into one table, ideally and for ease of use, in one go. In the following I will be describing how I accomplished this.</p>

<p class="1">The best way to explain this is by way of an example (note: the sample Database and code can be downloaded at the end of this tutorial). First off we create a form where a user can specify his name and the Operating systems he knows, for which the code looks like this:</p>

<p class="1">
<pre>
&lt;cfquery datasource="test" name="SelectOS"&gt;
Select OS_ID, OS_Name
From OS
&lt;/cfquery&gt;

&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Multiple Inserts&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;form action="multipleinserts.cfm?Insert=Yes" method="post"&gt;
&lt;table&gt;
&lt;tr align="center"&gt;&lt;td colspan="2"&gt;&lt;b&gt;Enter details&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;User Name:&lt;/td&gt;
&lt;td align="left"&gt;&lt;input type="text" name="User_Name" size="15"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right" valign="top"&gt;Select the OS(s) you know:&lt;/td&gt;
&lt;td align="left"&gt;&lt;select multiple name="OS_ID"&gt;
&lt;cfoutput query="SelectOS"&gt;
&lt;option value="#OS_ID#"&gt;#OS_Name#&lt;/option&gt;
&lt;/cfoutput&gt;
&lt;/select&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr align="center"&gt;
&lt;td colspan="2"&gt;
&lt;pre&gt;
&lt;input type="submit" value="Insert Multiple Records"&gt;
&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>
</p>

<p class="1">Let's take a quick look at this code. First off I run a query that retrieves the list of OSs stored in the database, in order to populate the drop down list from which the user will make his selection. Then I have added the form tag, which as an action calls the same page again and specifies the parameter <i>Insert="yes"</i> (more about this in a moment). Next for estical reasons I create a table. The first row represents the table header. The second row enables the user to enter his name. The third row is the drop down menu, which in turn is populated the results of the query I ran at the beginning of the page. In order to specify multiple selects you have to specify the option <i>multiple</i>, when you first define your select tag. The remaining parameters are the same as normally used. The last row is for the submit button.</p>

<p class="1">So far so good, the user specifies his name and selects the OSs he knows by clicking on the relevant ones and pressing the Ctrl key at the same time. The he hits the submit button. Now we turn our attention to the structure of our page and the <i>Insert="yes"</i> parameter. Take a look at the following section of code:</p>

<p class="1">
<pre>
&lt;cfif #ParameterExists(Insert)# IS "Yes"&gt;
The Insert statement will go here
&lt;cfelse&gt;
The form code discussed above goes here
&lt;/cfif&gt;
</pre>
</p>

<p class="1">What I have done here is made use of the &lt;cfif&gt; tag. If the parameter Insert exists the page will run the code underneath that statement, else it will display the form. I.e. when you first load the page it will display the form, because the URL will look something like this <i>http://127.0.0.1/multipleinserts.cfm</i>. However once the user has submitted his information, the URL will look something like this <i>http://127.0.0.1/multipleinserts.cfm?Insert=yes</i>. The URL passes the parameter <i>Insert</i> to the page called and specifies its value as <i>yes</i>. This is then interpreted by the &lt;cfif&gt; tag, which in turn executes the code stored there. So far everything clear? (Probably not, but you can read up on the &lt;cfif&gt; tag in the Cold Fusion documentation and I might even do a small tutorial on it sometime soon). Onwards to our Insert code.</p>

<p class="1">
<pre>
&lt;CFLOOP INDEX="ListElement" LIST="#Form.OS_ID#"&gt;

&lt;CFQUERY Name="#ListElement#" DataSource="test"&gt;
   INSERT INTO User_Details (User_Name,OS_ID)
   VALUES ('#Form.User_Name#','#ListElement#')
&lt;/CFQUERY&gt;

&lt;/CFLOOP&gt;

&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Multiple Inserts&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;center&gt;&lt;h3&gt;Your details have successfully been entered!&lt;/h3&gt;&lt;/center&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

<p class="1">Right now we come to the interesting bit. Here we make use of th &lt;cfloop&gt; tag, because we are going to loop over our insert statement for as many times as OSs have been specified (for more information on &lt;cfloop&gt;, please consult your Cold Fusion documentation). OK, so what happens? First off we define an index for our &lt;cfloop&gt; and this index will be composed of a list of items specified by the selection. If we were to look at the code at this point in time it would look something like this (depending on the selection of course):</p>

<p class="1">
<pre>
&lt;CFLOOP INDEX="ListElement" LIST="1,2,4,6"&gt;
</pre>
</p>

<p class="1">1,2,4,6 are the OS_ID values which I have specified in the drop down list from the form to be stored in the table. In this case we have four inserts to carry out. Next you'll find the Insert query, whose name has to be defined dynamically as it has to be unique. You can also see that it takes its name from the list element that it is currently processing, so in the first instance its name will be <i>1</i>. The insert statement will insert the user name specified in the form in the <i>User_Name</i> field and the list element in the <i>OS_ID</i> field in the table <i>User_Details</i>. This will continue until all list elements have been processed. In this example this will result in four records being added to the <i>User_Details</i> table. The following HTML code simply announces that the information has been processed.</p>

<p class="1">Well that's it. I hope you found this information useful, all that is left now is to provide you with the link to download the sampe code and database. <a href="http://www.armagossa.com/content.cfm?File=Yes&content_ID=55">MultipleInserts.Zip</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-do-multiple-inserts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>How-to retrieve a random record</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/how-to-retrieve-a-random-record/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=266</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
One of the features on our web site is the quote of the day. This quote is selected at random from the quote database. In order to be able to do this you have to use the RandRange function, which selects a random integer between two values. The first value is one as it represents the first record in the table and the second is the integer generated using the Count() function on the quote table. That way I make sure that no value is generated which is greater than the actual number of records stored. <strong>BTW this assumes that you don't delete any records</strong></p>
<p>
Code:<br />
<em>&lt;cfquery datasource="MyDatasource" name="CountQuoteID"&gt;<br />
Select Count(Quote_ID) as Total<br />
From Quote<br />
&lt;/cfquery&gt;</em>
</p>
<p>Next I stored that result in a variable called TotalCount.</p>
<p>Code:<br />
<em>&lt;cfoutput query="CountQuoteID"&gt;<br />
&lt;cfset TotalCount=#Total#&gt;<br />
&lt;/cfoutput&gt;</em>
</p>
<p>Then I could proceed and create the RandRange function based on 1 and TotalCount, which is stored as RandFinal.</p>
<p>Code:<br />
<em>&lt;cfset RandFinal=RandRAnge(1, #TotalCount#)&gt;</em></p>
<p>This variable I use in my conditional query which retrives the actual quote where the unique identifier = RandFinal.</p>
<p>Code:<br />
<em>&lt;cfquery datasource="MyDatasource" name="GetRandomQuote"&gt;<br />
Select Quote_Text <br />
From Quote<br />
Where quote_id = #RandFinal#<br />
&lt;/cfquery&gt;</em></p>
<p>Next all you need to do is Output the result in your page and format the output accordingly.</p>
<p>Code:<br />
<em>&lt;cfoutput query="GetRandomQuote"&gt;<br />
#Quote_Text#<br />
&lt;/cfoutput&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>266</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-retrieve-a-random-record</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Upsizing Access 97 to SQL server 6.5 Part III</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/upsizing-access-97-to-sql-server-65-part-iii/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Upsizing Access 97 to SQL server 6.5 Part III</h3>
<p class="1">After I recently upsized an Access database to SQL server which powers our quote and order log users were experiencing certain difficulties when inserting and updating quotes and orders. This was down to the syntax I was using in my insert and update statements and the fact that SQl server is a lot stricter at enforcing field formats. I use to use the format below to insert data into my tables.</p>
<p class="1">Code:<br />
<pre>
&lt;cfquery datasource="MySource" Name="MyQuery"&gt;
Insert into Table
MyField = '#Form.MyField#'
&lt;/cfquery&gt;
</pre>
</p>
<p class="1">As it turns out using the '#MyField#' format for inserting or updating data means that you are inserting a string of a VarChar field type and when you try to update Integer fields SQL server rejects the update. So you need to remove the single quotation marks to update Integer fields, like shown below:</p>
<p class="1">Code:<br />
<pre>
&lt;cfquery datasource="MySource" Name="MyQuery"&gt;
Insert into Table
MyField = #Form.MyField#
&lt;/cfquery&gt;
</pre>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upsizing-access-97-to-sql-server-65-part-iii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Upsizing Access 97 to SQL server 6.5 Part IV</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/upsizing-access-97-to-sql-server-65-part-iv/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=269</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Upsizing Access 97 to SQL server 6.5 Part IV</h3>
<p class="1">I have come across another problem when upsizing my database to SQL from Access. This one pertains to a select statement. This is the code I used to extract the last record in a table.</p>
<p class="1">Code:<br />
<pre>
&lt;cfquery datasource="DataSourceName" name="QueryName"&gt;
SELECT LAST(TableName.FieldName) AS LastOfFieldName FROM TableName
&lt;/cfquery&gt;
</pre>
</p>
<p class="1">As you can see I used the Last function and this works fine in Access, but SQL server doesn't recognise this statement and returns an error. So I had to use a slightly more convoluted way to get the last record.</p>
<p class="1">Code:<br />
<pre>
&lt;cfquery datasource="DataSourceName" name="QueryName" maxrows="1"&gt;
Select Tablename.FieldName From TableName
Order by TableName.FieldName DESC
&lt;/cfquery&gt;
</pre>
</p>
<p class="1">
This query selects all the fields and orders them in descending order. You then use the <i>maxrows=</i> statement to limit the output to the first field it retrieves.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>269</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upsizing-access-97-to-sql-server-65-part-iv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>How to use cfapplication</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/how-to-use-cfapplication/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=270</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>How to use cfapplication</h3>
<p class="1">Ever wondered what the <i>cfapplication</i> tag and <i>application.cfm</i> page were for? How to implement it? How to use it? Well I did and that for quite some time (give me a break I am beginner).</p>
<p class="1">Well as I understand it, and you have to appreciate that this is my first venture into cfapplication and application.cfm, it allows you to store a set of global variables in one page that all other pages will call. Basically the mother of all templates. I am sure you do a lot more with it (as the documentation indicates) and I intend to document this is as I delve deeper into the subject matter. For starters though lets look at creating the application.cfm page, implementing the cfapplication tag and defining some global variables that your application will use.</p>

<p class="1">Code:<br />
<pre>&lt;cfapplication name="yourApp"&gt;

&lt;!-- Set datasource --&gt;
&lt;cfset dsn = "YourDSN"&gt;

&lt;!-- Set some global variables --&gt;
&lt;cfset http="cfdocs/yourDirectory/"&gt;
</pre>
</p>
<p class="1">The first thing you need to do is specify the application name and this is defined in the <i>cfapplication</i> tag using the name option. Then you can go ahead and specify your global variables using the <i>cfset</i> tag, the same way you would if you were specifying variables for individual pages.</p>
<p class="1">In this example I have set dsn equal to the datasource name configured in Cold Fusion Administrator (why? so that if I should make any changes to the naming convention all I have to do is edit this line and it applies it to the all the other pages. The other variable defines the logical path of the directory.</p>
<p class="1">This bit of code you know save as <i>application.cfm</i> and include it into the root of your application directory. Calling these global variables is very simple, just look at the following example:</p>
<p class="1">Code:<br />
<pre>
&lt;cfquery datasource="#dsn#" name="YourQueryName"&gt;
SELECT *
FROM YourTable
&lt;/cfquery&gt;
</pre>
</p>
<p class="1">Simple, eh?!?</p>
<p class="1">Please note though that I have had some difficulties embedding these variables in JavaScript pages. Not sure why it was doing that or more precisely, not doing what it should be doing. However as soon as I have figured that one out I'll let you know!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>270</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-use-cfapplication</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JRun 2.3.3 installation problems (Win32)</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/jrun-233-installation-problems-win32/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=271</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>JRun 2.3.3 installation problems (Win32)</h3>
<p class="1">One of our projects here at <a href="http://www.nemas.com/">Nemas</a> required the use of <i>servlets</i>. In order to have a play with <i>servlets</i> before the project got under way in earnest, I decided to install JRun. Once the installation was completed I tested the installation and to my joy everything was working, or so I thought. For once I tried to execute a <i>.cfm</i> template I got an error. As it turned out all the mappings for <i>.cfm</i> has been re-mapped away from the Cold Fusion Application Server and mapped to the JRun server. Very annoying.</p>
<p class="1">This document is now going to talk you through fixing this problem. First off you need to locate the <i>rules.properties</i> file, which is usually located in the<i> &lt;drive letter&gt;:JRunjsm-defaultservicespropetiescfanywhere</i> directory. Open this file up in your text editor of choice.</p>
<p class="1">Now all you need to do is remove the following line:</p>
<p class="1"><font size="-2"><i>*.cfm=com.livesoftware/cfanywhere.CFServlet</i></font></p>
<p class="1">Save the file. In order for these changes to take effect you will need to stop and restart certain services. Go to the <b>Control Panel</b> and choose services. First stop the following services, then after all have been stopped, re-start them.</p>
<p class="1"><li>All Cold Fusion services
<li>JRun service
<li>IIS service (if you are running IIS else stop the web server service that you run on your box)
</p>
<p class="1">It is important that you stop the services through the <b>Services</b> icon. Stopping IIS through the MMC will not bring about the necessary changes.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>271</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jrun-233-installation-problems-win32</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Generating dynamic tables with varying row colours</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/generating-dynamic-tables-with-varying-row-colours/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=272</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Generating dynamic tables with varying row colours</h3>
<p class="1">I always wanted to know how in Coldfusion administrator the rows in a table were alternating in colour. Well I came across this article by Adam Maloney on Defusion (<a href="http://www.defusion.com/">http://www.defusion.com/</a>) [<a href="http://www.defusion.com/articles/index.cfm?ArticleID=54">Article 54</a>]</p>
<p class="1">
<i>This trick is relatively simple. Using the query.currentrow variable, and some simple math, you can have a nifty table:</p>
<p class="1">
<pre>
&lt;CFOUTPUT QUERY="myquery"&gt;
  &lt;CFIF currentrow mod 2&gt;
    &lt;TR color="color1"...&gt;&lt;/TR&gt;
  &lt;CFELSE&gt;
    &lt;TR color="color2"...&gt;&lt;/TR&gt;
  &lt;/CFIF&gt;
&lt;/CFOUTPUT&gt;
</pre>
</p>
<p class="1">The if statement is the key. The expression currentrow mod 2 returns the modulus (remainder division) of the current query and row 2. If the return value is 0, then currentrow is even. If it is non-zero, then currentrow is odd.
</i>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>generating-dynamic-tables-with-varying-row-colours</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Adding and removing users under Linux</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/adding-and-removing-users-under-linux/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=273</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Adding and removing users under Linux</h3>
<p class="1">I guess one of the more important things to do is to know how to administrate users under Linux. This little document will show you how to add and remove users. Everything in this document relates to administrating users from the shell. The reason being that you can do all this remotely by telneting into the server and hence don't have the graphical user interface that you usually have if you are running X-Windows.</p>

<p class="1"><b>Adding users</b><br />
Let's first off start by creating a new user. Not only will the user be able to login into the Linux server, but this process also automatically creates a user email account. So let's begin. You start off by having to have superuser access rights or by being logged in as root. Also in the examples don't type the information in brackets, unless othewise specified, as it's only their for comment purposes. Next you can type:</p>

<p class="1"><i>adduser username</i></p>

<p class="1">It's a pretty straightforward command where <i>adduser</i> is the command to be executed and <i>username</i> is the name of the actual user you wish to create an account for. So if we say had a user named John Smith and you had the user naming convention of using the first name initial and the surname your command would look something like this:</p>

<p class="1"><i>adduser jsmith</i></p>

<p class="1">Decide as early on as possible which type of naming convention you are going to choose and apply it rigourosly. I recommend using the first name initial followed by the surname, as it gives you more scope than using say firstname followed by the first letter of the surname. Also you can use other symbols such as full stop or underscore when creating user names, i.e. <i>j.smith</i> or <i>j_smith</i>.</p>

<p class="1">Once you have entered the command <i>adduser username</i> the system will remind you to set the username password. You do this by typing the following command:</p>

<p class="1"><i>passwd username</i></p>

<p class="1">Yes it is <i>passwd</i> and not <i>password</i>. You will then be prompted to enter the username password and confirm it after you have hit return once. If you fail to confirm the password the password is not set (by either hitting return or mistyping it) and you'll have to type <i>passwd username</i>. Again think about your password convention. Later versions of Linux enforce a strict policy, if I remember correctly no less than 6 characters an it's not allowed to be a dictionary word. Older versions don't necessarily enforce this policy, so it's up to you as the administrator to enforce it. For security purposes try also mixing upper case and lower case, and also make the password alpha numeric. UK car number plates make great passwords, as long as it's not your current car sat outside in the car park. So for our user John Smith the complete sequence would look something like this:</p>

<p class="1"><i>passwd jsmith</i><br />Enter the password:******<br />Confirm password:******<br />Password set.</p>

<p class="1"><b>Removing users</b><br />
Deleting users is slightly more involving than adding users as you have tomake sure that all references have been removed from the system. Again newer versions of Linux are better at it than the older ones. But for safety's reasons we'll go through all the files you need to check. You'll need to be familiar with Vi editing (see <a href="http://www.armagossa.com/content.cfm?content_ID=20">Basic Vi editing</a> for an introduction).</p>

<p class="1">Right onto the ineteresting stuff. First off let's delete the user account. To delete a user you need to type in the following command (again you'll superuser access rights or be logged in as root):</p>

<p class="1"><i>userdel -r username</i></p>

<p class="1">Again subsitute <i>username</i> for your actual username, using John Smith as our example your command would look as follows:</p>

<p class="1"><i>userdel -r jsmith</i></p>

<p class="1">Also notice that we have used a switch (<i>-r</i>), for a whole listing a switches and their explanation you can type <i>man userdel</i> from the command prompt. Right now you have removed the username from the user database, all you need to do now is make sure that all the user directories and entries in the password file have been removed. First off let's check the directory entries. Linux when adding a user creates a directory with the users login name in the <i>/home</i> directory. Secondly it creates a file, again with the user's login name in the <i>/var/spool/mail</i> directory, where all mail messages are held if they are kept on the server. So if you find an entry in any of those directories (making sure that you change to the relevant directory first), you can type:</p>

<p class="1"><i>rm -rf username</i></p>

<p class="1">Or using our example:<br />
<i>cd /home<br />
ls -l |more <br />
(if entry is found)<br />
rm -rf jsmith<br />
cd /var/spool/mail<br />
ls -l |more <br />
(if entry is found)<br />
rm -rf jsmith<br />
</i></p>

<p class="1">This command should remove the users directories and files (again for a complete listing and meaning of the command <i>rm</i> switches type: <i>man rm</i>). Now we need to check that all entries relating to the user have been removed from the password file. So change to your <i>/etc</i> directory and open up <i>group</i> file in your vi editor (type: <i>vi group</i>) and scroll through it looking for and entry relating to your user, it will look something like this <i>username:501:</i>. Delete the entry and then quite and save the ammended file.</p>

<p class="1">You don't have to stop or restart the server. Just make sure you edit that file carefully. That completes the introduction to Adding and Removing users. Hope you found it useful.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>273</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adding-and-removing-users-under-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Configuring Cold Fusion and MySQL</title>
		<link>http://gregs.tcias.co.uk/2000/10/17/configuring-cold-fusion-and-mysql/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=284</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Configuring Cold Fusion and MySQL</h3>
<p class="1">Listed in this document will be a collection of problems I encountered while working with both <strong>Cold Fusion</strong> and <strong>MySQL</strong>, and some of the work arounds/solutions I have come across to resolve these problems.</p>
<ul>
	<li>When planning to store and display large amounts of data in a text field, you have to be aware of a setting in the Cold Fusion Administrator. By default the <strong>Long Text Buffer Size</strong> is limited to <em>65,000</em> characters. As a result should you have more than <em>65,000</em> characters to display the excess will be chopped. This problem can be fixed by either increasing the <strong>Long Text Buffer Size</strong> (better for performance, but still has an impact) or by enabling <strong>Long Text Retrieval Settings</strong> (can have an impact on performance). These settings can be reached by editing the datasource properties.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>284</wp:post_id>
		<wp:post_date>2000-10-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configuring-cold-fusion-and-mysql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="category" nicename="mysql"><![CDATA[MySQL]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Configuring MyODBC on NT</title>
		<link>http://gregs.tcias.co.uk/2000/10/17/configuring-myodbc-on-nt/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=285</guid>
		<description></description>
		<content:encoded><![CDATA[This is effectively part II of configuring MySQL for NT. With the help of this document you will be able to access your MySQL database server from other Windows applications (e.g. Cold Fusion). Right so let's get started. We shall begin with installing MyODBC (a copy of which can be obtained from here <a href="http://www.mysql.com/downloads/api-myodbc.html">http://www.mysql.com/downloads/api-myodbc.html</a>).

Installing MyODBC is straightforward. Unzip the downloaded file and click on the <strong>setup.exe</strong> file and simply follow the installation prompts. For starters just keep accepting the default settings if you are unsure of any options.

OK, now we are ready to add a <strong>MySQL</strong> datasource. You have to do this through <em>ODBC datasources</em> in the <strong>Control Panel</strong>. Please note: if you were planning on using the Cold Fusion Administrator, you can't. You have to go through the <strong>Control Panel</strong> to initially configure the datasource. Once setup you can modify your <strong>MySQL</strong> datasources through the Cold Fusion Administrator. So go ahead and fire up your ODBC manager.

Once open, go to the the <strong>system DNS</strong> tab and select <em>Add...</em>. From the list of available drivers select <strong>MySQL</strong> and click <em>Finish</em>. This should fire up a dialogue with a whole bunch of fields. Listed below is a sample entry:

[code]Windows DNS name: mydsn
MySQL host (name or ip): 127.0.0.1
MySQL database name: mydatabase
User: myusername
Password: mypassword
[/code]

Things to bear in mind are: from my personal experience, I found that it's best to keep windows DSN and database name in lower case. Specifying the IP address works, I have had problems using the host name setting. As for the username and password, make sure that you use those properties that you set to the database you created. I.e. if you don't require a logon to connect to that database, then leave the fields blank. Else enter the username and password assigned to that database (the default <strong>root</strong> account will work well, but is contentious for security reasons).

Well we are done you should know have configured your system to connect to a MySQL database via ODBC.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>285</wp:post_id>
		<wp:post_date>2000-10-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configuring-myodbc-on-nt</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[MySQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Configuring MySQL on NT</title>
		<link>http://gregs.tcias.co.uk/2000/10/17/configuring-mysql-on-nt/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=286</guid>
		<description></description>
		<content:encoded><![CDATA[In the following I will talk you through setting up MySQL on an NT box and running it as a service. We will also shore up the security a bit, create a database and connect to it. To start it all off you will need the install files you can grab these from the <a href="http://www.mysql.com/">MySQL</a> web site (<a href="http://www.mysql.com/">http://www.mysql.com/</a>. Go to the downloads section and find the relevant compiled files [The last time I looked all I could find where the beta compiled files @ <a href="http://www.mysql.com/downloads/mysql-3.23.html">http://www.mysql.com/downloads/mysql-3.23.html</a>]. The source files are usually stored in a Zip archive so you will need to extract them. Once that is done run <strong>setup.exe</strong> and follow the prompts.

OK so far so good. Now you will need to setup MySQL to run as a service. This is easy just switch to <strong>c:\mysql\bin</strong>. There you will see a file called <strong>mysqld-nt.exe</strong>. This is the file that installs MySQL as a service on your NT box. You install the service with the following command:

[code]mysqld-nt --install[/code]

After a couple of seconds (or less depending on the speed of your machine) the service is installed and you can test the installation (it doesn't tell you  if the service has been successfully installed or not) by typing: <em>net start MySQL</em> (incidentally should you wish to stop the server just type <em>net stop MySQL</em>). NT should inform you that the service is starting and whether it has started successfully or not.

On to the next stage. We will now secure the database server a little bit. As per the default installation the Administrator username is <strong>root</strong> and it has no password set. As you can imagine this is a serious security hazard. So in the following we are going to reset the password, by logging into MySQL (specifically the system database <strong>mysql</strong>) and removing the default user account, exiting the server reloading it and re-setting the password for root. Simply type the commands in listed below (you can read through the documentation on this subject at http://127.0.0.1/{your SQL documentation mapping}/manual.html#Win32, section 4.12.4):

[code]C:\mysql\bin\mysql mysql
mysql&gt;; DELETE FROM user WHERE Host='localhost' AND User='';
mysql&gt;; QUIT
C:\mysql\bin\mysqladmin reload
C:\mysql\bin\mysqladmin -u root password{your password}
[/code]

Next we will test whether your changes were successful, try login back into the database server, from the command prompt type <em>mysql -u root -p mysql</em> this should prompt you for a password. Type in the password you have just specified and you be logged in. Don't log out because we are now going to create another database. The steps syntax is very simple for this. From the MySQL command prompt type: <em>create database &lt;your database name&gt; ;</em>. Now type <em>show databases;</em> and this should provide you with a list of databases available.

Well there you go. You know should be able to install, configure, secure and create a database in <strong>MySQL</strong>. In the coming days I will try and write up something about installing MyODBC so that you can get other applications (such as Cold Fusion) to talk to MySQL. I hope you found this article useful!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>286</wp:post_id>
		<wp:post_date>2000-10-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configuring-mysql-on-nt</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[MySQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JavaScript: Automatic checkbox selection (addendum)</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/javascript-automatic-checkbox-selection-addendum/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=287</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Following from the article for the automatic clearing of checkboxes, I wanted to give youthis heads up on how to modify this script to allow ths use of different names for checkboxes. If you remember the previous script relied on all but one checkbox having the same name (for simplicity's sake I have kept the bulk of the text from the previous article here and just added the relevant changes). Now in some instances this is not useful as you may be passing criteria based on the name of the checkbox.</p>
<p>Let's start off again with the actual form:</p>
<p><em>&lt;form name="example" action="&lt;your destination page&gt;"&gt;<br />
&lt;input type="Checkbox" name="all" onclick="javascript:SetOther()" checked&gt; Search All<br />
&lt;input type="Checkbox" name="test1" onclick="javascript:SetAll()"&gt; News<br />
&lt;input type="Checkbox" name="test2" onclick="javascript:SetAll()"&gt; Weather<br />
&lt;input type="Checkbox" name="test3" onclick="javascript:SetAll()"&gt; Entertainment<br />
&lt;input type="Checkbox" name="test4" onclick="javascript:SetAll()"&gt; Music<br />
&lt;input type="Submit" value="Search"&gt;<br />
&lt;/form&gt;</em></p>
<p>Nothing much has changed since the last article apart from the fact that now all checkboxes have different names. Now in order to get around the problem of different checkboxes we will be using pattern matching (regular expressions) to determine which boxes to un-tick. The good news is that you will not have to modify the script greatly, so let's look at the script:</p>
<p><em>&lt;SCRIPT LANGUAGE="JavaScript"&gt;<br />
&lt;!-- hide script from older browsers<br />
function SetAll() {<br />
&nbsp;&nbsp;&nbsp;dml = document.example;<br />
&nbsp;&nbsp;&nbsp;len = dml.elements.length;<br />
&nbsp;&nbsp;&nbsp;val = 0;<br />
&nbsp;&nbsp;&nbsp;pat_check = /[test]/g;<br />
&nbsp;&nbsp;&nbsp;var i = 0;<br />
&nbsp;&nbsp;&nbsp;for(i = 0; i&lt;len; i++) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( pat_check.exec(dml.elements[i].name) != null ){<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dml.all.checked = val;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;}<br />
}<br />
function SetOther() {<br />
&nbsp;&nbsp;&nbsp;dml = document.example;<br />
&nbsp;&nbsp;&nbsp;len = dml.elements.length;<br />
&nbsp;&nbsp;&nbsp;val = 0;<br />
&nbsp;&nbsp;&nbsp;pat_check = /[test]/g;<br />
&nbsp;&nbsp;&nbsp;var i = 0;<br />
&nbsp;&nbsp;&nbsp;for(i = 0; i&lt;len; i++) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( pat_check.exec(dml.elements[i].name) != null ){<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dml.elements[i].checked = val;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;}<br />
}<br />
--&gt;<br />
&lt;/script&gt;</em></p>
<p>Right let's take a look at the first function, called <em>SetAll</em>. This functions controls the behaviour of the <strong>Search All</strong> checkbox, i.e. if the any of the <strong>different categories</strong> checkboxes are ticked remove the check for <strong>Search All</strong> checkbox. On the first three lines of that function I set a bunch of variables to make the coding easier (i.e. shorter). The variable <em>dml</em> stores the form name, <em>len</em> stores the number of elements elements (checkboxes) of said form, <em>val</em> is set <em>0</em> and I also set <em>i</em> to <em>0</em>. The new addition here involves the definition of a pattern: <em>pat_check = /[test]/g;</em>. As before we now loop over the list of elements, but this time we are comparing the name of said elements with the pattern. So if any checkbox has a name that contains the work test and it is checked, the script will un-tick the <em>Search all</em> box. The statement between the if clause does exactly that, it sets element <em>all</em> to <em>val</em>, which is <em>0</em>.</p>
<p>The second function displays a similar behaviour. The difference is that when the <strong>Search All</strong> checkbox is ticked, the tick in all the other categories is removed. Again I hope this made perfect sense and that it was useful.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>287</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-automatic-checkbox-selection-addendum</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Automatic checkbox selection</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/javascript-automatic-checkbox-selection/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=288</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Imagine a situation where you have a search form, with different search options based on different categories (such as Search all, news, weather, entertainment, etc...). Now when you submit your form you won't users to either select the <strong>Search All</strong> option or the <strong>different categories</strong>, but not both (i.e. the form is to be cleared of all the <strong>different categories</strong> if <strong>Search All</strong> is selected and vice versa when you select a <strong>different category</strong> the <strong>Search All</strong> option is to be cleared). In the following I will talk you through a script I wrote to achieve just that effect.</p>
<p>Let's start off with the actual form:</p>
<p><em>&lt;form name="example" action="&lt;your destination page&gt;"&gt;<br />
&lt;input type="Checkbox" name="test" onclick="javascript:SetOther()" checked&gt; Search All<br />
&lt;input type="Checkbox" name="test2" onclick="javascript:SetAll()"&gt; News<br />
&lt;input type="Checkbox" name="test2" onclick="javascript:SetAll()"&gt; Weather<br />
&lt;input type="Checkbox" name="test2" onclick="javascript:SetAll()"&gt; Entertainment<br />
&lt;input type="Checkbox" name="test2" onclick="javascript:SetAll()"&gt; Music<br />
&lt;input type="Submit" value="Search"&gt;<br />
&lt;/form&gt;</em></p>
<p>For the script to work it is very important to give the form a name so that the JS can reference the script. Else there is nothing special about the <strong>&lt;Form&gt;</strong> tag. The checkboxes contain all <em>onclick</em> event handlers and they call different functions (to carry out different actions, more on that when we review the script). Also note that the <strong>different categories</strong> checkboxes have the same name. The final component is the search button.</p>
<p>Now let's look at the script:</p>
<p><em>&lt;SCRIPT LANGUAGE="JavaScript"&gt;<br />
&lt;!-- hide script from older browsers<br />
function SetAll() {<br />
&nbsp;&nbsp;&nbsp;dml = document.example;<br />
&nbsp;&nbsp;&nbsp;len = dml.elements.length;<br />
&nbsp;&nbsp;&nbsp;val = 0;<br />
&nbsp;&nbsp;&nbsp;var i = 0;<br />
&nbsp;&nbsp;&nbsp;for(i = 0; i&lt;len; i++) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (dml.elements[i].name == 'test2') {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dml.test.checked = val;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;}<br />
}<br />
function SetOther() {<br />
&nbsp;&nbsp;&nbsp;dml = document.example;<br />
&nbsp;&nbsp;&nbsp;len = dml.elements.length;<br />
&nbsp;&nbsp;&nbsp;val = 0;<br />
&nbsp;&nbsp;&nbsp;var i = 0;<br />
&nbsp;&nbsp;&nbsp;for(i = 0; i&lt;len; i++) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (dml.elements[i].name == 'test2') {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dml.elements[i].checked = val;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;}<br />
}<br />
--&gt;<br />
&lt;/script&gt;</em></p>
<p>Right let's take a look at the first function, called <em>SetAll</em>. This functions controls the behaviour of the <strong>Search All</strong> checkbox, i.e. if the any of the <strong>different categories</strong> checkboxes are ticked remove the check for <strong>Search All</strong> checkbox. On the first three lines of that function I set a bunch of variables to make the coding easier (i.e. shorter). The variable <em>dml</em> stores the form name, <em>len</em> stores the number of elements elements (checkboxes) of said form, <em>val</em> is set <em>0</em> and I also set <em>i</em> to <em>0</em>. Next I looped (<em>for</em> statement) over the number of elements, checking which elements named <em>test2</em> are checked (<em>if</em> statement). Now you can see why I gave the form elements for <strong>different categories</strong> the same name, because the behaviour dictated that if any of the <strong>different categories</strong> is checked the script was to remove the check from <em>Search All</em>. The statement between the if clause does exactly that, it sets for element <em>test</em> to <em>val</em>, which is <em>0</em>.</p>
<p>The second function displays a similar behaviour. The difference is that when the <strong>Search All</strong> checkbox is ticked, the tick in all the other categories is removed. I hope all this made sense and that you found it useful, so until the next time!!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-automatic-checkbox-selection</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="browser"><![CDATA[browser]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Checking for a valid e-mail address</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/checking-for-a-valid-e-mail-address/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=289</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I made my first venture in regular expressions, when I had to create a JavaScript that checked the validity of an e-mail address. By checking it's validity, I mean that I wanted to make sure that users submitted an address that followed <em>your_name@domain.com</em> and not simply entered a whole bunch of garbage. The best way to do this is to match a pattern or as it is known use regular expressions. Before we set off here is the script that we are going to work through:</p>
<p><em>&lt;script language="JavaScript" type="text/javascript"&gt;<br />
&lt;!--<br />
function validate() {<br />
&nbsp;&nbsp;&nbsp;var pat_email = /^[-._&0-9a-zA-Z]+[@][-._&0-9a-zA-Z]+[.][._0-9a-zA-Z]+[a-zA-Z]$/;<br />
&nbsp;&nbsp;&nbsp;with (document.form1) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//validate email<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( pat_email.exec(txt_email.value) == null ) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert("You have not entered a valid email address.");<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txt_email.focus();<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;}<br />
}<br />
//--&gt;<br />
&lt;/script&gt;</em></p>
<p>OK let's see what is going on here. First we define the pattern that we are trying to match. There we specify the characters that are accepted and the characters that need to appear in it to determine it's validity. JavaScript knows you are defining a regular expression when you use the statement <em>var &lt;pattern_name&gt; = /&lt;pattern_goes_here&gt;$/;</em>. If you take a look at the pattern you will notice <strong>[]</strong> (I will get to the caret in a second). These are used to group patterns together and in some cases create sub-patterns. Taking a step back you can see that we are trying to match pattern that follows these guidelines <strong>[]@[].[]</strong>, which is how most e-mail addresses are composed. In between the square brackets I have specified the characters that are permitted for each sub-pattern. So looking at the first set of square brackets, only values between <strong>0-9</strong>, <strong>a-z</strong>, <strong>A-Z</strong>, <strong>"-"</strong>, <strong>"_"</strong>, <strong>"&"</strong> and <strong>"."</strong> are accepted. How does the script know that these are to be accepted? This is where we get back to the caret (&#94;). This symbol inside the forward slashes indicates that it should accept only those characters specified. Move the caret outside of the slashes and you get achieve the opposite, accept any characters other than the one listed above. You may also wonder what the <strong>+[a-zA-Z]</strong> is about. We included this in order to accept domains names such as <em>.co.uk</em> or <em>.com.au</em>, hence the reason for only including letters and not numbers.</p>
<p>As an aside should you wish to learn more about regular expressions or pattern matching I can recommend two books. The first is what I used and it gave me an introduction to regular expressions and is the JavaScript developers bible: <a href="http://www.amazon.co.uk/exec/obidos/ASIN/1565923928/teacupinastor-20">JavaScript</a> from <a href="http://www.oreilly.com">O'Reilly &amp; Associates, Inc</a>. The other is <a href=" http://www.amazon.co.uk/exec/obidos/ASIN/0596000278/teacupinastor-20">Perl Programming</a> also from <a href="http://www.oreilly.com">O'Reilly &amp; Associates, Inc</a>. You may be wondering why recommend a Perl book for JavaScript regular expressions. As it happens Perl forms the basis for the way in which JavaScript handles regular expressions.</p>
<p>Right on with the script. Once we have defined our pattern we have to match it up with something. This happens in the following line, where we inform the script to match it to <strong>form1</strong> in our current page. Next we set the condition, where if <em>pat_email</em> is matched up against <em>text_email</em> (this is the form field we are validating) and if this returns <strong>null</strong>, then we have no match and hence the user has entered an e-mail address that does not satisfy our criteria. If this is the case an <strong>alert</strong> should be made, the focus set back to aforementioned form field and the form submission aborted.</p>
<p>And there you go that's the script. You invoke the script by including <strong><em>onsubmit="return validate();"</em></strong> in your &lt;FORM&gt; tag. As ever I hope this proved to be useful and informative. Comments and feedback always welcome!!!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>289</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>checking-for-a-valid-e-mail-address</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Server updates</title>
		<link>http://gregs.tcias.co.uk/2012/09/22/server-updates/</link>
		<pubDate>Sat, 22 Sep 2012 20:30:38 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1144</guid>
		<description></description>
		<content:encoded><![CDATA[Updated server with update and updgrade



Then installed rvm and ruby ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-linux] - <a href="https://github.com/diaspora/diaspora/wiki/Installing-on-Debian">using these instructions</a>



Next installed node using <a href="http://sekati.com/etc/install-nodejs-on-debian-squeeze">the following instructions</a>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1144</wp:post_id>
		<wp:post_date>2012-09-22 21:30:38</wp:post_date>
		<wp:post_date_gmt>2012-09-22 20:30:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>server-updates</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="comps"><![CDATA[comps]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Server admin - december 2012</title>
		<link>http://gregs.tcias.co.uk/2012/12/30/server-admin-december-2012/</link>
		<pubDate>Sun, 30 Dec 2012 16:35:41 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1186</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Did a update and upgrade</p>

<p>Tweaked rvm, by editing my bash_profile to get rvm to work for my user account. Still have problems installing gems they also seem to sudo and thus I need to run rails using 'rvmsudo rails -s'</p>

<p>Also installed a new version of nginx using <a href="https://www.digitalocean.com/community/articles/how-to-install-rails-and-nginx-with-passenger-on-ubuntu">this site</a>. Particularly using the passenger gem and then re-building nginx using that gem.</p>

<p>Had to run off 005-nginx as the stub module is not installed and default also has an issue. The location of nginx is now /opt/nginx. However all the conf file for virtual hosts, etc are in /etc/nginx/</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1186</wp:post_id>
		<wp:post_date>2012-12-30 16:35:41</wp:post_date>
		<wp:post_date_gmt>2012-12-30 16:35:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>server-admin-december-2012</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Server admin</title>
		<link>http://gregs.tcias.co.uk/2013/01/17/server-admin/</link>
		<pubDate>Thu, 17 Jan 2013 19:12:25 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1190</guid>
		<description></description>
		<content:encoded><![CDATA[<p>OK switched Passenger out and opted for Unicorn. This works, however need to figure out a few things:</p>

<p>1) get the unicorn daemon to run as part of an init.d/ type step
2) how to get the full path to the socket out of the config file in app/config/unicorn.rb</p>

<p>Added the following config details to the 001-tcias nginx config file:</p>

<pre><code>upstream unicorn_server {
    # This is the socket we configured in unicorn.rb
    server unix:/home/tcias/public_html/Teacup-In-A-Storm/tmp/sockets/unicorn.sock fail_timeout$
}

server {
    listen 178.79.132.223:80;
    server_name www.teacupinastorm.co.uk;
    root /home/tcias/public_html/Teacup-In-A-Storm/public;
    location / {
            include proxy_params;
            proxy_redirect off;

            if (-f $request_filename) {
                    access_log          off;
                    expires             max;
                    break;
            }

            if (-f $request_filename.html) {
                    rewrite (.*) $1.html break;
            }

            if (!-f $request_filename) {
                    proxy_pass          http://unicorn_server;
                    break;
            }
    }
}
</code></pre>

<p>Also added a proxy_params file to /etc/nginx, which contains the following:</p>

<pre><code>proxy_set_header Host $host;

# needed to forward user's IP address to application server
proxy_set_header X-Real-IP $remote_addr;

proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header   X-Forwarded-Proto $scheme;

proxy_send_timeout         90;
proxy_read_timeout         90;

proxy_buffer_size          4k;
proxy_buffers              4 32k;
proxy_busy_buffers_size    64k;
proxy_temp_file_write_size 64k;
</code></pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1190</wp:post_id>
		<wp:post_date>2013-01-17 19:12:25</wp:post_date>
		<wp:post_date_gmt>2013-01-17 19:12:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>server-admin</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Unicorn start up script</title>
		<link>http://gregs.tcias.co.uk/2013/01/20/unicorn-start-up-script/</link>
		<pubDate>Sun, 20 Jan 2013 17:02:16 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1192</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Finally got the start up script right. First step was to create a rvm wrapper. Then the script looks as follows (<a href="https://gist.github.com/902420">original source</a> and <a href="https://gist.github.com/1712697">this one</a>) and the instructions for the rvm wrapper <a href="http://blog.maveonair.io/2012/07/31/rvm-integration---initd/">were found here</a>. Of note is that I changed it from loading the unicorn settings in /etc/unicorn, but rather look in {app_root}/config/unicorn.rb</p>

<pre><code>#!/bin/sh
### BEGIN INIT INFO
# Provides:          unicorn
# Required-Start:    $local_fs $remote_fs mysql
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: unicorn initscript
# Description:       Unicorn is an HTTP server for Rack application
### END INIT INFO

# Author: Troex Nevelin &lt;troex@fury.scancode.ru&gt;
# based on http://gist.github.com/308216 by http://github.com/mguterl

# A sample /etc/unicorn/my_app.conf, only RAILS_ROOT is required, other are optional
#
## RAILS_ENV=production
## RAILS_ROOT=/var/apps/www/my_app/current
## PID=$RAILS_ROOT/tmp/pids/unicorn.pid
## START_CMD="bundle exec unicorn_rails"
## USER="www-data"
## RESTART_SLEEP=5
## HANDLE_DELAYED_JOB=true

# A recommended /etc/unicorn/my_app.unicorn.rb
#
## APP_ROOT  = ENV["RAILS_ROOT"]
## RAILS_ENV = ENV["RAILS_ENV"]
## 
## pid         "#{APP_ROOT}/tmp/pids/unicorn.pid"
## listen      "#{APP_ROOT}/tmp/sockets/unicorn.sock"
## stderr_path "#{APP_ROOT}/log/unicorn_error.log"
## 
## working_directory "#{APP_ROOT}"
## worker_processes 1

set -e
sig () {
  test -s "$PID" &amp;&amp; kill -$1 `cat "$PID"`
}

oldsig () {
  test -s "$OLD_PID" &amp;&amp; kill -$1 `cat "$OLD_PID"`
}

cmd () {
  case $1 in
    start)
      sig 0 &amp;&amp; echo &gt;&amp;2 "Already running" &amp;&amp; return
      echo "Starting"
      $CMD 
      ;;  
    stop)
      sig QUIT &amp;&amp; echo "Stopping" &amp;&amp; return
      echo &gt;&amp;2 "Not running"
      ;;  
    force-stop)
      sig TERM &amp;&amp; echo "Forcing a stop" &amp;&amp; return
      echo &gt;&amp;2 "Not running"
      ;;  
    restart|reload)
      sig USR2 &amp;&amp; sleep $RESTART_SLEEP &amp;&amp; oldsig QUIT &amp;&amp; echo "Killing old master" `cat $OLD_PID` &amp;$      echo &gt;&amp;2 "Couldn't reload, starting '$CMD' instead"
      $CMD
      ;;  
    upgrade)
      sig USR2 &amp;&amp; echo Upgraded &amp;&amp; return
      echo &gt;&amp;2 "Couldn't upgrade, starting '$CMD' instead"
      $CMD
      ;;  
    rotate)
      sig USR1 &amp;&amp; echo rotated logs OK &amp;&amp; return
      echo &gt;&amp;2 "Couldn't rotate logs" &amp;&amp; return
      ;;
    status)
      sig 0 &amp;&amp; echo &gt;&amp;2 "Already running" &amp;&amp; return
      echo &gt;&amp;2 "Not running" &amp;&amp; return
      ;;
    *)
      echo &gt;&amp;2 "Usage: $0 &lt;start|stop|restart|reload|status|upgrade|rotate|force-stop&gt;"
      return
      ;;  
    esac
}

setup () {  
  echo -n "$RAILS_ROOT: "
  cd $RAILS_ROOT || exit 1

  if [ -z "$RAILS_ENV" ]; then
    RAILS_ENV=development
  fi

  if [ -z "$PID" ]; then
    PID=$RAILS_ROOT/tmp/pids/unicorn.pid
  fi
  if [ -z "$RESTART_SLEEP" ]; then
    RESTART_SLEEP=5
  fi

  export PID
  export OLD_PID="$PID.oldbin"
  export RAILS_ROOT
  export RESTART_SLEEP

  if [ -z "$START_CMD" ]; then
    START_CMD="/usr/local/rvm/bin/bootup_unicorn_rails"
  fi
  CMD="$START_CMD -c config/unicorn.rb -E $RAILS_ENV -D"

  if [ "$USER" != `whoami` ]; then
    CMD="sudo -u $USER -- env RAILS_ROOT=$RAILS_ROOT; $CMD"
  fi
  export CMD
  #echo $CMD
}

handle_delayed_job () {
  # $1 contains command
  if [ "$HANDLE_DELAYED_JOB" != "true" ]; then
    return  
  fi

  case $1 in
    start|stop|restart|reload|status)
      CMD="env RAILS_ENV=$RAILS_ENV bundle exec ./script/delayed_job $1"
      if [ "$USER" != `whoami` ]; then
        CMD="sudo -u $USER -- env $CMD"
      fi
      $CMD
    ;;
  esac
}   

start_stop () {
  # either run the start/stop/reload/etc command for every config under /etc/unicorn
  # or just do it for a specific one

  # $1 contains the start/stop/etc command
  # $2 if it exists, should be the specific config we want to act on
  if [ -n "$2" ]; then
    if [ -f "/etc/unicorn/$2.conf" ]; then
      . /etc/unicorn/$2.conf
      export UNICORN_CONFIG="/etc/unicorn/$2.unicorn.rb"
      setup
      cmd $1
      handle_delayed_job $1
    else
      echo &gt;&amp;2 "/etc/unicorn/$2.conf: not found"
    fi
  else
    for CONFIG in /etc/unicorn/*.conf; do
      # import the variables
      export UNICORN_CONFIG=`echo ${CONFIG} | sed 's/conf/unicorn.rb/'`
      . $CONFIG
      setup
      # run the start/stop/etc command
      cmd $1
      handle_delayed_job $1

      # clean enviroment
      unset PID
      unset OLD_PID
      unset RAILS_ROOT
      unset RAILS_ENV
      unset CMD
      unset USER
      unset START_CMD
      unset UNICORN_CONFIG
    done
   fi
}

ARGS="$1 $2"   
start_stop $ARGS
</code></pre>

<p>Then just run:
    sudo update-rc.d unicorn defaults</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1192</wp:post_id>
		<wp:post_date>2013-01-20 17:02:16</wp:post_date>
		<wp:post_date_gmt>2013-01-20 17:02:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>unicorn-start-up-script</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Server admin</title>
		<link>http://gregs.tcias.co.uk/2013/04/22/server-admin-2/</link>
		<pubDate>Mon, 22 Apr 2013 21:49:13 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1199</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just a quick note. I patched the server and also fine tuned the gzip-ing of the files based of <a href="http://www.howtoforge.com/how-to-save-traffic-with-nginxs-httpgzipmodule-debian-squeeze">this blog post</a>. Earlier this week I increased the swap file to a 1 Gig after two upgrades from Linode (Ram and CPU), which required a bunch of restarts.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1199</wp:post_id>
		<wp:post_date>2013-04-22 22:49:13</wp:post_date>
		<wp:post_date_gmt>2013-04-22 21:49:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>server-admin-2</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Password field verification</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/password-field-verification/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=290</guid>
		<description></description>
		<content:encoded><![CDATA[<p>While playing round with a user registration form, which contained 2 fields for specifying the password the other day, I decided that it would be extremely useful to have some kind of mechanism that verifies whether or not the user has entered the password correctly twice. While thinking about using Cold Fusion to this, I had certain reservations, mainly that it seemed silly to use the power of Cold Fusion to do such a seemingly simple task and to hit the server again just to validate such a field. There must be a better way of doing this and the answer lies in Javascript (JS).</p>
<p>The benefits of using JS over Cold Fusion for this task become immediately apparent, when you consider that the validation is done on the client side and hence all verification and notification is done locally (no need to hit the server to validate your entries and maybe incur a return trip to inform the user of the errors). In the following I shall describe the steps I took without going into too much detail of the JS language. So let's get started.</p>
<p>First off we'll look at the script:</p>
<p><em>&lt;SCRIPT LANGUAGE="JavaScript"&gt;<br />
&lt;!-- Hide script from older browsers<br />&nbsp;
function valid(form){<br />
&nbsp;&nbsp;&nbsp;var field = form.password1;<br />
&nbsp;&nbsp;&nbsp;var field2 = form.password2;<br />
&nbsp;&nbsp;&nbsp;if (field.value == "") {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert("You must enter a password.");<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;field.focus();<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;field.select();<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br />
&nbsp;&nbsp;&nbsp;} else if (field2.value == "") {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert("You must enter a password for the re-type field too.");<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;field2.focus();<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;field2.select();<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br />
&nbsp;&nbsp;&nbsp;} else if (field.value == field2.value) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true;<br />
&nbsp;&nbsp;&nbsp;} else {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert("Your passwords don't match up. Please re-type your passwords making sure they match up");<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;field.focus();<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;field.select();<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br />
&nbsp;&nbsp;&nbsp;}<br />
}<br />
//--&gt;<br />
&lt;/script&gt;</em></p>
<p>The script starts of by defining a function and in the first few lines I created a couple of variables, that stored the values of the form fields <em>password1</em> and <em>password2</em>. Then we have our first if statement which checks to see if any information has been entered into <em>password1</em>. If the outcome is negative (i.e. there is no value stored) and an alert box pops up and informs the user of the requirement to enter a password (i.e. you can't have blank passwords). Clicking OK will move the cursor to that field to help the user find where he went wrong. Next we do the same thing but for <em>password2</em>.</p>
<p>Right so far we have just been making sure that the user has entered any information. The second <em>else if</em> statement is actually going to compare the variables that store <em>password1</em> and <em>password2</em>. If this true continue submitting the information, else pop up an alert, informing the user of the non-matching passwords and set the focus back to the form and on field <em>password1</em>.</p>
<p>Right, now we have the script, but how do we call it? The easiest way is to call it when the user submits the form. Just take a look at the following HTML snippet:</p>
<p><em>&lt;FORM action="password.html" method="post" onSubmit="return valid(this)"&gt;<br />
Enter password:&nbsp;&lt;INPUT type="password" name="password1" size="20"&gt;<br />
Re-type password:&nbsp;&lt;INPUT type="password" name="password2" size="20"&gt;<br />
&lt;INPUT type="submit" value="submit"&gt;<br />
&lt;/FORM&gt;</em>
</p>
<p>The line of interest is the opening <em>&lt;FORM&gt;</em> tag. You will notice toward the end of it the statement <em>onSubmit="return valid(this)"</em>, which tell the browser to call the function <strong>valid</strong> when the form is submitted. The function runs and validates the entries. Hey presto, you have a script that ensures passwords submitted to your app are identical.</p>
<p>Now that wasn't to bad, was it? The hardest part I found, not having used JS, was figuring out the syntax. If this has wet your appetite for more JS, then I can recommend a book: <a href="http://www.amazon.co.uk/exec/obidos/ASIN/1565923928/teacupinastor-20">JavaScript</a> from <a href="http://www.oreilly.com">O'Reilly &amp; Associates, Inc</a>, this is pretty much the bible and contains everything you need to know to get started in the world of JS. Time to say goodbye and I hope you enjoyed this article.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>password-field-verification</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Simulating the enter button for form submission under NS and IE</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/simulating-the-enter-button-for-form-submission-under-ns-and-ie/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=291</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This article deals with a controlling key strokes under Netscape and IE. This occurred while we were working on a project using ATG. We were trying to trap certain events when hitting specific keys, i.e. we wanted to trigger certain events. In the following I will highlight who you can trap pressing the <strong>Enter</strong> key and execute a function.</p>
<p>The key to success here is the use of the <em>onkeypress</em> property in your form. Now you need to do is associate a function with this property. This function will look at which has been hit and if it was the <strong>Enter</strong> key, it'll do something. So now let's take a quick look at the script:</p>
<p><em>function screenkey(e) {<br />
&nbsp;&nbsp;&nbsp;var whichCode;<br />
&nbsp;&nbsp;&nbsp;whichCode = (window.Event) ? e.which : e.keyCode;<br />
&nbsp;&nbsp;&nbsp;if ( whichCode == "13" ) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort_submit = true;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whichCode = null;<br />
&nbsp;&nbsp;&nbsp;}<br />
}</em></p>
<p>OK here with a function screenkey, that sets a variable. The <em>whichCode</em> will actually store which key has been pressed (and that for both browsers). Next we set a condition that checks whether key code "13" has been pressed. The "13" corresponds to the <strong>Enter</strong> key. If this condition is true we set <em>abort_submit</em> to <strong>true</strong> and reset <em>whichCode</em> to null. To test if it works try inserting an <em><strong>alert</strong></em> after the if statement. Does it work?</p>
<p>So what can you do with this? Well we wrote a small script that validates the content of the fields you are submitting. Look at the following script:</p>
<p><em>function validate() {<br />
&nbsp;&nbsp;&nbsp;if (document.&lt;your form name&gt;.&lt;field you are verifying&gt;.value == "") {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('You have not specified an email address to log in. Please do so now.');<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort_submit = false;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br />
&nbsp;&nbsp;&nbsp;}<br />
}</em></p>
<p>This function will check that a value has been submitted for a specific field. This is done in the conditional statement where we check the current document (<strong>document.</strong>) and it's form (<strong>&lt;your form name&gt;.</strong>) with a certain element (<strong>&lt;field you are verifying&gt;.</strong>) has a certain value, in this case null. If this condition is true, pop up an alert informing the user that the has to complete this field and stop submitting the form. This function has to reside within the first function after the <strong>if</strong> statement, like such:</p>
<p><em>function screenkey(e) {<br />
&nbsp;&nbsp;&nbsp;var whichCode;<br />
&nbsp;&nbsp;&nbsp;whichCode = (window.Event) ? e.which : e.keyCode;<br />
&nbsp;&nbsp;&nbsp;if ( whichCode == "13" ) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function validate() {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (document.&lt;your form name&gt;.&lt;field you are verifying&gt;.value == "") {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('You have not specified an email address to log in. Please do so now.');<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort_submit = false;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort_submit = true;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whichCode = null;<br />
&nbsp;&nbsp;&nbsp;}<br />
}</em><p>

<p>Finally we added a third function (called <em>promptme()</em>) that set the <strong>focus</strong> of the form field to be completed when the page was loaded (since this was an email address based login we only had one field to contend with). So here goes the last function:</p>
<p><em>var str="";<br />
function promptme() {<br />
&nbsp;&nbsp;&nbsp;if ( str != "" ) alert(str);<br />
&nbsp;&nbsp;&nbsp;if (document.&lt;your form name&gt;)<br />
&nbsp;&nbsp;&nbsp;document.&lt;your form name&gt;.&lt;field you are verifying&gt;.focus();<br />
}</em></p>
<p>Now all we need to do is tie all this together in our web page:</p>
<p><em>&lt;html&gt;<br />
&lt;head&gt;&lt;title&gt;JavaScript: Simulating the enter button for form submission under Netscape&lt;/title&gt;<br />
&lt;/head&gt;<br />
&lt;script language="JavaScript"&gt;<br />
&lt;Aforementioned scripts go here&gt;<br />
&lt;/script&gt;<br />
&lt;body onload="promptme();"&gt;<br />
&lt;form name="your form name" method="post" onsubmit="return validate()"&gt;<br />
Whatever&nbsp;&lt;input type="text" size="25" name="your field name" onkeypress="screenkey(event);"&gt;<br />
&lt;input type="image" src="yourbutton.jpg" align="absmiddle" alt="Login" border="0"&gt;<br />
&lt;/form&gt;<br />
&lt;/body&gt;<br />
&lt;/html&gt;<br />
</em>
</p>
<p>Right there you go. Now you can execute a specific event based on a key stroke. Hope you found this useful.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>simulating-the-enter-button-for-form-submission-under-ns-and-ie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>How to edit a cisco router access list</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/how-to-edit-a-cisco-router-access-list/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=293</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>How to edit a cisco router access list</h3>
<p class="1">This little document will show you the necessary steps required to edit a Cisco Router 2503 (don't know if it's the same for other routers). However it does not give you all the different access-list configuration options, it just shows you the best way to edit the access-list safely. Disclaimer time: <b>as ever if anything goes wrong (i.e. you hose your router configuration) it's not my fault and I will not be held responsible.</b></p>
<p class="1">Right now that we dispensed with the formalities on with the task at hand. Telnet into your router and login. Once logged in type <i>en</i> to enable the interface. You will be required to enter an additional password.</p>
<p class="1">First we are going to create a copy of the current configuration. From the toolbar of your telnet program ( Iuse the standard Windows telnet program), select Terminal and Start Logging (note you will have to specify the file name and location, e.g.: C:	emp	elnet.log). At the command prompt type <i>wr t</i>. This command displays the content of your current config file and because Logging is enabled it copies the content to the C:Temp	elnet.log file you created earlier.</p>
<p class="1">Click TerminalStop Logging and logout of your session with the router. Next open Notepad and load you telnet.log file. Scroll down until you see a list looking something like this:<br />
access-list 100 permit ip any any<br />
access-list 103 permit ip host 10.10.10.10 any<br />
access-list 103 permit icmp host 10.10.10.10 any<br />
access-list 103 permit icmp host 10.10.10.11 any<br />
<p class="1">Now cut the entire list where you see access-list 103 and paste it just beneath the last 103 entry. This is the list we are going to modify. Save the file as under a different name before doing any editing. Once that is done change all the 103 entries to 104. Using the example above, your access list should now look something like this:<br />
access-list 100 permit ip any any<br />
access-list 103 permit ip host 10.10.10.10 any<br />
access-list 103 permit icmp host 10.10.10.10 any<br />
access-list 103 permit icmp host 10.10.10.11 any<br />
access-list 104 permit ip host 10.10.10.10 any<br />
access-list 104 permit icmp host 10.10.10.10 any<br />
access-list 104 permit icmp host 10.10.10.11 any<br />
<p class="1">Now you can safely edit the access-list to reflect your access requirements. For all those of you who want to know what different access-list options there are I will in the near future try to provide another document introducing some of the concepts.<p/>
<p class="1">Ok once you have carried your modifications highlight the lates access-list, i.e. 104 and copy it. Now log back in to your cisco router and enable the interface again. First type conf, which takes you to the config mode and hit return once you see this message:<br />
Configuring from terminal, memory, or network [terminal]? Enter configuration commands, one poer line. End with CNTL/Z.
<p class="1">Now type <i>int serNumber</i> (where Number is the number of the interface you wish to edit, e.g. 0 so you would type int ser0). First we are going to disable the existing access-list:<br />
no ip access-group 103 in
<p class="1">Note: where 103 is the number of your access list and it controls inbound traffic.
<p class="1">Type <i>exit</i> and then go to Edit and choose the paste option. All the entries you created for 104 should now be added to your existing configuration file. And now the moment of truth. Go back to edit your interface (i.e. int serNumber) and type: <i>ip access-group 104 in</i> (where 104 is your new access-list). Hit CNTL and type <i>wr t</i> ro review your config file.</p>
<p class="1"><b>Optional things:</b><br />
To save this config to your start up config type: <i>save run start</i><br />
If you wish to tidy up your access-list, i.e. do not have all the 103, 104, 105 modfications listed go back into conf and type no access-list 103 (where 103 is the list you wish to remove).
<p class="1">
That's all folks!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>293</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-edit-a-cisco-router-access-list</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>How to create IIS mappings for coldfusion</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/how-to-create-iis-mappings-for-coldfusion/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=294</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just the other day I installed Cold Fusion Enterprise on one of our web servers hosted externally. After the re-boot I fired up a browser to test the installation. Alas the server wouldn't execute <em>.cfm</em> file extensions, instead offering me the chance to download these. The problem was down to the installation program not mapping <em>.cfm</em> extensions to the <strong>Application settings</strong>. You can check the mappings and fix this by carrying out the following steps:</p>
<ol>
<li>Start up IIS MMC.</li>
<li>Right click on your site and select <strong>Properties</strong>.</li>
<li>Change to Home Directory, and in the <strong>Application settings</strong> box, click on the configuration button.</li>
<li>Under the <strong>Add mapping</strong> tab yo can see all the file extensions that your server can interpret. If <em>.cfm</em> is not listed, this is the reason your server s not executing the Cold Fusion templates.</li>
<li>Click on the <strong>Add</strong> button and complete the dialogue. Under executable specify the path and file name for your CF server executable, usually <em>&lt;drive letter&gt;:CFUSION\Bin\iscf.dll</em>. Next specify the file extension, i.e. <em>.cfm</em> and make sure that the option for <strong>Scrip engine</strong> is ticked.</li>
</ol>
<p>Repeat the same step for the file extension <em>.dbm</em>, if it's not listed either. Once done click on OK and OK again to return to the console. Fire up your browser and try it again. The files should now execute.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>294</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-create-iis-mappings-for-coldfusion</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="category" nicename="iis"><![CDATA[iis]]></category>
		<category domain="category" nicename="web-server"><![CDATA[web server]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Accessing a dB on a remote server</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/accessing-a-db-on-a-remote-server/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=296</guid>
		<description></description>
		<content:encoded><![CDATA[Some of the information we wanted to publish on  my previous company's intranet was residing on databases that weren't on the main web server. This initially caused a little headache as we really needed to access that data on the remote NT server and publish it. So how do you get around that problem??

Well the solution to that problem turns out to be incredibly simple. I maped a drive to our web server to the share where the database was held. Then I started up the Cold Fusion Administrator and created a datasource for that database (Db) and went through the process in the normal manner. You'll notice that once you browse for that Db that you can't see the mapped drive. So go back to the previous screen and enter the path manually, something like this:

[code]
{drive letter}\:{share name}\{directory or file name} 
[\code]

That's pretty much it. You can now safely create the datasource. Should the Verification process fail go to the advanced properties section of the datasource properties, you may have to specify a user account with sufficient permissions to access that share, i.e. create a CF service account with sufficient permissions and that should do the trick.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>accessing-a-db-on-a-remote-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="category" nicename="database"><![CDATA[database]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting Cold Fusion up on Apache</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/setting-cold-fusion-up-on-apache/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=297</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This post relates to configuring Cold Fusion 4.5 to run on Apache v1.3.12</p>
<p>This document is briefly going explain out how to configure your Apache web server to execute Cold Fusion pages. First off install the Cold Fusion application server (available from <a href="http://www.allaire.com">Allaire</a>) normally. When the moment arrives to specify the location of your CF documentation and example files, select a directory of your preference (or if you have IIS running alongside Apache, simply accept the default path <em>&lt;drive letter&gt;:INETPUB\wwwroot</em>). After continue with the normal installation procedure.</p>
<p>Once this is done, shutdown your Apache web server (available from <a href="http://www.apache.org">http://www.apache.org/</a>). Next you will need to copy the following file <em>ApacheModuleColdFusion.dll</em> from the <em>&lt;drive letter&gt;:CFUSION\bin</em> directory to the modules sub-directory in your Apache installation (usually <em>&lt;drive letter&gt;:Program Files\Apache Group\Apache\modules</em>).</p>
<p>The next step requires you to edit your <em>httpd.conf</em>. Locate the section displayed below:</p>
[code]# Note: The order in which modules are loaded is important.  Don't change
# the order below without expert advice.
#
#LoadModule anon_auth_module modules/ApacheModuleAuthAnon.dll
#LoadModule cern_meta_module modules/ApacheModuleCERNMeta.dll
#LoadModule digest_module modules/ApacheModuleDigest.dll
#LoadModule expires_module modules/ApacheModuleExpires.dll
#LoadModule headers_module modules/ApacheModuleHeaders.dll
#LoadModule proxy_module modules/ApacheModuleProxy.dll
#LoadModule rewrite_module modules/ApacheModuleRewrite.dll
#LoadModule speling_module modules/ApacheModuleSpeling.dll
#LoadModule status_module modules/ApacheModuleStatus.dll
#LoadModule usertrack_module
#LoadModule modules/ApacheModuleUserTrack.dll[/code]
<p>Once you have done so enter the following lines at the end of the above section so that the section should now look like this:</p>

[code]# Note: The order in which modules are loaded is important.  Don't change
# the order below without expert advice.
#
#LoadModule anon_auth_module modules/ApacheModuleAuthAnon.dll
#LoadModule cern_meta_module modules/ApacheModuleCERNMeta.dll
#LoadModule digest_module modules/ApacheModuleDigest.dll
#LoadModule expires_module modules/ApacheModuleExpires.dll
#LoadModule headers_module modules/ApacheModuleHeaders.dll
#LoadModule proxy_module modules/ApacheModuleProxy.dll
#LoadModule rewrite_module modules/ApacheModuleRewrite.dll
#LoadModule speling_module modules/ApacheModuleSpeling.dll
#LoadModule status_module modules/ApacheModuleStatus.dll
#LoadModule usertrack_module
#LoadModule modules/ApacheModuleUserTrack.dll
#Cold Fusion settings
LoadModule coldfusion_module modules/ApacheModuleColdFusion.dll[/code]
<p>You are now nearly ready to test your Cold Fusion installation. All that remains to be done is to tell your Apache web server the location of your <em>cfdocs/</em> directory. To do this edit your <em>srm.conf</em> file so that your file looks something like this:</p>
[code]#
# This is the default file for the ResourceConfig directive in httpd.conf.
# It is processed after httpd.conf but before access.conf.
#
# To avoid confusion, it is recommended that you put all of your
# Apache server directives into the httpd.conf file and leave this
# one essentially empty.
#

#Cold Fusion settings
Alias /cfdocs/ "&lt;drive letter&gt;:/&lt;your installation directory&gt;/cfdocs/"[/code]
<p>At this point you should also be aware of the fact that the Apache web server is case sensitive. So there is a distinct difference between entering <em>cfdocs</em> and <em>CFDOCS</em> when specifying your alias name. You are now ready to restart your Apache web server (please note that if you are using the single user version for development purposes your Apache server has to work on port 8080, else Cold Fusion won't allow the execution of .cfm pages).  Once the server is restarted you are ready to test your installation. Simply point your browser to <em>http://&lt;your domain or ip address&gt;/cfdocs/index.htm</em>. If the CF welcome page is served you have properly configured the <em>cfdocs/</em> directory. Now just go to the <strong>Test installation</strong> page and test CF. For problems with CF please refer to your CF documentation. For the CF documentation on configuring Apache to serve CF pages check out the documentation that comes with the CF installation (if installed usually located at <em>http://&lt;server name&gt;/cfdocs/ Administering_ColdFusion_Server/01_Installing_and_Configuring_ColdFusion/admin012.htm#1023844</em>)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>297</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-cold-fusion-up-on-apache</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="apache"><![CDATA[apache]]></category>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="category" nicename="web-server"><![CDATA[web server]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Basic SNMP Configuration</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/basic-snmp-configuration/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=298</guid>
		<description></description>
		<content:encoded><![CDATA[This little document will show you how to configure the <em>snmpd.conf</em> file and enable snmp on your linux box. In order to this you are going to have to be familiar with Vi editing (see <a href="http://gregs.tcias.co.uk/2000/10/19/basic-vi-editingbasic-vi-editing/">Basic Vi editing</a> for an introduction).

First off telnet into your server and log on (you'll need su rights for the latter stages of this introduction). The first step I had to do was find the relevant snmpd.conf file. To do this I typed <em>whereis snmd.conf</em>. In most installations it will be in the /etc directory. So change to that directory and make a backup  copy of the <em>snmpd.conf</em>. Then you can open it in your vi editor. The only entry I modified dealt with the systemn contact and system location. Look for the following entry:

[code]
##
## the entry for system.Contact and system.Location:
##
[/code]

There you can uncomment and edit the entries labelled <em>system contact:</em> and <em>system location:</em>. Once done save your changes and exit the file.

Next I'll show you how to stop and re-start the snmpd daemon. Check to see if it is already running. If that is the case then type <em>killall -9 snmpd</em>, if it isn't then you simply need to type: <em>snmpd &amp;</em> to start it. Now yo can use for example MRTG to monitor the network traffic going through the Linux box.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>298</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>basic-snmp-configuration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Command line FTP</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/command-line-ftp/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=299</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This little article will introduce you to the wonderful and archaic way of accessing FTP sites using the command line. Please note that you can use these commands both under Unix and DOS.</p>
<p><strong>Establishing a connection</strong><br />
When connecting to an FTP server from the command line, open a DOS prompt (select Start/Run and for Win9x type command or for NT type cmd) window. There you can now type:</p>
<p>ftp ftp.mysite.com</p>
<p>Should you need to	connect to an FTP server on a diffrent port other than the default port you need to connect using the following set of commands:</p>
<p><em>ftp</em>. You should now see the following prompt:<em> ftp></em>. There type: <em>open ftp.mysite.com 1234</em>, where 1234 is the number of the port you are trying to connect to.</p>
<p>In either case you will be asked to login, so supply your username and password at the relevant prompts, right now let's move on to the interesting bits.</p>
<p><strong>Some useful commands</strong><br />
Before we get into downloading and uploading files here are some useful commands:</p>
<ul>
<li> Type <em>?</em>, to obtain a list of all availbale commands.</li>
<li> Type <em>bin</em>, to change to binary mode, this is usually used for anything other than text files upload and downloads.</li>
<li> Type <em>ascii</em>, to change back to ASCII mode.</li>
<li> Type <em>hash</em>, this while uploading and downloading gives you an incremental row of hashes marking the progress of either your upload or download.</li>
</ul>
<p><strong>Moving around remotely</strong><br />
Right now that you have logged on you need to know where you in are in the directory and tree and how to navigate, and this is where a little bit of Unix comes in handy. In order tpo find out where you are type <em>pwd</em> this stands for print working directory. To find out what is located in the directory you are currently in, type <em>ls</em>. This gives you a list of files and sub-directories, but not in a very legible format. So try typing <em>ls -l</em>. This gives you a better idea of what is what and if memory serves me well also a list of permissions on each item listed. Should that list get to long, i.e. rattle past you on the screen at the speed of light, type <em>ls -l |more</em>. You can now peruse the directory listing at your leisure as it will stop when it fills the screen. To bring up the rest, just press the space bar. You can change directories by typing <em>cd</em>. If you need to step through several directories and know the path, you can type this <em>cd directpry1/subdirectory/etc</em>. To backtrack out of a directory type <em>cd ..</em> and to backtrack several directories type <em>cd ../..</em></p>
<p><strong>Moving around localy</strong><br />
Right know you kow how to move around on the FTP server, but how do you get around your local machine? First of all to find out where you are, you can type <em>lcd</em>. This is the same as the <i>pwd</i> command and it gives your current path. Unfortunately I am not aware of a method for listing the contents of your local directory (so fire up explorer or whatever and take a peak). To change local directories you type <i>lcd DirectoryName</i>, to move back you type <i>lcd ..</i>. And that's all I know.
</p>
<p><b>Uploading files</b><br />
The command used to upload a file is <i>put</i>, so you would type something like this <i>put MyFile.FileExtension</i>. Pretty straightforward right? However there are a few more things you need to now. FTP distinguishes between Binary files and ASCII files, and if you happen to upload a file in ASCII format that should actually be in Binary the result might be less than successful. By default it is set to ASCII, so to change it to Binary, type <i>Bin</i>. You see a message informing you of the mode change. The next yo can do is use the <i>hash</i> command. THis displays a incremental row of hashes, symbolising the upload process. Why do you want to do this? Well you may well upload a huge file at one stage or another and by default the screen just sits there and gives you no indication of progress. For all you know it may well be hanging. So by using the <i>hash</i> command you can keep an eye on things and see how things are progressing.<br />
Now you now how to upload single files, but how do you upload multiple files I hear you cry! To do this you use the <i>mput</i> command (multiple put?). The following example uploads all files with the extension "html". <br />
<i>mput *.html</i><br />
[Using this command <i>put *.html</i> will only grab the first html file in the directory]. Be careful when using <i>mput *.*</i> cause this tries to upload the entire contents of the directory, including subdirectories (only it creates files, rather than recreating the directory and it's content and structure.</p>
<p><b>Downloading files</b><br />
The concept is very similar than that of uploading files. You can again use the <i>hash</i> command to track progress. To download a file you use the <i>get</i>command, e.g. <i>get MyFile.FileExtension</i>. Similarly to download several files in one go type <i>mget *.html</i>, which in this case will download all the files with the extension html.</p>
<p><b>Deleting files and directories</b><br />
To a delete a file, type the following command <i>del FileName.FileExtension</i>. To delete multiple files, type <i>del *.FileExtension</i>. To delete a directory, you can use the <i>rm</i> command, but you have to make sure that the directory is empty. You type <i>rm DirectoryName</i>.</p>
<p>Well that's about it. Hope you found this introduction useful</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>command-line-ftp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>De-compressing files in Linux</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/de-compressing-files-in-linux/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=300</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the most frequent operations you'll carry out when running or configuring a Linux box is to install patches, loads of them. So you'll frequently be downloading files from the Internet and in almost all cases they will be in a compressed format. The files will usually end in <b>.tar.gz</b> and have been compressed using <em>Gzip</em> and <em>Tar</em>. This document will show you how to extract the content of those files.</p>

<p>Files ending in <strong>.gz</strong> have been compressed using <em>Gzip</em> (for more information, please consult the man page [<em>man gzip</em>]. To start the de-compression process, you need to type, from the command prompt:</p>
<p>gunzip &lt;filename&gt;.tar.gz</p>
<p>Using the above example this will leave you with a <em>&lt;filename&gt;.tar</em>. Right now you still can't access the contents of the file and execute it. So you'll need to un-tar the file or un-pack, this is done by entering the following command from the command line:</p>
<p>tar -xvf &lt;filename&gt;.tar</p>
<p>This extracts the contents of the file, recreates the directory structure and displays the processing. For a full listing of the switches and their functions please refer to the man pages (<em>man tar</em>). You can now change to the directory and execute the patch or application.</p>

<h4>Update</h4>
<p>Just figured out a really good way to carry out the above operations in one step:</p>
<p>cat &lt;filename&gt;.tar.gz | gunzip | tar xf -</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>300</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>de-compressing-files-in-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up email forwarding</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/setting-up-email-forwarding/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=301</guid>
		<description></description>
		<content:encoded><![CDATA[In this document I will show you two methods of configuring e-mail forwarding on a Linux mail server. You will need to have superuser access rights or login as root. Secondly you will need to know how to use the Vi editor (see <a href="http://gregs.teacupinastorm.com/html/article/article.php?id=881FE5AB-0398-4FF2-B9800809DAADB3F0">Basic Vi editing</a> for an introduction). Also in the examples don't type the information in brackets, unless othewise specified, as it's only their for comment purposes.So let's get cracking.

<strong>Using .forward</strong>

In the first method we will create a file in the users home directory. So change to the user's directory (in our example it will be jsmith [Or our trusty John Smith user]). There you will have to create a file called <em>.forward</em> using vi. In the file you will enter the e-mail address where all the messages are to be forwarded to. Follow the example below and substitute jsmith for your user's name.

<em>cd /home/jsmith

vi .forward

(enter the e-mail address to which all incomming messages are to be forwarded)

jsmith@otherdomain.com

(save and quit the file)</em>

You have now configured all of John Smith's e-mails to be sent to jsmith@anotherdomain.com

<strong>Using the aliases file</strong>

The second method is to use the aliases file. So just open the file in your Vi editor and create a new category at the end of the file called forwarding. There you will enter the username and point to the new address. The example below should help clarify this:

<em>vi /etc/aliases

(scroll to the end of the file and insert the following statements)

# Forwarding

jsmith:	jsmith@anotherdomain.com

(save and quit the aliases file and enter the following command)

sendmail -bi</em>

This method allows for better centralised control, as all the information is stored in one place and therefore easier to maintain. Again I hope you found this tidbit of information useful.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>301</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-email-forwarding</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="email"><![CDATA[email]]></category>
		<category domain="category" nicename="sendmail"><![CDATA[sendmail]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Some notes on creating tables from the SQL Server Query Analyser</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/some-notes-on-creating-tables-from-the-sql-server-query-analyser/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=302</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Some notes on creating tables from the SQL Server Query Analyser</h3>
<p class="1">I have decided to include here some notes and a sample script for creating a table using the SQL Server Query Analyser. The main reason for using scripts rather than the graphical user interface (GUI), is that you can save these scripts and re-use them, e.g. your whole system crashes and you quickly want to re-create your tables, the easiest way is to just run the scripts and hey presto your tables are up and running again. Take a look at the script below</p>
<p class="1">
<pre>
CREATE TABLE [dbo].[Example]
	([ID] [int] Identity (1,1) NOT NULL,
	[UserName] [char] (50) Null,
	[Password] [char] (50) Null,
	[Email] [char] (50) Null,
	[URL] [char] (50) Null,
	[Posts] [smallint] Null,
	[DateCreated] [datetime] Null
) ON [Primary]
GO</pre></p>
<p class="1">The first statement is pretty straightforward you tell the system to create a table with the permissions for <b>dbo</b> and give the table a name of <b>example</b>. Then you can proceed with defining your field names and properties. This whole process has to be done in between rounded brackets. The first field created is unique identifier, called <b>ID</b>, which is an integer starting at value 1 and incrementing in steps of one and also it can't be NULL. Next I defined a <b>Username</b> field, which is a character field, storing up to 50 characters (i.e. usernames longer than fifty characters will not be stored) and this value could be NULL. Let's skip through the char fields as they are all the same. The second to last field labelled <b>Posts</b> is small integer field. In this instance you do not have to specify the field size. It's the same thing for the next field, which is a date/time field. You do not have to specify the field width. Each row apart from the final one has to be ended with a "<b>,</b>". Finally this table is created on the <b>Primary</b> file group. You conclude this script with <b>Go</b>.</p>
<p class="1">To execute this script from within the Query Analyser, simply highlight the whole script and press <i>CTRL+E</i>. If there are any errors, they will appear in the bottom window pane. If everything went well you should be able to read: <i>The command(s) completed successfully</i>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>302</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>some-notes-on-creating-tables-from-the-sql-server-query-analyser</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>SQL 7 MMC configuration file missing</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/sql-7-mmc-configuration-file-missing/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=303</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Recently our SQL box crashed and after a reboot, all the services were working fine, apart from the Microsoft Management Console for SQL (Enterprise Manager). You could however still administrate the server remotely through the MMC on a workstation. The error message we got was that hte MMC file could not be found. On inspection it turned out that the file entitled <strong>SQL Server Enterprise Manager.MSC</strong> was gone. Why this happened I do not know and if anybody can shed some light on this I would be grateful. A search through Technet, did little to shed any more light on this. So what we did is copy a version of the aforementioned <strong>.MSC</strong> file that was residing on aforementioned NT workstation into <strong>&lt;drive letter&gt;:MSSQL7BINN</strong> on the server and that appears to have fixed the problem.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-7-mmc-configuration-file-missing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>How to limit mail attachment size for Sendmail</title>
		<link>http://gregs.tcias.co.uk/2000/10/18/how-to-limit-mail-attachment-size-for-sendmail/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=304</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>How to limit mail attachment size for Sendmail</h3>
<p class="1">This little document is going to briefly show how to limit the size of incoming mail attachments. In order to this you are going to have to be familiar with Vi editing (see <a href="http://www.armagossa.com/content.cfm?content_ID=20">Basic Vi editing</a> for an introduction).</p>
<p class="1">First off telnet on to your mail server and log on as root or su. Next change to /etc directory. In that directory you should find a file called sendmail.cf (if you can't find it, try typing <i>whereis sendmail.cf</i>, this should return a list of files with the word sendmail in it and hence you should be able to locate it that way). Prior to editing it, make a backup copy of it. Now you can type vi sendmail.cf.</p>
<p class="1">Now scroll down this file until you find an entry that looks something like this:<br />
# maximum message size<br />
# 0 MaxMessageSize=1000000<br />
In order to limit the size of messages simply uncomment the last line so that it reads:<br />
0 MaxMessageSize=1000000<br />
Furthermore you can specify the maximum message size by editing the value bit. Once done, save the changes and exit.</p>
<p class="1">The final step involves stopping and restarting the server so that the changes can take effect (check your /etc/rc.d/init.d/ directory).</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>304</wp:post_id>
		<wp:post_date>2000-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-limit-mail-attachment-size-for-sendmail</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="email"><![CDATA[email]]></category>
		<category domain="category" nicename="sendmail"><![CDATA[sendmail]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>139918</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>webmaster@cheapprojectorbulbs.org</wp:comment_author_email>
			<wp:comment_author_url>http://cheapprojectorbulbs.org/</wp:comment_author_url>
			<wp:comment_author_IP>61.247.34.182</wp:comment_author_IP>
			<wp:comment_date>2011-04-14 22:17:29</wp:comment_date>
			<wp:comment_date_gmt>2011-04-15 02:17:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[is there any other way to limit mail attachment size for Sendmail? I'm a new user of UNIX and I'm not that familiar with VI editing. I wonder if I could get other alternative than VI editing to do this.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303375922.0298";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302833849.9799";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>140791</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>94.174.4.121</wp:comment_author_IP>
			<wp:comment_date>2011-04-21 04:52:49</wp:comment_date>
			<wp:comment_date_gmt>2011-04-21 08:52:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Try <a href="http://www.nano-editor.org/" rel="nofollow">nano</a>.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>139918</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303375969.9678";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>148624</wp:comment_id>
			<wp:comment_author><![CDATA[Jay]]></wp:comment_author>
			<wp:comment_author_email>jakul@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://yahoo.com</wp:comment_author_url>
			<wp:comment_author_IP>71.72.124.140</wp:comment_author_IP>
			<wp:comment_date>2011-06-07 15:28:32</wp:comment_date>
			<wp:comment_date_gmt>2011-06-07 19:28:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It appears there is another parameter that limits the
size of the attachment. I commented out the entry
# 0 MaxMessageSize=1000000
and restarted the mail daemon. tried to send a 1M file to myself on the same server. It did'nt get through. Wonder what's blocking.

Jay]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1307542960.063";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307474912.4156";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Installing additional Perl modules</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/installing-additional-perl-modules/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=305</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Installing additional Perl modules</h3>
<p class="1">Every now and then you will have to install new Perl modules, for a multitude of reasons, such as installing a new Perl application that requires new libraries/modules. In order to do this you will have downloaded these from the web (or obtained from a different source) and extracted them from their compressed state (for more information on how to extract files in Linux check out <a href="http://www.armagossa.com/index.cfm?contentID=37">decompressing files in Linux</a>)</p>
<p class="1">Once you have done this, make sure that you have sufficient permissions to execute files, i.e. you are logged on as root or as superuser. Change to the relevant directory and you should always read the INSTALL and README files before doing anything. Ok, once you have done all this you are ready to install the modules.</p>
<p class="1">The first thing you will need to do is to create is a <i>make</i> file. This is achieved by typing at the command prompt:</p>
<p class="1">Perl Makefile.PL</p>
<p class="1">Please not the case of the statement, remember Linux (as any other flavour of Unix) is case sensitive. The <i>make</i> file describes dependencies and contains instructions. So now you are ready to execute the make file, again from the command prompt type:</p>
<p class="1">make</p>
<p class="1">OK now everything is in place to actually begin installing the module. This process takes place in two stages. The first tests the installation and the second carries out the installation, assuming that the test was successful. Ready to install? Type the following commands one after the other:</p>
<p class="1">make test <i><= wait for the execution to finish</i><br />
make install</p>
<p class="1">Once this step is finished, the module should be installed. If you wish to check whether this is the case or not, type the following command:</p>
<p class="1">find `Perl -e 'print "@INC"'` -name '*.pm' -print |more</p>
<p class="1">This will generate a long list (hence the pipe more command). Scroll through the list until you find the module you were adding to your Perl installation. If you are looking for a great Perl reference book, then I can seriously recommend the following book by O'Reilly, <a href="http://www.amazon.co.uk/exec/obidos/ASIN/1565924622/armagossacom">The Perl CD Bookshelf</a>.  It basically contains all the Perl books they have published in a CD format. Very, very useful... Hope you enjoyed this page, as per usual, comments and feedback are welcome.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>305</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>installing-additional-perl-modules</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Using aliases</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/using-aliases/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=306</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Using aliases</h3>
<p class="1">This document will introduce you to the <i>aliases</i> file. You can use this file to create mailing lists, reference old user accounts to new ones, or even point departed employee accounts to a manager's account to make sure that no e-mail message gets lost. Before we begin please make sure that you have either superuser access rights or are logged in as root. Also you will have to be familiar with Vi editing (see <a href="http://www.armagossa.com/content.cfm?content_ID=20">Basic Vi editing</a> for an introduction). Also in the examples don't type the information in brackets, unless othewise specified, as it's only their for comment purposes.</p>
<p class="1"><b>Creating alternative user names</b><br />
To set up an alias you need to edit the file <i>aliases</i> located in <i>/etc</i>. To alias alternative user names to an actual account follow this example using our John Smith:</p>
<p class="1"><i>vi /etc/aliases<br />
(Scroll down the alias file until you get to #USER LIST, immedialtely after it add an entry for John Smith using the following syntax)<br />
#jsmith	John Smith	Sales<br />
(Next you can create your own alias lists of alternative names, insert the following lines)<br />
#Groups at your company<br />
#Alternative user names<br />
johns:	jsmith<br />
(Save and exit the file and type the following command to inform sendmail of the update)<br />
sendmail -bi</i></p>
<p class="1"><b>Creating a mailing list</b>
The same technique is applied to creating a mailing list. Here you simply create an alias and add all the account names that the messages sent to alias are to be delivered to. To clarify this point just imagine you want to create a sales team mailing list with the following address <i>sales@yourdomain.com</i>. Here the alias will be <i>sales</i> and all members of the sales team have tobe added to that alias.</p>
<p class="1"><i>vi /etc/aliases<br />
(Scroll to the of the alias file, i.e. after the last entry made and insert the following assuming that you two user called jsmith and jdough)<br />
#Sales at your company<br />
sales:	jsmith,jdough<br />
(Save and exit the file and type the following command to inform sendmail of the update)<br />
sendmail -bi</i></p>
<p class="1">There is one thing you should bear in mind when editing the <i>aliases</i> file. Make sure that you never leave more than 1 blank line at the end of the file. If you leave 2 empty lines when it comes to running the <i>sendmail -bi</i> command, you'll get an error message and the system won't be updated. Please note it's also good practice to add a reference to the user list (#USER LIST) every single time you add a new user to the system. Chances are he'll have to be added to a mailing group anyway. Right's that's all...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>306</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-aliases</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Basic vi editing</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/basic-vi-editing/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=307</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This document will introduce some of the basic vi editing concepts. First off what is vi? Well it's the built-in text editor that you find on most Unix boxes (including Linux). You start it up by typing the following command:</p>
[code]vi myFileName[/code]
<p>myFileName is either an existing file or a new file that you wish to create. OK so far so good. A word of warning I found navigating around text initially a real pain. How do you enter text? Well hit the <em>i</em> key, which stands for... you guessed it insert. You are know in insert mode and can insert text into that file. To stop entering text press <em>CTRL+[</em></p>
<p>Next let's delete some text that you have entered. There are two ways of doing this. If you want to delete just portions of the text, e.g. a word, first make sure that you are not in the Insert mode (<em>CTRL+[</em>), move to the first letter of the word you wish to delete and pressn <em>x</em>. This should have deleted the first letter. Keep pressing <em>x</em> until you have completely removed the word you wanted to delete.</p>
<p>What if you want to delete a complete line type <em>dd</em>. This removes the entire line and places it into the buffer. I guess this command is similar to the <em>cut</em> command you would use under windows. So can you paste it back in? Of course you can. Just press <em>p</em> at the appropriate location and the line should reappear.</p>
<p>Next I will show you how to quit the editor without saving. To do this make sure again you are in no editing mode (<em>CTRL+[</em>) and type: <em>:q!</em>. This should take you back to the command prompt or shell. To quit and save, type: <em>:wq!</em>. Again make sure that you are not in edit mode first.</p>
<p>Well that's about the extent of my knowledge on vi editing as it is all I need to know. However if I get stuck or should you want to learn more about vi editing then I can seriously recommend this book: <a href="http://www.amazon.co.uk/exec/obidos/ASIN/1565924266/teacupinastor-20">Learning the vi Editor</a> from <a href="http://www.oreilly.com">O'Reilly &amp; Associates, Inc</a>. As with most books from O'Reilly it's clear, concise and very informative.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>307</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>basic-vi-editing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Adding to the Send to command</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/adding-to-the-send-to-command/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=308</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Adding to the "Send to" command</h3>
<p class="1">One way to quickly open files is to use the send to command that you usually find by right clicking on a file. This is extremely usueful when you are developing and you quickly want to look at the content of a file. Now the only problem that exists is that most file types are not listed in there. So what you now need to do is to add the progam you wish to send the files to. In the following I will show you how to do this.</p>
<p class="1">The first thing you need to do is locate the <b>Send To</b> folder. This can be found in your Profiles directory, e.g.: <i>c:winntprofiles&lt;your username&gt;Send To</i>. Once you have located that folder you will need to add a shortcut to the application you wich to send files to. So in this example we are going to add the Notepad application to the <b>Send To</b> folder.</p>
<p class="1">Right click on the folder space and select <b>New/Shortcut</b>. Then all you need to do is locate the Notepad.exe file, which is located in the <i>c:winnt</i> and follow the prompts.</p>
<p class="1">There you go all done, quickly check by right clicking and looking at the options available to you under Send To!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>308</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adding-to-the-send-to-command</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Adding virtual folders to Apache</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/adding-virtual-folders-to-apache/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=309</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Adding virtual folders to Apache</h3>
<p class="1">This document will introduce you to creating virtual folders for the Apache v1.3.12 web server (<a href="http://www.apache.org/">www.apache.org</a>). I will be talking you through creating a virtual folder with the help if an example, namely by creating such a folder for the ActiveState (<a href="http://www.activestate.com/">www.activestate.com</a>) PERL html documentation.</p>
<p class="1">What we are going to do is create a virtual directory called <i>perldocs</i>, which will give us the following URL <i>http://<your server name or IP address>/perldocs/</i>. The PERL documentation can be found in the following location <i>C:/Perl/html/</i> assuming you used the default installation settings. You are armed with the basic info, all we need to do know is inform the server of this information. </p>
<p class="1">First you will need to stop your server. Open a command prompt and type:</p>
<p class="1"><b>net stop Apache</b></p>
<p class="1">This will stop the Apache web server service. Next open your favourite text editor and open the <i>srm.conf</i> file in the <b>conf</b> directory of your server installation by default this should be <i>c:Program FilesApache GroupApache</i>. Before making any modifications to any of your files, remember to make a backup copy first. You will need to add the following lines:</p>
<p class="1"><font size=-2><i>#virtual html documentation directories<br />
Alias /perldocs/ "C:/Perl/html/"</i></font></p>
<p class="1">So your file should look something like this</p>
<p class="1"><font size=-2><i>#<br />
# This is the default file for the ResourceConfig directive in httpd.conf.<br />
# It is processed after httpd.conf but before access.conf.<br />
#<br />
# To avoid confusion, it is recommended that you put all of your<br />
# Apache server directives into the httpd.conf file and leave this<br />
# one essentially empty.<br />
#<br />
<br />
#html documentation aliases<br />
Alias /perldocs/ "C:/Perl/html/"</i></font></p>
<p class="1">Save and quit your editor. When you restart your server Apache (from the command prompt type <b>net start Apache</b>) will load the configuration file after processing the <i>httpd.conf</i> file. Open your browser and point it to the aforementioned URL. It should be noted that when you create the aliases (e.g. <i>perldocs</i>), when you enter the URL make sure that your entry is case-sensitive. Failure to so will result in an error 404 being returned.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>309</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adding-virtual-folders-to-apache</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Installing the Apache web server on Windows 2000 with IIS 5 running</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/installing-the-apache-web-server-on-windows-2000-with-iis-5-running/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=310</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Installing the Apache web server on Windows 2000 with IIS 5 running</h3>
<p class="1">This document explains how I configured the Apache web server to run on my Windows 2000 machine with IIS 5 running simultaneously. The extraction of the files and there installation is extremely straightforward. Simply double click on the executable file and follow the prompts (as a rule accept the defaults that the installation supplies). Once this is done you can click on the Start button and from Programs, choose the Apache Web Server folder and choose the Install Apache as a service. This again is done automatically and all you should see is a DOS prompt that flashes up quickly and close once the process is completed. Now you are able to start the server as a service.</p>
<p class="1">This however is also the stage during which you will run into problems if you are running IIS5 on your box. If you tried to fire up the server from the Start Apache option in the Apache Web Server folder, another DOS window will open quickly and close down. Trying to browse a file will produce no results. If you have installed the option to run Apache as a service and try and start it you'll see a dialogue popup informing you that the service has failed to start. By going to the command prompt and typing <b>apache</b> you'll get an error message. This should give you a hint as to why the server is failing to startup. In order for the installation to work side by side you need to configure certain options.</p>
<p class="1">All of the Apache server configuration is done with the help of <i>conf</i> files. These are basically text files that the server reads at startup to set the options for your server. The files are located in the conf directory of your installation path (if you choose the defaults that will be <i>c:Program FilesApache GroupApacheconf</i>).</p>
<p class="1">The only file you'll need to edit is the <i>httpd.conf</i> file. Please note that you really should make a backup copy of the original file, just in case. This file controls the startup parameters of the Apache web server daemon (or service). You will need to make to adjustments, you will need to specify the Server Name and the default port the server will listen on.</p>
<p class="1">First off locate the line that specifies the port the server listens on:</p>
<p class="1"><i><font size="-2">#<br />
# Port: The port to which the standalone server listens.<br />
#<br />
Port 80</font></i>
</p>
<p class="1">By default this is set to port 80, but your IIS server is listening on that port. So change the setting to 8081 (you can specify any value that you like as long as it doesn't belong to another service that is running [e.g.: port 25 belongs to SMTP]). That section will look something like this (depending on the port you have chosen):</p>
<p class="1"><i><font size="-2">#<br />
# Port: The port to which the standalone server listens.<br />
#<br />
Port 8081</font></i></p>
<p class="1">So far so good, now we need to specify the server name, so locate the following line:</p>
<p class="1"><i><font size="-2">#<br />
# ServerName allows you to set a host name which is sent back to clients for<br />
# your server if it's different than the one the program would get (i.e., use<br />
# "www" instead of the host's real name).<br />
#<br />
# Note: You cannot just invent host names and hope they work. The name you<br />
# define here must be a valid DNS name for your host. If you don't understand<br />
# this, ask your network administrator.<br />
# If your host doesn't have a registered DNS name, enter its IP address here.<br />
# You will have to access it by its address (e.g., http://123.45.67.89/)<br />
# anyway, and this will make redirections work in a sensible way.<br />
#<br />
#ServerName new.host.name</font></i>
</p>
<p class="1">By default this section is commented out so you'll need to un-comment the line. You do this by removing the hash in front of the line with <i>ServerName</i>. Next you'll need to specify a host name. After <i>ServerName</i> specify your server name, e.g. localhost. So now that section should look something like this:</p>
<p class="1"><i><font size="-2">#<br />
# ServerName allows you to set a host name which is sent back to clients for<br />
# your server if it's different than the one the program would get (i.e., use<br />
# "www" instead of the host's real name).<br />
#<br />
# Note: You cannot just invent host names and hope they work. The name you<br />
# define here must be a valid DNS name for your host. If you don't understand<br />
# this, ask your network administrator.<br />
# If your host doesn't have a registered DNS name, enter its IP address here.<br />
# You will have to access it by its address (e.g., http://123.45.67.89/)<br />
# anyway, and this will make redirections work in a sensible way.<br />
#<br />
ServerName localhost</font></i>
</p>
<p class="1">Right that's it. The server is ready to be fired up. From the command line in the <i>c:Program FilesApache GroupApache</i> directory type <b>apache</b>. This will startup the server. If all is working you'll see the following content in the DOS window: </p>
<p class="1"><i>[Thu Jun 22 23:16:49 2000]<br />
Apache/1.3.12 (Win32) running?<br /></i>
</p>
<p class="1">Should there be any errors these will appear in the window with hints on how to remedy them. Shortly I will explain how to configure Perl to work for Apache.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>310</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>installing-the-apache-web-server-on-windows-2000-with-iis-5-running</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Configuring Perl to run on Apache (win32)</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/configuring-perl-to-run-on-apache-win32/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=311</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This document will highlight the changes necessary to get Perl to work with your Apache web server running on Windows NT/2000. As with the configuration of any other aspect of Apache, you will need to modify the configuration files. These are located in <em>C:\Program Files\Apache Group\Apache\conf</em> if you choose the default installation options.</p>
<p>The file you need to edit is <em>srm.conf</em>. When the server starts up it processes the <em>httpd.conf</em> first and then it will look for <em>srm.conf</em>. You will need to specify two things here. The first is the location of your CGI scripts. Next you will need to map the perl file extensions to your server. The <em>srm.conf</em> file looks initially like this:</p>
<p><em>#<br />
# This is the default file for the ResourceConfig directive in httpd.conf.<br />
# It is processed after httpd.conf but before access.conf.<br />
#<br />
# To avoid confusion, it is recommended that you put all of your<br />
# Apache server directives into the httpd.conf file and leave this<br />
# one essentially empty.<br />
#</em></p>
<p>To implement the changes required make sure your config file looks like this:</p>
<p><em>#<br />
# This is the default file for the ResourceConfig directive in httpd.conf.<br />
# It is processed after httpd.conf but before access.conf.<br />
#<br />
# To avoid confusion, it is recommended that you put all of your<br />
# Apache server directives into the httpd.conf file and leave this<br />
# one essentially empty.<br />
#<br />
ScriptAlias /cgi-bin/ "C:/Program Files/Apache Group/Apache/cgi-bin/"<br />
AddHandler cgi-script .pl</em></p>
<p>The first new line specifies the location of your cgi-bin directory (<strong>ScriptAlias</strong>) and the second line deals with the file extension mappings (<strong>AddHandler</strong>). For the changes to take effect stop and restart your server.</p>
<p>In order for your scripts to work you will need to specify the path of your Perl interpreter in your perl scripts. If you are running ActivePerl 5.6.0.613 (<a href="http://www.activestate.com/">www.activestate.com</a>) the default path should be <em>C:\PERL\bin\perl.exe</em>. So the opening line of all your Perl scripts should look like this:</p>
<p><em>#!C:\PERL\bin\perl.exe</em></p>
<p>Should you know wish to allow cgi-scripts to be executed from any other directories other than the <em>cgi-bin/</em> directory you will have to specify an alias and the path to that alias. Again in the srm.conf file enter the following line if you wish to have an alias "<em>Scripts</em>" for the directory called <em>c:PerlScripts</em>:</p>
<p><em>Alias /Scripts/ "C:/Perl/Scripts/"</em></p>
<p>Please note the use of "/" for the path definition instead of "". You should be aware of the fact that you can also add these lines to the <em>httpd.conf</em> and the Apache documentation recommends this. However I find it easier to manage changes and information by keeping these modifications in a separate place. If you would like to test your installation try saving the following script in your script directory as <strong>hello.pl</strong> (please make sure that you make the appropriate changes to this script to reflect the location of your perl executable):</p>
<p><em>#!C:\PERL\bin\perl.exe<br />
<br />
&nbsp;&nbsp;&nbsp;use CGI qw(:standard) ;<br />
&nbsp;&nbsp;&nbsp;print header();<br />
&nbsp;&nbsp;&nbsp;print "Hello, world";<br /></em></p>
<p>You can now view this file by entering <strong>http://127.0.0.1/cgi-bin/hello.pl</strong> (or if you have been following the tutorials from this site the URL should be <strong>http://127.0.0.1:8081/cgi-bin/hello.pl</strong>). If all is working your browser should display the message <em>Hello, world</em>. Hope you found this quick introduction useful. All of it and much more can be found in the documentation provided with the Perl installation and these are located by default in the <em>c:perlhtml</em>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>311</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configuring-perl-to-run-on-apache-win32</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Crime and Punishment</title>
		<link>http://gregs.tcias.co.uk/2000/11/03/crime-and-punishment/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=204</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Wither Russia? The image of Russia in the fiction of the nineteenth and twentieth century</strong>

<strong>Essay title: The image of St. Petersburg in the context of the development of Russian literature. (Discuss Dostoevsky's treatment of the city in Crime and Punishment)</strong>

"<em>At the beginning of July, during a spell of exceptionally hot weather, towards evening, a certain young man came down the street from a little room he rented from some tenants in Stolyarny Lane and slowly, almost hesitantly, set off towards Kokushkin Bridge. (...)</em>

<em>Outside the heat was terrible, with humidity to make it worse; and the crowds of people, the slaked lime everywhere, the scaffolding, the bricks, the dust and that distinctively summer aroma, so familiar to every inhabitant of St. Petersburg who has not the means to rent a dacha in the country - all these things had a chattering effect on the young man's already jangled nerves. The unbearable stench from the drinking dens, of which there are in this quarter of the city inordinately many, and the drunks he kept running into every moment or two, even though it was still working hours, completed the sad and loathsome colouring of the scene. An emotion of the most profound repugnance flickered for a moment in the young man's features. (...) But soon he appeared to fall into a deep brooding, which might more correctly have been described as a kind of oblivion, and now, as he walked along, he ceased to be aware of his surroundings, nor had he any desire to be aware of them.</em>" (<em>Crime and Punishment</em>, p.1/2)

The are, in a somewhat condensed form, the opening pages of Dostoevsky's <em>Crime and Punishment</em>. These lines et the tone and atmosphere for the novel, giving the reader many clues about the content of the novel. They also show Dostoevsky's great skill at paying attention to minute details, his skill in describing city life in its most basic environment, at its most poetic. <em>Crime and Punishment</em>, published in 1866, is the story of a young, impoverished (ex-) student named Raskalnikov living in St. Petersburg. The plot is very simple: it evolves around Raskalnikov's murder of an old pawnbroker and her unfortunate sister. The subplots are linked to Raskalnikov's justification for the murders. On the one hand he hopes to save his sister Dunya from an arranged marriage with Luzhin, of which he himself is supposed to benefit. On the other, there is his attachment to the young prostitute Sonya, to whom he first confesses the murders. Through her Dostoevsky voices his idea on suffering. Torment is necessary in the sense that only through it one can reach happiness. Surrounding the plot are a number of different characters such as Svidrigailov (Raskalnikov's evil double), Razumikhin (a fellow student and friend) and Marmeladov (a drunk civil servant).

I shall talk in more detail about Dostoevsky's writing of Crime and Punishment, but first I would like to show Dostoevsky's origins and how he formed his views on the city. Finally, I will discuss his portrayal of St. Petersburg in <em>Crime and Punishment</em>.

To discuss the origin's of the theme of the city, especially St. Petersburg one has to go as far back as 1833, namely to Pushkin. Alexander Pushkin then wrote the poem of <em>The Bronze Horseman</em>, subtitled <em>A Petersburg Tale</em>. Its setting is that of the great flood of 1824 and its protagonist is the lowly government clerk Yevgeny. The choice of the leading role is already an interesting point to note, as Pushkin choose someone from the lower classes rather than someone from the upper echelons of society, which was the more accepted thing to do. In this tale the clerk is considering getting married when the flood occurs. After the flood have subsided again, he goes in search of his beloved, only to discover that her house has been washed away and that she is probably dead. This send Yevgeny over the edge and he becomes insane. He alienates himself from his environment and finally turns his back on society. The poem ends with Yevgeny standing by the statue of the bronze horseman and whispering to the statue of Peter the Great:

"<em>All right then, wonder-worker, you just wait</em>" (<em>The Bronze Horseman</em>, p.257)
He then flees in total fright, pursued by the sounds of hooves. His body is finally found on a small island by the washed up house of his beloved. Out of respect he is buried there.

The above mentioned quotation was a vicious dig at the current underlying political mood in Russia. The story itself is not a political one. It is the underlying tone and often, almost in passing, used metaphors. Pushkin was like many Russians disappointed with the way things were going in Russia. For him Petersburg was the symbol of progress, of modernisation. It's building by Peter 1st was a challenge to the elements and an opening to the West. He criticises the Tsar in his poem for lacking the vision and the strength to defeat the problems. His symbolism is that of the weather:

"<em>In that dread year the late Tsar in his glory
&gt;Still ruled Russia. He came out on to the balcony,
Sad, troubled, and said: 'Tsars cannot master
The divine element'...</em>" (<em>The Bronze Horseman</em>, p.251)

This is a sad reference to the fact that the Tsars used to be able to master the elements. Petersburg is the obvious proof, as it was built on the surrounding swamps. Puskin also continues this metaphor to illustrate how detached the Tsar has become from the rest of his country, as is shown on page 252 of <em>The Bronze Horseman</em>:

"<em>The squares like lakes; broad rivers of streets
Pouring into them. The palace a sad island.</em>"

One can now see how Pushkin employed the city, its streets, its people and its weather to convey a subtle message. The poem went further than just expressing a political opinion and mood. By using the city as a mean, as a backdrop, as a setting, Pushkin encompassed the whole of Petersburg, voicing not only the opinion of the intelligentsia, but also that of the ordinary people. He demonstrated the will of the people that the Tsar so often regarded as his property.

The next step in this "literary revolution" was Gogol. Whereas Pushkin's setting was the outlying districts of Petersburg and Senate Square, Gogol now moves into the town centre. Furthermore is his treatment of the city not realistic, but rather fantastic and supernatural. Even though many of his <em>St. Petersburg Tales </em>focus on Nevsky Prospect, his most famous short story <em>The Overcoat</em> (1842) does not mention any part of town directly. This demonstrates the seclusion of the lonely individual in this fantastic city. The short story deals with the dilemma faced by Akaky Akakievich when the need arises to acquire a new overcoat. He decides to purchase the new overcoat and his work colleagues throw a party in honor of this acquisition. For a short while Akaky breaks with his secluded and lonely life, and he enters the fantastic world of St. Petersburg. His joy, however, is short-lived as he is attacked and his overcoat is stolen on his way back from the party. Some critics, such as M. Berman, suggested that his overcoat actually got stolen on Nevsky Prospect. At that time Nevsky Prospect was the place for all the classes to mingle. It was the only place where politics could be discussed a little, hence it was something of a cultural center, a place of marvels.

This tale also gives a small insight into Russian world order (hierarchy). Upon having his coat stolen, Akaky tries to enlist the help of one of his friends, who has just been promoted to the rank of general. This attempt all but annihilates Akaky. The promotion has gone to his friend's head and he throws the lesser Akaky out. Gogol raises the issue of social standing quite often in his stories. He demonstrated the self-effacing inequality of the ranks.

This was very much the same line of thinking as that of Chernichevksy, who wrote <em>What is to be done? </em> in 1863 while in prison. Even though many critics believed this work to be inferior it did contain one vital element. It is the tale of Lopukhov, a student, who on his way back from giving a lesson on the outskirts of Petersburg, literally bumps into a man of a higher rank. Instead of making way for him, Lopukhov picks the man up and dumps him the gutter. Now this was quite a bold move as it could result in a jail sentence. Surprisingly though, people around him do not seem to take any notice of this action. On the contrary he gets encouraging smiles from his equals. Chernichevsky's political point is obvious.

Summarising one can say that Pushkin started the trend of using the city as a backdrop for urban life and its opinions. Gogol tool it a step further by placing the problems into the city centre, yet rendering the surroundings supernatural. Chernichevsky was the boldest of them all (probably why he was improsined).

So where does Dostoevsky come into all this? Dostoevsky came to fame in the early '40s, he did so by publishing the novel <em>Poor Folk</em> (1846), so in between Gogol and Chernichevsky. It is during this period that we find Dostoevsky trying out different genres and developing his theme of the city. This initial fame he acquired was somewhat short lived and his next publication <em>The Double</em> was a great disappointment and the following publication <em>Mr Pokharchin</em> nearly ruined his named. It is after these unsuccessful publications that he finds himself out of pocket and therefore turns to journalism and to a very popular style of the time: the feuilleton. This style of writing first originated in Paris and brought overnight success to EugÃ¨ne Sue, who published <em>Les mystÃ¨re de Paris</em>. The feuilletons had started out by reporting on the social events. It soon gained more depth and turned into a roman feuilleton discussing the city life in general. The French regarded the feuilleton as:

"<em>The literary equivalent of the sketch painting</em>". (D. Fanger; <em>Dostoevsky and Romantic Realism</em>, p.134)

Dostoevsky who already enjoyed walking the streets aimlessly, looking at people and buildings, enjoyed his new job as a Feuilletonist all the more as it got him out in search of subjects. Now I feel is also the time to talk about Dosoevsky's approach to literature. His stories are set in the middle to lower classes, he enjoyed the down trodden neighbourhoods, in contrast he portrayed the upper class ones "<em>singularly uncharacterised</em>" (D. Fanger, p.133). His world was that of the poor and lowly. He was looking for a new "word" in Russian literature. For him the literature so far was that of the gentry and landowners, which were so frequently portrayed by Tolstoy and Turgenev. His new "word" was that of the:

"<em>... the de-classed gentry, the petty government official and the urban intelligentsia, struggling, helpless and without roots, to find their way in the chaos of the indifferent city.</em>" (D. Fanger, p.134)

What was so special about his feuilletons? His approach was different in that he moved away from reporting on social events, and whenever he did mention them, he did so in passing, reducing their importance considerably, almost ridiculing them in contrast to his detailed report of his stroll around town. During these strolls he would use the encounters with some of the most striking character he had met. In his first feuilleton (27th April 1847), he talks about the encounters on has on Nevsky Prospect, only to conclude that they are empty and futile. The second feuilleton shows a different approach to writing. There he uses the method of personification, commonly used by Balzac. Published on 11th May, he compares Petersburg to a son whose father is wealthy and established, and who has just heard about Enlightenment. Not knowing what it is, he wants his son to educated in that manner. His son learns and starts living his own life and starts being critical. Naturally his father is upset by son's behaviour and blames the West and its Enlightenment. Dostoevsky's point is that Petersburg being built as a window to the West, is of course the Russian centre for free thinking and progressive thought. The father, i.e. the Tsar is disappointed and angry with these trends and attempts to put an end to free thought.

"<em>...(papa) grumbles, gets angry, accuses both Enlightenment and the West, and is vexed chiefly that 'her own eggs are starting to teach the chicken'.</em>" (Dostoevsky, Saint Petersburg News [SPN] 1847)

His third paper, published June 1st, takes yet another stance. This time Dostoevsky considers the architecture of Petersburg. From it he draws conclusions about the state of mind of the people in Russian. Seeing that Petersburg is constantly growing and changing according to the plan of Peter the Great. He sees its diversity of buildings, its unity of thought, in the sense that every period was related to the West. Therefore the city is forever linked with progress and change.

"<em>Even all this diversity testifies to a unity of thought and a unity of movement. This row of buildings of Dutch architecture recalls the time of Peter the Great. This building in the style of Rastrelli recalls the century of Catherine; (...) but all together recalls the history of European life of Petersburg and of all Russia.</em>" (Dostoevsky, SPN 1847)

It is noteworthy that while his views on the future remained positive, so did the image of Petersburg. Yet as his visions started disintegrating, as is seen in his later works: <em>Notes from the Underground</em>, <em>Crime and Punishment</em>; the city became more and more gloomy. His last feuilleton, published 15th June, is the last example of his dreamy contemplation of Petersburg. Here the city is compared to a sickly girl, and even though she is ill, her eyes radiate warmth and beauty. This girl is symbol not only for the town, but also for its nature. Dostoevsky never spent much time with nature, his environment is urban, i.e. man made. The critic Fanger concluded therefore that it was not surprising at all to compare the city's nature to a sickly child (<em>Dostoevsky and Romantic Realists</em>, p.145). Here another of Dostoevky's talents become apparent, his use of one symbol to entwine, in this case, two themes.

"<em>There is something unutterably naÃ¯ve, even touching in our St. Petersburg when it suddenly displays all its might, all its force, puts on green, becomes covered with young leaves, dresses up, turns motley with flowers... I don't know why it reminds me of that young girl, sickly and ailing, on whom you sometimes look with pity, sometimes with compassionate love, and sometimes don't notice, but who suddenly, in one instant and somehow unexpectedly, becomes marvellous, unutterably beautiful, ...</em>" (Dostoevsky, SPN 1847)

Concluding the period of his writing feuilletons, one can notice that he used it to try out different literary techniques and to develop his city themes: isolation, the dreamer and native/urban environment. This period showed some of Dostoevsky's great talent. Though his views on the city darkened more and more, his sensitivity for his environment never faded. This is exemplary of his vision, be it before his exile in 1849 or after it, of the Neva.

After his exile in 1854, for participating in the Petrachevsky Circle (a revolutionary circle in the eyes of the government), began the period of his great novels. I shall only talk about <em>Crime and Punishment</em>. As mentioned previously it was published in 1866, after <em>The Notes from the Underground</em> (1865), a novel which re-established him as one of the great Russian novelists. Many critics regarded Dostoevsky's work as the direct continuation from Chernichevsky, only more matured and structured.

<em>Crime and Punishment</em> was remarkable in many ways. Predominantly, because of its treatment of the themes of transgression, suffering and alienation from humanity. However it was also remarkable because of its setting. A recent Soviet critic summarised it best: "<em>The first great Russian novel in which the climactic moments of the action are played out in dirty taverns, on the street, in the sordid back rooms of the poor</em>" (Mochulsky, <em>Dostoevsky</em>). Not only the climactic moments are played out in those areas, but the entire novel is set in the seediest parts of town. The choice of setting is one of the most important elements of the tragedy. It is all the more important in Dostoevsky's work, because the setting and the atmosphere really hint at the action. In the same way that the murder that Raskalnikov commits is base, foul and disgusting, so the town is also portrayed. One just has to look at the opening pages of the novel and the whole wickedness of the deed is all too apparent (see opening quotation on page 1).

For Dostoevsky the city was an agglomeration of its people, its buildings, its streets, its atmosphere and its weather. How was his portrayal of the city? The people in this novel all live wretched lives in isolation, in tiny rooms, which are in a deplorable state of disrepair. One critic once remarked that the state of mind of an individual is reflected in his room. Raskalnikov's room is described in Chapter 3 of the novel. Raskalnikov's mother compared this room to a coffin when she first set foot in it (p.282).

"<em>It was a tiny cell about six paces long, and it presented a most pitiful aspect with its grimy, yellow wallpaper that was everywhere coming off the walls; it was so low-ceilinged that to a person of even slightly above average height it felt claustrophobic. The furniture was commensurate with it's surroundings:...</em>" (<em>Crime and Punishment</em>, p.60)

Svidrigailov, Raskalnikov's evil double, lives in a similar environment. These rooms are stifling, they do not offer any space to breathe. The only other room described in the novel is that of the suffering Sonya. Her room even though it is oddly shaped, is seemingly enormous, like a desert. This highlights all the more her loneliness in this cruel world. The rooms are a medium to express Dostoevsky's themes of poverty and isolation. The image evoked by the rooms is that of many small stifling cells in which the individuals live completely isolated from the world. Raskalnikov who feels trapped in his room, does not feel any freer on the streets, for they are just as hot and foul as his room. The streets though represent his link to life. Throughout the novel, whenever Raskalnikov appears, nature changes around him, his symbol is that of aridity, dryness and dust. Svidriagilov's is the opposite, his is that of humidity and the colour green. It is difficult to speak about the people without talking about the environment.

The streets are the next point I would like to raise. Dostoevsky's descriptions are so accurate that tourist groups are nowadays able to follow in the footsteps of Raskalnikov. Hence there is a great deal of realism, though the surroundings are distorted, but more about that in a moment. The encounters on the streets are also quite symbolic, whereas Svidrigailov rarely ever encounters anybody, Raskalnikov's streets are bustling with activity. This only serves to heighten our awareness of his detachment from his social environment. Another item of interest, are the staircases, which help to link the streets with the apartments. The critic Frank noted that these link the public life with the private life, yet even this environment is dark and secluded.

So what image of the city is Dostoevsky conveying? The settings, its tone and atmosphere is gloomy, at times even dark, reflecting the sombreness of the protagonists soul. Another critic pointed out a symbolism common to many of Dostoevsky's works, namely that of the sun., which in turn symbolises life. Raskalnikov is predominantly a nocturnal type, who spends his days lying in bed. The other image portrayed is that of loneliness and isolation brought on by the desolate conditions in which the characters live. This is reflected in the rooms, that seem like coffins and cells, or the detachment of the main character on the bustling streets of St. Petersburg.

The question that now needs answering is: what was Dostoevsky's intent in portraying the city on such a manner? Was he indicating that because of the main character's wicked state of mind, his perception of the city was clouded? Or maybe was he trying to express that because of the city's vile state, Raskalnikov was conditioned, through his environment, to carry out the murders? I believe it is a combination of both. Due to his lack of funds, Raskalnikov found himself in this desolate state. The poverty and loneliness of his life had a profound depressing effect on his mind and it severely troubled him. Therefore his perception of the city got more and more obscured, even though geographically correct, the environment became twisted. Raskalnikov in his confused and bewildered state, believed he was doing humanity a favour by ridding it of a "louse" and this allowed him to save his sister, aided him in getting an education and stopped him from being a burden on his mother. He also hoped to go abroad and in turn build a better environment, a better world for many of these wretched individuals that urban life creates, due to the process of modernisation. The themes of the city all converge in this novel, the city being the embodiment of progress, Petersburg offering a window to the West and hence an opening of the mind to such progress. Dostoevsky was right to choose his "new word" in the city, because it was the new way of life, the new centres of polarisation, no where else were the contrasts between rich and poor greater. St. Petersburg a window to the West, indeed!

<strong>Bibliography:</strong>

<a href="http://www.amazon.co.uk/exec/obidos/ASIN/0691015872/teacupinastor-20/">Joseph Frank, <em>Dostoevsky (1821-1849)</em></a>
<a href="http://www.amazon.co.uk/exec/obidos/ASIN/0691015872/teacupinastor-20/">Joseph Frank, <em>Dostoevsky (1860-1865)</em></a>
<a href="http://www.amazon.co.uk/exec/obidos/ASIN/081011593X/teacupinastor-20/">D. Fanger, <em>Dostoevsky and Romantic Realism</em></a>
Mochulsky, <em>Dostoevsky</em>
<a href="http://s1.amazon.co.uk/exec/varzea/ts/exchange-glance/Y01Y3886170Y1162331/qid=973227728/sr=1-3/ref=z_ob_qs/026-4384545-9489211">D. Machiewicz, <em>Dostoevsky</em></a>
<a href="http://www.amazon.co.uk/exec/obidos/ASIN/0860917851/teacupinastor-20/">Marshall, <em>Everything that is solid melts into air</em></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>204</wp:post_id>
		<wp:post_date>2000-11-03 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>crime-and-punishment</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>The Master and Margarita</title>
		<link>http://gregs.tcias.co.uk/2000/11/03/the-master-and-margarita/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=224</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Wither Russia? The image of Russia in the fiction of the nineteenth and twentieth century.</strong>

<strong>Essay title: Discuss the problem of a writer and society in Stalin's Russia.</strong>

<em>The Master and Margarita</em> is Mikhail Bulgakov's (1891-1940) last novel. He conceived it over a period of twelve years (from 1928-1940) and began it on six separate occasions. Although he did not manage to completely review it, the novel certainly marks Bulgakov's finest literary moment. Unfortunately he never saw it's publication, as it was, like most of his works, banned. Its first publication was in 1966, some ten years after the Soviet Union had begun to publish or perform some of his earlier works. This alone gives us an insight into the problems a writer faced in the Soviet Union of Stalin.

Bulgakov's life was noted for his love of literature and his devotion to work, but alas he never saw the fruition of his works. This caused him immense suffering and drove him to despair. At one point he asked Stalin personally to release him from his misery and permit him to emigrate (1930). Instead he received a phone call from Stalin himself, offering him the opportunity to work at the Moscow Theatre. However, as Bulgakov had imagined, his situation did not improve and his plays were either rejected, censored beyond recognition or quite simply banned.

<em>The Master and Margarita</em> is written in two parts. It is set in Moscow around the 1930's and covers a period of four days in May. The novel tells the tale of the coming of the devil to Moscow in the guise of a foreign magician, named Woland. The book opens with Woland encountering two soviet writers and relating to them the story of Pontius Pilate. The result of this tale is the death of one of the writers (Berlioz) and the other one (Ivan Bezdomny) is driven insane while pursuing the Devil through Moscow. As a result he ends up in a sanatorium, where he meets the Master. Ivan tells him of his encounter with the Devil, the Master then confesses that he himself has written a novel about Pontius Pilate. It turns out that the tales are identical. Meanwhile the Devil and his associates, Koroviev, Behemoth and Azazelo are causing havoc in Moscow, playing tricks on the citizens and performing Black Magic as a part of their show.

The second part of the novel begins with the introduction of the Master's lover, Margarita. She makes a deal with Woland in order to free her lover. The pact involves her playing hostess to the Devil's ball, after which the Master is returned to her. The story ends with the release of Pilate by the Master from his eternal torment, as a result of which Woland grants Margarita and the Master peace. Woland and his associates finally leave Moscow, their task accomplished.

This most particular and fantastic novel harbours a wealth of ideas and philosophies. It was after Bulgakov's last novel and could be regarded as a legacy to the after world. It is a natural breeding ground for countless interpretations and also raised many questions about society and art. The task set for this essay is to shed some light on to this tale with regard to Bulgakov's views on the writer and his role in society, commenting on the characters and their relationship to Bulgakov, and finally transcending to his view on art and it's significance.

<strong>The writer and his art under Stalin.</strong>

That the novel is about writers and their work becomes only to apparent when one regards the character list. The opening lines introduce us to two (second class) writers, Ivan Bezdomny and Berlioz, who belong to MASSOLIT, a writers association. They converse about the meaning of Bezdomny's poetry with regards to conveying a specific message. The Master himself a writer, who wrote a novel about Pontius Pilate and due to its terrible reception and defamation by the critics, turned his back writing. However there are also other aspects of writing treated in this novel, for example the theatre/variety style of writing which is represented by Stepa Likhodev, to name but one.

So the central theme evolves around the writer and his art. Readers are quick to sense the underlying political side of Bulgakov's novel, especially when knowing about his own publishing career. It is interesting to note here, that the original concept of the novel, did neither include Margarita, nor the Master. It is only after the third version had been started (in 1931) that Margarita was included and the Master his first small appearance. Bulgakov started emphasising  more and more the importance of the Master in 1934-36. The emergence of the theme of the writer and his political environment coincides with the growing frustration that Bulgakov felt with the treatment of art by the State. This was at the same time the beginning of a new Russian literary movement. Bulgakov had strong views on a writer's responsibility toward society: a writer had to speak the truth. Unfortunately in his day and age the State held a different opinion, namely that art was to convey images and ideological processes that depicted the Revolution as the pinnacle of Russian achievement. In other words speak the truth according to the State. In light of this it becomes apparent why Bulgakov's writing was not published under Stalin. He simply did not conform to the State guidelines. The new literary movement was best defined by R.H. Pittman, who states that "it is characterised by the friction between prescribed productivity and spontaneous creativity". This however is only the tip of the iceberg, if one wants, the political aspect only scratches the surface of the interpretation of <em>The Master and Margarita</em>, but it lays the basic foundation to the further understanding of Bulgakov's view on Art.

In <em>The Master and Margarita</em> his satire of this problem becomes most apparent when dealing with Berlioz, Bezdomny and other members of MASSOLIT. The organisation finds its real life equivalent in the RAPP. The aim of this organisation was to provide the revolutionary writer with all the comforts necessary to write. Interestingly, if not surprisingly, only guideline followers are tolerated. This is highlighted in Behemoth's and Koroviev's attempt to enter the Griboyedov house, headquarters of the organisation.

"<em> - Are you writers? Asked the woman in return.
- Indubitably, replied Kroviev with dignity.
- Where are your membership cards? The woman repeated.
(...)
- But look here - if you wanted to make sure that Dostoevsky was a writer, would you really ask him for his membership card? Why, you only have take five pages of one of his novels and you won't need a membership card to convince you that the man is a writer...</em>"

The relationship between Berlioz and Bezdomny is an interesting one in light of State control. Berlioz is the chairman of MASSOLIT and consequently responsible for enforcing prescribed State guidelines. In him, Chudakova (a famous Bulgakov critic), recognised a few contemporary publishers as his role model, such as Vladimir Blyum or Mikhail Kol'stov, both editors of journals. This would link <em>The Master and Margarita</em> to Bulgakov's real life experiences, thus establishing an autobiographical connection. Our acquaintance with Berlioz is rather short lived as he dies underneath a tram. The reason for his death is a form of punishment. Not for being an atheist as might be assumed following his earlier discourse, but rather for betraying the intellectuals, "<em>... the ideological time serving for men, who really should have known better</em>". His role is that of a minder for the young Bezdomny.

The more important character of the two, however, is Ivan Bezdomny, who has been recognised in Mikhail Reysner and Barbus. He is a young writer, member of MASSOLIT, commissioned by Berlioz to write a poem about Jesus Christ. His problems begin with this poem, his artistic creativity gets the better of him and thus finds himself in conflict with Berlioz. Appearing in the opening lines and in the final chapter of the novel, one sees that Ivan is himself a central figure on a journey, a journey during which his awareness of his art and its meaning is awoken. The scene of great relevance to this revelation is Chapter 11, entitled <em>The two Ivans</em>. In this episode Ivan's personality separates into an old Ivan and a new Ivan, symptomatic of the division between conformity and spontaneous creativity. These new prospects which have been kept under seal for such a long time, that they appear completely alien to Ivan, though they are a writer's natural instinct, this stark confrontation drives him insane and is manifested in the psychological disease Schizophrenia. Bulgakov used it as a mean to show the tension between the State and the individual, which leads to clashes of the Self.

During his stay in the sanatorium, Ivan meets the Master who urges him to give up writing when the latter finds out that Bezdomny is a writer. The Master does this on the one hand because Ivan is a member of the very organisation which destroyed the Master and on the other this proves that Ivan is a poor writer. Ivan is cured from his ailment, but can only go on living under heavy sedation imposed by the doctors and carried out by his wife. The sedation represents State control. Ivan is being forced to block out the memories and to conform. Notable is also his change of career, he chooses the very profession the Master used to carry out before his writing, namely a professor of history. Thus moving away from writing, moving away from reporting the truth.

Bulgakov uses Bezdomny to demonstrate another one of his points, that a conforming author does not believe in what he writes. Arriving at the Sanatorium Ivan is not alone, he is in the company of Ryukhin, a writer and a member of MASSOLIT. A number of critics saw in Ryukhin Mayakovsky, Bulgakov's sworn enemy when it came to his principles. Mayakovsky embodied the very thing Bulgakov was fighting against: a rigid following of State guidelines. Yet Bulgakov believed that Mayakovsky did not have faith in a single word he wrote. Bezdomny full of venom attacks Ryukhin and shows him as the fraud that he is.

"<em>A typical kulak mentality, said Ivan (...), and what's more he's a kulak masquerading as a proletarian. Look at his mean face and compare it with all that pompous verse he writes for May Day... All that stuff about 'onwards and upwards' and 'banners waving'! If you could look inside him and see what he's thinking you'd be sickened!</em>"

Though deeply offended by this exposÃ© Ryukhin realises that Bezdomny is right in accusing him so, "<em>He was right - he was telling the truth! I don't believe a single word of what I've written</em>" is Ryukhin's conclusion. His realisation though when returning to the Griboyedov house is that instead of being helpful, he could have enjoyed himself and never known the truth about himself. This he realises would have made him substantially happier, proving that he did not learn anything from this "revelation". This kind of attitude is also reflected by the Muscovites ultimately not learning anything from the passing of the Devil through Moscow. This however is beyond the scope of this essay.

So what can we conclude about the writer's fate under Stalin? Bulgakov satirises the writer and their environment, ridiculing their methods, their lack of interest in real issues, their lack of faith in their own words. He criticises the entire system for breeding pompous artists who have lost touch with their work and their objectives, namely to inform and educate. The Devil and the Master's tale serve to lead these characters to self-awareness, to step outside the guidelines of conformity. Sadly nothing seems to affect these people. Ryukhin soon returns to normality by trying to forget what he has seen and heard. Bezdomny is under such heavy sedation that he is unable to wake up to the realities anymore. His turning away from reality can also be viewed as his way to avoid the truth. The Master, the true writer remains secluded from society in a twilight zone. Indeed a sad prospects for the Soviet Union.

<strong>The Master, Pontius Pilate, Jeshua and Bulgakov</strong>

In the second part of this essay I would like to focus a little more on the Master, his book, it' characters and its relevance to Bulgakov's expectation of art. Again the autobiographical aspect has to be acknowledged, though one now has to differentiate between the "literal and metaphorical" autobiography. The first part of the essay was dealing with literal autobiography, reflecting on concrete events in the life of Bulgakov and his attitude toward certain writers. Now we enter the realm of the metaphorical autobiography, we simultaneously enter the realm of fantasy. This is the part of the story where Bulgakov takes a look at himself and what he could have been.

With regards to the character of the Master many mysteries are conjured up. Questions about his importance for the novel. Why the name? Why is he so central, if he only appears in five of the thirty-two chapters? Why is he not granted light, but only peace, after such a long time of suffering?

Looking at the character of the Master and in what environment he appears, one notices the shadiness, the eeriness, the kind of twilight he lives in. Here Bulgakov makes full use of his time spent at the theatre to create an atmosphere with lights and colour. To answer the question of the origin of his name, many critics refer to a conversation between Stalin and Pasternak, where the latter was asked if Mandelstam was a master with regards to his writing. Bulgakov probably snatched this up, but the Master is more than just an attempt at ridiculing Stalin's view on literature. The Mater reflects Bulgakov's own short-comings. In him we find everything that Bulgakov could have been.

Why has the Master not earned light, but merely peace? Bulgakov also dreamed of peace, a place where he could write freely. However neither of them did not deserve it. The Master did not deserve because he burned his manuscript and ceased writing, because of the critics relentless attacks. They were so full of anger, angry because the Master was able to do something they could not do, that is to speak freely. Again parallels to Bulgakov's life become apparent. The following excerpt from a letter written to the Soviet government helps highlight this:

"<em>... I contend that the whole of the USSR press(...) have throughout my literary activity argued in one voice, imbued WITH EXTRAORDINARY ANGER, that the works of M. Bulgakov cannot exist in the USSR. And I declare that the USSR press is PERFECTLY RIGHT.</em>"

Bulgakov did not deserve peace for having compromised his ideals. A few before his death, Bulgakov started work on a play called <em>Batum</em>, about the youth of Stalin. In so many letters he had appealed to the leader of the Soviet Union to release him, for even though he had been advised "<em>to dye my coat a different colour. This was stupid advice. Whether dyed or with it's coat clipped short, the wolf will never look like a poodle.</em>" So what did he compromise? In the words of Jeshua he committed the greatest sin of all... cowardice! But why would a man of such high aspirations do this? The answer to question this is incredibly straight forward, he wanted to provide security for his wife. Yet he could never forgive himself for compromising his values and hence he did not deserve peace.

So in the Master we find Bulgakov's own short comings embodied. In the Master's book Pontius Pilate we again find guilt, the guilt for sentencing a perfectly innocent man, Jeshua, to death because of fear, fear of the State. The fear of the Roman Empire drove Pontius Pilate to this heinous crime. An interesting aspect of the structure of the novel, is the omission of the oppressive State in Moscow. Instead the dictator like State is to be found in Jerusalem, where peace is enforced by an iron rule from above implicated by force, fear and a network of surveillance. Here we find one of Bulgakov's technical devices at work. The Moscow he has created seems fantastic and surreal, further emphasised by the reality of Jerusalem. This only increases the discrepancy between the State and real life. The Master's fear is the only manifestation of the oppressive State, he fears the State and its critics, to the point of feeling imaginary "<em>cold tentacles</em>" wrapping themselves around him.

We established the similarities between Bulgakov and The Master, The Master and Pontius Pilate. There are also links between The Master and Jeshua. The Master has just like Jeshua a disciple, Bezdomny, but more importantly their views are controversial for their respective societies. Hence their isolation and persecution. Jeshua like The Master is an idealist, who does not realise in what kind of a world he is living, not understanding the reactions of the people and these people's fear of their ideas and ideals. The critic Milne pointed out that Jeshua in his innocence destroys officialdom and turns men into human beings, for as Lord Acton correctly perceived: "<em>power tends to corrupt and absolute power corrupts absolutely. Great men... are always bad men, even when they exercise influence and authority.</em>"

So through each of these characters Bulgakov is represented, showing his failings and his expectations. The Master for his short comings, Pilate for his inability to follow through with his ideals and Jeshua for his search for truth and innocence.

<strong>The Master's story and Bulgakov's expectancy of Art</strong>

Art for Bulgakov was a very special manifestation of the human intellect. His appreciation of other great writers, such as Gogol, Tolstoy or MoliÃ¨re is well known. The reason for his interest in them, was their longevity of their works, and especially MoliÃ¨re played an important role in this respect. Bulgakov was fascinated by the fact that his plays, though 250 years old, were still being performed and were still relevant.

For Bulgakov a proper work of art was contemporary, but nevertheless relevant tomorrow and yesterday. In a way it foresees the future, takes the past into account, but always speaks the truth. The writer is a master of the times and all knowing. In our belief  system there is only one being capable of this, namely God. Art for Bulgakov is the embodiment of God, symbolically the writer is God. The best example of this is The Master himself and his novel of Pontius Pilate. In chapter 13 he exclaims: "<em>Oh, how I guessed it all!</em>" after hearing Ivan's account of Woland's Pilate tale. He recounted the events of Jeshua's sentencing exactly as Woland had seen it. The different narrators and mediums of relating the novel in exactly the same style and fashion, also imply that there is only one truth, God's truth. The writer is the vessel through which this is being conveyed.

With regards to art it is always interesting to note that history is very often remembered, by remembering the period in which a great writer lived. Dictators in fact never quite achieve that kind of status. Who remembers Pushkin living in the time of Tsar Nicholas the First? It is the other way round, Nicholas the First lived in the time of Pushkin. This elucidates the impact of art on life and history.

If one takes the words of Jeshua's blasphemy against the Roman Empire in a metaphorical sense and transposes these onto the real world: "<em>... and that the time will come when there will be no rule by Caesar nor any other form of rule. Man will pass into the kingdom of truth and justice where no sort of power will be needed</em>" one could interpret this as the time when the writer will be the highest form. For a writer is a master and a master writes truth. The kingdom of truth is a paradise for any artist where he can freely articulate his opinion.

<strong>Conclusion</strong>

So what are the writer's problems as seen by Bulgakov and what concept of art does he have? It is the writer's duty to report the truth and not to compromise his ideals by following State guidelines, which restrict his artistic freedom and creativity. Bulgakov especially criticises the establishment of the 1920-1930's such as RAPP, where writers are standardised and write on commission, without thinking about the implications of their words. He laughs in their face, because of their pompous behaviour. They are only facades, behind which lies pure selfish egocentricity and he morns their lack of freedom. The apparition of the Devil serves to awaken their awareness, but all remain indifferent. In fact Moscow itself remains the same, as if Woland had never been there. The words in works of art fulfil a special aim: a novel is eternal, created by a master with divine inspiration. Bulgakov saw freedom in his works, the chance to travel through time, but also to be critical of everything, even oneself. Pasternak, Bulgakov's contemporary, had a different point of view. He regarded "<em>the artist as being an eternal hostage, being captive by time</em>". He knew of the securities that writing brought. He was in his lifetime a successful writer. His view was that the reader makes the novel eternal by reading it. Unfortunately Bulgakov died without the knowledge of such security. He was unable to get a response from his work. A great loss for the Soviet Union, which was censoring at the peril of destroying an entire literary generation. Above all Bulgakov's <em>Master and Margarita</em> is enjoyable to read, and very funny, for in Bulgakov's satire lies laughter and in laughter lies freedom.

<strong>&gt;Bibliography:</strong>

C. Wright, <em>Bulgakov Life and Interpretation</em>

E. Proffer, <em>Bulgakov</em>

J. Curtis, <em>Bulgakov's Last Decade</em>

A. Barratt, <em>Between Two Worlds:A critical Introduction to "Master and Margarita"</em>

L. Milne, <em>Bulgakov: Critical Biography</em>

R.H. Pittman, <em>The writer's Divided Self in Bulgakov's "The Master and Margarita"</em>

E. Proffer, <em>Major Soviet Writers</em>, ed. E.J. Brown]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>224</wp:post_id>
		<wp:post_date>2000-11-03 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-master-and-margarita</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JavaScript: Using Regular Expressions to search and replace (IE4)</title>
		<link>http://gregs.tcias.co.uk/2000/11/23/javascript-using-regular-expressions-to-search-and-replace-ie4/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=225</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="one">As part of a project I wanted to grab the form field name and use it to display error messages. No problem there, but as most of you know form field names can at times be rather cryptic so I decided on choosing a naming convention that would allow me to use Regular Expressions to strip out the following information: required, field name and the error message to be displayed. The format for I choose looked like this: <b><i>r_field#_?Your_error_message?</b></i>, where you use <b>r_</b> to indicate required and <b>o_</b> for optional. <b>Field#</b> is used to give the field name a unique value. The last bit is pretty straight forward between the single quotes you store the error message you want displayed.</p>
<p class="one">In the following I will talk you through writing a script that extrapolates the error message, replaces the &quot;_&quot; with a space, removes the single quotes and writes the error message to the page. Ready? Well let?s take a look at the whole script:</p>

<p class="one"><i>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt;<br />
&lt;html&gt;<br />
&lt;head&gt;<br />
&lt;title&gt;Example match and replace&lt;/title&gt;<br />
&lt;script language="JavaScript1.2"&gt;<br />
function strip(f) {<br />
&nbsp;&nbsp;&nbsp;for (var i=0;i&lt;f.length;i++) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e = f.elements[i];<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var ar = e.name.match(/(w+)?([^# ]*)/);<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var str = RegExp.$2.replace(/_|'/g, ' ');<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(((e.type == "text") || (e.type == "textarea")) &amp;&amp; !e.optional) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((e.value == null) || (e.value == "")) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whichEl = eval("document.all.elField" + i);<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whichEl.innerHTML = str;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;return false;<br />
}<br />
&lt;/script&gt;<br />
&lt;/head&gt;<br />
&lt;body&gt;<br />
&lt;form name="form1" action="" method="post" enctype="multipart/form-data" onsubmit="return strip(this);"&gt;<br />
&lt;input type="Text" name="r_test1_'test_1'" size="25"&gt;&nbsp;&nbsp;&lt;SPAN ID="elField0"&gt;&lt;/SPAN&gt;&lt;br&gt;<br />
&lt;input type="Text" name="r_test2_'test_2'" size="25"&gt;&nbsp;&nbsp;&lt;SPAN ID="elField1"&gt;&lt;/SPAN&gt;&lt;br&gt;<br />
&lt;input type="Submit" name="sub_but_2" value="Submit"&gt;&nbsp;&nbsp;&lt;SPAN ID="elField2"&gt;&lt;/SPAN&gt;<br />
&lt;/form&gt;<br />
&lt;/body&gt;<br />
&lt;/html&gt;</i></p>
<p class="one">Not too long is it? Ok the form is pretty standard and the JavaScript function strip(this) is called once the form is submitted. I also appended a &lt;span&gt; to each form field as this is where the error message is going to be displayed (should an error occur).</p>
<p class="one">Now onto the script, first we start off by looping over all the form elements. Next to reduce typing I declared a variable <b><i>e</i></b> that stores the individual form element for each loop. Next I broke down the field name (<b><i>e.name</i></b>) using the <b>match()</b> function and storing the substrings. As a result the error message gets stored in <b><i>RegExp.$2</i></b> [RegExp.$# is a property associated with Regular Expressions that are available to the developer, for more information follow the link on the right hand side on Regular Expressions]. Moving along, next we are going to use the <b>replace()</b> function on <b><i>RegExp.$2</i></b> and remove the &quot;_&quot; and the single quotes. To this end we define a pattern to be replaced as follows: <b><i>/_|?/g</i></b>. and this pattern will be replaced with: ? ? (that?s right a blank space). The result of this we store in a variable called <b><i>str</i></b>. </p>
<p class="one">The next step in the script involves checking the content of the form fields, in this case for each form element it checks whether or not the form element type is either a text field or a text area field and whether or not it?s optional (<i>not used in this script</i>). If the field is of type text, the script then checks to see if these have been completed or not. In our example all fields are required, so leaving them blank and submitting the form will result in an error message being generated. At this stage we need to figure out where the error message is going to appear, this is where the &lt;span&gt; comes in. Each tag has an ID called <b><i>elField#</i></b>, where # is a sequential number starting with zero, hence the first form element will have the following &lt;span&gt; ID: <b><i>elField0</i></b>. Using the loop value <b><i>i</i></b> we evaluate the position which for the first element is <b>0</b> and set <b><i>whichEl</i></b> to that value. Next we tell the script to write (<b><i>whichEl.innerHTML</i></b>) the error message to that &lt;span&gt; ID.</p>
<p class="one">You may be wondering why I included the Regular Expression part of the script at the top of the script and not when it is required such as when a field is left blank, which would have been more efficient, however I was more concerned with page weight and didn?t want to have to include the same statement over and over again for each type of form field. Based on that assumption maybe I could create a function and just pass the field name at that stage to the function, this would both cut down on space and make for a more efficient program. I?ll let you know. In the meantime I hope you find this useful.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2000-11-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-using-regular-expressions-to-search-and-replace-ie4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JavaScript: Search and replace (addendum)</title>
		<link>http://gregs.tcias.co.uk/2000/11/23/javascript-search-and-replace-addendum/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=226</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="one">Just a brief follow up on the previous article on <b>Search and replace</b>. I mentioned to ward the end that in order to improve the performance of the script I was considering moving the the Regular Expression bit outside of the main script into a separate function. The focus of this article will be calling the new function and returning the value. As ever here is the whole script for you to look at first.</p>

<p class="one"><i>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt;<br />
&lt;html&gt;<br />
&lt;head&gt;<br />
&lt;title&gt;Example match and replace&lt;/title&gt;<br />
&lt;script language="JavaScript1.2"&gt;<br />
function strip(str) {<br />
&nbsp;&nbsp;&nbsp;var ar = str.match(/(w+)?([^# ]*)/);<br />
&nbsp;&nbsp;&nbsp;var str = RegExp.$2.replace(/_|'/g, ' ');<br />
&nbsp;&nbsp;&nbsp;return (str);<br />
}<br />
function validate(f) {<br />
&nbsp;&nbsp;&nbsp;for (var i=0;i&lt;f.length;i++) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e = f.elements[i];<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(((e.type == "text") || (e.type == "textarea")) &amp;&amp; !e.optional) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((e.value == null) || (e.value == "")) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whichEl = eval("document.all.elField" + i);<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;whichEl.innerHTML = strip(e.name);<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;return false;<br />
}<br />
&lt;/script&gt;<br />
&lt;/head&gt;<br />
&lt;body&gt;<br />
&lt;form name="form1" action="" method="post" enctype="multipart/form-data" onsubmit="return validate(this);"&gt;<br />
&lt;input type="Text" name="r_test1_'test_1'" size="25"&gt;&nbsp;&nbsp;&lt;SPAN ID="elField0"&gt;&lt;/SPAN&gt;&lt;br&gt;<br />
&lt;input type="Text" name="r_test2_'test_2'" size="25"&gt;&nbsp;&nbsp;&lt;SPAN ID="elField1"&gt;&lt;/SPAN&gt;&lt;br&gt;<br />
&lt;input type="Submit" name="sub_but_2" value="Submit"&gt;&nbsp;&nbsp;&lt;SPAN ID="elField2"&gt;&lt;/SPAN&gt;<br />
&lt;/form&gt;<br />
&lt;/body&gt;<br />
&lt;/html&gt;</i></p>
<p class="one">OK now for the changes. Looking at the actual form first I have renamed the function being called on submit to <b>validate(this)</b>, hence you will need to rename the main function in your scrip as well. That's it with the form so now let's look at the script.</p>
<p class="one">The first thing you will notice is the addition of a function called <b>strip(str)</b> with the parameter <b><i>str</i></b> included. This function basically includes the lines of code we used to strip out the "_" and single quotes. As a final step I added the <b>return</b> statement. This was required in order to pass the result of this function back to the calling function, which in this case is <b>validate(f)</b>.</p>
<p class="one">The last change we need to make is remove the old stripping code and make sure that the new <b>strip</b> function is being called. To this end you need to locate the line with <i><b>whichEl.innerHTML = str;</b></i> and replace <b><i>str</i></b> with the function call <b><i>strip(e.name)</i></b>. You need to pass the parameter <b><i>e.name</i></b>, so that <b>strip</b> knows which element to parse.</p>
<p class="one">There you go you are done. When the form is submitted the function <b>validate</b> is called and if one of the fields is empty and error message is generated. To publish this message the script needs to know the field name, which it determines by calling the function <b>strip</b>. That's it.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date>2000-11-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-search-and-replace-addendum</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>PhotoShop: Some basic image manipulation</title>
		<link>http://gregs.tcias.co.uk/2000/11/27/photoshop-some-basic-image-manipulation/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=227</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>PhotoShop: Some basic image manipulation</h3><p class="one">The purpose of this document is purely to put to paper some of the things I have learned in recent weeks about using PhotoShop. At the end of this you will be able to basically create a new PSD file with a white background (the canvas), put some guides in place, paste a new image into the canvas and manipulate aforementioned image. The manipulation will involve resizing the image, skew it, setting it's opacity and skewing it.</p><p class="one">Before we get stuck in, here just a few things that you might want to be aware of. To undo any action hit CTRL+Z. Also always make sure that you have selected the layer that you wish to make changes to. OK let's get started.</p><p class="one">First off create a new PSD file (either from File/New or by hitting CTRL + N). This should provide you with a dialogue prompting you for some info. So give your file a name and set the width and height to 800* 600.</p><p class="one">Next we are going to add some guides to the file we created. To this end just place your mouse over the numbered part of your ruled, click and keep clicked, all the while dragging your mouse either vertically or horizontally over the page. As you do this you should see a dotted line moving about with your mouse, this is your guide. Move it to about 1 inch from the border and let go of your mouse. The dotted line has now been replaced with a blue line, which is your guide. You can still move it, by simply clicking on it, should you not be happy with it's position. Do the same thing for all borders so that your guides are about 1 inch away from all borders.</p><p class="one">OK! Now let's grab a picture and paste into the file. I just took a snapshot of my web site (ALT + Print Screen). Then I returned to PhotoShop and just hit CTRL+V (the universal convention for pasting). The image should have pasted itself as a new layer. If it hasn't just undo your last move by hitting CTRL+Z, then add a new layer (Shift+CTRL+N) and try pasting again. Once the screenshot is on your canvas you will need to re-size it. From the Edit menu go down to Transform and from that submenu choose Numeric? There make sure that just the Scale option is selected and set the values for width and height to 50. Also make sure that the scale is set to percent the box for constrain proportions is ticked.</p><p class="one">Next we are going to use the Rectangular Marquee tool (from the tools floating menu) to just grab the part of the image that we want. In order to this I recommend that you zoom in (CTRL++) first and then start off in the top left hand corner and drag your mouse to the bottom right hand corner of the bit you wish to display. Once done just hit CTRL+C to copy that selection. Then delete the layer you were working on and next all you really need to do is paste (CTRL+V) your selection back onto the canvas. Again make sure that it's on its own layer.</p><p class="one">Now we get onto the "serious" image manipulation stuff. First we are going to give this image a drop shadow. From the layer menu select Effects and from that drop down menu choose Drop Shadow. This brings up another dialogue. I just tend to use the defaults, but if you feel adventurous have a play and see what the other options do. Make sure that the Preview box is checked so that you can see what the effects will look like. Once you are happy click OK.</p><p class="one">Next let's set the Opacity. As I am planning on having different images over lapping, it would be nice to have the merest suggestion of what is lying underneath it. This is where Opacity can help us. Double click on the Layer you wish to work on in the Layer floating tool box. This should bring up another dialogue, giving you the name of your layer and telling you that the opacity is currently set to 100%. Experiment with the different settings and choose the one you like best (I chose 85%).</p><p class="one">As a final step we shall now skew the image slightly. Again we will be using the Numeric transform (accessible from Edit/Transform/Numeric). Make sure this time that the box for Scale is not ticked and that Skew is.  I am just going to skew my image slightly, by leaving the horizontal set to zero, but setting vertical -10 degrees.</p><p class="one">Right you should now have an image that is slightly translucent, has a drop shadow and is angled at -10 degrees. That's pretty much what we set out to do. What I'll show you next is how to do this to multiple images in one go. So here goes first grab another couple of screenshots, make sure they are trimmed, set to the right scale (50%) and on separate new layers.</p><p class="one">Once you are done, go back to your layers floating tool bar and select one layer. A little paintbrush should appear next to it. Now we move onto the next layer, where that paintbrush would be if the layer was select, click the left mouse button. A little chain symbol should appear, this indicates that both layers are now linked. This in essence means that any changes made to the selected layer will be applied to the linked layers as well, but only for transformations such as skew and scale. So go ahead and modify the layer as you did for the first layer. Unfortunately the drop shadow and opacity you will need to set individually.</p><p class="one">As a final step we will use the guides to place our images on the canvas. So go ahead select the first layer we created (first however make sure that all layers are not linked, you do this by clicking on the little chain next to the layer). Move it so that right most border lines up with the right most guide and the left tip of the screen shot is flush against the bottom most guide. If you have snap to guides enables the positioning should be a easy (you can check under View, if they aren't then just do Shift+CTRL+;). The image you want to appear last, align the left most border with the left guide and right most tip with the upper guide. Now you can position the remainder of your images between the two. This is a bit iffy and requires patience to get the positioning just right (sorry not aware of any tol that does this for you).</p><p class="one">One problem you may encounter when moving your layers around is that one layer may be further in the foreground than you wish. In order to remedy this, simple select the layer in the floating layer tool bar and keep it selected (i.e. keep the left mouse button pressed) and drag it up the list of layers until you have reached the position you want it in.</p><p class="one">That's it you now now know how to use use guides, position images accordingly and can do some basic manipulation, involving scale, skew, opacity and drop shadows. Hope you enjoyed this.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date>2000-11-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>photoshop-some-basic-image-manipulation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JavaScript: Trapping the enter key event</title>
		<link>http://gregs.tcias.co.uk/2000/11/28/javascript-trapping-the-enter-key-event/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=228</guid>
		<description></description>
		<content:encoded><![CDATA[Here is a refined script for trapping the user pressing the enter key. In certain cases under Netscape, where you have two text input fields, hitting the enter key will result in nothing happening. To this end I searched the web and found the following script:

[js]<script language="JavaScript">
<!--
var nav4 = window.Event ? true : false;
function codes(e) {
if (nav4) // Navigator 4.0x
var whichCode = e.which
else // Internet Explorer 4.0x
if (e.type == "keypress") // the user entered a character
var whichCode = e.keyCode
if ( whichCode == "13" ) {
document.form2.submit();
}
}
// -->
</script>
[/js]

This script first looks up the version of the browser you are using and if the user uses NS whichCode is equal to the event <em>e.which</em>. Since IE handles it differently you need to the else if statement and we set which Code for IE equal to the event <em>e.keyCode</em>. In both cases this will return a value. Now hitting the enter key returns the value <strong>13</strong>. So in the next step we check for that value and if this is the case then we submit the form.

This function is called by including the event handler onKeyPress next to your input fields. Hence you could call the <strong><em>code()</em></strong> function first to check whether return was hit or not, then maybe run a validation script and if successful submit the form. I would also like to point out that you will need to provide a action property to your form for Netscape to submit the form successfully. Not doing so will result in the page just sitting there. Short and sweet, but useful.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>228</wp:post_id>
		<wp:post_date>2000-11-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-trapping-the-enter-key-event</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Apache: Setting the default document</title>
		<link>http://gregs.tcias.co.uk/2000/11/28/apache-setting-the-default-document/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here's how to set your default web documents that the web server will load should you not specify a specific file (e.g. default.html or index.html). By default Apache sets <strong><em>index.html</em></strong> as your default document, but since I used Cold Fusion as well I wanted Apache to automatically load up <strong><em>index.cfm</em></strong> as well when a directory was called. TO his end locate your <strong>conf</strong> directory, usually found under <em>c:program filesApache GroupApacheconf</em> and look for the file <em>httpd.conf</em>. About halfway down you should see a set of lines similar to this:</p>
<p><em>#<br />
# DirectoryIndex: Name of the file or files to use as a pre-written HTML<br />
# directory index.  Separate multiple entries with spaces.<br />
#<br />
DirectoryIndex index.html</em></p>
<p>Now simply append index.cfm, making sure that there is a space between the two file names. This should look as such now:</p>
<p><em>#<br />
# DirectoryIndex: Name of the file or files to use as a pre-written HTML<br />
# directory index.  Separate multiple entries with spaces.<br />
#<br />
DirectoryIndex index.html index.cfm</em></p>
<p>All you need to do now is stop and restart your web server for the changes to take effect. There you go the server will now first look for <em>index.html</em> and then <em>index.cfm</em>. Your web server should now be less likely to show a directory listing! </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2000-11-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apache-setting-the-default-document</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JavaScript: scheduling events</title>
		<link>http://gregs.tcias.co.uk/2000/12/15/javascript-scheduling-events/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=230</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="one">You may have come across some of the slide shows I have put up on this site. The script that drives the display of text and images is JavaScript and DHTML based. This script was taken from the webreference website under the heading Database Front End. Now recently I just started working on a project that required to have such a slide show, however it required the option to continuous loop if the user pressed the play button and reciprocally stop.</p>
<p class="one">Now I was able to achieve this effect by making use of the <b>setTimeout</b> and <b>clearTimeout</b> methods. The application of said methods is pretty straight forward, in addition to the aforementioned script, you will need to add the following lines to your script:</p>
<p class="one"><i>function showPlay() {<br />
&nbsp;&nbsp;&nbsp;timeoutID = setTimeout("showContinous();", 5000);<br />
}<br />
function showContinous() {<br />
&nbsp;&nbsp;&nbsp;curRecord = (curRecord &lt; maxRecords) ? ++curRecord : 1;<br />
&nbsp;&nbsp;&nbsp;upDate();<br />
&nbsp;&nbsp;&nbsp;timeoutID = setTimeout("showContinous();", 5000);<br />
}
function showStop() {<br />
&nbsp;&nbsp;&nbsp;clearTimeout(timeoutID);<br />
}<br />
</i></p>
<p class="one">Let's have a look at the new functions. <i><b>showPlay</b></i> is the function that sets the slide show running continuously. This is also where we invoke the method <b>setTimeout</b>. This method takes 2 arguments, the first being the code or function to be executed and the second the interval at which this is to take place. You may now be wondering why I invoked a variable timeoutID. I did this to capture the ID that this method generates. It will come in handy very soon, so bear with me. The function I am invoking is <b><i>showContinous</i></b>. This function is in essence identical to the function found in the original script <b><i>showNext</i></b>, with the addition of another setTimeout method. Why? Well if you don't invoke the method again, all that happens is that the script only gets executed once and in this case, only moves one slide forward. To make the process continuous you have to call the function again from within the function. Again I capture the timeoutID generated.</p>
<p class="one">So what do I do with this <b>timeoutID</b>. Well I need it to stop the loop. The function <b><i>showStop</i></b> clears the timeout based on the <b>timeoutID</b>. Why do I capture that ID twice? Well the first time round the loop is not continuous, however the user may choose to stop the presentation at that stage, so that's why a captured it then. In the continuous loop, another <b>timeoutID</b> is generated and hence I needed to capture this one so that I could now stop the loop.</p>
<p class="one">Now all that needs to be done is to add a couple of links or buttons that trigger these functions and you are done.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>230</wp:post_id>
		<wp:post_date>2000-12-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-scheduling-events</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Virtual Hosts on Apache</title>
		<link>http://gregs.tcias.co.uk/2001/01/22/virtual-hosts-on-apache/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=231</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="1">I quite frequently find myself working on 2 or 3 different web related projects at a time and thought it's quite easy to develop of root sub directories, the end result usually sits in the root directory on the hosting site and hence requires a few modifications to the pages developed before they can be uploaded. In the following I describe the steps required to implement virtual hosts (e.g. http://www.site1.net/,  http://www.site2.net/, etc?) on your local computer running Windows NT4 and Apache 1.3.12, that should make this whole porting affair a little easier. So let's get cracking.</p>
<p class="1">Firstly we need to locate and edit the <em>hosts</em> file. Under Windows NT 4.0 it's usually located in your <em>&lt;your drive letter&gt;:winntsystem32driversetc</em> folder. In it you should see the following:</p>

<p class="1"><em># Copyright (c) 1993-1995 Microsoft Corp.
#
# This is a sample HOSTS file used by Microsoft TCP/IP for Windows NT.
#
# This file contains the mappings of IP addresses to host names. Each
# entry should be kept on an individual line. The IP address should
# be placed in the first column followed by the corresponding host name.
# The IP address and the host name should be separated by at least one
# space.
#
# Additionally, comments (such as these) may be inserted on individual
# lines or following the machine name denoted by a '#' symbol.
#
# For example:
#
#Â 102.54.94.97Â Â rhino.acme.comÂ Â # source server
#Â 38.25.63.10Â Â x.acme.comÂ Â # x client host</em>

<em>127.0.0.1Â Â localhost</em>
<p class="1">This is the file that is going to enable you to resolve computer names (or aliases as you'll see in a minute) with IP addresses. Ok so now that you have located the file, the next step is to add an entry to it. Just use your favourite editor and append the following line:</p>
<p class="1">127.0.0.1Â Â localhostÂ www.site1.net</p>

<p class="1">What you have done here, is inform the system that any request made from your browser (and only your browser) for the www.site1net will be mapped to the IP address 127.0.0.1. GO ahead and test it, by going to the command prompt and typing in ping www.site1.net, you should be getting a  reply if you saved the changes. Right now it's time to modify your Apache configuration to allow for virtual hosts.
Next you need to locate your <em>httpd.conf</em> file. This is usually located in: <em>&lt;your drive letter&gt;:Program FilesApache GroupApacheconf</em>. Open it with you editor and look for:

<p class="1"><em>#
# If you want to use name-based virtual hosts you need to define at
# least one IP address (and port number) for them.
#
#NameVirtualHost 12.34.56.78:80
#NameVirtualHost 12.34.56.78</em>
<p class="1">There you will need to specify the IP address you are mapping to. In our example this is 127.0.0.1, so your entry should look like this:</p>

<p class="1"><em>#
# If you want to use name-based virtual hosts you need to define at
# least one IP address (and port number) for them.
#
#NameVirtualHost 12.34.56.78:80
#NameVirtualHost 12.34.56.78
NameVirtualHost 127.0.0.1</em>
<p class="1">Right so far so good onto the next modification to that file locate the following lines in your httpd.conf file:</p>

<p class="1"><em>#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
#
#&lt;VirtualHost ip.address.of.host.some_domain.com&gt;
#Â ServerAdmin webmaster@host.some_domain.com
#Â DocumentRoot /www/docs/host.some_domain.com
#Â ServerName host.some_domain.com
#Â ErrorLog logs/host.some_domain.com-error_log
#Â CustomLog logs/host.some_domain.com-access_log common
#&lt;/VirtualHost&gt;</em>
<p class="1">This is the segment where you will be specifying your server name (the machine name you specified in your hosts file [in this case www.site1.net]), any server aliases and the document root. Using the information from our example and wanting to map this virtual host to the Apache documentation directory, you entry would look like this:</p>

<p class="1"><em>#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
#
#&lt;VirtualHost ip.address.of.host.some_domain.com&gt;
#Â ServerAdmin webmaster@host.some_domain.com
#Â DocumentRoot /www/docs/host.some_domain.com
#Â ServerName host.some_domain.com
#Â ErrorLog logs/host.some_domain.com-error_log
#Â CustomLog logs/host.some_domain.com-access_log common
#&lt;/VirtualHost&gt;
&lt;VIRTUALHOST 127.0.0.1&gt;
ServerName www.site1.net
ServerAlias *site1.*
DocumentRoot "c:/Program Files/Apache Group/Apache/htdocs"
&lt;/VIRTUALHOST&gt;</em>
<p class="1">Ok, once you have done all your changes stop and restart the Apache service and you should be on your way.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date>2001-01-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>virtual-hosts-on-apache</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Scheduled backup</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/scheduled-backup/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=312</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Scheduled backup</h3>
<p class="1">Recently I had to set up one of our servers to do scheduled differential backups in France. Normally the hardware comes with some software that allows you to carry out these tasks. However despite the tape being recognised by NT server it would not load the software. But you could still use the NT server backup software. Combining this with the Command scheduler gives you all the tools you need to set up a scheduled backup.</p>
<p class="1">First off I recommend you use the Resource kit Command scheduler. However if you have not got access to it you will need to type the following in:</p>
<p class="1">AT ServerName 01:30 /every:Monday,Tuesday,Wednesday,Thursday,Friday BackupCommand.cmd</p>
<p class="1"> This command tells the scheduler service to run the <i>BackupCommand.cmd</i> file every working day of the week at 1:30 am. If you are using the the Command Scheduler then you can also enter the syntax directly into the command option. By the way when choosing a name for your batch file, make sure that it isn't already in use as a system file such as <i>Backup.cmd</i> for example. The <i>BackupCommand.cmd</i> will contain the following syntax for the backup operation:</p>
<p class="1"><i>ntbackup operation path [/a][/v][/r][/d&nbsp;"text"][/b
][/hc:{on | off}] [/t&nbsp;{option}][/l&nbsp;"filename"][/e][/tape
:{n}]</i></p>
<p class="1">For more details on the synatx and the meaning of the switches from the command prompt type: <i>NTBACKUP /?</i>. Since I wanted to do a differential Backup of my C drive, I created a file with the following syntax and switches:</p>
<p class="1">NTBACKUP backup c: /a /b /v /t differential.</p>
<p class="1">The operation is a backup of the C drive in Append mode (/a). I also told it to backup the local registry (/b), forced the verification process (/v) and specified the type as differential (/t differential).</p>
<p class="1">If you are using the Command Scheduler from the Resource Kit, as mentioned above you can either reference the <i>BackupCommand.cmd</i> or enter the above syntax in the command box. Then all you need to do is specify the occurence of the scheduled event and the time and that's pretty much it. I got this information from Karanjit S. Siyan's <a href="http://www.amazon.com/exec/obidos/ASIN/1562058053/teacupinastor-20">Windows NT Server 4, Professional Reference, Second Edition</a> book, which I find quite useful. It has received mix reviews, but I can usually find the info I need from it and if not it is a good starting point.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>312</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scheduled-backup</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>DTS: Access to SQL 7.0 migration</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/dts-access-to-sql-70-migration/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=313</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>DTS: Access to SQL 7.0 migration</h3>
<p class="1"><i>This article is part of a larger article.</i></p>
<p class="1">In the source drop down box, labelled <i>Source:</i> select <b>Microsoft Access</b>. As you make your selection the dialogue box changes to reflect your choice of datasource. Now you can specify the access database you wish to migrate. Click on the little button with the <i>...</i> to browse for your database. As an example why not choose the sample Northwind database that comes with MS Access. If you have password protected your database you can now also specify the username and password. If on the other hand you haven't set any security, then you can click <i>Next</i>.</p>
<p class="1">The ensuing dialogue box allows you to specify the <i>destination</i>, i.e. where you are going to copy your database (it's tables and data) to. By default the <b>Microsoft OLE DB Provider for SQL Server</b> is selected. This is the service we will be using to connect to our SQL Server box.Alternatively you could select the <b>Microsoft ODBC Driver for SQL</b>. Below this drop down menu you can now specify the server name, in the <i>Server:</i> field. Now you have a choice of either using the Windows NT authentication method or the SQL Server authentication method. Choose SQL Server authentication and specify your login account. As you will be creating a new database in this tutorial, make sure that you have enough permissions to do this. Else contact your DBA and ask him to set up a database for you. [Please note that you have to click the <i>Refresh</i> button in order the database that was created for you] From the <i>Database:</i> drop down menu choose <b>&lt;New&gt;</b>. This opens another dialogue where you specify:</p>
<li><i>Name</i> of the database, e.g. Northwind SQL in this case.
<li>Next specify the <i>Data File Size</i>, so check your existing database size and give it a little more space. E.g. Northwind is 2.3 Meg in size so give it 3 Meg (you can only specify increments of one Meg).
<li>Finally you can specify the <i>Log file size</i>. Set that to 1 Meg.
<p class="1">By clicking OK you create the database on the SQL server. Now you can click <i>Next</i>. Here you can either specify to transfer one or more tables across or alternatively the results of a query. Choose the default option <i>Copy table(s) from the source table</i>. Click <i>Next</i>. From the next dialogue you can select which tables you wish to transfer. Just click <i>Select All</i>. Again you can either copy the tables and the data they contain as it is, or use ActiveX scripts to modify it. The use of ActiveX scripts goes beyond the realms of this document, so copy everything across as it is. Next!</p>
<p class="1">Right this concludes this section of the Access to SQL migration, please go back to the previous document by <a href="http://www.armagossa.com/content.cfm?content_ID=71#return">clicking here</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>313</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dts-access-to-sql-70-migration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>The data transformation services wizard for SQL Server 7.0</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/the-data-transformation-services-wizard-for-sql-server-70/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=314</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>The data transformation services wizard for SQL Server 7.0</h3>
<p class="1">Here I'll talk you through using the data transformation services (DTS) wizard, that comes with SQL Server 7.0. First I'll introduce you the capabilities of the tool and then show you how to access it. Then the document will contain a list of different migration types. It concludes with the the actual migration process and some comments about the limitations of the tool.</p>
<p class="1">The DTS utility allows you to migrate data between different servers, say from 6.5 to 7.0 or from 7.0 to other applications such as MS Access or MS Excel. This transformation service is not restricted to just MS products, but also to or from dBase, Oracle or plain comma delimited text files. You access the services by selecting the <b>Import and Export Data</b> program from the SQL Server 7.0 menu. Once the dialogue opens, click <i>Next</i>. This takes you the dialogue where you specify the source of your data, i.e. where you want to move data from. This where the document branches of.</p>
<p class="1"><b>Migration types:</b></p>
<li><a href="http://www.armagossa.com/index.cfm?contentID=51">Access to SQL 7.0</a>
<li>SQL 7.0 to SQL 7.0
<li>SQL 7.0 to MS Excel
<li>SQL 7.0 to text file
<li><a href="http://www.armagossa.com/index.cfm?content_ID=57">Text file to Access (fixed field and no row delimiter)</a>

<a name="return"></a><p class="1"><b>Setting it all in motion</b><br />
After you have configured your database transformation, you can now turn your attention to either starting the migration in process immediately, creating a package for replication or scheduling it. To schedule your migration simply tick the box <i>Schedule DTS package for later execution</i> and configure the schedule by clicking on the button with <i>...</i> (please note that unless you un-tick the <i>Run immediately</i> box, your migration will take place after you complete the wizard). By clicking on the aforementioned button the dialogue you see in SQL server when you schedule tasks appears, allowing you to set the occurrence, frequency and duration. Make your selection and click <i>OK</i>. Scheduling the process automatically prompts you to save the package to either the SQL server, a repository or a file. Again make your selection, choosing the default, i.e. SQL Server, is a good idea.
</p>
<p class="1">If on the other hand you wish to run the package immediately, just leave the box <i>Run immediately</i> ticked. You can still save the package you still created, just check the box labelled <i>Save DTS Package</i>. Once you have done this click <i>Next</i> and you are practically done. Click on the finish button top set the whole thing in motion! This fires up the final dialogue, where you can watch the data transfer take place. Once it is completed you will be presented with a summary screen, outlining the either the success of the transfer or the errors. Click <i>OK</i> and then <i>Done</i> to complete the procedure.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>314</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-data-transformation-services-wizard-for-sql-server-70</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Daily scheduled backup to disk (SQL 6.5)</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/daily-scheduled-backup-to-disk-sql-65/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=315</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This document is identical in purpose to <a href="http://www.armagossa.com/index.cfm?contentID=56"></a>Daily scheduled backup to disk (SQL 6.5), i.e. it talks you through setting up a scheduled backup of your databases to hard disk, only this time for SQL server 6.5. The process is pretty much the same, the differences are mainly down to the user interface. Whereas SQL Server 7.0 provides with you with MMC (<em>Microsoft Management Console</em>), where as SQL Server 6.5 gives you the <em>Enterprise Manager</em>. Let's proceed...</p>
<p><strong>Setting up the backup</strong><br />
First off start up the <em>Enterprise Manager</em>, select your server and make sure it is running. Expand the tree of your selected server and right-click on the <em>Backup devices</em> option. From the popup menu choose <em>New Backup Device</em>. This brings up a dialogue where you specify the settings for your backup device. You start of by giving your device a name. Next you can specify the location of your backup device, i.e. either a backup tape or a location on your hard disk. By default the location is <strong>&lt;drive letter&gt;:MSSQLBackup</strong>. You may have noticed that as you were filling in the name of your device, the final name is allocated dynamically and is the same as the device plus the file extension <em>.bat</em>. Once you are happy with selections, click OK to close the dialogue.</p>
<p>As an aside should you decide to delete the device from the GUI (and for that matter any device, including databases) make sure to manually delete the <em>.bat</em> file from that directory. I guess this is what you call small bug. Onwards...</p>
<p>Highlight your server again and from the menu bar select <em>Tools</em>. From the dropdown menu select the <em>Database backup / Restore</em> option. A dialogue box with the title <strong>Database backup / Restore &lt;server name&gt;</strong>. Make sure the tab labelled <em>Backup</em> is selected. From the dropdown menu entitled <em>Database Backup</em>, specify the database you wish to backup, for this example choose <strong>Pubs</strong>. Next you have to initialise the device. Once this is done you can configure a number of options, such as an expiry date for that device. For this exercise, simply accept the default settings. From the <em>Backup device:</em> choose the actual backup device you wish to backup to.</p>
<p><strong>Scheduling the backup</strong><br />
Click on the Schedule button to start configuring you backup schedule. Now you need to specify a six character ANSI-volume label for your backup device, choose the default. Next a new dialogue appears, where you can set your schedule:</p>
<ul>
<li>Give your schedule a <em>Task name</em>, e.g. backup-pubs.</li>
<li>Next you can choose a schedule option, i.e. <em>immediate, one time or recurring</em>. Choose recurring.</li>
<li>From the ensuing dialogue configure the schedule according to your needs. For example: Occurs daily, the frequency at which the backup occurs (once at 11pm) and duration, in our case set no end date. Click Ok to close that box.</li>
</ul>
<p>Click OK again and then click <strong>close</strong> and your scheduled backup is configured. Just as with SQL Server 7.0, make sure that the <em>Scheduler Service</em> or <em>Task Scheduler</em> is running. Also make sure that the SQLExecutive account is running. Right everything should be working fine. Hope this helped in some manner.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>315</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>daily-scheduled-backup-to-disk-sql-65</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Daily scheduled backup to disk (SQL 7.0)</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/daily-scheduled-backup-to-disk-sql-70/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=316</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Daily scheduled backup to disk (SQL 7.0)</h3>
<p class="1">This document will show you how to configure SQL server 7.0 to back up selected databases (Db) to the hard disk. This is useful if you don't have a lot of money to play with for a backup solution and need your databases to be up and running pretty much 24/7. Backing up a database to the hard disk is a lot quicker than backing up to tape, hence your Db is available a lot quicker again to users. Once stored on disk you can schedule another task to back up the Db to tape, giving you added security for more information on scheduling a backup using the NT backup software click here. So let's get going.</p>

<p class="1"><b>Configuring the Backup</b><br />
Right first let's open up the Enterprise Manager (Management Console) and select your server and expand the tree. Now select <i>Management</i> and expand that branch as well.</p>

<p class="1">Right click on the <i>Backup</i> option and from the drop down menu select <i>New Backup Device</i>. From the dialogue box, on the <i>General tab</i>, enter the name of your backup device in the <i>Name:</i> box. You'll notice that as you are entering the device name that it is replicated in the field labelled <i>File name:</i> and has the extension <i>.bak</i> appended to it. By default SQL server stores the back up device in &lt;drive letter&gt;:mssql7ackup. Once you have entered all the details click OK</p>

<p class="1">Right click on the <i>Backup</i> option again and select <i>Backup database</i>. On the Dialogue box that appears (labelled <i>SQL Server Backup</i>, you will have to fill in a number of details split into five section.In section 1 you start by specifying the Db you wish to backup from the drop down menu labelled <i>Database:</i>. Next you specify the name of the backup (from the field <i>Name:</i>). This name is dynamically allocated, but you can override this and enter your own name if you so wish. You can now optionally enter some details about the backup in the <i>Description</i> field. In section 2 you can specify the type of backup you wish to perform. By default <i>Database - complete</i> is selected. But you can also carry out a differential backup. The other options are greyed out and I will talk about these at a later date. The third section is the <i>Destination</i> section. Here you select your backup device, which you created earlier on. You do this by clicking <i>Add...</i>. Another dialogue box appears giving you the option to select to either backup your Db to a file or the device you created earlier on by checking the appropriate radio button. If you check the <i>Backup device</i> option you can select the appropriate one from the dropdown box. Submit your selection by clicking OK. The fourth section allows you to specify a few more options for your backup type, namely whether you wish to <i>Append to media</i>(add to your existing backup set, without overwriting) or <i>Overwrite existing media</i>(overwrite your existing backup set). In the fifth and final option, you set your backup to scheduled by ticking the <i>Schedule:</i> checkbox you and then click the browse button to specify day, time, and frequency.</p>

<p class="1"><b>Scheduling the backup</b><br />
First you need to give your schedule a name. You do this by entering the schedule name in the <i>Name:</i> field. For your back up to occur on a daily basis make sure that in the <i>Schedule type:</i> section, the option for <i>recurring</i> is selected [this by the way is the default selection]. By clicking on the <i>Change</i> button you open a new dialogue that allows you to set the interval, days and time at which you wish to have your backup <i>occur</i>. First off you can set the frequency to either daily, weekly or monthly. For our purpose we set it to daily and in the <i>daily</i> section we set the number of days to <b>1</b>. If we wanted the backup to occur every second day, we would set that value to <b>2</b>. Moving along, you can now set the frequency of the daily backup (<i>Daily frequency</i>). We will want to set the back up to occur once every day at a time when usage is at it's lowest (bearing in mind that the web is up 24/7:o)). So make sure the radio button <i>Occurs once at:</i> is checked and specify the time, say <b>2:00</b>. In the final section you can specify the <i>duration</i>, i.e. you can set a start and end date. For the purpose of this exercise, set the start date to today and set <i>no end date</i>. Click OK to complete the recurrence schedule and OK again to finish configuring the schedule. Click OK one more time and you have configured the backup.</p>
<p class="1">There are two things you should now check to ensure that your scheduled backup will take place and successful. First off make sure that the <b>SQL Server Agent</b> is started (also in the <i>Management</i> branch. Secondly please make sure that your <b>Task Scheduler</b> (if you have IE5 installed on your machine) or that the <b>Scheduler</b> (for IE4 and below) service has been started. That's it should all work like clockwork now. For more information on SQL Server Administration, check out <a href="http://www.amazon.co.uk/exec/obidos/ASIN/0672312263/armagossacom">SQL Server 7 DBA Survival Guide</a>. As ever comments and suggestions welcome.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>316</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>daily-scheduled-backup-to-disk-sql-70</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>DTS: File to Access (fixed field and no row delimiter)</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/dts-file-to-access-fixed-field-and-no-row-delimiter/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=317</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>DTS: File to Access (fixed field and no row delimiter)</h3>
<p class="1"><i>Please not this article is part of a larger article</i></p>
<p class="1">Sometimes you may come across a text file that stores all of its information in a column rather than have the fields you want to import in one row and delimited by a recognised marker. Instead you have something like this:</p>
<p class="1"><i>Field 1<br />
Field 2<br />
Field 3<br />
....
</i></p>
<p class="1">This makes importing a text file slightly trickier as you have to convert each row into a column. Thankfully DTS allows you to do this quite simply (once you know how). First off select your data source type, i.e. in this case <b>Text File</b>, from the drop down menu.Next select the file you wish to import by clicking on on the Browse button (<b>...</b>) next to the field labelled <b>File Name</b>. Once you are happy with your selection, click <i>Next</i>.</p>
<p class="1">First thing to do when setting the file format is to choose <b>Fixed field</b> from the first two options. The file type should be set to <b>ANSI</b>, the row delimiter to <b>&lt;none&gt;</b> and the text qualifier should be greyed out. OK, click <i>Next</i>. You can now see that you have transformed the rows into columns. First you have to define the Row width. This is done by moving the red line to the end of the line of text pictured. You may also notice that the row ends with <b>||</b>, make sure you set your red line after those two <b>||</b>. Click <i>Next</i> again. In this dialogue you specify the the fixed width of your columns. Again you will note the <b>||</b>, you place your column delimiter after those <b>||</b> by clicking with your mouse just behind the last <b>|</b>. You do this for every single field. Take great care when positioning your delimiter, any mistake will result in your data no being exported. On the upside troubleshooting the misplaced column break is easy as it only imports that is properly marked off. Hence any missing data should indicate a misplaced column break.</p>
<p class="1">Once you are done click <i>Next</i>. Now you choose your destination source. From the <b>Destination</b> drop down menu, choose <i>Microsoft Access</i>. You will now have to specify your destination file. Once you have done that and set any, if necessary, security options click <i>Next</i>. Now you are in a position to preview the fruits of your labour. If everything went according to plan, by highlighting the destination table and clicking on the <i>Preview</i> button, you will fire up a dialogue that should display your selected data and how it will appear in it's new table. At this stage I would like to point out that by default the export is to a new table (more information on how to append to an existing table will be published later [i.e. once I figure out how to do that]). If you are happy with the prospective result, click <i>Next</i> again.</p>
<p class="1">Right this concludes this section of the File to Access (fixed field and no row delimiter), please go back to the previous document by <a href="http://www.armagossa.com/index.cfm?contentID=52#return">clicking here</a> to complete the transformation.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>317</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dts-file-to-access-fixed-field-and-no-row-delimiter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>My CV (not up to date)</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/my-cv-not-up-to-date/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=322</guid>
		<description></description>
		<content:encoded><![CDATA[<b><font SIZE=5><p ALIGN="center">Curriculum Vitae</p>
</font><p ALIGN="center"></p>
<p>&nbsp;</p>
<p>Personal</p>

<p>&nbsp;</p>
</b><p>Name: Gregory V. Stewart</p>

<p>E-mail: GregS@armagossa.com</p>

<p>Date of Birth: 14 November 1971</p>

<p>Marital Status: Single</p>

<p>Nationality: British</p>

<p>Languages: Trilingual English, German and French</p>
<p>Working Knowledge Russian and Italian</p>

<p>&nbsp;</p>
<b><p>Education and Qualifications</p>

<p>&nbsp;</p>
</b><p>1997 Master of Science in Computing for Business - Staffordshire University</p>

<ol START=1994>

<li>First Class BA Joint Honours (Russian Studies and German) - University of Keele</li></ol>
<b></b><p>Technical: Microsoft Certified Professional Windows NT 4.0 Workstation</p>
<font SIZE=2><p></font>Microsoft Certified Professional Networking
Essentials</p>
<p>Software Packages: Microsoft Office 95 and 97 Professional, Visual Basic 3.0, SQL Server 6.5, Exchane Server 5.5 and Systems Management Server 1.2, SSADM, Kappa-PC, Crystal Reports, HTML v4.0, DHTML, JavaScript, Java, ActiveX, Perl v5.0, Cold Fusion v4.01, Shockwave, Sendmail, Apache and IIS 4.0</p>
<p>Operating Systems: MS-Dos 6.22, Windows 95 and 98, Windows NT v3.51 and V4.0,
Novell Netware 4.11, LINUX, IRIX</p>
<b>

<p>Career Summary</p>
<p>      &nbsp;</p>
<p>June 1997&nbsp;- January 2000 Entek IRD International Ltd.</p>

<p>&nbsp;</p>
<p>March 1997&nbsp;- June 1997 Metro MGI GmbH.</p>

<p>&nbsp;</p>
<p>April 1996&nbsp;- September 1996 Staffordshire
University&nbsp;-</b>Industrial Placement</p>

<p>&nbsp;</p>
<b><p>February 1995&nbsp;- August 1995 British Gas plc.</p>
</b><font SIZE=2>
<p>&nbsp;</p>
</font><b><p>June 1994&nbsp;- February 1995 Synchro Systems Ltd.</p>

<p>&nbsp;</p>
<p>June 1993&nbsp;- July 1993 British Telecommunications plc.</p>

<p>   &nbsp;</p>
<p>&nbsp;</p>
<p>Details of Business Experience</p>
<p>June 1997 to January 2000 Entek IRD International Ltd. </p>
<p>October 1998 to January 2000 IS&amp;T Manager

</b></p>
<p>Was promoted in October 1998 to the IS&amp;T manager responsible for the
development, approval and subsequent implementation of the European NT server
strategy.</p>
<p>Monitoring and upgrading of existing network infrastructure to support sales,
customer support, services and company administration. At the same time ensuring
that the European strategy is totally synchronised with the Corporate network
and support strategy. This involved continual liaison with the Corporate IT
function in Cincinnati, Ohio. </p>
<p>Was responsible for gaining the approval for the UK and European IT network
budget of £120,000 and subsequent monitoring of performance against budget and
its effectiveness. </p>
<font SIZE=2>

<p></font>Achievements</p>
<ul>
  <li>Helped design, select suppliers and implemented the migration of our existing 10-Base2 network to a new 100 Mbps 10-BaseT network for the France operation. I also helped design and implement the migration of their main Novell 3.12 server to a NT server based network. </li>
  <li>Designed, selected suppliers, implemented the migration of our existing 10-Base2 network to a new 100 Mbps 10-BaseT network (UK).

<li>Successful implementation of the NT server strategy
    ahead of schedule and under budget.

<li>Deployment of new Internet services, such as customer ftp site, Extranet, UK hosted web site and fully customisable personal Intranet. The above mentioned internet solutions were all implemented using Cold Fusion for back end database connectivity (either SQL server 6.5 or Access 97).

<li>Successful connectivity to the US based AS400
    system using the Internet as the transport media and network infrastructure.


<li>Coordinated the information and results of the world wide network strategy to ensure a seamless implementation and ongoing support of the corporate network. </li>
</ul>

<b>
</b><font SIZE=2><p>&nbsp;</p>
<p>&nbsp;</p>
</font><b><p>June 1997 to October 1998 IS&amp;T Co-ordinator
</b></p>
<p>Responsible for the UK and European IT services of Entek IRD International,
controlling a budget of £60,000.</p>
<p>Assessed, reported on the existing IS&amp;T infrastructure and devised the
IS&amp;T strategic vision for both the UK and European operations in conjunction
with the US parent company. </p>
<p>Company champion for internet related services.</p>
<p>Achievements:</p>


<ul>
<li>Complete audit of hardware and software.

<li>Successful standardisation of all European
    platforms through the migration from Windows 3.11 desktop OS to Windows 95.
    Upgrade of file server OS Novell 3.12 to 4.11.

<li>Increased file server and network uptime from 80%
    to 95%.

<li>Responsible for devising, implementing and
    administering the UK E-mail server and Internet connectivity strategy in
    conjunction with the US headquarters.

<li>Based on the requirement for efficient inter-departmental and international information sharing and communication created the UK Intranet and secure link with US Intranet (using digital certificates, SSL and Cisco 2503 access list configuration).

<li>Achieved under budget YTD expense performance.</li></ul>

<b><p>&nbsp;</p>
<p>March 1997 . June 1997 Metro MGI GmbH

</b></p>
<p>Devise and implement a prototype web user interface to the Metro business
applications in the area of business intelligence. In addition completed my
dissertation on Building Corporate Intranets for the Master of Science in
Computing for Business. </p>
<p>Achievements:</p>


<ul><li>Prototype delivered and implemented during a 4
    month industrial placement in Germany.

<li>Dissertation completed, submitted and accepted with
    distinction from Staffordshire University.

<li>Expanded the knowledge and understanding of using the German language in a computing and business environment.</li></ul>

<b>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>April 1996 . September 1996 Staffordshire University . </b>Industrial Placement</p>
<p>A 6 month assignment to devise and provide a set of tools and utilities to
create a distance learning environment, using the web as the transport
media.</p>
<p>Achievements:</p>


<ul>
<li>Present progress and findings on a monthly basis,
    including formal presentations to tutors and members of the Distance
    Learning Program committee.

<li>Results of this work were incorporated into the Distance Learning Program at the University.</li></ul>

<b><p>&nbsp;</p>
<p>June 1994 . February 1995 Synchro Systems Ltd.

</b></p>
<p>Hired to work in St. Petersburg, Russia, on the 1994 Goodwill Games ticketing
project. </p>
<p>Together with the assigned team, this involved the setting up of the
ticketing system, printing of tickets and the distribution to all the venues of
the Games. This involved interfacing with all suppliers, vendors and selling
tickets to the general public.</p>
<p>Following successful completion of the Goodwill Games, assigned to work in
the UK on several projects. Close liaison with First Division football clubs and
Ticketmaster on a remote ticketing sale project. In addition was responsible for
generating corporate sales for both the 1995 Rugby League World Cup and UEFA
Euro 96 football tournament.</p>
<p>Achievements:</p>


<ul>
<li>Venue Management for ticket distribution and sales
    for the Petrovski stadium, which hosted the athletics event.

<li>Assistant Venue manager at both Wembley and Cardiff
    stadia for the Rugby League World Cup in 1995.

<li>Developed a strong working relationship with the box office staff at the First Division football clubs.</li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>322</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-cv-not-up-to-date</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>HTML oddities between NS and IE</title>
		<link>http://gregs.tcias.co.uk/2000/10/30/html-oddities-between-ns-and-ie/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=323</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>HTML oddities (between NS and IE)</h3>
<p class="1">Who hasn't put together a page that looks beautiful in IE, but then looks dreadful in Nestcape and certainly vice versa. Come on hands up, who hasn't come across this problem?? Well in the following I will attempt to put together a list of these oddities and try to provide solutions. So without further ado, here it is:</p>
<p class="1">
<li><b>Working with forms and images and code comments</b>. Now you would have thought that using comments and &lt;INPUT&gt; tags in forms wouldn't be an issue, but they are and mainly in IE 5 (that's the browser I was using at the time). I was adding a hidden &lt;INPUT&gt; tag before a &lt;INPUT&gt; submit tag and commenting the changes, all the while making sure that each comment and each tag was on it's own line. When reviewing the page in my browser I noticed that some white space had been added between my form field and submit button. I checked to see if Netscape displayed the same behaviour and it didn't (v. 4.72). It turned out that because I had surrounded my hidden input field with comments, IE had decided to add some white space. The solution, quite simple remove some of the comment that was between the hidden &lt;INPUT&gt; tag and the submit &lt;INPUT&gt; tag.
<li><b>Using POST and GET in forms:</b> Here's an interesting behaviour that you will only encounter if you are developing without the help of a web server. When using <i>POST</i>, Netscape 4.x will not submit the information, instead it will just sit there and do nothing. Whereas IE will call the next page. Solutions, well there are 2. The first being use a web server to use <i>POST</i> (and if you are working with forms you  normally would). The second is to use the <i>GET</i> method. This publishes all the form fields and their content in the URL, but at least your form gets submitted.
<li><b>2 text boxes and the enter key:</b>If you are using an image as submit button and have more than one text input box, then hitting the enter key under Netscape 4.72 will not submit the form. Again it works fine under IE. The solution is to trap the keyPressDown event and bind a script to it, that submits the form should the enter key be pressed. If you take a look at <a href="index.cfm?contentid=16">Simulating the enter button...</a>, you can see such a script in action. However since then I ahve refined the script and you can find the latest copy <a href="index.cfm?contentid=79">here</a>.
<li><b>Cascading Style Sheets:</b> The first thing I noticed here, was that IE allows you to name your IDs by assigning them numbers, but NS does not recognise these. The solution just give them a alphanumeric based description.
<li><b>Cascading Style Sheets:</b>
When specifying styles for tables, I noticed that in IE when you set the font size you can simply enter <i>font: 10px</i>. However Netscape simply ingonres this and you need to specify <i>font-size: 10px</i>. Furthermore if you want to specify font sizes and colours for different rows, well it works in IE, but it doesn't in NS. You need to specify it on a &lt;td&gt; tag basis. Slightly annoying.
<li><b>JavaScript:</b> Recently I tried to access the value for an element in a select box. While under IE you could simply access it by entering <i>form.elementname.value</i> (by elementname I mean the actual name you have assigned to that select box in your form), Netscape kept returning a null. In order to access the select option value you need to type the following: <i>form.elementname.options[form.elementname.selectedIndex].value</i>. SLightly more convoluted but it works on both browsers.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>323</wp:post_id>
		<wp:post_date>2000-10-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>html-oddities-between-ns-and-ie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>How to configure a Home share under the User Manager for Domains</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/how-to-configure-a-home-share-under-the-user-manager-for-domains/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=325</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>How to configure a Home share under the User Manager for Domains</h3>
<p class="1">I came across this little trick while studying for my MCP Windows NT Workstation exam. This will allow you to create a home share from within the User Manager for domains for new users that you add to the domain.</p>
<p class="1">Step 1 involves creating a directory called "Home" on one of your partitions (make sure it's in the root of your partitions, i.e. <drive letter>:Home). Once you have done this, you need to share this folder (right click and select share from the drop down menu). From the ensuing dialogue box choose all the default options and click OK. The folder should now have a little hand holding it.</p>
<p class="1">Now you can go to the User Manager for Domains and create a new user. Once you have entered all the users details, i.e. Username, Password and Groups, click on the Profile button. At the bottom of the dialogue you should see a Home Directory box. Check the Radio button next to Connect and select a drive letter that will be associated with the users networked home directory (for simplicities sake, choose H:). In the To box enter the following UNC path:</p>
<p class="1">&lt;YourServerName&gt;Home%username%</p>
<p class="1"> By using the UNC path in combination with the %username% statement, you ensure that when you add the user to the SAM, it creates a directory in the Home share for that user, using his username as the directory name. Neat? I thought so!</p>
<p class="1"><b>Note:</b> If you are using Windows NT workstation this will also automatically create a mapping on your system when you log on. However if you use Win9x, you will have to write a login script.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>325</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-configure-a-home-share-under-the-user-manager-for-domains</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Browsing the network is really slow on my NT workstation</title>
		<link>http://gregs.tcias.co.uk/2000/10/19/browsing-the-network-is-really-slow-on-my-nt-workstation/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=326</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Browsing the network is really slow on my NT workstation</h3>
<p class="1">Ever used Explorer to browse your network and found that it is extremely slow and unresponsive at times? I had a look throught technet to see if there was any information on this problem and found the following command (article Q226370):</p>

<p class="1">RunDll32 advpack.dll,LaunchINFSectionEx C:winntINFmstask.inf,,,256
</p>
<p class="1">Apparently it is down to IE4 and it's task scheduler. Applying this command certainly improves the performance of browsing the local area network.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>326</wp:post_id>
		<wp:post_date>2000-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>browsing-the-network-is-really-slow-on-my-nt-workstation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Javascript: Best practice using the with statement</title>
		<link>http://gregs.tcias.co.uk/2000/10/31/javascript-best-practice-using-the-with-statement/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=327</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="1">This section forms part of the discussion surrounding variable <i>scope</i> and <i>scope chain</i> (which is a list of objects searched in order). The <b>with</b> statement allows you to brake that order and insert the object that you created with the <b>with</b> statement and insert it ahead of the scope chain.</p>
<p class="1">Commonly it used to reduce the amount of typing required, i.e. when defining form property names. For example:</p>
<p class="1"><i>with(document.form_name){<br />
&nbsp;name.value="";<br />}</i></p>
<p class="1">What happens here is that now the object <i>document.form_name</i> is no longer needed in front of every form property. However there are a few drawbacks to using this technique.</p>
<p class="1"><li> For one according to the O'Reilly Javascript book, code optimisation becomes difficult and hence can be slow to process.
<li> Secondly functions and variables defined within the statement may display erratic behaviour (what this behaviour is, I can't tell you just yet as it was beyond the scope of the book).</p>
<p class="1">Hence it is advisable to simply define a variable that will hole aforementioned object:</p>
<p class="1"><i>var fn = document.your_form_name;<br />
fn.name.value="";<br />
</i></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>327</wp:post_id>
		<wp:post_date>2000-10-31 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-best-practice-using-the-with-statement</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Adding Virtual hosts to IIS</title>
		<link>http://gregs.tcias.co.uk/2002/10/31/adding-virtual-hosts-to-iis/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=205</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Very often when developing sites it's best to get as close to the production environment setup as possible, so that when you go live the migration to the production server is seamless. One of the required steps is to set up a virtual host on your development web server and configure your machine to see that virtual host. What does this mean? Well essentially instead of typing in a www.something.com address in my browser I could type dev.something.com and have the browser resolve this request to a dev machine on the internal network, while maintaining the appearance of a fully qualified domain name. Incidently you can use it for a raft of other things, such as creating sub domains. In the following I'll be explaining how to configure virtual hosts IIS 5 running on Windows 2000, setting up your local machine to recognise the virtual host, testing the set up and how I apply this setup to my development.</p>
<p>First things first setting up a virtual host on IIS. There are 2 ways to do this the first is to use the handy wizard, the second by creating a site manually and then modifying its properties. Let's have a look at the wizard first and start off by firing up the IIS MMC (the management console), right click on the computer that represents your server and select new site from the pop up menu. This launches the wizard, click next when you see the splash screen. The first thing you'll need to do si give the site a description (this is the text that appears in the MMC alongside the site you created), in my case I called it "Robbie Slater Dev" as I was setting up the dev environment for the <a href="http://www.robbieslater.com/">robbie slater web site</a> and then click next.</p>
<p>The next screen is the important one, it's where you set the IP, port and host header information. You can pretty much leave the first two settings as they are (unless your web server listens on a port other than 80 or you want to specify a specific IP address for that site), the host header field is the important one. Since the live web site was called www.robbieslater.com I opted for the internal domain name to look like this www.robbie.shed (it was shorter to type and shed being the name of the dev server). After clicking next you are given the option to supply the full path to the sites root directory, so if you did a default installation and had your site under wwwroot, the path would look something like this: <strong><em>c:\inetpub\wwwroot\robbieslater</em></strong>. Leave the box ticked for anonymous access, unless you want people to provide a username and password to access the site.</p>
<p>The next prompt involves setting access permission If you are using ASP make sure the first two options are ticked. If you use anything else (such as PHP or Cold Fusion) you'll need to make sure the Execute option is ticked (you will also need to add the default document type to be executed, you can read more about this here: <a href="article.php?id=9E04466F-F09C-4417-8B15679FF5F5052D">How to create IIS mappings for .cfm
</a>). Click next and you are done. Excellent now to the other way of adding virtual hosts.</p>
<p>If you have a site already created, but no host header information set up for it, fear not you can add this information by right clicking on your site and selecting properties. From the dialogue that appears, select the advanced button that appears alongside the IP address drop down. The default entry on the ensuing dialogue should be "IP address (All Unassigned)". Make sure this option is selected and click the <strong>Edit...</strong> button (if on the other hand you have a specific IP address mapped to this site, then select that option in the dialogue). Another dialogue box pops up, you'll notice a blank Host Header Name field and using the previous example for Robbie's site and would have entered <strong><em>www.robbie.shed</em></strong> in that field. Once you are done click OK until you are all the way through until you are back to your MMC. Stopping and starting your site) at this stage is a good idea.</p>
<p>Now that IIS is configured you are not done yet, your machine won't know that, for example,  www.robbie.shed is mapped to an internal IP address, unless of course you are fortunate enough to have a DNS server at your disposal and have added the domain name to the server with the right IP address (might delve a little more into this in a future installment. If not then you will need to edit your <em><strong>hosts</strong></em> file (on win2k machines you should be able to find it here: <em>C:\WINNT\system32\drivers\etc</em>). it usually contains something like this:</p>
<p><em># Copyright (c) 1993-1999 Microsoft Corp.<br />
#<br />
# This is a sample HOSTS file used by Microsoft TCP/IP for Windows.<br />
#<br />
# This file contains the mappings of IP addresses to host names. Each<br />
# entry should be kept on an individual line. The IP address should<br />
# be placed in the first column followed by the corresponding host name.<br />
# The IP address and the host name should be separated by at least one<br />
# space.<br />
#<br />
# Additionally, comments (such as these) may be inserted on individual<br />
# lines or following the machine name denoted by a '#' symbol.<br />
#<br />
# For example:<br />
#<br />
#      102.54.94.97     rhino.acme.com          # source server<br />
#       38.25.63.10     x.acme.com              # x client host<br />
<br />
127.0.0.1       localhost<br /></em></p>
<p>This file allows you to specify an IP address and a hostname for that IP adress. So assuming that your dev server has an IP address of 192.168.0.1 and we have the domain name <strong>www.robbie.shed</strong> add the following line at the end of the <em><strong>hosts</strong></em> file.</p>
<p><em>192.168.0.1    www.robbie.shed</em></p>
<p>Nearly done now... You should not have to, but once you have saved the file, it's safer to reboot your computer at this stage, just to make sure the changes to your <em><strong>host</strong></em> file take effect. Once done, the first test involves attempting to <strong>ping</strong> the domain name you added. So go to your command prompt and type: <em><strong>ping</strong> &lt;your virtual hosts' domain name&gt; </em>. If you were following my example closely (i.e. using robbie.shed) then you would type <em><strong>ping</strong> www.robbie.shed</em>. If all is going well the prompt should display a reply with 0% percent packet loss (this can vary depending on your network). Here's the output I received:</p>
<p><em>c:\>ping www.robbie.shed<br />
<br />
Pinging www.sunbeam.cbd [192.168.0.1] with 32 bytes of data:<br />
<strong></strong>
Reply from 192.168.0.1: bytes=32 time&lt;10ms TTL=128<br />
Reply from 192.168.0.1: bytes=32 time&lt;10ms TTL=128<br />
Reply from 192.168.0.1: bytes=32 time&lt;10ms TTL=128<br />
Reply from 192.168.0.1: bytes=32 time&lt;10ms TTL=128<br />
<br />
Ping statistics for 192.168.0.1:<br />
&nbsp;&nbsp;Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),<br />
Approximate round trip times in milli-seconds:<br />
&nbsp;&nbsp;Minimum = 0ms, Maximum =  0ms, Average =  0ms</em></p>
<p>If you received something like: <em>Unknown host www.robbie.shed</em>, then something isn't quite right. Check that your <em><strong>hosts</strong></em> has the correct information, or try pinging the IP address of the server to see if it is responding. OK now your machine nows where to look up your virtual domain and now for the acid test, open your browser and enter your virtual domain in the address location. Hopefully your site should be appearing in the browser, but if it doesn't try these things:</p>
<ul>
  <li>Check that the default document you are using has been specified in IIS. For example if you want to use index.php as your default you'll need to specify that in the MMC (right click site, properties and select documents from the dialogue tab, typically you'll find <em>Default.htm</em> and <em>Default.asp</em> in there).</li>
  <li>Sometimes the document type you are specifying isn't executed by the application server so have a look here for information on adding document types to IIS: <a href="article.php?id=9E04466F-F09C-4417-8B15679FF5F5052D">How to create IIS mappings for .cfm</a></li>
  <li>Finally review your virtual host header settings.</li>
</ul>
<p>Hope it all worked out for ya, drop <a href="mailto:info@teacupinastorm.com">me a line</a> if you have any problems... </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date>2002-10-31 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adding-virtual-hosts-to-iis</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CVS: Getting started on Windows NT</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/cvs-getting-started-on-windows-nt/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=206</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After experiencing a few quirky problems with our server, which was replacing files with older copies (whether this was down to the server, the back up or just a careless user is not of importance here) I decided it was time for some form of Source Control. The purse strings being tight, I searched the web for source control solutions and stumbled across CVS (<a href="http://www.cvshome.org">http://www.cvshome.org</a>), which suited my needs perfectly, i.e. it did the job and was free. In the following I would like to relate how I installed and configured CVS on a Windows NT workstation working in local mode. Furthermore I am assuming that you will be doing all this from the command line.</p> <p>First off grab the install files by looking through <a href="http://www.cvshome.org/dev/codewindow.html">this page</a>. Once downloaded, extract the zip file to the root of your drive keeping the default folder name (e.g. <em>c:\cvs1-11</em>). So far so good, now let the fun begin. Then go to the install directory and create a sub directory called <strong>cvsroot</strong>. Before you do anything else you will need to set a few environment variables. Open a command prompt and type the following lines one after the other:</p>
<p><em>c:\set HOME=c:\cvs1-11<br /> c:\set CVSROOT=:local:c:\cvs1-11\cvsroot </em></p>
<p>Now the only draw back with setting the variables in such a fashion is that after every re-boot the will have gone, you might want to set them with the help of your system [configuration] (found in your Control Panel) under the <strong>Environment</strong> tab. Simply specify the variable name (e.g. HOME) and it's value (e.g. c:\cvs1-11). You might also want to consider adding cvs to your path so that you can easily invoke the program from where ever you are when you are in the command line mode (from here on in I will be assuming that you did that, if you haven't you will always need to specify the full path to your cvs executable when executing commands).</p> <p>Right let's get ready to roll. <strong>CVSROOT</strong>, as the name would appear to suggest, is going to be the root directory for all your repositories. Now a repository is where you keep your source files under version control. So the first step is to initialise the root repository, you do this by typing the following command from the command line:</p>
<p><em>cd cvs1-11<br /> cvs -d :local:c:\cvs1-11\cvsroot init </em></p>
<p>Don't worry if you don't see any messages appear (as matter of fact take that as a good sign). Right now we are ready to add some files to our repository. For the sake of this example go to your temp directory and create a <strong>test</strong> directory, change to that newly created directory and add the following directories to it: <strong>sub1, sub2 and sub3</strong>. Also add a text file called <strong>File1.txt</strong> to your <strong>sub1</strong> directory. In the next few steps we will be adding these files (well strictly speaking and directories) to our Source Control system. So let's go ahead and add them. Staying in your test directory type the following command in:</p> <p><em>cvs import -m "test import" test test start</em></p>
<p>This should result in the following output (assuming that your install directory is <em>c:\cvs1-11</em>):</p>
<p>output: cvs import: Importing c:\cvs1-11\cvsroot/test/sub1<br />
N test/sub1/file1.txt<br />
cvs import: Importing c:\c:\cvs1-11\cvsroot/test/sub2<br />
cvs import: Importing c:\c:\cvs1-11\cvsroot/test/sub3</p>
<p>If you saw a message like this you have successfully added your sub1, sub2, sub3 directories to a repository called <strong>test</strong>. How? Well let's backtrack and have a look at the command we typed in a few lines back. The command <strong>import</strong> is pretty straight forward, the switch -m followed by the text in quotation marks, is a log message. The first word after the quotation mark (in this case <strong>test</strong>) is the name of the repository you are creating, the following <strong>test</strong> is known as a vendor tag (not too sure what they are there for yet) and the word <strong>start</strong> is a release tag (again not too sure what they do just yet, but from what I gather this isn't so important when getting started).</p>
<p>OK! Your files are now under source control. Now you need to know how to edit these files. So we will need to check these out of CVS. The first thing you will need to do is go to the directory that you wish to work on these files with. Since I was doing web work and using Apache as my web server, it made sense for me to stick them under the root web folder (i.e. htdocs). The command that you will type in will use the name of the repository you are specifying as the folder name it will create, so based on our example <strong>test</strong> the command would look like this:</p> <p><em>cvs checkout test</em></p>
<p>With the following output:</p>
<p><em>cvs checkout: Updating test<br />
cvs checkout: Updating test/sub1<br />
U test/sub1/FILE1.TXT<br />
cvs checkout: Updating test/sub2<br />
cvs checkout: Updating test/sub3</em></p>
<p>As the command executes you will see a list of folders and files that are being copied across, which has the result of creating a test directory with all the files and folders stored underneath it. Now you are ready to open these files in your favourite editor and modifying them.</p> <p>Finally I am going to show you how to check modified files back into CVS (which is after all the whole point of using CVS). Now go ahead and open <strong>file1.txt</strong>, modify it (just add some text to it) and save the changes. Assuming that you are in the directory where the file resides (if not change to it now), type the following command:</p>
<p><em>cvs commit -m "added text to file1.txt" file1.txt</em></p> <p>After hitting the enter key you should see the resulting output:</p>
<p><em>Checking in file1.txt;<br />
c:\cvs1-11\cvsroot/test/sub1/file1.txt,v <-- file1.txt<br />
new revision: 1.2; previous revision: 1.1<br />
done</em></p>
<p>And there you go. You have installed, configured CVS, created a repository, created a working folder (checked out your project), modified a file and checked it back in to CVS. As and when I figure out more things I will be posting them here.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cvs-getting-started-on-windows-nt</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Working with CSV files</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/working-with-csv-files/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=207</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As part of an Intranet project we needed to import a CSV (comma separated values) file from a software package to our Intranet database (sometimes there just isn't an ODBC driver around). In the following I just wanted to show you how I got Cold Fusion to parse through the text file, grab the values required, store them in a structure and then inserted these into a table.</p>
<p>Let's start off with the code:</p>
<p><em> &lt;cffile action="READ" file="d:\inetpub\wwwroot\test_file.csv" variable="file_text"&gt;&lt;!--- -Load the file to be parsed- ---&gt;<br />
&lt;cfset stRecords = StructNew()&gt;&lt;!--- -Create new structure- ---&gt;<br />
&lt;cfloop list="#file_text#" index="i" delimiters="#chr(13)#"&gt;&lt;!--- -Loop over the text file using the return character as the delimiter, i.e. looping over every row in the text file- ---&gt;<br />
&lt;cfset counter = 1&gt;&lt;!--- -Initialise counter- ---&gt;<br />
&lt;cfloop list="#i#" index="j" delimiters=","&gt;&lt;!--- -Now loop over the individual row using comma as the delimiter- ---&gt;<br />
&lt;cfif counter eq 1&gt;&lt;!--- -The column identifier we know occupies position 1 (always use trim to remove white space)- ---&gt;<br />
&lt;cfset item_id = #trim(j)#&gt;<br />
&lt;cfelseif counter eq 2&gt;&lt;!--- -The unique user_id occupies position 2 (always use trim to remove white space)- ---&gt;<br />
&lt;cfset user_id = #trim(j)#&gt;<br />
&lt;cfelseif counter eq 3&gt;&lt;!--- -The columns value is stored in position 3 (always use trim to remove white space)- ---&gt;<br />
&lt;cfset item = #trim(j)#&gt;<br />
&lt;/cfif&gt;<br />
&lt;cfset counter = counter + 1&gt;&lt;!--- -Increment counter- ---&gt;<br />
&lt;/cfloop&gt;<br />
&lt;cfset stRecords["#trim(item_id)#"] = '#trim(item)#'&gt;&lt;!--- -Add the column id and it's value to the structure- ---&gt;<br />
&lt;cfif item_id eq 54&gt;&lt;!--- -We know that this is the last column to be parsed so know we can safely insert our new record- ---&gt;<br />
&lt;!-- Your insert statement goes here and will look like this --&gt;<br />
INSERT INTO your_table&lt;br /&gt;<br /> (user_id, column_1, column_2, column_3, column_4, column_5, column_6, column_7, column_8, column_9, column_10, column_11, column_12, column_13)&lt;br /&gt;<br />
VALUES&lt;br /&gt;<br />
(&lt;cfoutput&gt;#user_id#, #stRecords["7"]#, #stRecords[11]#, #stRecords[12]#, #stRecords[13]#, #stRecords[14]#, #stRecords[41]#, #stRecords[43]#, #stRecords[44]#, #stRecords[51]#, #stRecords[52]#, #stRecords[53]#, #stRecords[54]#&lt;/cfoutput>)<br />
&lt;p&gt;&lt;/p&gt;<br />
&lt;cfscript&gt;<br />
/*Now clear the structure before starting the next chunk to be processed */<br /> structClear(stRecords);<br />
&lt;/cfscript&gt;<br />
&lt;/cfif&gt;<br />
&lt;/cfloop&gt; </em></p>
<p>Step one involved telling Cold Fusion where to find the file to be parsed and storing the contents of that file in a variable called <strong>file_text</strong> using the <em>CFFILE</em> tag. Now the text file we were working with had the added ambiguity in that the records for weren't stored in single rows but spanned multiple rows. However each row had a column identifier. Listed below I have included a sample of the data to be imported for clarities sake</p> <p><em>1,"EMUPDV41","Employee Master Table",09072001,1640<br />
7,"00010","02 1234-5678"<br />
11,"00010","22 Parkland Street"<br />
12,"00010","North Sydney"<br />
13,"00010","2000"<br />
14,"00010","NSW"<br />
41,"00010","Y"<br />
43,"00010","N"<br />
44,"00010","H"<br />
45,"00010","Y"<br />
51,"00010","062192"<br />
52,"00010","193194195"<br />
53,"00010","Commonwealth Bank of Australia"<br />
54,"00010","Veronica Macgerkinshaw"<br />
99 </em></p>
<p>The rows that are prefixed with the numbers 1 and 9 were header and footer rows respectively. The values we were interested in were between the row numbers 7 and 54, where for example the number 7 was the row identifier (in this case named <strong>item_id</strong>) for phone numbers. Furthermore we new that the <em>user_id</em> was the second value and existed in each row. The third and final value was the actual value (stored later on in <strong>item</strong>) of the row identifier for that user. So in our example a user with the user_id of <em>00010</em> had the phone number: <em>02 1234-5678</em>. Armed with this information I decided that I would need to store these values in a structure before I could insert them into the database. So I started out by declaring my structure: <strong>stRecords</strong>.</p>
<p>Next it was time to do some actual work. I started of by looping over the the contents of the text file which I had previously stored in the variable <em>file_text</em>. Using the <strong>chr(13)</strong> (carriage return) as my delimiter I was able to break the file into rows. The following lines sets a counter variable. This variable will be used shortly to determine the position of the loop in the actual row. Then it was time to loop over the current row of my first loop. Using the index value <strong>i</strong> I set about grabbing the individual values of the first row in my imported text file.</p>
<p>Knowing that each row was comprised of three values (and subsequently the loop would loop three times over every line in the text file), I used the counter variable (which increments by one for every loop) to determine first the column name (counter = 1), then the user_id (counter = 2) and finally the value stored in that column (counter = 3). At each step of the loop I stored the values in the aforementioned variables: <strong>item_id</strong>, <strong>user_id</strong> and <strong>item</strong>.</p>
<p>Once the row had been parsed the loop terminated and I was able to add the resulting values to my structure <strong>stRecords</strong>. First I used the value stored in <strong>item_id</strong> to determine the structure key and then set it's value corresponding to the one stored in the variable <strong>item</strong>. Then it was on to the next row. At this point you may have noticed the use of the <strong>trim()</strong> function. Simply used to remove any whitespace from the values.</p> <p>Now of course there were going to multiple recordsets for many many users, so we needed to figure out where the final row for a user was and where the next one began. Remember I mentioned that the values I was interested in were between 7 and 54, well 7 marks the first row in a user set and 54 the last. So by checking the value of item_id I was able to ascertain when I had reached the end of a set and then commit those changes to the database. Having stored the user details in a structure, I then proceeded to access that the structure keys to populate the table columns. So in our example the user's phone number had an ID of 7 and a value 02 1234-5678. In my table I stored the user's phone number in <strong>column_2</strong>, so all that was now needed was so to specify the position in the structure, which is <strong>stRecords["7"]</strong> (remember I set the structure key equal to row identifier?). And so on and so forth for the remaining columns.</p>
<p>All that was left to do was to clear the structure before the loop moved on to the next set of user details and repeated the whole process until the footer (99) was reached. I know this is quite specific to a problem we had, but I do hope that it shows you how you can access text files, parse them, store the values you need (in a structure) and then insert these into a database table. 'Til the next time.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>working-with-csv-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>PHP config tips</title>
		<link>http://gregs.tcias.co.uk/2002/07/09/php-config-tips/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=232</guid>
		<description></description>
		<content:encoded><![CDATA[<p>1/ The first problem I came across was working with session variables. For some reason during the PHP installation the default directory for storing the session information had been set "<em>/tmp</em>" which is of course a Unix style path and didn't exist on my system and hence threw an error. You can change this path by locating you <em>php.ini</em> file. By default this is stored in your <strong>Windows</strong> folder on your system drive. Once located open it up and look for <em>session.save_path</em>. Replace the /tmp with the desired location for your session data. In fact there should be a folder in your <strong>PHP</strong> labelled <strong>sessiondata</strong>, so you might as well set it to that. Your <em>.ini</em> file should look something like this assuming that you have installed into the root of your C Drive:</p>

<p><em>session.save_path = c:\PHP\sessiondata</em></p>

<p>If you have loaded PHP as module in Apache, you will need to stop and restart your Apache server.</p>

<p>2/ The next problem I had was with PHP generated e-mails. They simply couldn't be sent at this stage I can't recall what the error message was or even whether there was an error message. All I remember is not receiving the messages. Again you will need to look into your <em>php.ini</em> file. Look for the following segment:</p>

<p><em>[mail function]<br />
; For Win32 only.<br />
SMTP =localhost<br />
<br />
; For Win32 only.<br />
sendmail_from =me@localhost.com<br /></em></p>

<p>Again this should probably work just fine on a UNIX or windows box running a mail or SMTP server, but I was not so fortunate. I could have downloaded and installed the <a href="http://www.argosoft.com/applications/mailserver/">ArgoSoft freeware mail server</a>, but instead chose to use the SMTP server address provided by my ISP, because I was pretty much always on-line. So simply edit the line to look something like this:</p>

<p><em>[mail function]
; For Win32 only.
SMTP =mail.yourISPsSMTPserver.com

; For Win32 only.
sendmail_from =yourname@server.com</em></p>

<p>I also edited the "<em>sendmail_from</em>" line, because messages sent other wise via the server tend to display nothing in the FROM: field in your mail client. AGain if you have PHP installed as a module for Apache you will need to restart the Apache server.</p>

<p>3/ On certain windows installations PHP just wouldn't recognise submitted form fields. The work around for this can also be found in your <em><strong>php.ini</strong></em>. Locate the section labelled: <strong>Data Handling</strong>, there you will find the following line:</p>

<p><em>register_globals = Off</em></p>

<p>Simply set that value to <strong>On</strong> and restart your web server and the problem disappears.</p>

<p>4/ Configuring Apache2 to use PHP on a Windows box is sadly not automated either. So you'll need to open your <em>httpd.conf</em> file and add the following lines to it:</p>

<p><em>#PHP 4 config info<br />
LoadModule php4_module "c:/php/sapi/php4apache2.dll"<br />
AddType application/x-httpd-php .php</em></p>

<p>Once you have entered these lines, save and restart your web server for the changes to take effect. You can read more about Apache2 configuration <a href="http://www.php.net/manual/en/install.apache2.php" title="Servers-Apache 2.0">here</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>232</wp:post_id>
		<wp:post_date>2002-07-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-config-tips</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Generic form validation</title>
		<link>http://gregs.tcias.co.uk/2002/10/11/generic-form-validation/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=233</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The holy grail of development, writing a piece of code that you can just drop into any application and run with. Well here is my attempt at writing a javascript that would handle form validation on the fly. And well even if I say so myself it has come in pretty handy and though it's not suitable for all cases, e.g. where there are two forms on one page, it handles everything else pretty well.</p>
<p>So what does it do? and how does it work? The script comes in 2 parts. The first being <strong>c_validate.js</strong>. This is the script that handles the bulk of the form validation. It works by looping over all the form fields on a given page. Then it determines what type (text, password, select [single and multiple]) it is and based on that executes a set of validation rules. The validation checks it does are:</p>
<ul>
<li>Specify which fields are required and which are optional</li>
<li>Standard empty/blank form fields</li>
<li>Validates e-mail addresses</li>
<li>Checks for matching passwords (where applicable)</li>
<li>Checks for numeric values where specified</li>
<li>Checks that numeric values are between a set range</li>
<li>Checks dates*</li>
<li>Uses the form field name for the error message</li>
<li>Display a dHTML error message (IE only)</li>
</ul>
<p><i>*The date checking bit comes in the form of a script called <strong>_date.js</strong>, which was written by someone else, a chap called Michael</i></p>
<p>If the content of you form breaks any of the validation rules then in IE it dynamically displays a message near the offending form field and in Netscape pops up an alert dialogue box (I have yet to get the dHTML bit too work, but I will). Any errors will stop the form from submitting. So how do you implement it? It's very simple, in the header section of the page you want to validate add the following two javascript statements (the ones in bold):</p>
<p><em><pre>
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt;

&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Untitled&lt;/title&gt;
<strong>&lt;script language="JavaScript1.2" type="text/javascript" src="js/_validate.js"&gt;&lt;script&gt;
&lt;script language="JavaScript1.2" type="text/javascript" src="js/_date.js"&gt;&lt;/script&gt;</strong>
&lt;/head&gt;
</pre></em></p>
<p>Where <strong>js/</strong> is the directory where the two files reside. Next in your <strong>&lt;form&gt;</strong> tag, add the attribute <em>onSubmit</em> with a value of <em>return verify(this);</em>, like such:</p>
<p><em>&lt;form action="your_page.html" method="post" name="your_form_name"
id="your_form_name" enctype="application/x-www-form-urlencoded" onsubmit="return verify(this);"&gt;</em></p>
<p>Now in order for the dHTML validation messages to appear you need to add a <strong>&lt;span&gt;</strong> tag with an attribute <em>id</em> that has a value of <em>elField0</em>, where the <strong>0</strong> is for your first form field. You repeat this for the next form field, but give it an <em>id</em> of value <em>elField1</em> and so on and so forth for for each and every form field on the form always incrementing the value by 1. This will look like such:</p>
<p><em>
First Name: &lt;input type="text" name="r_first_name" id="r_first_name" size="20" value=""&gt;&lt;span id="elField0"&gt;&lt;/span&gt;<br />
Surname: &lt;input type="text" name="r_surname" id="r_surname" size="20" value=""&gt;&lt;span id="elField1"&gt;&lt;/span&gt;
</em></p>
<p>As I mentioned above you can specify which form fields are required and which are optional. You do this by pre pending either <strong>r_</strong> for required or <strong>o_</strong> for optional to your form field name. Just look at the example above and you will notice that both form fields are required, because the form field names are: <em>r_first_name</em> and <em>r_surname</em>. If you wanted to make the first name field optional, simply label it: <em>o_first_name</em>. A question that might come to your minds is: "If my form field is optional do I need to include the <strong>&lt;span&gt;</strong> tag with an incremented elField?". The answer is no, you don't have to include it, but you still need to increment the elField, see the example below, where the phone entry is optional:</p>
<p><em>First Name: &lt;input type="text" name="r_first_name" id="r_first_name" size="20" value=""&gt;&lt;span id="elField0"&gt;&lt;/span&gt;<br />
Surname: &lt;input type="text" name="r_surname" id="r_surname" size="20" value=""&gt;&lt;span id="elField1"&gt;&lt;/span&gt;<br />
Phone: &lt;input type="text" name="o_phone" id="o_phone" size="20" value=""&gt;<br />
E-mail: &lt;input type="text" name="r_email" id="r_email" size="20" value=""&gt;&lt;span id="elField3"&gt;&lt;/span&gt;</em></p>
<p>Now I also mentioned in my list of things that this script does, that it uses the form field name submitted to generate the error message. So using our aforementioned First name input box, the script would grab <em>r_first_name</em>, strip off the <em>r_</em> and replace the "_" with a white space and concatenate it with the standard error message: "<em>You need to specify a first name</em>". Marvellous. In Netscape's case it does the same thing but appends it a list that will populate the alert box.</p>
<p>That's pretty much all there is to doing checks for not completed form fields. But you can do a little more. If you want to check that the user has entered a valid e-mail address, make sure the form field name a) has the <em>r_</em> pre pended and b) contains the word <em>email</em>, for example <em>r_email_address</em>. Similar thing for dates. Again pre pend the <em>r_</em> and include the word <em>date</em>. Please note that this kind of check is only performed if the input box is of type "<strong>Text</strong>". If you would like to validate matching passwords, you have to name the first input field <em>r_password</em> and the second <em>r_verify_password</em>.</p>
<p>Well that's about it. It's not totally generic and relies heavily on your form field naming convention, but if that is not a problem then this might help you out. Below I have listed some of the issues with this script and stuff that is planned for it. <a href="http://www.teacupinastorm.com/gregs/downloads/validate.zip">And here you can download the script and this page</a>. Finally I'd briefly like to thank a few people, who have helped out developing this form, by either using it, contributing or juts plain testing it. Special thanks goes out to Werner, Istvan and Michael.</p>
<p>Ok the quirks...
<ul>
<li>Netscape 4.78, insists on validating every text field for a numeric field.</li>
<li>Macs and Netscape well there would have to be a quirk and that is the limitation of 255 characters for the alert dialogue, so Mac developers beware of long forms.</li>
</ul>
Future additions:<br />
<ul>
<li>dHTML for both Netscape 4.7x and 6.x.</li>
<li>Group check box validation.</li>
<li>Credit card numbers</li>
<li>And whatever else anyone else can think of.</li>
</ul></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date>2002-10-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>generic-form-validation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>PHP and servlets - part i</title>
		<link>http://gregs.tcias.co.uk/2002/10/22/php-and-servlets-part-i/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=234</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It was my intention from the outset to build this site using PHP, however as I was working my way through building the CMS and the front end that it would be cool to build certain parts of the functionality in Java or maybe all of it? I decided to proceed along the PHP path first, after all it was nearly done and I might gaina few more insights along the way. But now that this done I figured it was time to delve a little deeper.</p>

<p>I'll be looking into setting up the PHP environment first. Most of the following will concern itself with editing the php.ini file. I am assuming that you have downloaded and installed the JDK. Without it, the whole exercise is a little pointless. OK, open edit the <em>php.ini</em> (usually located in a Windows based system in your Windows system folder). Look for segment that looks like the following:</p>

<p><em>[Java]<br />
;java.class.path = .\php_java.jar<br />
;java.home = c:\jdk<br />
;java.library = c:\jdk\jre\bin\hotspot\jvm.dll <br />
;java.library.path = .\</em></p>

<p>The <strong>ini</strong> file needs to be modified to point to the class path, the java home, the java virtual machine and finally the location of the Java extensions.</p>

<p><em>[Java]<br />
java.class.path = "C:\PHP\extensions\php_java.jar;"<br />
java.home = "C:\j2sdk1.4.0_01\bin"<br />
java.library = "C:\j2sdk1.4.0_01\jre\bin\server\jvm.dll"<br />
java.library.path = "C:\PHP\extensions;"</em></p>

<p>I have simply used all the default locations provided by the install programs. The next thing you need to edit applies to the Dynamic Extensions section, there look through the commented out list of extensions for <strong>extension=php_java.dll</strong> and uncomment it.</p>

<p>These changes need to take effect and this can only be done by restarting your web server. If the server started up alright and PHP is still running then you edited properly the <strong>ini</strong> file, which by no means indicates that the configuration was successful. Only one way to find out and that's to try it out. Here is a bit of code I found on the PHP site (<a href="http://www.php.net/">http://www.php.net/</a>) that helped me test my installation. The full code can be found here: <a href="http://www.php.net/manual/en/ref.java.php">http://www.php.net/manual/en/ref.java.php</a></p>

<p><em>&lt;?php<br />
  // get instance of Java class java.lang.System in PHP<br />
  $system = new Java('java.lang.System');<br />
<br />
  // demonstrate property access<br />
  print 'Java version='.$system-&gt;getProperty('java.version').' &lt;br&gt;';<br />
  print 'Java vendor=' .$system-&gt;getProperty('java.vendor').' &lt;br&gt;';
  print 'OS='.$system-&gt;getProperty('os.name').' '.<br />
              $system-&gt;getProperty('os.version').' on '.<br />
              $system-&gt;getProperty('os.arch').' &lt;br&gt;';<br />
<br />
  // java.util.Date example<br />
  $formatter = new Java('java.text.SimpleDateFormat',<br />
                        "EEEE, MMMM dd, yyyy 'at' h:mm:ss a zzzz");<br />
<br />
  print $formatter->format(new Java('java.util.Date'));<br />
?&gt;</em></p>

<p>This sample PHP code access the Java System class, accesses a few properties and returns the appropriate values. If everything is configured properly then you should see something like this:</p>

<p><em>Java version=1.4.0_01<br />
Java vendor=Sun Microsystems Inc.<br />
OS=Windows XP 5.1 on x86<br />
Tuesday, October 22, 2002 at 11:56:32 AM Greenwich Mean Time </em></p>

<p>If you are having any difficulties just make sure you are pointing to the right locations for the java environment. Another suggestion I can make is to take a closer look at your <strong>php.ini</strong> file and look for:</p>

<p><em>; Directory in which the loadable extensions (modules) reside.<br />
extension_dir = "C:\PHP\extensions"</em></p>

<p>Just make sure that <strong>extension_dir</strong> is pointing at the right location for your PHP extensions. So far so good, next time I'll talk a little about my first forays into running my own classes (and that's where the tribulations truly begin).</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2002-10-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-and-servlets-part-i</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Configuring MySQL Client</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/configuring-mysql-client/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=235</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As much fun as command line stuff can be, every now and then a graphical user interface toll can come in handy. Hence I decided to use <strong>mysqlgui</strong> tool, which can be found here: <a href="http://www.mysql.com/downloads/gui-mysqlgui.html">http://www.mysql.com/downloads/gui-mysqlgui.html</a>. Once downloaded the install is pretty straightforward, just unzip the files in the downloaded zip file anywhere to your hard disk. I recommend also creating a desktop shortcut for your this application as it doesn't install any shortcuts in your start menu.</p>
<p>Now double click on the icon, you will be prompted to enter a password. This is pretty inconsequential at this time as the client is only configured to connect to the localhost MySQL server. However if you are working with MySQL installed locally then type in your root password. For the rest, just type anything. For users with MySQL installed locally this concludes this article. For everybody else who will be attempting to connect to a remote MySQL server, read on.</p>
<p>Once you have logged on, you may notice an error appearing at the bottom of the screen. This just informs you that the client was unable to connect to the localhost server. So what we will be doing next is changing the host to connect to and specify a username to use when connecting to the server. Click on the dark blue <strong>Options</strong> button in the second menu row. This brings up a dialogue, that starts on the server page. Where is reads host name, you should enter the name of the server you wish to connect to, this can be either it's name or it's IP address. You may also have to change the port number should your server be listening on an other port.</p>
<p>Next click on the <strong>Client</strong> tab. Where it reads username enter the username used to connnect to the database server and that is pretty much it (in our example where username is <strong>admin</strong>, with a password value of <strong>passw0rd</strong>). Click Save and try connecting to the server.</p>
<p>Sometimes a problem still occurs and this is down to the hostname that is assigned to the username you are using to connect. It be should <strong>localhost</strong> and not the name of the host that you are trying to connect from. There are 2 ways that you can remedy this. The first is to create a new user with host set to localhost as shown below. A word of warning in this example the user created gets full privileges, identical to <strong>root</strong> (i.e. access to all tables with INSERT, UPDATE and DELETE capabilities and ability to GRANT), so this may not be adequate for your set up. Consult your DBA and create a user with the appropriate privileges (or wait for an upcoming article on it). Without further ado here are the instructions:</p>
<p><em><ol>
  <li>Connect to your server from the command line.</li>
  <li>Connect to the mysql database with the following commmand and provide the password when prompted: <strong>mysql -u root -p mysql</strong></li>
  <li>Then just type the following: <strong>GRANT ALL PRIVILEGES ON *.* TO admin@localhost IDENTIFIED BY 'passw0rd' WITH GRANT OPTION;</strong></li>
  <li>You can type: <strong>SELECT user,host FROM mysql.user;</strong> to see a listing of usernames and their hosts.</li> '
  <li>Disconnect from your server and try reconnecting with your MySQL Client.</li>
</ol></em></p>
<p>The other alternative is to grant a username regardless of his host association access to the database server. The instructions are the same as above (and the security implications just as applicable, if not more so since now all hosts have the same access privileges). Just type in the following command:</p> <p><em><strong>GRANT ALL PRIVILEGES ON *.* TO admin@"$" IDENTIFIED BY 'passw0rd' WITH GRANT OPTION;</strong></em></p> <p>And there you have it, you should now be able to use the MySQL client. Until I find a spare moment again to write some stuff up.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configuring-mysql-client</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Accessing the session variable structure</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/accessing-the-session-variable-structure/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=236</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Following on from the article on <a href="http://gregs.teacupinastorm.com/html/article/article.php?id=103fd90c85564e472733d126fbbfd9e8">clearing your application and session variables article</a>, here I'll focus on accessing the structure in which these variables are stored and outputing their names and values. In essence we will be looping over the structure and display the session variable value and name. Since the information is stored in a structure you will need to set the attributes <strong>collection</strong> and <strong>item</strong> of your &lt;cfloop&gt; tag, where the collection you are accessing is called <strong>session</strong> (or <strong>application</strong> if you wanted to look at that structure). The variable in <strong>item</strong>, is set to <strong>i</strong>, this is what we are going to output. The page would look as follows.</p>
<p><em>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt;<br />
<br /> &lt;html&gt;<br />
&lt;head&gt;<br />
&nbsp;&nbsp;&lt;title&gt;Displaying all session variables&lt;/title&gt;<br />
&lt;/head&gt;<br />
<br />
&lt;body&gt;<br />
&lt;cfloop collection="#session#" item="i"&gt;<br />
&nbsp;&nbsp;&lt;cfoutput&gt;#i# - #session[i]#&lt;br /&gt;&lt;/cfoutput&gt;<br />
&lt;/cfloop&gt;<br />
<br />
&lt;/body&gt;<br />
&lt;/html&gt;<br /> </em></p>
<p>In the output <strong>i</strong> will represent the session variable name and the array syntax (<strong>#session[i]#</strong>) will output the actual value of the session variable. There you go all set now you easily see what values have been set for your session variables.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>accessing-the-session-variable-structure</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>How to clear application/session variables without re-booting your server</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/how-to-clear-applicationsession-variables-without-re-booting-your-server/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=237</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am sure you have come across this problem, you make some changes to a page or are debugging a page, only to find that your session and application variables are set and viewing the changes or detecting the problem is now impossible. The first option for clearing these variables was to stop and restart your cold fusion application service. Under NT you would type the following command from the command line:</p>
<p><em>net stop "cold fusion application server"<br />
The Cold Fusion Application Server service is stopping..<br />
The Cold Fusion Application Server service was stopped successfully. <br />
<br />
<br />
net start "cold fusion application server"<br />
The Cold Fusion Application Server service is starting...<br />
The Cold Fusion Application Server service was started successfully.</em></p>
<p>This would indeed clear your variables but is a bit cumbersome and down right useless if you don't have access to the server. So what do you do then? Well the answer I found in the CF in the <a href="http://www.amazon.co.uk/exec/obidos/ASIN/0789725657/teacupinastor-20/">Certified CF Developer Study Guide</a> (See reading is useful... and it's a pretty useful book too). All session and application variables are stored in a <strong>structure</strong> and with the help of the <strong>StructClear()</strong> function you are now able to clear these. To facilitate this step I created a new Cold Fusion template, added the following lines and saved it as <em>clear_session.cfm</em></p>
<p><em>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt;<br />
<br />
&lt;html&gt;<br />
&lt;head&gt;<br />
&lt;title&gt;Clear session variables&lt;/title&gt;<br />
&lt;/head&gt;<br />
<br />
&lt;body&gt;<br />
<br />
&lt;cfscript&gt;<br />
StructClear(session);<br />
StructClear(application);<br />
&lt;/cfscript&gt;<br />
<br />
&lt;/body&gt;<br />
&lt;/html&gt;<br /></em></p>
<p>So there you go, just run this page and your session and application variables will be cleared (please note that if you require to log on to your site and run this page you will clear you session variable for that too and hence be required to log back in again). I'll be writing about how to view the content of these structures in the near future.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>237</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-clear-applicationsession-variables-without-re-booting-your-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Compiling Java servlets</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/compiling-java-servlets/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=238</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you are experiencing a few difficulties compiling your Java Servlets, here are the steps required to configure your environment properly. First of all you will need these 2 development kits:</p>
<p>
<ul>
  <li><a href="http://java.sun.com/j2se/1.3/download-windows.html">JDK 1.3</a> [at the time of writing the latest version was 1.3.0_02]</li>
  <li><a href="http://java.sun.com/products/servlet/archive.html">JSDK 2.1</a></li>
</ul></p>
<p>OK once you have downloaded these and installed them, copy <strong>server.jar</strong> and <strong>servlet.jar</strong> to your <em>&lt;drive letter&gt;:\&lt;JDK install directory&gt;\lib\</em>. Then you will need to add these two files to your <strong>classpath</strong>. Open up your Control Panel and select System. Once the dialogue is up choose Environment and look for the <strong>classpath</strong> entry in system variables. Once you have clicked on that variable you should be able to add another entry to the value. Type in the following:</p> <p><em>;&lt;drive letter&gt;:\&lt;JDK install directory&gt;\lib\servlet.jar;&lt;drive letter&gt;:\&lt;JDK install directory&gt;\lib\server.jar</em></p>
<p>Also make sure that your Path has been set ptoperly to relfect your JDK <strong>bin</strong> directory. In Environment under the variable <strong>Path</strong>, look for the following entry:</p>
<p><em>&lt;drive letter&gt;:\&lt;JDK install directory&gt;\bin;&lt</em></p>
<p>If it isn't there then add it. Now if you want to compile one of your Java servlets all you need to type from any location is:</p>
<p><em>javac JavaProgramName.java</em></p>
<p>Also note that when typing the above command make sure that you specifying the <strong>.java</strong> file with it's proper case. The compiler is case sensitive and hence won't compile properly, so if you type in: <strong><em>javac javaprogramname.java</em></strong> and the fiel was saved as <strong><em>JavaProgramName.java</em></strong>, then the compiler will throw an error. There you go all done, now you just have to make sure there are no errors in your code.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>238</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>compiling-java-servlets</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Apache: Configuring Tomcat</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/apache-configuring-tomcat/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=239</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In the following I shall talk you through configuring and installing Tomcat [at the time of writing the latest version was 3.2.1] (a JSP server) to run with your Apache server on your Windows box. Before we get started you will need to get the following files (and I am assuming that you have Apache installed and configured properly):</p>
<p><ul>
  <li><a href="http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.2.1/">Tomcat source files</a></li>
  <li><a href="http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.2.1/bin/win32/i386/">JK_NT_service</a></li>
  <li><a href="http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.2.1/bin/win32/i386/">ApacheModuleJServ.dll</a></li>
  <li><a href="http://java.sun.com/j2se/1.3/download-windows.html">JDK 1.3</a> [at the time of writing the lates version was 1.3.0_02]</li>
</ul></p>
<p>Once you have downloaded these files, start off with extracting the Tomcat source files and installing the JDK 1.3 files. For simplicities sake extract and install the files into the root of your drive. Once done you will need to edit the <strong>wrapper.properties</strong> file (usually located in: <em>&lt;drive letter&gt;:\jakarta-tomcat-3.2.1\conf</em>. You will need to specify both your tomcat home directory and your Java directory. Look for the following lines:</p>
<p><em>#<br />
# wrapper.tomcat_home should point to the location where you<br />
# installed tomcat. This is where you have your conf, webapps and lib<br />
# directories.<br />
#<br />
wrapper.tomcat_home=&lt;put your Tomcat home&gt;<br />
<br />
#<br />
# wrapper.java_home should point to your Java installation. Normally<br />
# you should have a bin and lib directories beneath it.<br />
#<br /> wrapper.java_home=&lt;put your Java home&gt;<br /></em></p>
<p>Modify that section to refelect your installation directories:</p>
<p><em>#<br />
# wrapper.tomcat_home should point to the location where you<br />
# installed tomcat. This is where you have your conf, webapps and lib<br />
# directories.<br />
#<br />
wrapper.tomcat_home=&lt;drive letter&gt;:\jakarta-tomcat-3.2.1\<br />
<br />
#<br />
# wrapper.java_home should point to your Java installation. Normally<br />
# you should have a bin and lib directories beneath it.<br />
#<br />
wrapper.java_home=&lt;drive letter&gt;:\JDK1.3.0_02\</em></p>
<p>Save the file. Next extract the <strong>jk_nt_service</strong> file you downloaded into your tomcat home directory, open a command prompt window and change to that directory. Once there type the following command:</p>
<p><em>jk_nt_service -i Tomcat &lt;Drive Letter&gt;:\jakarta-tomcat-3.2.1\conf\wrapper.properties</em></p>
<p>Should your install directory include and spaces you will need to put your <strong>wrapper.properties</strong> path in quotation marks. OK, once done start the service by typing <em>net start Tomcat</em>. It should have started without any problems. Next locate the file called <strong>tomcat-apache</strong> (usually also located in <em>&lt;drive letter&gt;:\jakarta-tomcat-3.2.1\conf</em>) and open it. Copy and paste the content into your Apache <strong>http.conf</strong> (located in <em>&lt;drive letter&gt;:\Program Files\Apache Group\Apache\conf\</em>). Save the changes and stop your Apache server (<em>net stop apache</em>). The final step involves copying the <strong>ApacheModuleJServ.dll</strong> into the modules directory in your Apache install directory and restarting the Apache server.</p>
<p>OK, ready to test your work? Open a web browser and enter the following URL http://localhost/examples/jsp/. You should be presented with a list of examples. Try them out. If you installed everything correctly they should be working. Welcome to the world of JSP.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apache-configuring-tomcat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Apache: Page refresh issues using ChiliSoft</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/apache-page-refresh-issues-using-chilisoft/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=240</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Recently I downloaded the ASP plug-in from ChiliSoft for Apache. It's a fine module that allows you to develop Active Server Pages on Apache, however soon after I started using it I noticed that a lot of my pages that were using includes were not refreshing properly, i.e. changes made to those includes were not being displayed.</p>
<p>After a lot of soul searching I came across an article that really helped resolve the problem. This is what was actually happening. The application server was still parsing the the document that contained includes, but because that document in itself had not changed it was reading the includes from cache. The solution to this problem came from a Unix person and the trick was to simply <strong>touch</strong> the calling template. By touching the file you simply change the date and time stamp of a file. Unfortunately Windows does not have such a useful command, well that is unless you have access to the NT4.0 Resource Kit. For those of you who do not have access to touch, well you can always just re-save the calling template, that also resets the date and time stamp. This however can be a real pain if you have a number of files to change, so using <strong>touch</strong> is definitely the better solution.</p>
<p>Using <strong>touch</strong> is very straight forward. Open a <em>command prompt</em> window and change to the location of the files you wish to change and type in the following command and press enter:</p>
<p><em>touch filename.asp</em><br />
or if you have multiple HTML files you want to change<br />
<em>touch *.asp</em></p>
<p>And there you go you are done. Now all you need to do is refresh the page in your browser and all the changes you made to your include files should appear.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>240</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apache-page-refresh-issues-using-chilisoft</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Javascript: Setting the form focus</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/javascript-setting-the-form-focus/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=241</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of my pet grievances is hitting a page with a search or username and password field, where I need to click on the field so that I can start entering text. I will briefly explain in the following how you can set the focus on a form field, so that a cursor appears there, once the page has loaded.</p>
<p>Suppose you have form named <strong>frm_search</strong>, i.e. your form statement would look something like this:</p>
<p><em>&lt;form action="search_results.html" method="post" enctype="multipart/form-data" name="frm_search"&gt;</em></p> <p>And the field name you wanted to set the focus to was called <strong>txt_search</strong>, you would need to specify in the <strong>&lt;body&gt;</strong> of your page the following onLoad function:</p> <p><em>onLoad="document.frm_search.txt_search.focus();"</em></p>
<p>Et voila, when the page loads, you should find the cursor blinking in that form field. Not very complicated and so much more user friendly. So to recap here is the entire code:</p> <p><em>&lt;html&gt;<br />
&lt;head&gt;<br />
&lt;title&gt;Focus&lt;/title&gt;<br />
&lt;/head&gt;<br />
&lt;body onLoad="document.frm_search.txt_search.focus();"&gt;<br />
&lt;form action="search_results.html" method="post" enctype="multipart/form-data" name="frm_search"&gt;<br />
&lt;input type="Text" width="100" name="txt_search">&nbsp;&nbsp; &lt;input type="Submit" name="btn_search" value="Submit"&gt;<br />
&lt;/form&gt;<br />
&lt;/body&gt;<br />
&lt;/html&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>241</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-setting-the-form-focus</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Pages viewed</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/pages-viewed/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=242</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just the other day I had to write a bit of functionality for a web site whereby a user would be able to hover over a link and display a dHTML pop up list of the last 5 pages he had browsed on the site. In the following I'll talk you through how I built up this little feature. So let's get cracking</p>
<p>Since we are going to be tracking the users motion through the web site, we'll need to somehow keep track of the pages he has viewed. For this purpose I decided to use a session variable. So you'll need to enable session management, i.e. create an <strong>application.cfm</strong> (for a brief introduction have a look at: <a href="http://gregs.teacupinastorm.com/html/article/article.php?id=70ED1E5B-2B75-43F8-BFF7D22990558E95">How to use cfapplication
</a>) like such:</p>
<p><em>&lt;!--- -Enable session management ---&gt;<br />
&lt;cfapplication name="Pages_viewed" sessionmanagement="Yes" sessiontimeout="#CreateTimeSpan(0,1,0,0)#"&gt;<br />

&lt;cfset application.http="http://127.0.0.1/pages_viewed/"&gt;</em></p>
<p>I also took the opportunity at this stage to specify an application variable <strong>application.http</strong> to store the full url of where the application is located (I use this in some of the scripts to specify the full url to images). OK with session management enabled, let's have a look at capturing the pages viewed by the user that will ultimately build up our pop up menu.</p>
<p>All the information we need I decided to capture after the page has been processed, so I could have either created a template that I include at the bottom of the page or use <strong>OnRequestEnd.cfm</strong>, which works in the same manner that <strong>application.cfm</strong> does, with the difference that it is included at the end of every page. However it has to reside in the same directory as your <strong>application.cfm</strong>. Before delving into any more detail here is the code for that page:</p>
<p><em>&lt;!--- -Pages viewed ---&gt;<br />
&lt;!--- -First hit of the site, set session.current to home so that at next page display it has a name to display ---&gt;<br />
&lt;cfif NOT isDefined("HTTP_REFERER")&gt;<br />
&nbsp;&nbsp;&lt;cflock scope="SESSION" timeout="10" type="EXCLUSIVE"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset session.current = local.location&gt;<br />
&nbsp;&nbsp;&lt;/cflock&gt;<br />
&lt;/cfif&gt;<br />
&lt;!--- -OK now we are in the site- ---&gt;<br />
&lt;cfif isDefined("HTTP_REFERER")&gt;<br />
&nbsp;&nbsp;&lt;!--- -If accessed from a different section of the site, insert the new http_referer and section name in front of the existing information- ---&gt;<br />
&nbsp;&nbsp;&lt;cfif isDefined("session.pagesViewed")&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cflock scope="SESSION" timeout="10" type="EXCLUSIVE"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset session.pagesViewed = session.current&"-"&HTTP_REFERER&","&session.pagesViewed&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cflock&gt;<br />
&nbsp;&nbsp;&lt;cfelse&gt;&lt;!--- -If accessing site by hitting the home page for the first time ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cflock scope="SESSION" timeout="10" type="EXCLUSIVE"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset session.pagesViewed = session.current&"-"&#HTTP_REFERER#&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cflock&gt;<br />
&nbsp;&nbsp;&lt;/cfif&gt;<br />
&nbsp;&nbsp;&lt;!--- -Now let's remember the current location for the next page hit.- ---&gt;<br />
&nbsp;&nbsp;&lt;cflock scope="SESSION" timeout="10" type="EXCLUSIVE"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset session.current = local.location&gt;<br />
&nbsp;&nbsp;&lt;/cflock&gt;<br />
&lt;/cfif&gt;<br />
<br />
&lt;!--- -Include hiermenu loader- ---&gt;<br />
&lt;cfinclude template="js/HM_loader.cfm"&gt;<br />
</em></p>
<p>Still with me? In order to track the pages that the user has viewed we will be making use of a variable provided by the cold fusion server: <strong>HTTP_REFERER</strong>, which is the page the user has just come from to get to this point. Furthermore for each page I set a local variable that captures the page name for display purposes (named <strong>local.location</strong>). This last variable you will need to declare at the beginning  each and every page, and assign it a value (such as <em>&lt;cfset local.location = "your page title"&gt;</em>). In order for us to use that defined page title from page to page I store it's value in a session variable, <strong>session.current</strong>, which is then accessible to the next page. Why does it need to be accessible to next page? The url value, i.e. <strong>HTTP_REFERER</strong> doesn't get set until the following page and we want to associate that url value with a logical name, i.e. the page title, of the previous page then and hence it needs to be passed from page to page so that the values can be associated with one another. Please note that I overwrite the value of this variable with the new page value once the page has been processed. But before I do this I store this variable and the <strong>HTTP_REFERER</strong> in another session variable called <strong>session.pagesViewed</strong>, which is a list of all the pages viewed and their associated title. Well that's the logic, now for the explanation of the code listed above.</p>
<p>The first time a user hits the site, Cold Fusion won't define or assign a value to the <strong>HTTP_REFERER</strong> variable, however I still need to capture the page title information all I really need to set <strong>session.current</strong> to is the title of the page and I can leave the <strong>HTTP_REFERER</strong> variable blank (since it wil be set on the next page hit and it is the url of the page that I have just come from that I am after). At this stage no dHTML menu is being built yet, that comes after we build the list of pagess visited, which is what comes next.</p>
<p>The conditional statement looks for <strong>HTTP_REFERER</strong> and since on the second hit, it is defined it moves to the next conditional statement which looks for <strong>session.pagesViewed</strong> and sees if that has been defined. Since this is our first hit it won't be and the processing moves to the else statement, which marks the start of the list building process. There we defined <strong>session.pagesViewed</strong> and assign it a pair value of <strong>HTTP_REFERER</strong> and <strong>session.current</strong> (please note that the value pair is delimited by "-"). There you go the first item of your list has been built. Next hit of the site it will recognise that <strong>session.pagesViewed</strong> has been declared and pre-pend <strong>session.pagesViewed</strong> with a new pairing and that this new pairing is delimited form the old one by ",". And so on and so forth. A quick aside, every time you access a session variable you should lock it exclusively, so that the values don't get corrupted.</p>
<p>Now that all the list building is over for that hit we can move onto building the pop menu (which is the last statement of the code, where we include the HM_Loader.cfm page), which takes us neatly onto the JavaScripts and dHTML. The whole thing is based on the hierarchical menus from webreference (the whole source and relevant explanation can be found <a href="http://www.webreference.com/dhtml/column61/">here</a>). These scripts work pretty much in all browsers and are under ongoing development. I had to modify them slightly and here is what I did. Once you extract the source you will see that there are a whole heap of javascript files (<em>hierarrays.js, hiermenus.js, HM_Arrays.js, HM_loader.js, HM_ScriptDOM.js, HM_ScriptIE4.js, HM_ScriptNS4.js</em>). The menus are built based on a set of arrays that are stored in external file called: <em>HM_Arrays.js</em>. Now for the purposes of our pages viewed functionality these are no good. This would work great with a set of menus that are built based on database content, but since we are tracking an individual users movement through the site, we would be permanently overwriting other users Array of pages viewed. To solve this problem I opted for the easiest solution and that was to modify the HM_Loader.js file. For starters I turned it into a cfm page, so that I could use the <strong>application.http</strong> to specify the full path to images and also use the <strong>&lt;cfinclude&gt;</strong> tag. The main modification can be found at the end of the <em>HM_loader.cfm</em> (lines 86 and 87), where originally you have two <strong>document.write</strong> Javascript statements.
<p><em>if(HM_IsMenu) {<br />
&nbsp;&nbsp;document.write("&lt;SCR" + "IPT LANGUAGE='JavaScript1.2' SRC='../js/HM_Arrays.js' TYPE='text/javascript'&gt;&lt;\/SCR" + "IPT&gt;");<br />
&nbsp;&nbsp;document.write("&lt;SCR" + "IPT LANGUAGE='JavaScript1.2' SRC='../js/HM_Script"+ HM_BrowserString +".js' TYPE='text/javascript'&gt;&lt;\/SCR" + "IPT&gt;");<br />
}</em></p>
<p>Their purpose is to in the first place load the external menu array and secondly load the script that builds the menu system. Now modify the script to include <strong>HM_Arrays.cfm</strong>, rather than <strong>HM_Arrays.js</strong>. What we are doing here is making the building of the array dynamic and rather than loading an external file we are embedding the arrays which is populated on the fly into the page and hence overcoming the problem we had with ensuring that each users only sees his list of pages viewed. Here is how the end of the script should look like now:</p>
<p><em>if(HM_IsMenu) {<br />
&nbsp;&nbsp;&lt;cfinclude template="HM_Arrays.cfm"&gt;<br />
&nbsp;&nbsp;document.write("&lt;SCR" + "IPT LANGUAGE='JavaScript1.2' SRC='js/HM_Script"+ HM_BrowserString +".js' TYPE='text/javascript'&gt;&lt;\/SCR" + "IPT&gt;");<br />
}</em></p>
<p>Now moving on swiftly to populating the array that we will use for pop up menu. As I mentioned I renamed the <strong>HM_Arrays.js</strong> file to a <em>.cfm</em> file so that I could use Cold Fusion to dynamically build the list. SO have a quick look at the code and then I'll explain what is going on:</p>
<p><em>&lt;!--- -Display options for the dHTML pop up menu, such as positioning and colours- ---&gt;<br />
HM_Array1 = [<br />
[160,      // menu width<br />
130,       // left_position<br />
55,       // top_position<br />
"#787e98",   // font_color<br />
"#d2404a",   // mouseover_font_color<br />
"white",   // background_color<br />
"white",   // mouseover_background_color<br />
"#787e98",   // border_color<br />
"#787e98",    // separator_color<br />
0,         // top_is_permanent<br />
0,         // top_is_horizontal<br />
0,         // tree_is_horizontal<br />
1,         // position_under<br />
1,         // top_more_images_visible<br />
1,         // tree_more_images_visible<br />
"null",    // evaluate_upon_tree_show<br />
"null",    // evaluate_upon_tree_hide<br />
,          // right_to_left<br />
],     // display_on_click<br />
<br />
&lt;!--- -Supress any error messages session.pages viewed is not defined ---&gt;<br />
&lt;cfif isDefined("session.pagesViewed")&gt;<br />
&nbsp;&nbsp;&lt;!--- -Counter used to limit the total output (set to 5)- ---&gt;<br />
&nbsp;&nbsp;&lt;cfset local.counter = 1&gt;<br />
&nbsp;&nbsp;&lt;!--- -Now loop over the page urls and titles stored- ---&gt;<br />
&nbsp;&nbsp;&lt;cfloop list="#session.pagesViewed#" index="i"&gt;<br />
&nbsp;&nbsp;&lt;!--- -Check to limit output to 5, if counter less than five then process this- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfif local.counter lte 5&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -Use another counter to first grab the title (1) then the url (2)- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset local.loop_counter = 1&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -Loop over our new list, with a specific delimiter "-"- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfloop list="#i#" delimiters="-" index="j"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -If 1 then set title value- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfif local.loop_counter eq 1&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset local.title=j&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -if anything else, i.e. 2 then grab the url- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfelse&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset local.url=j&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfif&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -Increment loop_counter for this loop and continue looping ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset local.loop_counter = local.loop_counter +1&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfloop&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -Now that we have both values we can build up the Javascript array- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfoutput&gt;["#local.title#","#local.url#",1,0,0]&lt;cfif local.counter neq 8&gt;,&lt;/cfif&gt;&lt;/cfoutput&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -If local counter greater than 5 break out of the loop- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfelse&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfbreak&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfif&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -Incrememnt counter and return to beginning of loop- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset local.counter = local.counter + 1&gt;<br />
&nbsp;&nbsp;&lt;/cfloop&gt;<br />
&lt;/cfif&gt;<br />
]</em></p>
<p>The opening lines of the code show here are just display options, i.e. setting the positioning, the colouring, etc, so go wild tinkering with the settings. Where the Cold Fusion code begins is where we start building the arrays. If you remember we set a list called <strong>session.pagesViewed</strong>, which in the first instance was a list made up of a combination of page title and url. The page title and url combination was delimited by a ",", whereas the page title and url were separated by "-". So what we have in essence is a list within a list. So we can loop over both these lists to build up our array, which is in the format: <em>["page title", "url",1,0,0]</em>. We are only interested in the values between quotation marks as this will be  a simple menu with any child menus or the likes, so we can set the three remaining values to <em>1,0,0</em> (for full details on what these values do, please consult <a href="http://www.webreference.com/dhtml/column61/">this web reference column</a>.</p>
<p>So we start looping over the first list (the combined page title and url list, delimited by a ","). Since I only want the first 5 values I first declared a counter before beginning the loop process (<em>&lt;cfset local.loop_counter = 1&gt;</em>) and inserted a conditional check to make sure the counter was less than or equal to five. If you wish to display more than the last 5 pages viewed modify that conditional statement (&lt;cfif local.counter lte 5&gt;). If the value for the counter is greater, then I break out of the loop, else I use the index value "<em>i</em>" and loop a second time over that list using the delimiter "-" to break apart the page title and the url. Since I knew that I had stored the title in the first instance and the url next I set a internal counter for that loop (<em>local.loop_counter</em>) and a conditional statement. If the <em>local.loop_counter</em> value is one set a local variable, <em>local.title</em> to the index value of <em>j</em> and if the value of <em>local.loop_counter</em> is anything else (i.e. 2) then set <em>local.url</em> to <em>j</em>. Now that have both values we require the internal loop terminates and we can write the array element to the page. The external loop starts over and grabs the next combination of values and so on and so forth until you have reached the desired number of pages viewed to output.</p>
<p>Right we are nearly there, now all you need to do is include the initial javascript code for the dHTML pop up menus in your page header section (which I stored in a template called <strong>_pages_viewed.cfm</strong> and included in every page that I made use of the pages viewed functionality) and a function call to will actually display the pop up menu. Which you do like such:</p>
<p>&lt;a href="" onMouseOut="popDown('HM_Menu1');" onMouseOver="popUp('HM_Menu1',event);"&gt;Pages viewed&lt;/a&gt;</p>
<p>Well that's it. It's a lot to digest and I hope it makes sense. <a href="http://gregs.teacupinastorm.com/downloads/pages_viewed.zip">If anything is unclear I have included a functional set of pages that should demonstrate the workings of this feature here</a> and if things still aren't clear well then don't hesitate to drop me a line. Until next time.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>242</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pages-viewed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Working with and storing dynamic forms</title>
		<link>http://gregs.tcias.co.uk/2002/11/07/working-with-and-storing-dynamic-forms/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=243</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Working with and storing dynamic forms</p>
Just recently I was working on a project where a user was able to specify the number of form fields he wished to submit for a specific job run. This of course meant that the form had to be generated on the fly, these dynamic form fields had to then also be stored in a database and later on all fields should be available for viewing. This posed a number of problems all centering around these dynamic fields. How to capture, store and retrieve these, without knowing how may there were?</p>
<p>To show how I solved this problem we will be building a sample application that will allow the user to enter a collection of music albums associated to an artist. To this end you will need to create an MS Access database and code 2 Cold Fusion templates.</p>
<p>So let's get started with the database. Create a database called record and add a table called artist to that database. For simplicities sake this table will only contain 2 fields, namely: <strong>artist_id</strong> (data type: auto-number) and <strong>artist_wddx</strong> (data type: memo). Next you will need to register a datasource called <strong>records</strong>. Right your database side of things is now done let's look at the Cold Fusion templates.</p>
<p>First let's create an <strong>application.cfm</strong> template (a bit excessive in this case, but it's good practise none the less). This template will simply enable the session management and declare an application variable that will hold our datasource name (if you have set up your database with username and password access now is also a good time to include these here).</p>
<p><em>&lt;cfapplication name="records" sessionmanagement="Yes" sessiontimeout="#CreateTimeSpan(0, 4, 0, 0)#"&gt;<br />
<br />
&lt;!--- -Set datasource- ---&gt;<br />
&lt;cfparam name="application.dsn" default="records"&gt;<br />
&lt;!--- -Set database username and password if you swpecified one- ---&gt;<br />
&lt;cfparam name="application.dBuser" default="your username"&gt;<br />
&lt;cfparam name="application.dBpassword" default="your password"&gt;</em></p>
<p>Right time to move on to the main template document, the one that's going to do all the hard work. As you recall from the introduction we need to overcome several issues here. First being how to store in a database the content of a form that has a dynamic number of fields. In this case we will be looking to store an artist's name and all of his recordings. Now the problem here is evident, not every artist has released the same number of recordings.</p>
<p>The data entry process begins with the user specifying, the number of recordings he wishes to associate with the artist of his choice (the code is pretty well commented so you shouldn't have any bother finding that segment). Submitting this form will result in the action parameter being set to <strong>show_form</strong>, which will once the browser has rendered the page result in a form appearing with a standard field, called <strong>artist name</strong> and then n number of rows to enter the recordings for that artist (where n is the number you specified on the previous form). The form also contains a hidden field that stores the number of rows entered. We will make use of that data when we come to outputting the content of the form again. Submitting this form will lead to inserting the data into the database.</p>
<p>Storage proved to be least of the problems. I opted to store these submissions as a WDDX packet in a database field, that way I solved the problem of the number of possible fields available in a database table. Consider that if you don't know how many fields are going to be required by the user to complete the form, you can't really design your database to match that number of dynamic fields. What you can however do is create a table that will store some information pertinent to the form and the content of the form as a WDDX packet. So submitting this form will result in all form fields being stored as a WDDX packet.</p>
<p>The next problem was actually creating the WDDX packet. All examples I found relied on a static set of variables that were to be put in a structure and then serialised. Scanning through the <a href="http://www.amazon.co.uk/exec/obidos/ASIN/0789718103/armagossacom/">Advanced Cold Fusion Application Development</a> book by Ben Forta and saw a segment on his custom tag CF_EmbedField. Rather than creating a new list of hidden input fields for a form I modified the code to dump all the form fields into a structure, which in turn could be serialised into a WDDX packet. Since the code loops over all form fields available after hitting the submit button, I can in turn capture, both the form name and the value of that field, store it in the structure before moving onto the next form element. You can see the code in action where the <strong>hdn_action</strong> parameter is set <strong>serialise</strong>.</p>
<p>OK, so now we have our structure and all we need to do is serialise into a WDDX packet which is described at length in the <a href="http://www.amazon.co.uk/exec/obidos/ASIN/0789718103/armagossacom/">Advanced Cold Fusion Application Development</a> book, so I shan't say anymore on that topic. Now that we have our WDDX packet we can simply insert that into out database, et voila, you have circumvented determining the number of fields submitted and how to store these. In the following we shall now have a look at how you will extract information from that packet and display it.</p>
<p>The first thing we need to do is retrieve the WDDX packet from the database and then de-serialise it. Once this is done all the information is once again stored in a structure (called <strong>strAlbums</strong>). Another handy thing about using CF_EmbedField, is that it stores the old form field names in the structure so that when it comes to outputting the content you have an idea of what the fields where called and hence can reference them accordingly. The first we thing we output is the artist name. This form field was labelled <strong>txt_artist_name</strong>, using the array annotation (<strong>#strAlbums['txt_artist_name']#</strong>) we can now access it's value with very little effort. What about the dynamic rows though?</p>
<p>Remember I stored the number of rows required for thr form as a hidden input field? This field comes in handy now. This form field will help us determine the number of loops we are going to execute in order to display all the rows. The value was stored in the form field labelled: <strong>hdn_number_of_rows</strong> and hence using the aforementioned annotation : <strong>#strAlbums['hdn_number_of_rows']#</strong>< we can retrieve it's value. Right now we know how many times we have to loop, but this still does not give us access to those form fields and their values. Whithin the loop I set two variables that are made up of the base form field names:  <strong>'txt_record_name_'</strong> and <strong>'txt_release_date_'</strong> and appended the index value of the loop (i.e. 1,2 ,3...,n in turn depending on the number of rows stored). This gave the form field names as they appeared in the originally submitted form and exactly the same number of rows as before and these names are stored in: <strong>record_name</strong> and  <strong>record_release</strong> respectively. We have come one step closer. Now we have the form field names but how do we get their values?</p>
<p>This is where we use the Cold Fusion function <strong>StructFind</strong>. Here we will be looking at the structure called <strong>strAlbums</strong> and in the first instance will be looking for the album name to be displayed. So as we loop through the list the first instance of <strong>record_name</strong> will be set to <strong>txt_record_name_1</strong>. StructFind will now search through the structure <strong>strAlbums</strong> for <strong>txt_record_name_1</strong> (also known as a key) and return it's value. It then does exactly the same thing for the release date, before continuing with the loop. Once the loop is completed you should now be presented with a table containing the artist name and all the submitted recordings and release dates.</p>
<p>And there you go, now you can store dynamic form fields in a WDDX packet, which in turn is stored in a database and by the same token you can access that packet, convert it back to a structure and display the forms content again without having to concern yourself with the number of fields submitted. All the code for this application can be found below and <a href="http://www.teacupinastorm.com/gregs/downloads/records.zip">you can download the whole lot including database right here.</a></p>
<p>Code:<br />
<br /><em>
&lt;!--- -Before you use this page be sure to create a datasource called records pointing to the included database records- ---&gt;<br />
&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt;<br />
&lt;!--- -Declare some variables that will be frequently used- ---&gt;<br />
&lt;cfparam name="hdn_action" default=""&gt;<br />
&lt;cfparam name="message" default=""&gt;<br />
&lt;cfif hdn_action eq "serialise"&gt;&lt;!--- -If the form with the album details has been submitted do this- ---&gt;<br />
&nbsp;&nbsp;&lt;cfset strAlbums = StructNew()&gt;&lt;!--- -Declare new structure- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfif isDefined("form.fieldnames")&gt;&lt;!--- -Check that field names exists- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset fieldnames_processed = ""&gt;&lt;!--- -Create an empty list of processed variables- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfloop index="form_element" list="#form.fieldnames#"&gt;&lt;!--- -Loop through field names- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfif ListFind(fieldnames_processed, form_element) IS 0&gt;&lt;!--- -Try to find current element in list- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset form_element_qualified = "form."&form_element&gt;&lt;!--- -Make fully qualified copy of it (to prevent accessing the wrong field type)- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset strAlbums["#form_element#"] = '#trim(Evaluate(form_element_qualified))#'&gt;&lt;!--- -Store it in the structure- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset fieldnames_processed = ListAppend(fieldnames_processed, form_element)&gt;&lt;!--- -Add it to the processed list- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfif&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfloop&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfif&gt;<br />
&nbsp;&nbsp;&lt;cfwddx input="#strAlbums#" output="MyWDDXPacket" action="CFML2WDDX"&gt;&lt;!--- -Turn the structure into a WDDX packet- ---&gt;<br />
&nbsp;&nbsp;&lt;cftransaction&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfquery datasource="#application.dsn#" name="iDetails"&gt;&lt;!--- -Now store it in the database- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INSERT INTO artist<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(artist_wddx)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VALUES<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;('#MyWDDXPacket#')<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfquery&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset message= "Artist details stored stored.&lt;br /&gt;&lt;a href='index.cfm'&gt;Back&lt;/a&gt;"&gt;&lt;!--- -Now set a result message- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfwddx input="#MyWDDXPacket#" output="strAlbums" action="WDDX2CFML"&gt;&lt;!--- -And de-seriliase it again (could be done easier now, but I wanted to show how it would be done if you pulled it out of the database - ---&gt;<br />
&nbsp;&nbsp;&lt;/cftransaction&gt;<br />
&lt;cfelseif hdn_action eq "listing"&gt;&lt;!--- -Querie(s) to display the listing of stored records- ---&gt;<br />
&nbsp;&nbsp;&lt;cfquery datasource="#application.dsn#" name="qGetAll"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;SELECT artist_id, artist_wddx<br />
&nbsp;&nbsp;&nbsp;&nbsp;FROM artist<br />
&nbsp;&nbsp;&lt;/cfquery&gt;<br />
&lt;/cfif&gt;<br />
&lt;html&gt;<br />
&lt;head&gt;<br />
&nbsp;&nbsp;&lt;title&gt;Album name storage&lt;/title&gt;<br />
&lt;/head&gt;<br />
<br />
&lt;body&gt;<br />
&lt;cfif hdn_action eq "show_form"&gt;<br />
&nbsp;&nbsp;&lt;form action="index.cfm" name="frm_number_of_rows" id="frm_number_of_rows" method="post" enctype="multipart/form-data"&gt;<br />
&nbsp;&nbsp;&lt;table border="0" cellpadding="1" cellspacing="0"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr align="center"&gt;&lt;td colspan="3"&gt;Artist/albums&lt;/td&gt;&lt;/tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr align="center"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td colspan="2" align="right"&gt;Artist name:&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;&lt;input type="Text" name="txt_artist_name" id="txt_artist_name" value=""&gt;&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;&nbsp;&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;Record name:&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;Release date:&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfloop from="1" to="#form.txt_number_of_rows#" index="counter"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfoutput&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;#counter#.&nbsp;&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;&lt;input type="Text" name="txt_record_name_#counter#" id="txt_record_name_#counter#" value=""&gt;&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;&lt;input type="Text" name="txt_release_date_#counter#" id="txt_release_date_#counter#" value=""&gt;&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfoutput&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfloop&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="Hidden" name="hdn_number_of_rows" id="hdn_number_of_rows" value="&lt;cfoutput&gt;#form.txt_number_of_rows#&lt;/cfoutput&gt;"&gt;&lt;!--- -Need to store this value so that we know how many times to loop when displaying the content- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="Hidden" name="hdn_action" id="hdn_action" value="serialise"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr align="center"&gt;&lt;td colspan="3"&gt;&lt;input type="Submit" name="btn_submit" id="btn_submit" value="Submit"&gt;&lt;/td&gt;&lt;/tr&gt;<br />
&nbsp;&nbsp;&lt;/table&gt;<br />
&nbsp;&nbsp;&lt;/form&gt;<br />
&lt;cfelseif hdn_action eq "serialise"&gt;<br />
&nbsp;&nbsp;&lt;table&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;&lt;td&gt;&lt;cfoutput&gt;#message#&lt;/cfoutput&gt;&lt;/td&gt;&lt;/tr&gt;<br />
&nbsp;&nbsp;&lt;/table&gt;<br />
&nbsp;&nbsp;&lt;!--- -Time to show the content of the packet and determine the number of albums stored- ---&gt;<br />
&nbsp;&nbsp;&lt;table border="0" cellpadding="0" cellspacing="0" width="300"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr align="center"&gt;&lt;td<br /> colspan="3"&gt;&lt;b&gt;&lt;cfoutput&gt;#strAlbums['txt_artist_name']#&lt;/cfoutput&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfloop from="1" to="#strAlbums['hdn_number_of_rows']#" index="counter"&gt;&lt;!--- -Number of loops required stored in structure- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -Set the variables to be evaluated against the structure (we know their names because the WDDX packet stored the form field names submmitted)- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset record_name = 'txt_record_name_'&counter&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset record_release = 'txt_release_date_'&counter&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -In order to display the value we make use of these variables listed above, which return a value like txt_record_name_1 and we search through the structure (in this case strAlbum) for this name. If found it displays the value.- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr align="center"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;&lt;b&gt;&lt;cfoutput&gt;#counter#&lt;/cfoutput&gt;&lt;/b&gt;&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;&lt;cfoutput&gt;#StructFind(strAlbums,record_name)#&lt;/cfoutput&gt;&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;&lt;cfoutput&gt;#StructFind(strAlbums,record_release)#&lt;/cfoutput&gt;&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfloop&gt;<br />
&nbsp;&nbsp;&lt;/table&gt;<br />
&lt;cfelseif hdn_action eq "listing"&gt;<br />
&nbsp;&nbsp;&lt;cfoutput query="qGetAll"&gt;&lt;!--- -Display all records stored in the database- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfwddx input="#artist_wddx#" output="strAlbums" action="WDDX2CFML"&gt;&lt;!--- -De-serialise the Wddx packet- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -Time to show the content of the packet and determine the number of albums stored- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;table border="0" cellpadding="0" cellspacing="0" width="300"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr align="center"&gt;&lt;td colspan="3"&gt;&lt;b&gt;#strAlbums['txt_artist_name']#&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfloop from="1" to="#strAlbums['hdn_number_of_rows']#" index="counter"&gt;&lt;!--- -Number of loops required stored in structure- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -Set the variables to be evaluated against the structure (we know their names because the WDDX packet stored the form field names submmitted)- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset record_name = 'txt_record_name_'&counter&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;cfset record_release = 'txt_release_date_'&counter&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--- -In order to display the value we make use of these variables listed above, which return a value like txt_record_name_1 and we search through the structure (in this case strAlbum) for this name. If found it displays the value.- ---&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr align="center"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;&lt;b&gt;#counter#&lt;/b&gt;&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;#StructFind(strAlbums,record_name)#&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;td&gt;#StructFind(strAlbums,record_release)#&lt;/td&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/cfloop&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;/table&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;&lt;/p&gt;<br />
&nbsp;&nbsp;&lt;/cfoutput&gt;<br />
&lt;cfelse&gt;&lt;!--- -The user specifies the number of recordings he wishes to associate with an artist.- ---&gt;<br />
&nbsp;&nbsp;&lt;form action="index.cfm" name="frm_number_of_rows" id="frm_number_of_rows" method="post" enctype="multipart/form-data"&gt;<br />
&nbsp;&nbsp;&lt;table border="0" cellpadding="0" cellspacing="0"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;&lt;td&gt;Enter number of CDs you want to add for an atrist&lt;/td&gt;&lt;/tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;&lt;td&gt;&lt;input type="Text" name="txt_number_of_rows" id="txt_number_of_rows" value=""&gt;&lt;/td&gt;&lt;/tr&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type="Hidden" name="hdn_action" id="hdn_action" value="show_form"&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&lt;tr&gt;&lt;td&gt;&lt;input type="Submit" name="btn_submit" id="btn_submit" value="Submit"&gt;&lt;/td&gt;&lt;/tr&gt;<br />
&nbsp;&nbsp;&lt;/table&gt;<br />
&nbsp;&nbsp;&lt;/form&gt;<br />
&nbsp;&nbsp;&lt;a href="index.cfm?hdn_action=listing"&gt;View all stored albums&lt;/a&gt;.&lt;!--- -Or alternatively can skip ahead and view the stored listings- ---&gt;<br />
&lt;/cfif&gt;<br />
<br />
&lt;/body&gt;<br />
&lt;/html&gt;
</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>243</wp:post_id>
		<wp:post_date>2002-11-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>working-with-and-storing-dynamic-forms</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>WAP: Step 1</title>
		<link>http://gregs.tcias.co.uk/2002/09/23/wap-step-1/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=244</guid>
		<description></description>
		<content:encoded><![CDATA[<p>WAP/WML -First things first.</p>

<p>Having stumbled across a few articles relating to WAP and WML recently (yes I know I am slightly behind the times) I decided to have a play with WAP devices and WML, i.e. make this web site accessible to WAP devices. So after thinking about what approach to take I decided that the first thing I needed to figure out was how to re-direct a user to the appropriate page based on the browser they use to make sure the information was rendered properly. So I set out writing a browser re-direction script that would accommodate both normal web users (IE and Netscape), Nokia 6210 (since this is the mobile I own) and iTV (with several projects in the pipeline I figured this was as good time as ever to figure that one out too), but that will form part of a segment which you can have a look at <a href="">here</a>.</p>

<p>The first thing you will need before you an even start building the script would be a set of tools so that you can test your script and pages. Nokia has some good information and emulators for other Nokia models as well, here: <a href="http://forum.nokia.com/030/1,32009,,00.html?fsrParam=2%2D0">http://forum.nokia.com/030/1,32009,,00.html?fsrParam=2%2D0</a> [incidently if you want to use one of the emulators you will also need to download the Nokia Mobile Internet Kit]. And YoSpace (<a href="http://www.yospace.com/cgi-bin/login.pl">http://www.yospace.com/cgi-bin/login.pl</a>) has a more all purpose wap emulator covering a variety of WAP enabled devices. Another simple and easy to use emulator can be found on pyweb site (<a href="http://www.pyweb.com/tools/">http://www.pyweb.com/tools/</a>) and is called Deck-It. This emulator emulates the Nokia 7110.</p>

<p>Now that you have your tools downloaded and installed, let's turn to the script. Since i develop mainly in Cold Fusion and PHP I have included both sets of scripts. Essentially what I did was look at strings passed by the browser or emulator. And based on a string evaluation I direct the user to the appropriate set of pages. In the case of WAP you are looking at the cgi variable generated by the web server called <strong>HTTP_ACCEPT</strong> and it should contain the following information: <strong><em>text/vnd.wap.wml</em></strong>. If a web browser hits the site these are the values contained in the variable:</p>

<p><strong>HTTP_ACCEPT</strong>=image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-gsarcade-launch, */*</p>

<p>After all this info here is the code, PHP first. Include the code below, right at the top of your site's default document:</p>

<p><pre>&lt;?php
  /*
      Browser detection script
  */
  if(eregi("text/vnd.wap.wml",$HTTP_ACCEPT)) { // wap first
    // Is a wap enabled device
    header("Location: wml/index.php");
  } else if(eregi("Liberate",$HTTP_USER_AGENT)) { // normal browsers next
    // It's the Liebrate emulator
    header("Location: itv/index.php");
  } else if(eregi("Mozilla/",$HTTP_USER_AGENT)) { // normal browsers next
    // It's web browser
    header("Location: html/index.php");
  } else {
    echo("Sonething all together different: ".$HTTP_ACCEPT."&lt;br /&gt;".$HTTP_USER_AGENT);
  }
?&gt;</pre></p>

<p>We make use of the <strong>eregi()</strong> function, which carries out a case insensitive regular expression match on, in this case, <strong>$HTTP_ACCEPT</strong> looking for the expression <strong><em>text/vnd.wap.wml</em></strong>. If found the user is re-directed using the <strong>header()</strong> function. For completeness I have included the other browser type re-directions (Liberate and Mozilla) or a dump of the variables to help detect the browser type</p>

<p>And now for Cold Fusion.</p>

<p><pre>&lt;cfif cgi.HTTP_ACCEPT contains "text/vnd.wap.wml"&gt;
  &lt;cflocation url="wml/index.cfm"&gt;
&lt;cfelseif cgi.HTTP_USER_AGENT contains "Mozilla/"&gt;
  &lt;cflocation url="html/index.cfm"&gt;
&lt;cfelseif cgi.HTTP_USER_AGENT contains "Liberate"&gt;
  &lt;cflocation url="itv/index.cfm"&gt;
&lt;cfelse&gt;
  &lt;cfloop collection="#cgi#" item="i"&gt;
    &lt;cfoutput&gt;#i# is #cgi[i]# &lt;/cfoutput&gt; &lt;br /&gt;
  &lt;/cfloop&gt;
&lt;/cfif&gt;</pre></p>

<p>As with the PHP script I make use of a function to find an expression. Here I made use of <strong>contains()</strong> inspected both the <strong>HTTP_ACCEPT</strong> and <strong>HTTP_USER_AGENT</strong> variables in the <strong><em>cgi</em></strong> scope. if found the browser or device is re-directed to the appropriate folder.</p>

<p>Now for certain devices or emulators (the Nokia one in my case), you need to either specify a file with the <strong><em>.wml</em></strong> extension or specify a content type in the header. NOw if you intend on using dynamic content using the <strong><em>.wml</em></strong> is not ideal as you won't be able to execute the scripts you write unless you associate that file type with PHP or Cold Fusion instructing the application server to parse it before sending it to the browser (the segment on <a href="http://gregs.teacupinastorm.com/html/article/article.php?id=9E04466F-F09C-4417-8B15679FF5F5052D">How to create IIS mappings for .cfm</a> has some hints on how to do that).</p>

<p>Cold Fusion allows you to easily specify a document content type by making use of the <strong>&lt;cfcontent&gt;</strong> tag as shown below:</p>

<p><pre>&lt;CFCONTENT TYPE="text/vnd.wap.wml"&gt;

&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE wml PUBLIC "-//PHONE.COM//DTD WML 1.1//EN" "http://www.phone.com/dtd/wml11.dtd" &gt;

&lt;wml&gt;

&lt;card id="WML" title="Test WML re-direct"&gt;
&lt;p&gt;
Just trying a a server based re-direct. &lt;br /&gt;
Cold fusion first.
&lt;cfloop collection="#cgi#" item="i"&gt;
    &lt;cfoutput&gt;#i# is #cgi[i]#&lt;/cfoutput&gt;&lt;br /&gt;
&lt;/cfloop&gt;
&lt;/p&gt;
&lt;/card&gt;

&lt;/wml&gt;</pre></p>

<p>For PHP I found the following solution at <a href="http://www.zend.com/zend/tut/wap.php#Heading7">Building WML Applications Using PHP</a> (there's also heaps more information there):</p>

<p><pre>
&lt;?php
// send wml headers
header("Content-type: text/vnd.wap.wml");
echo "&lt;?xml version=\"1.0\"?&gt;";
echo "&lt;!DOCTYPE wml PUBLIC \"-//WAPFORUM//DTD WML 1.1//EN\""
   . " \"http://www.wapforum.org/DTD/wml_1.1.xml\"&gt;";
?&gt;

&lt;wml&gt;
&lt;card id="card1" title="Example 1"&gt;
  &lt;p&gt;
    &lt;?php
// format and output date
    $the_date = date("M d Y");
    print $the_date;
    print "&lt;br/&gt;Welcome to a PHP-enabled site!";
    ?&gt;
  &lt;/p&gt;
&lt;/card&gt;
&lt;/wml&gt;
</pre></p>

<p>And there you are a wap enabled device will now be re-directed to the appropriate folder and presented with a message displaying the current server date and time. In the case of Cold Fusion I simply output all the variables in the <strong><em>cgi</em></strong> scope. There you go step 1 complete.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>244</wp:post_id>
		<wp:post_date>2002-09-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wap-step-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Forcing a page refresh</title>
		<link>http://gregs.tcias.co.uk/2002/10/08/forcing-a-page-refresh/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=245</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Sometimes it is necesary for the developer to force the browser to refresh the page the user wants to access. In my case the situation arose because I inherited a Cold Fusion application that made extensive use of session variables that were set after the user had made a selection based on a search result. And if the user hit the back button in the browser and then selected another search result, most of the content would still belong to the previous search. I could have rewritten the lot, but decided to take the path of least resistence.</p>

<p>To this end I added a code snippet that destroyed the session structure for that user, nut note this destruction only took place if the page was processed by the server. This however does not happen if the user hits the browser back button. In order to compensate for this scenario, it was necessary to refresh the whole page, not exactly graceful, but it works.</p>

<p>Below is the code I found at <a href="http://www.btgi.net/ForceRefresh.cfm">http://www.btgi.net/ForceRefresh.cfm</a> that made use of Cold Fusion and forced the browser to refresh the page or in this case re-submit the query.</p>

<p><pre>&lt;!--- Client side cache prevention ---&gt;
&lt;meta http-equiv="Expires" content="0"&gt;

&lt;!--- Setup our expire times for Netscape and Internet Explorer ---&gt;
&lt;cfoutput&gt;
  &lt;!--- Internet Explorer Date Formate: (Fri, 30 Oct 1998 14:19:41 GMT) ---&gt;
  &lt;cfset MSIEtimestamp='#dateformat(now(),"DDD")#,#dateformat(now(),"DD")#
#dateformat(now(),"Mmm")# #timeformat(now(),"HH:MM:SS")#'&gt;

  &lt;!--- Netscape Date Formate: Netscape (Wednesday, Apr 26 2000 17:45:25 PM) ---&gt;
  &lt;cfset NETSCAPEtimestamp='#dateformat(now(),"DDDD")#,#dateformat(now(),"MMM")#
#dateformat(now(),"dd")# #dateformat(now(),"YYY")#
#timeformat(now(),"HH:MM:SS tt")#'&gt;
&lt;/cfoutput&gt;

&lt;!--- Tell HTTP Header to force expire of page - nocache ---&gt;
&lt;cfif HTTP_USER_AGENT contains "MSIE"&gt;
  &lt;cfheader name="Expires" value="&lt;cfoutput&gt;#MSIEtimestamp#&lt;/cfoutput&gt;"&gt;
  &lt;cfheader name="Pragma" value="no-cache"&gt;
  &lt;cfheader name="cache-control" value="no-cache, no-store, must-revalidate"&gt;
&lt;cfelse&gt;
  &lt;cfheader name="Expires" value="&lt;cfoutput&gt;#NETSCAPEtimestamp#&lt;/cfoutput&gt;"&gt;
  &lt;cfheader name="Pragma" value="no-cache"&gt;
  &lt;cfheader name="cache-control" value="no-cache, no-store, must-revalidate"&gt;
&lt;/cfif&gt;
</pre>
</p>

<p>So what is actually happening here. The first couple of lines simply tell the browser not to cache the page. Next the application sets a time stamp both in the IE (<strong>MSIEtimestamp</strong>) and Netscape (<strong>NETSCAPEtimestamp</strong>) format. These timestamps are then passed to the browser as part of the header information. An if/else statement is used to make sure the porperly formatted header information is sent to the right browser. And there you go, hit back in your browser and you should see this message if you use IE:</p>

<p><strong>Warning: Page has Expired</strong><br />The page you requested was created using information you submitted in a form. This page is no longer available. As a security precaution, Internet Explorer does not automatically resubmit your information for you.<br />
<br />
To resubmit your information and view this Web page, click the Refresh button.</p>

<p>By refreshing the page you retrieve it from the server and thus in my case process the page again and clear the session structure. I tested this script on MSIE 5.0, NS 4.78 and NS 6.2.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2002-10-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>forcing-a-page-refresh</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Scoping your variables</title>
		<link>http://gregs.tcias.co.uk/2002/11/08/scoping-your-variables/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=246</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One small way to improve the performance of your Cold Fusion application is to prefix your variables with it's scope. What is scoping/prefixing? Essentially you name your variables as per usual and you append a prefix. Say you wanted to create a session variable called <em><strong>userid</strong></em>, you create it by the prefix <strong>session</strong>. This would result in you declaring your variable as such:</p>
<p><strong><em>&lt;cfset session.userid = 1 /></em></strong></p>
<p>Now session variables require you to scope them, but form variables (i.e. those submitted by a form) don't. So you can refer to a submitted form field by either using it's name: <strong><em>userid</em></strong> or : <strong><em>form.userid</em></strong>. Why would you do that? Well if you just declare a variable and then call it without defining it's prefix, then the application server has to traverse all the scopes until it finds the value you are calling and it also does this in a set order. Listed below are all the scopes and the order the application server evaluates them in</p>
<ol>
  <li>query results - <em>queryname.variable</em></li>
  <li>local variables - <em>local.variable</em></li>
  <li>cgi variables - <em>cgi.variable</em></li>
  <li>file variables - <em>file.variable</em></li>
  <li>url variables - <em>url.variable</em></li>
  <li>form variables - <em>form.variable</em></li>
  <li>cookie variables - <em>cookie.variable</em></li>
</ol>
<p>These prefixes are not necessarily required by your variables, but it certainly can improve performance and also avoid any confusion (and <em>errors</em>) should you have two identically named variables in different scopes as with the example above, where I declared a <strong><em>session.userid</em></strong> and a <strong><em>form.userid</em></strong> variable. Scoping allows <em>you</em> and the application server to easily identify them. There are 5 other scopes where a prefix is required, these are: <strong>server</strong>, <strong>application</strong>, <strong>session</strong>, <strong>request</strong> and <strong>attributes</strong> but more about these in later tidbits. In the meantime make your life easier and avoid possible trappings by scoping them!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>246</wp:post_id>
		<wp:post_date>2002-11-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scoping-your-variables</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>More cfapplication shenanigans</title>
		<link>http://gregs.tcias.co.uk/2002/11/11/more-cfapplication-shenanigans/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=247</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The last time I delved into this area was 2 years ago, so I thought it's about time to revisit this topic and document a few more things I have learned over the years. Before we move on you might want to take a brief side step and have a look at <a href="http://gregs.teacupinastorm.com/html/article/article.php?id=bd91e0d39a9254ef42cec02d0b228b44">scoping your variables</a>. It's not integral to further reading, but it does provide a useful insight into variable naming conventions when defining variables in the <strong>application.cfm</strong>.</p>

<p>Before we delve any further here a few points to be aware off. Firstly you need to know that the <strong>application.cfm</strong> is always called/parsed first (if found) and then the template that was called by the user. This means that no matter what page your visitor accesses if an <strong>application.cfm</strong> file exists then it will be processed first by Cold Fusion. This makes it an ideal candidate for storing site wide variables.</p>

<p>When I first visited this topic this is exactly what I suggested. A good example was defining your database variables (username, password, and datasource for example). Now this is not such a good idea as you are exposing some potentially critical information to any person who can view the source of the <strong>application.cfm</strong>. It is a far better idea to store these within <em>Cold Fusion administrator</em>. However failing that (your ISP may well not give you access to the <em>Cold Fusion administrator</em>), storing those details in the <strong>application.cfm</strong> makes good sense from a maintenance point of view. Since these variables will be available application wide, they should be scoped as such. So you would defined them as follows:</p>

<p><em>&lt;!--- -Set datasource- ---&gt;<br />
&lt;cfset application.dsn = "YourDSN"&gt;<br />
&lt;!--- -Set the username- ---&gt;<br />
&lt;cfset application.dBUsername = "YourdBUsername"&gt;<br />
&lt;!--- -Set the password- ---&gt;<br />
&lt;cfset application.dBPassword = "YourdBPassword"&gt;<br /></em></p>

<p>I may have jumped the gun a bit as the first thing you should do in your <strong>application.cfm</strong> is define your application name and enable your session management. For those who are a bit unsure as to what session management is, briefly and very much simplified this part allows you to track your site users as they interact with the web site. Session timeouts specified in the <strong>application.cfm</strong> override the ones set in the <em>Cold Fusion Administrator</em>.</p>

<p><em>&lt;!--- -Declare the application and enable session management- ---&gt;<br />
&lt;cfapplication name="YourApp" sessionmanagement="Yes" sessiontimeout="#CreateTimeSpan(0,1,0,0)#"&gt;</em></p>

<p>The next really useful thing you can do is enable site wide error handling. This is a topic in it's own right but I'll give you a brief insight into this area. This is how you enable the site wide error handling:</p>

<p><em>&lt;!--- - If an error occurs re-direct to this page- ---&gt;<br />
&lt;cferror type="REQUEST" template="error/error.cfm"&gt;</em></p>

<p>This tag <em>&lt;cferror&gt;</em> with the attribute <strong>type</strong> set to "<em>request</em>" is essentially the catch all setting, this means that most, if not all errors cause by your application will result in the the user being re-directed to <em>error/error.cfm</em>. This allows you to display a more user friendly error message than your Cold Fusion debug code or error message.</p>

<p>One thing that I should point out though, is that this is not the most graceful or intelligent way of dealing with errors. Working with <em>&lt;cftry&gt;&lt;/cftry&gt;</em> and <em>&lt;cfcatch&gt;&lt;/cfcatch&gt;</em> is far superior approach to error handling. However if you are looking for a quick and easy way to stop those ugly Cold Fusion errors from popping up on your site and confusing users, use <em>&lt;cferror&gt;</em>. Also note that you cannot include any Cold Fusion tags on that page, however you are able to output the following diagnostic variables (just wrap them in between "#", e.g. #Error.Diagnostics#):</p>
<ul>
 <li>Error.Diagnostics</li>
 <li>Error.MailtTo</li>
 <li>Error.DateTime</li>
 <li>Error.Browser</li>
 <li>Error.GeneratedContent</li>
 <li>Error.RemoteAddress</li>
 <li>Error.HTTPReferer</li>
 <li>Error.Template</li>
 <li>Error.QueryString</li>
</ul>

<p>These variables should give you a good indication as to what went wrong and resulted in the error template being called. You may wonder how you could put this information to good use and in the near future I'll show you a neat trick that will allow you to have this information mailed out to you so that you can track errors on your site and deal with them in your own time.</p>

<p>OK that's us pretty much done on the topic of <strong>application.cfm</strong>. Just one or two more things. <strong>Application.cfm</strong> forms a part of the Cold Fusion application framework and is usually found in the root of your site. However you can have several <strong>application.cfm</strong> files in your application, these should be kept in sub folders to denote a special set of functionality. The reason for that is that Cold Fusion will work it's way up through the tree structure of your server until it encounters an <strong>application.cfm</strong> template. This is important to note, it won't stop searching at the root of your site, but continue to traverse the tree structure until it hits the root of the drive.</p>

<p>You may be wondering why you would need several <strong>application.cfm</strong>, for example if you were building an application that required a user to log in, the you could perform that check (i.e. check that a session variable for that user is defined) in the root <strong>application.cfm</strong> so that it applies to all pages in your application. If the check failed, i.e. the user isn't logged in, then you could re-direct the user to another folder with an another <strong>application.cfm</strong> that doesn't include the log in check, but say still contains all the database connection information. Similarly if you have other sub folders you do not need to specify additional log in checks, because as I already indicated Cold Fusion will work it's way up through your directory structure until it finds the <strong>application.cfm</strong> template.</p>

<p>The final thing I'd like to mention is that <strong>application.cfm</strong> is not the place to keep say a site wide header include, as tempting as it may be. Right that's it, below is a sample <strong>application.cfm</strong> template for you to base your applications on.</p>

<p>Code:<br />
<em>&lt;!--- -Declare the application and enable session management- ---&gt;<br />
&lt;cfapplication name="YourApp" sessionmanagement="Yes" sessiontimeout="#CreateTimeSpan(0,1,0,0)#"&gt;<br />
&lt;!--- -Set datasource- ---&gt;<br />
&lt;cfset application.dsn = "YourDSN"&gt;<br />
&lt;!--- -Set the username- ---&gt;<br />
&lt;cfset application.dBUsername = "YourdBUsername"&gt;<br />
&lt;!--- -Set the password- ---&gt;<br />
&lt;cfset application.dBPassword = "YourdBPassword"&gt;<br />
&lt;!--- - If an error occurs re-direct to this page- ---&gt;<br />
&lt;cferror type="REQUEST" template="error/error.cfm"&gt;
</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date>2002-11-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-cfapplication-shenanigans</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CSS and printing</title>
		<link>http://gregs.tcias.co.uk/2002/11/11/css-and-printing/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=292</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am sure you have come across this a few times yourself. You have built a beautiful site, so beautiful that the client wants to be able to print out pages for one reason or another. Alas this is never so straight forward and required the generation of a separate template specially formatted for print. No more, thanks to Style sheets and they can really make your life easier, especially in the aforementioned scenario.</p>

<p>The best place to test this idea was for my site, I thought it would be nifty to be able to print out the articles themselves minus, the header, navigation and footer without the use of a second page. Since this was another in hindsight kind of step, I added a set of div tags to my page to logically group/structure the page. Roughly speaking this is what the page is structured:</p>

<p><em>&lt;div id="header"&gt;<br />
 ...header and top level nav code goes here...<br />
&lt;/div&gt;<br />
&lt;div id="content"&gt;<br />
 ...main article body appears here...<br />
&lt;/div&gt;<br />
&lt;div id="side_nav"&gt;<br />
 ...nav code goes here...<br />
&lt;/div&gt;<br />
&lt;div id="footer"&gt;<br />
 ...footer is included here...<br />
&lt;/div&gt;<br />
</em></p>

<p>So far so good. Next I created a new style sheet specifically constructed for printing. The first thing was to hide the page elements that I didn't want to be printed out. This is achieved by specifying: <em>display: none;</em> and in my case assigning it to relevant <strong>&lt;div&gt; ids</strong>. Next I wanted to show the category nav, but in a print manner so I opted for display links as underlined. Finally I formatted the main content area to appear on a white background and use arial as the preferred font and black as the colour for that font. Listed below is my external print style sheet: <em>print.css</em></p>

<p><em>/* print styles */<br />
A:link, A:visited { background: white; color: black; font-family: Arial, Helvetica, sans-serif; text-decoration: underline; font-weight: bold; }<br />
#header { display: none;  }<br />
#content { background: white; color: black; font-family: Arial, Helvetica, sans-serif; text-decoration: none; font-weight: normal; }<br />
#side_nav { display: none; }<br />
#footer { display: none; }</em></p>

<p>Next thing I needed to do was link the document to that new style sheet, and restrict it's use to printing. The <strong>&lt;link&gt;</strong> tag has attribute called media, which can several values the default being screen (i.e. when you look at the page via your web browser). The first thing I did was modify my existing <strong>&lt;link&gt;</strong> tag to include the media type set to <em>screen</em>. Next I added another <strong>&lt;link&gt;</strong> tag with a media type set to <em>print</em> and pointing to my <em>print.css</em> style sheet.</p>

<p><em>&lt;link rel="stylesheet" href="../css/default.css" type="text/css" media="screen" /&gt;<br />
&lt;link rel="stylesheet" href="../css/print.css" type="text/css" media="print" /&gt;</em></p>

<p>And that's pretty much it. The best way to test this is use the print preview option in IE. Now it this all worked the only thing displayed in the print preview area of the display is the content of this article, minus the header, the nav and the footer. A quick aside: if you are using IE6 and nothing appears in your print preview area, you might think your print style sheet is not working. There appears to be a slight bug, because if I zoom in and zoom out again the print preview displays properly (I could have wasted a lot of time on this...). Mind you this is just the beginning, there would seem to be a lot more options available, such as setting margins and much, much more. As and when I figure this out I'll be sure to make a few more notes. In the meantime... enjoy...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>292</wp:post_id>
		<wp:post_date>2002-11-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css-and-printing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Adding search functionality to your site: real basic (part 1)</title>
		<link>http://gregs.tcias.co.uk/2002/11/25/adding-search-functionality-to-your-site-real-basic-part-1/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=248</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you were to compare visiting a web site to visiting a store, you generally adopt to approaches to finding what you are after in the real world. The first is to browse the store until you find what you are after, going through all the aisles. Alternatively you could simply ask somebody. Visiting a web site isn't unlike entering a store, generally you can adopt those two approaches as well. Browsing the site, by following the navigational links provided until you find what you are after. Or you could ask somebody... Well not really, but the search option found on most web sites, I guess is the on-line equivalent. The merits of many search engines and the results they return is questionable. Having said that have you been to K-mart recently and asked someone there for help? They are more likely to send you on an entire tour of the store without ever finding what you are after or even more annoying just blink in your direction with a puzzled look... But I digress...</p>
<p>Building an intelligent search engine is a complex undertaking and one that isn't taken on lightly. So in the following series of articles I shall endeavour to figure out what makes up a good search engine, starting with a real basic search functionality and then gradually trying to improve on it. This will research will not only focus on the technical and coding  aspects, but also focus on the presentation or usability side of things. So let's get cracking. Some prerequisites, well the search will be built using PHP and MySQL, so make sure you have these running and a set of tables with content in them to run your search queries against.</p>
<p>In the first instance you'll need to submit some information to a search engine and hence you'll need a form. Keep this form as simple as possible, you don't want to baffle your user with options so generally an input field with a search button is good enough, however if you really feel that allowing the user to narrow down his search from the outset is a good thing by say selecting a \n option from a drop down menu (for say a book) then try and lay it out so that it forms a sentence (i.e. 'search _____ for ________' or using our book example: 'search <em>books</em> for <em>Dostoevski</em>'). And below is a sample form:</p>
<p><em>&lt;form method="post" action="search/" name="frm_search" id="frm_search" enctype="application/x-www-form-urlencoded"&gt;<br />
    &lt;span id="elField0" class="alert"&gt;&lt;/span&gt;&lt;img src="images/s.gif" width="15" height="1" alt="spacer" border="0" /&gt;&lt;br /&gt;<br />
    &lt;input type="Text" name="r_search" id="r_search" value="" size="15" class="body" /&gt;<br />
    &lt;input type="Submit" name="btn_submit" id="btn_submit" value="search" class="headeru" /&gt;<br />
    &lt;/form&gt;</em>
</p>
<p>This form will submit a form field labelled <em><strong>r_search</strong></em> to the index page in the search folder on your web server. I would recommend that you validate the user input before submitting the form by using a javascript, just so to stop empty form submissions for example.</p>
<p>Now onto the interesting part, the script that gets executed searches for the requested information and displays the result. The idea here is that we are submitting a string to a database filled to the brim with useful content and we want to retrieve the content that contains the submitted string. What we will be doing in the following is making use of the SQL operator <strong>LIKE</strong> to find out content.</p>
<p>The Code:<br />
<em>&lt;?php<br />
 /* include your own database connection info here /*<br />
 if (isset($r_search) && ($r_search &lt;&gt; "")) {<br />
 &nbsp;&nbsp;$sql2 = "SELECT content_id, teaser, title, content from article where title like '%".$r_search."%' OR teaser like '%".$r_search."%' OR content like '%".$r_search."%'";<br />
 <br />
 &nbsp;&nbsp;$result2 = mysql_query($sql2);<br />
 &nbsp;&nbsp;if (!$result2)<br />
 &nbsp;&nbsp;&nbsp;&nbsp;$msg .= "Query: ".$sql2." failed";<br />
 <br />
 &nbsp;&nbsp;$total2 = mysql_numrows($result2);<br />
 <br />
 &nbsp;&nbsp;$page_content .= "&lt;p class=\"bodyb\"&gt;Your search for \"&lt;span class=\"header\"&gt;".$r_search."&lt;/span&gt;\" returned ".$total2." results.&lt;hr class=\"body\" /&gt;&lt;/p&gt;";<br />
 <br />
 &nbsp;&nbsp;if ($total2 <> 0) {<br />
 &nbsp;&nbsp;&nbsp;&nbsp;$counter = 1;<br />
 &nbsp;&nbsp;&nbsp;&nbsp;while($r2 = mysql_fetch_array($result2)) {<br />
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$page_content .= "&lt;div&gt;&lt;span class=\"bodyb\"&gt;".$counter.".&lt;/span&gt;&lt;img src=\"".$http."images/s.gif\" width=\"10\" height=\"1\" alt=\"spacer\" border=\"0\" /&gt;&lt;a href=\"".$http."article/article.php?id=".$r2[0]."\" class=\"normb_s\"&gt;".stripslashes($r2[2])."&lt;/a&gt;&lt;br /&gt;".stripslashes($r2[1])."&lt;br /&gt;&lt;img src=\"".$http."images/s.gif\" width=\"1\" height=\"15\" alt=\"spacer\" border=\"0\" /&gt;&lt;/div&gt;";<br />
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$counter++;<br />
 &nbsp;&nbsp;&nbsp;&nbsp;}<br />
 &nbsp;&nbsp;} else {<br />
 &nbsp;&nbsp;&nbsp;&nbsp;$page_content .= "&lt;div&gt;&t;span class=\"header\"&gt;Sorry&lt;/span&gt;&lt;br /&gt;Sorry your search for ".$r_search." returned 0 results.&lt;/div&gt;";<br />
 &nbsp;&nbsp;}<br />
  } else {<br />
  &nbsp;&nbsp$page_content .= "&lt;div&gt;&t;span class=\"header\"&gt;Sorry&lt;/span&gt;&lt;br /&gt;Sorry before searching for information please make sure that the search field has been completed.&lt;/div&gt;";<br />
  }<br />
?&gt;
</em>
</p>
<p>So what's going on here? Well for starters we check to see if <strong>$r_search</strong> has been submitted and that it doesn't contain a blank value. Ideally you should have validated the input before being submitted to the server, but if users have javascript disabled then your client side validation counts for nothing and hence you should also validate server side.</p>
<p>Next I build up my query using the <strong>LIKE</strong> operator. I decided to search three fields in my database where relevant information may be stored, these are the content title, teaser and body. Then the query gets executed. If the results are greater than 0 (<strong>$total2</strong>) then I build up a result list. For informational purposes I instruct the user of the number of results his search has generated and then proceed to loop over the result set to generate a list with a link to the content that returned a result. The result may well look something like this:</p>
<p><em><p class="bodyb">Your search for "<span class="header">the</span>" returned 58 results.<hr class="body" /></p><div>
<span class="bodyb">1.</span><img src="http://www.tcias.shed/gregs/html/images/s.gif" width="10" height="1" alt="spacer" border="0" /><a href="http://www.tcias.shed/gregs/html/article/article.php?id=19EA2C41-1E34-4628-82DC5BB240E87578" class="normb_s">JavaScript: Automatic submit using <i>onChange</i></a>
<br />Ever wanted to know how to submit a form after changing a drop down field? Read on...<br />
<img src="http://www.tcias.shed/gregs/html/images/s.gif" width="1" height="15" alt="spacer" border="0" />
</div><div>
<span class="bodyb">2.</span><img src="http://www.tcias.shed/gregs/html/images/s.gif" width="10" height="1" alt="spacer" border="0" /><a href="http://www.tcias.shed/gregs/html/article/article.php?id=661B5C48-A6A7-485E-95EDEF7055FA8EEF" class="normb_s">Configuring Cold Fusion and MySQL</a>
<br />Some helpful hints on configuring CF 4.5.1 to use MySQL as the dB server...<br />
<img src="http://www.tcias.shed/gregs/html/images/s.gif" width="1" height="15" alt="spacer" border="0" />
</div><div>...</div></em></p>
<p>And that concludes my first installment on searching. This isn't a very intelligent search mechanism and only does the most basic searching and even that is limited. For example the search I used in my example above was for the word "the" and it returned only 58 results. Now I am pretty sure that there are more than 58 instances of the word "the" stored in my database. And do we really want to allow searches for words like "the, and, to, etc...". Regardless of these search options, certain searches may well return 1000 of instances, do we really want to display them all on one page? So just to wet your appetite in the next installment we shall be looking at making a previous, next functionality to step through large result sets easily. Once we have that under our belt we'll look at improving the searching of the database.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>248</wp:post_id>
		<wp:post_date>2002-11-25 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adding-search-functionality-to-your-site-real-basic-part-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>the problem with multiple selects and php</title>
		<link>http://gregs.tcias.co.uk/2002/12/18/the-problem-with-multiple-selects-and-php/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=249</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Forms are the primary method for users to interact with web applications and though there are a number of pitfalls associated with user interactions and forms, I want to specifically take a closer look at the way PHP behaves when dealing with a particular form element: the multiple select box. Listed below is a standard form and select input box</p>
<p><em>&lt;form action="some_html.html" method="post" name="frm_test" id="frm_test" enctype="application/x-www-form-urlencoded"&gt;<br />
 &lt;select name="test_select" id="test_select" multiple="multiple"&gt;<br />
  &lt;option value="1"&gt;1&lt;/option&gt;<br />
  &lt;option value="2"&gt;2&lt;/option&gt;<br />
  &lt;option value="3"&gt;3&lt;/option&gt;<br />
  &lt;option value="4"&gt;4&lt;/option&gt;<br />
 &lt;/select&gt;<br />
 &lt;input type="Submit" name="btn_submit" id="btn_submit" value="Submit" /&gt;<br />
&lt;/form&gt;</em></p>
<p>This is a pretty standard form with a normal multiple select box. The user can select one or more options and then click on the submit button and pass these values to the server for processing. If you were using PHP as your server side scripting language, submitting this form with more than one option selected would result in only one value being passed to the application or script that you are calling. Why? Well it turns out that multiple select values are actually passed in an array and PHP needs to understand it as such (I may be really oversimplifying this, but what the hey this really works). The first thing you'll need to do is change the way you name your form variables for that type of form field, i.e. instead of using <em>name="test_select"</em> you'll need to refer to it as <em>name="test_select[]"</em>. When this form field is submitted PHP will now know that the values are stored in an array. So here is the now amended form:</p>
<p><em>&lt;form action="some_html.html" method="post" name="frm_test" id="frm_test" enctype="application/x-www-form-urlencoded"&gt;<br />
 &lt;select name="test_select[]" id="test_select[]" multiple="multiple"&gt;<br />
  &lt;option value="1"&gt;1&lt;/option&gt;<br />
  &lt;option value="2"&gt;2&lt;/option&gt;<br />
  &lt;option value="3"&gt;3&lt;/option&gt;<br />
  &lt;option value="4"&gt;4&lt;/option&gt;<br />
 &lt;/select&gt;<br />
 &lt;input type="Submit" name="btn_submit" id="btn_submit" value="Submit" /&gt;<br />
&lt;/form&gt;</em></p>
<p>Now this style of annotation may cause one or two errors with your existing JavaScripts. So as a work around just change the attribute <strong>name</strong> to the new naming convention as JavaScript references the <strong>id</strong> attribute (if provided, else I think it uses <strong>name</strong>)<!--  [please note this will work until the attribute <strong>name</strong> is decapracted] -->. So here is how your form would now look:</p>
<p><em>&lt;form action="some_html.html" method="post" name="frm_test" id="frm_test" enctype="application/x-www-form-urlencoded"&gt;<br />
 &lt;select name="test_select[]" id="test_select" multiple="multiple"&gt;<br />
  &lt;option value="1"&gt;1&lt;/option&gt;<br />
  &lt;option value="2"&gt;2&lt;/option&gt;<br />
  &lt;option value="3"&gt;3&lt;/option&gt;<br />
  &lt;option value="4"&gt;4&lt;/option&gt;<br />
 &lt;/select&gt;<br />
 &lt;input type="Submit" name="btn_submit" id="btn_submit" value="Submit" /&gt;<br />
&lt;/form&gt;</em></p>
<p>Ok so far so good, however there is another issue that you should be aware of and that is that values are only submitted if they have been selected. 9/10 this isn't an issue because your user will have selected them himself, but there was a case recently where I was transferring values from one select box to another and as a result these transferred values weren't selected and hence not submitted [note: I don't know if this is just a PHP specific issue as I haven't had a chance to test it with other application servers, but it's worth bearing in mind]. JavaScript to the rescue. First the amended form:</p>
<p><em>&lt;form action="some_html.html" method="post" name="frm_test" id="frm_test" enctype="application/x-www-form-urlencoded" onSubmit="return allSelect();"&gt;<br />
 &lt;select name="test_select[]" id="test_select" multiple="multiple"&gt;<br />
  &lt;option value="1"&gt;1&lt;/option&gt;<br />
  &lt;option value="2"&gt;2&lt;/option&gt;<br />
  &lt;option value="3"&gt;3&lt;/option&gt;<br />
  &lt;option value="4"&gt;4&lt;/option&gt;<br />
 &lt;/select&gt;<br />
 &lt;input type="Submit" name="btn_submit" id="btn_submit" value="Submit" /&gt;<br />
&lt;/form&gt;</em></p>
<p>So when the form is submitted the function <strong>allSelect()</strong> is called (I found this script at: <a href="http://www.xs4all.nl/~ppk/js/transfer.html">http://www.xs4all.nl/~ppk/js/transfer.html</a>), which will select all the elements in a drop down box before submitting the form. And here is the code which you will need to include in your page (you will possibly need to modify the field name to match what you have called your multiple select box, i.e. modify the line <em>List = document.forms[0].<strong>your_field_name</strong>;</em>).</p>
<p><em>&lt;script language="JavaScript1.2" type="text/javascript"&gt;<br />
function allSelect()<br />
{<br />
  List = document.forms[0].test_select;<br />
  if (List.length &amp;&amp; List.options[0].value == 'temp') return;<br />
  for (i=0;i&lt;List.length;i++)<br />
  {<br />
     List.options[i].selected = true;<br />
  }<br />
}<br />
&lt;/script&gt;</em></p>
<p>Finally I'll quickly show you how to access the submitted variables from within a PHP script:</p>
<p><em>if (is_array(test_select[])) { // is this an array?<br />
$selects = sizeof(test_select[]); // get the size of the submitted array (i.e. how many content items were submitted for the home page)<br />
for ($i=0; $i&lt;$selects; $i++) { // ok loop over it<br />
echo($test_select[$i]."&lt;br /&gt;"); // and output it to screen<br />
}<br />
}</em></p>
<p>In the first instance I am checking that this is actually an array and if the condition is satisfied I determine it's length. Now I can create a loop and output each value submitted by setting the array dimension to the current value of <strong>$i</strong> (e.g. first loop $i will be equal to 0 [or $test_select[0] ], second loop $i = 1, etc...). OK that's it, I hope this has helped in some way, shape or form...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>249</wp:post_id>
		<wp:post_date>2002-12-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-problem-with-multiple-selects-and-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>welcome</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/welcome/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=250</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Teacupinastorm.com provides high quality Linux based hosting packages. Choose from 5 different hosting plans all including PHP and MySQL, plus of course a raft of additional features. <a href="index.php?id=a470dc2926e86f63cebb1abce6ae1d92">Click here for more details</a>.</p>
<p><span class="fhead">sign up</span><br />
<img src="images/s.gif" width="1" height="2" alt="spacer" border="0"><br />
Signing up with us as easy as 1, 2, 3</p>
<table border="0" cellpadding="0" cellspacing="5">
  <tr>
    <td><img src="images/step_1_s.gif" width="131" height="113" alt="Step 1 - select a plan from our extensive range of solutions" border="0"></td>
    <td class="dark"><img src="images/s.gif" width="1" height="1" alt="spacer" border="0"></td>
    <td><img src="images/step_2_s.gif" width="131" height="113" alt="Step 2 - sign up by completing our simple form" border="0"></td>
    <td class="dark"><img src="images/s.gif" width="1" height="1" alt="spacer" border="0"></td>
    <td><img src="images/step_3_s.gif" width="131" height="113" alt="Step 3 - make your secure payment using PayPal" border="0"></td>
  </tr>
</table>
<p><span class="fhead">domain name registration</span><br />
<img src="images/s.gif" width="1" height="2" alt="spacer" border="0"><br />
We are actively looking into providing the domain name registration as well in order to offer the full package. Check this space.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>250</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>welcome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>about us</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/about-us/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=251</guid>
		<description></description>
		<content:encoded><![CDATA[<p>We are proud of the level of service we provide and do everything within our power to ensure a smooth experience. As with our development work we take painstaking care of you, our clients. So feel free to drop us a line at any time to discuss your situation.</p>
<p><span class="fshead">Where are we?</span><br />Teacup In A Storm operates out of London, England. Our sites are hosted at secure data-center in the US and with clients from as far a field as Australia we span the globe.</p>
<p><span class="fshead">What we can do for you</span><br />Our services cover all aspects of web development, in this instance we can provide you with a high degree of professional hosting and with easy access via email to our staff. We can also help you with your development requirements. We pride ourselves in our abilities for good, clean professional design, application development and system integration. With our focus on user and brand centric design, along with our attention to detail, web standards compliant development and knowledge of accessibility, you will find yourself in good company with the team at Teacup In A Storm.</p>
<p><span class="fshead">Want more information?</span><br />
Do you have any further questions? If so why <a href="contact_us.php?type=enquiry" title="Contact us">not drop us a line</a> and we'll endeavor to answer any question you may have.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>251</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about-us</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Compressing files in Linux</title>
		<link>http://gregs.tcias.co.uk/2003/01/23/compressing-files-in-linux/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=252</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Following on from a little piece way back when (<a href="http://gregs.teacupinastorm.com/html/article/article.php?id=6F1BCAD6-B75B-4550-BAEE72C1A160B02B">De-compressing files in Linux
</a>) here is it's opposite how to compress files from the command line on a Linux/Unix system. As with decompressing this process can involve two steps. The first is to <strong>Tar</strong> the file and then for further compression <strong>gzip</strong> it.</p>
<p>The basic syntax for using tar is: <em>tar cvf filename.tar list_of_files_or_directories</em>. The <strong>tar</strong> command is followed by a sequence of switches. <strong>c</strong> stands for <em>creating a newr archive</em>, <strong>v</strong> for <em>verbosely list files processed</em> and <strong>f</strong> for <em>use archive device</em>. So if I wanted to archive an entire web site directory called <strong>somesite</strong> in a file <strong>somesite.tar</strong> I would type the following command: <strong>tar cvf somesite.tar somesite/</strong>. Please note that you can also type the following: <strong>tar -cvf somesite.tar somesite/</strong>. You can look up the full set of switches and options by typing: <em>man tar</em>.</p>
<p>The next step involves using the gzip command. This is a very simple step where all you need to is specify the file you wish to further compress, i.e. <strong>gzip filename</strong>. And using our example above you would type: <strong>gzip somesite.tar</strong>, giving you <em>somesite.tar.gz</em>.</p>
<p>And now for the bonus, deleting all those pesky sub directories in my <strong>somesite/</strong> example, in one foul swoop. Be careful as to where you are in relation to the folder and also what you are deleting. There is no recourse once this commands executes and you can easily (with the right permissions) delete a lot more then you ever intended to. OK that's the warning and now the command: <strong>rm -rf directory_name/</strong>. The switch <strong>r</strong> stands for recursive and means that it will remove the contents recursively, i.e. it will go into the sub directories and remove their contents. <strong>f</strong> forces the command to ignore nonexistent files and to never prompt. Incidently if you want to verify the deletion, i.e. be prompted as to which file is being deleted, then leave the <strong>f</strong> switch of. So back to the example this is what you would type to remove all the contents of the <strong>somesite/</strong> directory: <strong>rm -rf somesite/</strong>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>252</wp:post_id>
		<wp:post_date>2003-01-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>compressing-files-in-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Validating your credit card number</title>
		<link>http://gregs.tcias.co.uk/2003/02/03/validating-your-credit-card-number/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=253</guid>
		<description></description>
		<content:encoded><![CDATA[One of the items that recently caught my attention was a series of articles on <a href="http://www.webreference.com/">WebReference.com</a> about <a href="http://www.webreference.com/programming/carts/chap7/">Usable shopping carts</a>. This serie essentially was an excerpt from a set of chapters taken from a <a href="http://www.amazon.com/exec/obidos/ASIN/1904151140/teacupinastor-20/">book by the same name</a>. One item in particular caught my eye and that centered around validating Credit Card numbers using the <a href="http://www.webopedia.com/TERM/L/Luhn_formula.html">Luhn formula</a>. The article focused on developing the validation server side making use of PHP, so I decided to build a module in Cold Fusion to handle the same thing. I will not go too much into the nitty gritty as you can <a href="http://www.webreference.com/programming/carts/chap7/3/">read up on it</a> at the WebReference site. So without further ado the form and code.

So let's start of with the template, which includes the form for passing your credit card details and on submission will call the module to perform the validation.

<em>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt;</em>

<em>&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Credit card number validation&lt;/title&gt;
&lt;/head&gt;</em>

<em>&lt;body&gt;
&lt;cfif NOT isdefined("form.fieldnames")&gt;
&lt;form action="" method="post" name="frm_cc" id="frm_cc" enctype="application/x-www-form-urlencoded"&gt;
Type: &lt;select name="r_type" id="r_type"&gt;
&lt;option value=""&gt;Specify a cc type&lt;/option&gt;
&lt;option value=""&gt;--------------------&lt;/option&gt;
&lt;option value="visa"&gt;Visa&lt;/option&gt;
&lt;option value="mastercard"&gt;Master Card&lt;/option&gt;
&lt;option value="amex"&gt;American Express&lt;/option&gt;
&lt;option value="discovery"&gt;Discovery&lt;/option&gt;
&lt;option value="diners"&gt;Diners Club&lt;/option&gt;
&lt;/select&gt;&lt;br /&gt;
CC Number: &lt;input type="Text" name="r_cc_number" id="r_cc_number" value="" size="20" /&gt;&lt;br /&gt;
&lt;input type="Submit" name="btn_submit" id="btn_submit" value="Validate" /&gt;
&lt;/form&gt;
&lt;cfelse&gt;
&lt;cfmodule template="cc_validation.cfm" attribute_1="#form.r_type#" attribute_2="#form.r_cc_number#" /&gt;
&lt;cfif cc_valid eq 0&gt;
Your credit card number is incorrect.&lt;br /&gt;
&lt;cfelse&gt;
Card verified successfully.&lt;br /&gt;
&lt;/cfif&gt;
&lt;/cfif&gt;</em>

<em>&lt;/body&gt;
&lt;/html&gt;
</em>

The first thing the template does is check if the form has not been submitted. If this is the case then it displays the form. However if on the other hand it has, then it will call the module. The module itself takes two attributes, which correspond to the card type and the credit card number. No rocket science here, so onto the module.

<em>&lt;cfset local.cc_number = attributes.attribute_2 /&gt;
&lt;cfset local.cc_type = attributes.attribute_1 /&gt;
&lt;!--- -strip out any dashes or spaces- ---&gt;
&lt;cfset local.cc_number = rereplace(local.cc_number, "-|[[:space:]]", "", "all") /&gt;</em>

<em>&lt;cfif isNumeric(local.cc_number)&gt;
&lt;!--- -OK test for length first
if true length_valid = 1 else it's equal 0
Second test for the prefix if true prefix_valid = 1 and 0 if not
- ---&gt;
&lt;cfset local.submitted_len = len(local.cc_number) /&gt;</em>

<em> &lt;cfset local.length_valid = 0 /&gt;
&lt;cfset local.prefix_valid = 0 /&gt;
&lt;cfswitch expression="#local.cc_type#"&gt;
&lt;cfcase value="mastercard"&gt;
&lt;cfif local.submitted_len eq 16&gt;
&lt;cfset local.length_valid = 1 /&gt;
&lt;/cfif&gt;
&lt;cfset local.submitted_prefix = mid(local.cc_number, 1, 2) /&gt;
&lt;cfif (local.submitted_prefix gte 51) AND (local.submitted_prefix lte 55)&gt;
&lt;cfset local.prefix_valid = 1 /&gt;
&lt;/cfif&gt;
&lt;/cfcase&gt;
&lt;cfcase value="visa"&gt;
&lt;cfif (local.submitted_len eq 13) OR (local.submitted_len eq 16)&gt;
&lt;cfset local.length_valid = 1 /&gt;
&lt;/cfif&gt;
&lt;cfset local.submitted_prefix = mid(local.cc_number, 1, 1) /&gt;
&lt;cfif local.submitted_prefix eq 4&gt;
&lt;cfset local.prefix_valid = 1 /&gt;
&lt;/cfif&gt;
&lt;/cfcase&gt;
&lt;cfcase value="amex"&gt;
&lt;cfif local.submitted_len eq 15&gt;
&lt;cfset local.length_valid = 1 /&gt;
&lt;/cfif&gt;
&lt;cfset local.submitted_prefix = mid(local.cc_number, 1, 2) /&gt;
&lt;cfif (local.submitted_prefix eq 34) OR (local.submitted_prefix eq 37)&gt;
&lt;cfset local.prefix_valid = 1 /&gt;
&lt;/cfif&gt;
&lt;/cfcase&gt;
&lt;cfcase value="discover"&gt;
&lt;cfif local.submitted_len eq 16&gt;
&lt;cfset local.length_valid = 1 /&gt;
&lt;/cfif&gt;
&lt;cfset local.submitted_prefix = mid(local.cc_number, 1, 4) /&gt;
&lt;cfif local.submitted_prefix eq 6011&gt;
&lt;cfset local.prefix_valid = 1 /&gt;
&lt;/cfif&gt;
&lt;/cfcase&gt;
&lt;cfcase value="diners"&gt;
&lt;cfif local.submitted_len eq 14&gt;
&lt;cfset local.length_valid = 1 /&gt;
&lt;/cfif&gt;
&lt;cfset local.submitted_prefix = mid(local.cc_number, 1, 3) /&gt;
&lt;cfif ((local.submitted_prefix gte 300) AND (local.submitted_prefix lte 305)) OR find("36", mid(local.submitted_prefix, 1, 2), 1) OR find("38", mid(local.submitted_prefix, 1, 2), 1)&gt;
&lt;cfset local.prefix_valid = 1 /&gt;
&lt;/cfif&gt;
&lt;/cfcase&gt;
&lt;/cfswitch&gt;
&lt;cfif (local.length_valid AND local.prefix_valid) eq 1&gt;
&lt;!--- -now we check the Luhn formula- ---&gt;
&lt;cfscript&gt;
y = 0;
for (i=1; i lte local.submitted_len; setvariable("i",i+1)) {
x = mid(local.cc_number,i,1);
if (i mod 2) {
x = x*2;
if (x gt 9) {
z = (x \ 10) + (x - 10);
y = y + z;
} else {
y = y + x;
}
} else {
y = y + x;
}
}
y = y mod 10;
//WriteOutput(y&amp;"&lt;br /&gt;");
&lt;/cfscript&gt;
&lt;cfif y neq 0&gt;
&lt;cfset local.cc_valid = 0 /&gt;
&lt;!--- -Your credit card number is incorrect.&lt;br /&gt;- ---&gt;
&lt;cfelse&gt;
&lt;cfset local.cc_valid = 1 /&gt;
&lt;!--- -Card verified successfully.&lt;br /&gt;- ---&gt;
&lt;/cfif&gt;
&lt;cfelse&gt;
&lt;cfset local.cc_valid = 0 /&gt;
&lt;!--- -Your credit card number is incorrect.&lt;br /&gt;- ---&gt;
&lt;/cfif&gt;
&lt;cfelse&gt;
&lt;cfset local.cc_valid = 0 /&gt;
&lt;!--- -Your credit card number is incorrect.&lt;br /&gt;- ---&gt;
&lt;/cfif&gt;</em>

<em>&lt;cfset caller.cc_valid = local.cc_valid /&gt;
&lt;!--- -debug
CC type: &lt;cfoutput&gt;#local.cc_type#&lt;/cfoutput&gt;&lt;br /&gt;
CC number: &lt;cfoutput&gt;#local.cc_number#&lt;/cfoutput&gt;&lt;br /&gt;
Length valid: &lt;cfoutput&gt;#local.length_valid#&lt;/cfoutput&gt;
(&lt;cfoutput&gt;#local.submitted_len#&lt;/cfoutput&gt;)&lt;br /&gt;
Prefix valid: &lt;cfoutput&gt;#local.prefix_valid#&lt;/cfoutput&gt;
(&lt;cfoutput&gt;#local.submitted_prefix#&lt;/cfoutput&gt;)&lt;br /&gt;
- ---&gt;</em>

In the first instance we are setting the attributes passed by the call ot the module to local variables. Then I remove all spaces and dashes that user may have submitted and check that the number passed by the form is actually a number, if it passes this then the real work begins. Another step you might want to build in is to check whether or not values have actually been submitted. Anyway back to the actual processing.

Each credit card type follows a set of rules, i.e. each type has a varying length prefix and a set number of digits. The summary of these can be found on the aforementioned webreference site. The script then proceeds to determine the type and check that the number submitted fulfills the prefix and digit length requirements. If it passes it moves on to the Luhn formula and if not the script exits and returns <strong>0</strong> for <strong>local.cc_valid</strong> which is the variable that is returned by the module to verify the success of the evaluation.

The luhn formula helps to determine whether or not the number submitted is actually a valid credit card number. Listed below are the rules (lifted straight from the webreference site):
<ol>
	<li>Double the value of every other digit starting with the next-to-rightmost digit.</li>
	<li>If any of the resulting values has more than two digits, then its digits must be added together to produce a single digit.</li>
	<li>Add the sum of all the digits not doubled in step 1 to the sum of all the digits resulting in step 2.</li>
	<li>If the result is exactly divisible by 10 (that is, if the result ends in a zero), then the number is valid--providing of course that it's of the correct length and bears a correct prefix for that type of card--and can now be submitted for authorisation of a sale.</li>
</ol>
So if the formula returns <strong>0</strong> (zero), the credit card submitted is correct. And the module sets <strong>local.cc_valid</strong> to <strong>1</strong>, in turn <strong>caller.cc_valid</strong> is set to the value of <strong>local.cc_valid</strong>, as this is how you return values to the calling page in Cold Fusion. Now the next step would be to submit the information to your payment gateway to authorise the purchase and debit the credit from the card. So there's still a way to go, but at least you can save yourself some processing and user frustration by validating the submitted information at your end first, before continuing down to the gateway.

And that's it! If you like you can download the <a href="http://www.teacupinastorm.com/gregs/downloads/cc_validation.zip">full source here</a>. While we are on the topic of credit cards I came across <a href="http://euro.ecom.cmu.edu/resources/elibrary/everycc.htm">this resource</a> that pretty much covered everything I have ever wanted to know about my plastic friend (and then some).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>253</wp:post_id>
		<wp:post_date>2003-02-03 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>validating-your-credit-card-number</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Post wedding email deluge</title>
		<link>http://gregs.tcias.co.uk/2003/02/24/post-wedding-email-deluge/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=255</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Nothing quite like being away for a while and then being faced with a deluge of messages in your inbox. Here is the pick of the bunch from the last couple of weeks.</p>
<ol>
 <li>More website optimisation purely JavaScript focused and this time with
relation to download speeds:<a href="http://www.webreference.com/programming/optimize/speedup/chap9/">http://www.webreference.com/programming/optimize/speedup/chap9/</a>
. The key lessons here are:<br />
- reduce the number of http requests for script and css files<br />
- only implement/download features that are relevant to the user's
interaction with the page<br />
- remove white space<br />
- keep your comments short</li>
 <li>some useful information on removing your information from the Google
search engine: <a href="http://www.google.com/remove.html">http://www.google.com/remove.html</a>. Contrasting this, how
about some info on how to rank high on google? <a href="http://www.google.com/webmasters/">http://www.google.com/webmasters/</a></li>
 <li>on a similar note protect your privacy with these useful hints (US centric, but I am sure some or a lot of them can be applied anywhere): <a href="http://www.privacyjournal.net/bio.htm">http://www.privacyjournal.net/bio.htm</a></li>
 <li>an interesting look at screen real estate usage by Jakob Nielsen (<a href="http://www.useit.com/alertbox/20030210.html">http://www.useit.com/alertbox/20030210.html</a>). Alarmingly only 40 odd percent of the screen is dedicated to "areas of user interest", i.e. navigation and content, the rest would appear to be wasted. Though I don't think you can underestimate the need for white space when it comes to laying out your content to enhance legibility.</li>
 <li>a look at search engines and their ability to index flash driven web sites (<a href="http://searchenginewatch.com/searchday/03/sd0211-ses-flash.html">http://searchenginewatch.com/searchday/03/sd0211-ses-flash.html</a>). So far only FAST Search, the engine behind AlltheWeb and Lycos, has stated it's ability to index Flash driven websites. Google claims it can do it partially (by extracting links, however currently only around 50%). Have a read for more info and how to address some of the short coming of the spiders that index such a site.</li>
 <li>from the devshed newsletter a link to a set of articles on writing Technical references, User manuals and software developments: <a href="http://www.devshed.com/Talk/Practices/">http://www.devshed.com/Talk/Practices/</a></li>
 <li>Netscape's DevEdge have re-designed their website, making use of CSS and XML, read up about he process here: <a href="http://devedge.netscape.com/viewsource/2003/devedge-redesign/">http://devedge.netscape.com/viewsource/2003/devedge-redesign/</a>. This is in a similar vain to the Wired CSS/xHTML re-design article to be found here: <a href="http://devedge.netscape.com/viewsource/2002/wired-interview/">http://devedge.netscape.com/viewsource/2002/wired-interview/</a></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date>2003-02-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>post-wedding-email-deluge</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Some html optimisation hints</title>
		<link>http://gregs.tcias.co.uk/2003/02/25/some-html-optimisation-hints/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=256</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Apart from making use of CSS and xHTML here a few handy hints that I was able to glean from this excellent <a href="http://www.webreference.com/authoring/languages/html/optimize/">article</a>:</p>

<p><strong>Meta tags</strong></p>
<ol>
<li>Make them conditional to save on space, for example:<br />
&lt;!--#if expr="$HTTP_USER_AGENT = /^Mozilla/" --&gt;&lt;!--#else --&gt;
&lt;meta Name="keywords" Content="your set of meta tags" /&gt;<br />
<br />
&lt;meta name="description" Content="Your web sites description goes here" /&gt;
&lt;!--#endif --&gt;</li>
<li>Keep their length down to 200 or less characters. ON thing point worth noting is that you don't need to use commas to delimit your keywords (search engines ignore them), simply use a space to delimit.</li>
</ol>
<p><strong>xHTML</strong><br />
One handy tip here is to keep your lines down to less than 255 characters</p>

<p><strong>Forms</strong><br />
A really handy tip is to use the following style attribute for forms:</p>
<p><em>&lt;style type="text/css"&gt;<br />
&lt;!--<br />
   form {display:inline;}<br />
--&gt;<br />
&lt;/style&gt;</em></p>

<p>This removes the return carriage that causes ugly spacing at the end of forms and thus negates the need to hack form displays by improperly nesting the form tag in tables. The hack for that is: &lt;tr&gt;&lt;form&gt;&lt;td&gt;&lt;/td&gt;/form&gt;&lt;/tr&gt;, but thanks to that style sheet entry you no longer need to use this hack and your markup validates properly as well.</p>

<p><strong>Tables</strong><br />
I covered this previously, but I this is such a useful tip that I thought there is no harm in repeating it, especially when you consider how widespread the use of tables are in web design. To speed up the display of tables use this style sheet:</p>

<p><em>&lt;style type="text/css"&gt;<br />
&lt;--<br />
   table {table-layout:fixed; width: 100%}<br />
--&gt;<br />
&lt;/style&gt;<br />

&lt;table&gt;<br />
   &lt;tr&gt;&lt;td&gt;Cell 1&lt;/td&gt;&lt;td&gt;Cell 2&lt;/td&gt;&lt;/tr&gt;<br />
   &lt;tr&gt;&lt;td&gt;Cell 3&lt;/td&gt;&lt;td&gt;Cell 3&lt;/td&gt;&lt;/tr&gt;<br />
&lt;/table&gt;</em></p>

<p>You can furthermore optimise the speed and size of your tables, by assigning further styles to say your <strong>tds</strong> for font sizes and background colours. Reduce the table overhead even further by using a style to define the border, cellpadding and cellspacing attributes. Like such:</p>

<p><em>&lt;style type="text/css"&gt;<br />
&lt;--<br />
   table {border-collapse: collapse;}<br />
   td {padding: 0px;}<br />
--&gt;<br />
&lt;/style&gt;<br />

&lt;table&gt;<br />
   &lt;tr&gt;&lt;td&gt;Cell 1&lt;/td&gt;&lt;td&gt;Cell 2&lt;/td&gt;&lt;/tr&gt;<br />
   &lt;tr&gt;&lt;td&gt;Cell 3&lt;/td&gt;&lt;td&gt;Cell 3&lt;/td&gt;&lt;/tr&gt;<br />
&lt;/table&gt;</em></p>

<p>There you go all the tips I have for this week.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date>2003-02-25 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>some-html-optimisation-hints</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>My weekly mail gem bag</title>
		<link>http://gregs.tcias.co.uk/2003/03/11/my-weekly-mail-gem-bag/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=257</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This weeks mail bag contained a few gems</p>

<ol>
 <li>Jakob Nielsen's review, the pontif of all things usable, of a book on persuasive design. Check it out here: <a href="http://www.useit.com/alertbox/20030303.html">http://www.useit.com/alertbox/20030303.html</a> and remember it's for the kids!!!</li>

 <li>Over at <a href="http://www.theregister.co.uk/">the register</a> a snippet about <a href="http://www.theregister.co.uk/content/55/29511.html">ten common e-commerce site flaws</a>. I don't think one can ever have enough check lists to check our work against! Slightly related is this list of top <a href-"http://www.sans.org/top20/">20 vulnerabilities</a> and since we all need web servers there is some info on specific vulnearbilities for IIS and Apache</li>

 <li>Starting a business? Thinking of becoming an entrepreneur?? <a href="http://hbsworkingknowledge.hbs.edu/pubitem.jhtml?id=3348&t=entrepreneurship">This interview with Constance Bagley @ the Harvard Business School web site</a> has some useful information</li>

 <li>And now for stuff I came across on <a href="http://www.zeldman.com/">Zeldman's site</a>: Check out this link to <a href="http://www.hiveware.com/enkoder_form.php">http://www.hiveware.com/enkoder_form.php</a>. A script that takes your "mailto:" address and turns it into encrypted string and uses Javascript to write it to the page. Pretty marvellous and that should hinder some of those nasty little spam bots gleaning mail addresses from web pages. A nifty and low effort alternative to using forms to mail enquiries to you!</li>

 <li><a href="http://www.easyrgb.com/harmonies.php">http://www.easyrgb.com/harmonies.php</a>, if you are like me and struggle with colour schemes for web sites, try this script. Absolutely fantastic!</li>

 <li>a little bit of light entertainment: <a href="http://www.trevorvanmeter.com/flyguy/">check out fly guy</a>. Lovely animation and a very soothing experience</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>257</wp:post_id>
		<wp:post_date>2003-03-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-weekly-mail-gem-bag</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Setting your favourite editor to view the source of web pages</title>
		<link>http://gregs.tcias.co.uk/2003/01/20/setting-your-favourite-editor-to-view-the-source-of-web-pages/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=267</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After having read an article on <a href="http://www.zeldman.com/">Zeldman</a> about setting your favourite editor to view the source of pages viewed through your browser on a Mac, I decided to look into achieving the same on a PC based system and here is how I did it.</p>
<p>The process starts by having to open the registry editor, so the usual disclaimer applies, modify the registry at your own risk and back it up before you make any changes to it, enough said. You will be looking for the following <strong>Key</strong>: HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer.</p>
<p>I was not able to locate an entry for <strong>View Source Editor</strong> and <strong>Editor Name</strong>, so if you cannot find them either just add them by adding a new Key for each ot them under HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer (you can do this by right clicking in the right hand window pane and selecting new &gt;&gt; Key from the pop up dialogue). So your tree would now look like this: HKEY_LOCAL_MACHINE\Software\Microsoft\Internet
Explorer\View Source Editor\Editor Name.</p>
<p>Now to the part that will specify your favourite editor. When selecting the <strong>Editor Name</strong> Key in the right hand pane there should be a default string value (Name: Default, Type: REG_SZ and the value should be empty). Double click on that entry, which in turn open a new dialogue. The only field you can edit here is the <strong>Value data</strong> field, this is where you will specify the full path to your editor enclosed in quotation marks. In my case it's Cold Fusion Studio and it is located on my C drive under Program Files\Allaire\Cold Fusion Studio 4.5. So this is what the entry would look like:</p>
<p><em>"C:\Program Files\Allaire\ColdFusion Studio 4.5\cfstudio45.exe"</em></p>
<p>Should you have have something different just bear in mind the following format and you'll be fine: <strong>"drive letter:\path to executable\executable.file extension"</strong>. Once done just click <strong>OK</strong> and you are done. Open up your browser and right click to view the source of the current web page. Doing this should either fire up your editor and display the source there, or load the source into your already open editor of choice.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date>2003-01-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-your-favourite-editor-to-view-the-source-of-web-pages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>plan25</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/plan25/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=274</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Tailored towards the individual user who has less of a storage
            space requirements and whose site possibly receives less traffic.
            However why should this account be less feature rich? There are none.
            As a matter of fact the only aspect in which this packet is less
            featured (apart from storage and bandwidth) is the omission of:</p>
<ul>
	<li>A secure server and SSL</li>
	<li>PGP mail encryption</li>
	<li>And the form to PGPMail script</li>
</ul>
<p>In all other ways this package is as feature rich as the others.</p>
<p><span class="fshead">Feature list</span><br />Listed below is the full list of all the options available to you when you select the Plan 25 solution.</p>
<p>Disk Storage Space 	<span class="fr">25 MB</span><br />
Monthly Data Transfer in Megabytes 		<span class="fr">5000</span><br />
DS3 Connections backbone connection  	<span class="fr">YES</span><br />
Secure Server 		<span class="fr">NO </span><br />
Daily Backups 		<span class="fr">YES</span><br />
Your Own Domain Name 	<span class="fr">YES</span></p>

<p><span  class="fshead">E-mail Options</span>  <br />
POP3 Email Accounts 	<span class="fr">Unlimited</span><br />
smtp (send mail) i.e. outgoing mail server 			<span class="fr">unlimited</span><br />
"Catch-All" E-mail 	<span class="fr">YES</span><br />
Email Forwarding 	<span class="fr">unlimited</span><br />
Email Auto responders 	<span class="fr">unlimited</span><br />
Mailing Lists 		<span class="fr">YES - 10</span><br />
Email Manager 		<span class="fr">YES</span><br />
PGP Mail (encrypted email) 	<span class="fr">NO</span></p>

<p><span  class="fshead">Account Management Tools</span> <br />
Virtual Control Panel 			<span class="fr">YES</span><br />
File Manager 		<span class="fr">YES</span><br />
Extensive Online Documentation 		<span class="fr">YES</span><br />
Mail Manager 		<span class="fr">YES</span><br />
Archive Manager 	<span class="fr">YES</span><br />
Online Billing History System 		<span class="fr">YES</span><br />
Search Engine Submission Tool (submit to over 900 top search engines) 	<span class="fr">YES</span><br />
SSH 			<span class="fr">YES</span><br />
Network Troubleshooter 	<span class="fr">YES</span><br />
Password Protected Pages 			<span class="fr">YES</span><br />
Resource Meter 		<span class="fr">YES</span><br />
Detailed Site Statistics (Http-Analyze Site Statistics)  <span class="fr">YES</span><br />*INCLUDES REFERRER STATS FREE*</p>

<p><span  class="fshead">Web Site Design Options</span><br />
Microsoft® FrontPage® 2000 Extensions 	<span class="fr">YES</span><br />
FTP Account Access 	<span class="fr">YES</span><br />
Page Counters 		<span class="fr">YES</span><br />
URL Forwarding 		<span class="fr">unlimited</span></p>

<!-- Domain Name Options Domain Registration for only $19.95 	YES  -->

<p><span  class="fshead">E-Commerce Options</span>  <br />
E-commerce Software Included		<span class="fr">YES</span><br />
Shopping Cart 		<span class="fr">YES</span><br />
SSL (Secure Server) 	<span class="fr">NO</span><br />
Cybercash support 	<span class="fr">YES</span><br />
Authorize.net support 	<span class="fr">YES</span></p>

<p><span  class="fshead">Programming Tools</span> <br />
PHP			<span class="fr">YES</span><br />
Java Servlet Support (Java is supported with all our plans) 	<span class="fr">YES</span><br />
Your own cgi-bin	<span class="fr">YES</span><br />
Free CGI Scripts (formmail.pl, hitcounter, discussion board, meta tag search, guestbook, web board)  	<span class="fr">YES</span><br />
Form to Email 		<span class="fr">YES</span><br />
Form to PGPmail		<span class="fr">NO</span><br />
Hosted SSL Scripts 	<span class="fr">YES</span><br />
MySQL Database 		<span class="fr">YES</span><br />
Mime Types 		<span class="fr">YES</span><br />
ASP 			<span class="fr">NO</span><br />
Anonymous FTP 		<span class="fr">YES</span><br />
Access to Log Files 	<span class="fr">YES</span><br />
Server Side Includes 	<span class="fr">YES</span></p>

<p><span  class="fshead">Included with every plan</span> <br />
E-mail Form Generator <br />
Graphical Site Statistics <br />
Park & Point Domains <br />
Online Support Manual<br />
Password Protected Directories <br />
Own CGI/Bin <br />
Microsoft® FrontPage® 98/2000 Extensions <br />
Search Engine Submission <br />
Free CGI Scripts <br /></p>
<p><span  class="fshead">Optional Add-Ons</span>  <br />
Extra Disk Storage Space: 	<span class="fr">$15/mo per extra 20 MB</span><br />
Additional Bandwidth: 		<span class="fr">$7/mo -Extra 1 GIGS</span><br />
Additional Email: 		<span class="fr">$30/mo for 20 additional Email - 3 month minimum accts</span>.</p>
<p><span class="fshead">Need more information?</span><br />
Do you have any further questions? If so why <a href="contact_us.php?type=plan25" title="Contact us">not drop us a line</a> and we'll endeavor to answer any question you may have.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>plan25</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>plan 50</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/plan-50/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=275</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For just a $2 more you get twice the space and nearly double the bandwidth of the <a href="index.php?id=a470dc2926e86f63cebb1abce6ae1d92&cid=3ce0cb7beb17c92018750adfaa8c9954" title="Plan 25">Plan 25</a>. Plan 50 allows you more storage and provides you with the added bonus having a secure server, however <acronym title="Secure Sockets Layer">SSL</acronym> is not part of the package and hence this is not a viable solution for an e-commerce site. For this type of solution, please look at <a href="index.php?id=a470dc2926e86f63cebb1abce6ae1d92&cid=72300b6f705272bab2f9fd9207d9e3da" title="Plan 150">Plan 150</a>, <a href="index.php?id=a470dc2926e86f63cebb1abce6ae1d92&cid=5294cc29110682a7dd38517c74c4172a" title="Plan 250">Plan 250</a> and <a href="index.php?id=a470dc2926e86f63cebb1abce6ae1d92&cid=411f558885363e525ce6c8180dc49eb0" title="Plan 500">Plan 500</a></p>
<p><span class="fshead">Feature list</span><br />Listed below is the full list of all the options available to you when you select the Plan 50 solution.</p>
<p>Disk Storage Space 	<span class="fr">50 MB</span><br />
Monthly Data Transfer in Megabytes 		<span class="fr">8000</span><br />
DS3 Connections backbone connection  	<span class="fr">YES</span><br />
Secure Server 		<span class="fr">YES</span><br />
Daily Backups 		<span class="fr">YES</span><br />
Your Own Domain Name 	<span class="fr">YES</span></p>

<p><span  class="fshead">E-mail Options</span><br />
POP3 Email Accounts 	<span class="fr">Unlimited</span><br />
smtp (send mail) i.e. outgoing mail server 			<span class="fr">unlimited</span><br />
"Catch-All" E-mail 	<span class="fr">YES</span><br />
Email Forwarding <span class="fr">unlimited</span><br />
Email Auto responders 	<span class="fr">unlimited</span><br />
Mailing Lists 		<span class="fr">YES - 20</span><br />
Email Manager 		<span class="fr">YES</span><br />
PGP Mail (encrypted email) 	<span class="fr">YES</span></p>

<p><span  class="fshead">Account Management Tools</span> <br />
Virtual Control Panel 			<span class="fr">YES</span><br />
File Manager 		<span class="fr">YES</span><br />
Extensive Online Documentation 		<span class="fr">YES</span><br />
Mail Manager 		<span class="fr">YES</span><br />
Archive Manager 	<span class="fr">YES</span><br />
Online Billing History System 		<span class="fr">YES</span><br />
Search Engine Submission Tool (submit to over 900 top search engines) 	<span class="fr">YES</span><br />
SSH 			<span class="fr">YES</span><br />
Network Troubleshooter 	<span class="fr">YES</span><br />
Password Protected Pages 			<span class="fr">YES</span><br />
Resource Meter 		<span class="fr">YES</span><br />
Detailed Site Statistics (Http-Analyze Site Statistics)  <span class="fr">YES</span><br />*INCLUDES REFERRER STATS FREE*</p>

<p><span  class="fshead">Web Site Design Options</span><br />
Microsoft® FrontPage® 2000 Extensions 	<span class="fr">YES</span><br />
FTP Account Access 	<span class="fr">YES</span><br />
Page Counters 		<span class="fr">YES</span><br />
URL Forwarding 		<span class="fr">unlimited</span></p>

<!-- Domain Name Options Domain Registration for only $19.95 	YES -->

<p><span  class="fshead">E-Commerce Options</span>  <br />
E-commerce Software Included		<span class="fr">YES</span><br />
Shopping Cart 		<span class="fr">YES</span><br />
SSL (Secure Server) 	<span class="fr">NO</span><br />
Cybercash support 	<span class="fr">YES</span><br />
Authorize.net support 	<span class="fr">YES</span></p>

<p><span  class="fshead">Programming Tools</span> <br />
PHP			<span class="fr">YES</span><br />
Java Servlet Support (Java is supported with all our plans) 	<span class="fr">YES</span><br />
Your own cgi-bin	<span class="fr">YES</span><br />
Free CGI Scripts (formmail.pl, hitcounter, discussion board, meta tag search, guestbook, web board)  	<span class="fr">YES</span><br />
Form to Email 		<span class="fr">YES</span><br />
Form to PGPmail		<span class="fr">NO</span><br />
Hosted SSL Scripts 	<span class="fr">YES</span><br />
MySQL Database 		<span class="fr">YES</span><br />
Mime Types 		<span class="fr">YES</span><br />
ASP 			<span class="fr">NO</span><br />
Anonymous FTP 		<span class="fr">YES</span><br />
Access to Log Files 	<span class="fr">YES</span><br />
Server Side Includes 	<span class="fr">YES</span></p>


<p><span  class="fshead">Included with every plan</span> <br />
E-mail Form Generator <br />
Graphical Site Statistics <br />
Park & Point Domains <br />
Online Support Manual<br />
Password Protected Directories <br />
Own CGI/Bin <br />
Microsoft® FrontPage® 98/2000 Extensions <br />
Search Engine Submission <br />
Free CGI Scripts <br /></p>
<p><span  class="fshead">Optional Add-Ons</span>  <br />
Extra Disk Storage Space: 	<span class="fr">$15/mo per extra 20 MB</span><br />
Additional Bandwidth: 		<span class="fr">$7/mo -Extra 1 GIGS</span><br />
Additional Email: 		<span class="fr">$30/mo for 20 additional Email - 3 month minimum accts</span>.</p>
<p><span class="fshead">Need more information?</span><br />
Do you have any further questions? If so why <a href="contact_us.php?type=plan50" title="Contact us">not drop us a line</a> and we'll endeavor to answer any question you may have.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>275</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>plan-50</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>plan 150</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/plan-150/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=276</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The perfect entry-level solution for an e-commerce site: plenty of storage space and lots of bandwidth with all the features available to the high-end packages. Make use of <acronym title="Secure Sockets Layer">SSL</acronym> and the secure server features to launch your e-commerce site.</p>
<p><span class="fshead">Feature list</span><br />Listed below is the full list of all the options available to you when you select the Plan 150 solution.</p>
<p>Disk Storage Space 	<span class="fr">150 MB</span> <br />
Monthly Data Transfer in Megabytes 		<span class="fr">12000</span> <br />
DS3 Connections backbone connection  	<span class="fr">YES</span> <br />
Secure Server 		<span class="fr">YES </span> <br />
Daily Backups 		<span class="fr">YES</span> <br />
Your Own Domain Name 	<span class="fr">YES</span></p>

<p><span  class="fshead">E-mail Options</span> <br />
POP3 Email Accounts 	<span class="fr">Unlimited</span> <br />
smtp (send mail) i.e. outgoing mail server 			<span class="fr">unlimited</span> <br />
"Catch-All" E-mail 	<span class="fr">YES</span> <br />
Email Forwarding 	<span class="fr">unlimited</span> <br />
Email Auto responders 	<span class="fr">unlimited</span> <br />
Mailing Lists 		<span class="fr">YES - 30</span> <br />
Email Manager 		<span class="fr">YES</span> <br />
PGP Mail (encrypted email) 	<span class="fr">YES</span></p>

<p><span  class="fshead">Account Management Tools</span> <br />
Virtual Control Panel 			<span class="fr">YES</span><br />
File Manager 		<span class="fr">YES</span><br />
Extensive Online Documentation 		<span class="fr">YES</span><br />
Mail Manager 		<span class="fr">YES</span><br />
Archive Manager 	<span class="fr">YES</span><br />
Online Billing History System 		<span class="fr">YES</span><br />
Search Engine Submission Tool (submit to over 900 top search engines) 	<span class="fr">YES</span><br />
SSH 			<span class="fr">YES</span><br />
Network Troubleshooter 	<span class="fr">YES</span><br />
Password Protected Pages 			<span class="fr">YES</span><br />
Resource Meter 		<span class="fr">YES</span><br />
Detailed Site Statistics (Http-Analyze Site Statistics)  <span class="fr">YES</span><br />*INCLUDES REFERRER STATS FREE*</p>

<p><span  class="fshead">Web Site Design Options</span><br />
Microsoft® FrontPage® 2000 Extensions 	<span class="fr">YES</span><br />
FTP Account Access 	<span class="fr">YES</span><br />
Page Counters 		<span class="fr">YES</span><br />
URL Forwarding 		<span class="fr">unlimited</span></p>

<!-- Domain Name Options Domain Registration for only $19.95 	YES -->

<p><span  class="fshead">E-Commerce Options</span>  <br />
E-commerce Software Included		<span class="fr">YES</span><br />
Shopping Cart 		<span class="fr">YES</span><br />
SSL (Secure Server) 	<span class="fr">YES</span><br />
Cybercash support 	<span class="fr">YES</span><br />
Authorize.net support 	<span class="fr">YES</span></p>

<p><span  class="fshead">Programming Tools</span> <br />
PHP			<span class="fr">YES</span><br />
Java Servlet Support (Java is supported with all our plans) 	<span class="fr">YES</span><br />
Your own cgi-bin	<span class="fr">YES</span><br />
Free CGI Scripts (formmail.pl, hitcounter, discussion board, meta tag search, guestbook, web board)  	<span class="fr">YES</span><br />
Form to Email 		<span class="fr">YES</span><br />
Form to PGPmail		<span class="fr">NO</span><br />
Hosted SSL Scripts 	<span class="fr">YES</span><br />
MySQL Database 		<span class="fr">YES</span><br />
Mime Types 		<span class="fr">YES</span><br />
ASP 			<span class="fr">NO</span><br />
Anonymous FTP 		<span class="fr">YES</span><br />
Access to Log Files 	<span class="fr">YES</span><br />
Server Side Includes 	<span class="fr">YES</span></p>


<p><span  class="fshead">Included with every plan</span> <br />
E-mail Form Generator <br />
Graphical Site Statistics <br />
Park & Point Domains <br />
Online Support Manual<br />
Password Protected Directories <br />
Own CGI/Bin <br />
Microsoft® FrontPage® 98/2000 Extensions <br />
Search Engine Submission <br />
Free CGI Scripts <br /></p>
<p><span  class="fshead">Optional Add-Ons</span>  <br />
Extra Disk Storage Space: 	<span class="fr">$15/mo per extra 20 MB</span><br />
Additional Bandwidth: 		<span class="fr">$7/mo -Extra 1 GIGS</span><br />
Additional Email: 		<span class="fr">$30/mo for 20 additional Email - 3 month minimum accts</span>.</p>
<p><span class="fshead">Need more information?</span><br />
Do you have any further questions? If so why <a href="contact_us.php?type=plan150" title="Contact us">not drop us a line</a> and we'll endeavor to answer any question you may have.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>276</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>plan-150</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>plan 250</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/plan-250/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=277</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This package has all the features you need to host your high volume site. 250 Megabytes of storage space for your files and databases, and enough bandwidth to support a busy site and all this for under $25 a month!!</p>
<p><span class="fshead">Feature list</span><br />
Listed below is the full list of all the options available to you when you select the Plan 250 solution.</p>
<p>Disk Storage Space 	<span class="fr">250 MB</span> <br />
Monthly Data Transfer in Megabytes 	<span class="fr">16000</span> <br />
DS3 Connections backbone connection  <span class="fr">YES</span> <br />
Secure Server <span class="fr">YES</span> <br />
Daily Backups <span class="fr">YES</span> <br />
Your Own Domain Name <span class="fr">YES</span></p>

<p><span  class="fshead">E-mail Options</span> <br />
POP3 Email Accountsunlimited smtp (send mail) i.e. outgoing mail server <span class="fr">unlimited</span> <br />
"Catch-All" E-mail <span class="fr">YES</span> <br />
Email Forwarding <span class="fr">unlimited </span> <br />
Email Auto responders <span class="fr">unlimited</span> <br />
Mailing Lists <span class="fr">YES - 35</span> <br />
Email Manager <span class="fr">YES</span> <br />
PGP Mail (encrypted email) 	<span class="fr">YES</span></p>

<p><span  class="fshead">Account Management Tools</span> <br />
Virtual Control Panel 			<span class="fr">YES</span><br />
File Manager 		<span class="fr">YES</span><br />
Extensive Online Documentation 		<span class="fr">YES</span><br />
Mail Manager 		<span class="fr">YES</span><br />
Archive Manager 	<span class="fr">YES</span><br />
Online Billing History System 		<span class="fr">YES</span><br />
Search Engine Submission Tool (submit to over 900 top search engines) 	<span class="fr">YES</span><br />
SSH 			<span class="fr">YES</span><br />
Network Troubleshooter 	<span class="fr">YES</span><br />
Password Protected Pages 			<span class="fr">YES</span><br />
Resource Meter 		<span class="fr">YES</span><br />
Detailed Site Statistics (Http-Analyze Site Statistics)  <span class="fr">YES</span><br />*INCLUDES REFERRER STATS FREE*</p>

<p><span  class="fshead">Web Site Design Options</span><br />
Microsoft® FrontPage® 2000 Extensions 	<span class="fr">YES</span><br />
FTP Account Access 	<span class="fr">YES</span><br />
Page Counters 		<span class="fr">YES</span><br />
URL Forwarding 		<span class="fr">unlimited</span></p>

<!-- Domain Name Options Domain Registration for only $19.95 	YES -->

<p><span  class="fshead">E-Commerce Options</span>  <br />
E-commerce Software Included		<span class="fr">YES</span><br />
Shopping Cart 		<span class="fr">YES</span><br />
SSL (Secure Server) 	<span class="fr">YES</span><br />
Cybercash support 	<span class="fr">YES</span><br />
Authorize.net support 	<span class="fr">YES</span></p>

<p><span  class="fshead">Programming Tools</span> <br />
PHP			<span class="fr">YES</span><br />
Java Servlet Support (Java is supported with all our plans) 	<span class="fr">YES</span><br />
Your own cgi-bin	<span class="fr">YES</span><br />
Free CGI Scripts (formmail.pl, hitcounter, discussion board, meta tag search, guestbook, web board)  	<span class="fr">YES</span><br />
Form to Email 		<span class="fr">YES</span><br />
Form to PGPmail		<span class="fr">YES</span><br />
Hosted SSL Scripts 	<span class="fr">YES</span><br />
MySQL Database 		<span class="fr">YES</span><br />
Mime Types 		<span class="fr">YES</span><br />
ASP 			<span class="fr">NO</span><br />
Anonymous FTP 		<span class="fr">YES</span><br />
Access to Log Files 	<span class="fr">YES</span><br />
Server Side Includes 	<span class="fr">YES</span></p>


<p><span  class="fshead">Included with every plan</span> <br />
E-mail Form Generator <br />
Graphical Site Statistics <br />
Park & Point Domains <br />
Online Support Manual<br />
Password Protected Directories <br />
Own CGI/Bin <br />
Microsoft® FrontPage® 98/2000 Extensions <br />
Search Engine Submission <br />
Free CGI Scripts <br /></p>
<p><span  class="fshead">Optional Add-Ons</span>  <br />
Extra Disk Storage Space: 	<span class="fr">$15/mo per extra 20 MB</span><br />
Additional Bandwidth: 		<span class="fr">$7/mo -Extra 1 GIGS</span><br />
Additional Email: 		<span class="fr">$30/mo for 20 additional Email - 3 month minimum accts</span>.</p>
<p><span class="fshead">Need more information?</span><br />
Do you have any further questions? If so why <a href="contact_us.php?type=plan250" title="Contact us">not drop us a line</a> and we'll endeavor to answer any question you may have.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>277</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>plan-250</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>plan 500</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/plan-500/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=278</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The high-end solution for high traffic sites with lots of content: 500 Megabytes of storage, 20 Gigabytes of bandwidth, unlimited pop accounts, unlimited mailing lists and much more. And all for the reasonable price of US$26.95 a month.</p>
<p><span class="fshead">Feature list</span><br />
Listed below is the full list of all the options available to you when you select the Plan 500 solution.</p>
<p>Disk Storage Space 	<span class="fr">500 MB</span> <br />
Monthly Data Transfer in Megabytes 		<span class="fr">20000</span> <br />
DS3 Connections backbone connection  	<span class="fr">YES</span> <br />
Secure Server 	<span class="fr">YES</span> <br />
Daily Backups <span class="fr">YES</span> <br />
Your Own Domain Name <span class="fr">YES</span></p>

<p><span  class="fshead">E-mail Options</span> <br />
POP3 Email Accounts <span class="fr">unlimited</span> <br />
smtp (send mail) i.e. outgoing mail server 	<span class="fr">unlimited</span> <br />
"Catch-All" E-mail 	<span class="fr">YES</span> <br />
Email Forwarding 	<span class="fr">unlimited</span> <br />
Email Auto responders 	<span class="fr">unlimited </span> <br />
Mailing Lists 		<span class="fr">YES - unlimited </span> <br />
Email Manager 		<span class="fr">YES</span> <br />
PGP Mail (encrypted email) <span class="fr">YES</span></p>

<p><span  class="fshead">Account Management Tools</span> <br />
Virtual Control Panel 			<span class="fr">YES</span><br />
File Manager 		<span class="fr">YES</span><br />
Extensive Online Documentation 		<span class="fr">YES</span><br />
Mail Manager 		<span class="fr">YES</span><br />
Archive Manager 	<span class="fr">YES</span><br />
Online Billing History System 		<span class="fr">YES</span><br />
Search Engine Submission Tool (submit to over 900 top search engines) 	<span class="fr">YES</span><br />
SSH 			<span class="fr">YES</span><br />
Network Troubleshooter 	<span class="fr">YES</span><br />
Password Protected Pages 			<span class="fr">YES</span><br />
Resource Meter 		<span class="fr">YES</span><br />
Detailed Site Statistics (Http-Analyze Site Statistics)  <span class="fr">YES</span><br />*INCLUDES REFERRER STATS FREE*</p>

<p><span  class="fshead">Web Site Design Options</span><br />
Microsoft® FrontPage® 2000 Extensions 	<span class="fr">YES</span><br />
FTP Account Access 	<span class="fr">YES</span><br />
Page Counters 		<span class="fr">YES</span><br />
URL Forwarding 		<span class="fr">unlimited</span></p>

<!-- Domain Name Options Domain Registration for only $19.95 	YES -->

<p><span  class="fshead">E-Commerce Options</span>  <br />
E-commerce Software Included		<span class="fr">YES</span><br />
Shopping Cart 		<span class="fr">YES</span><br />
SSL (Secure Server) 	<span class="fr">YES</span><br />
Cybercash support 	<span class="fr">YES</span><br />
Authorize.net support 	<span class="fr">YES</span></p>

<p><span  class="fshead">Programming Tools</span> <br />
PHP			<span class="fr">YES</span><br />
Java Servlet Support (Java is supported with all our plans) 	<span class="fr">YES</span><br />
Your own cgi-bin	<span class="fr">YES</span><br />
Free CGI Scripts (formmail.pl, hitcounter, discussion board, meta tag search, guestbook, web board)  	<span class="fr">YES</span><br />
Form to Email 		<span class="fr">YES</span><br />
Form to PGPmail		<span class="fr">YES</span><br />
Hosted SSL Scripts 	<span class="fr">YES</span><br />
MySQL Database 		<span class="fr">YES</span><br />
Mime Types 		<span class="fr">YES</span><br />
ASP 			<span class="fr">NO</span><br />
Anonymous FTP 		<span class="fr">YES</span><br />
Access to Log Files 	<span class="fr">YES</span><br />
Server Side Includes 	<span class="fr">YES</span></p>


<p><span  class="fshead">Included with every plan</span> <br />
E-mail Form Generator <br />
Graphical Site Statistics <br />
Park & Point Domains <br />
Online Support Manual<br />
Password Protected Directories <br />
Own CGI/Bin <br />
Microsoft® FrontPage® 98/2000 Extensions <br />
Search Engine Submission <br />
Free CGI Scripts <br /></p>
<p><span  class="fshead">Optional Add-Ons</span>  <br />
Extra Disk Storage Space: 	<span class="fr">$15/mo per extra 20 MB</span><br />
Additional Bandwidth: 		<span class="fr">$7/mo -Extra 1 GIGS</span><br />
Additional Email: 		<span class="fr">$30/mo for 20 additional Email - 3 month minimum accts</span>.</p>
<p><span class="fshead">Need more information?</span><br />
Do you have any further questions? If so why <a href="contact_us.php?type=plan25" title="Contact us">not drop us a line</a> and we'll endeavor to answer any question you may have.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>plan-500</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>overview</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/overview/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=279</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span class="fshead">Hosting</span><br />
We offer high quality linux based hosting solutions, all with <acronym title="Pre HypertextProcessor">PHP</acronym> and MySQL so that you can make the most of your on-line presence by building dynamic sites. Benefit from 5 different options by selecting the plan that suits your requirements best.</p>
<p><span class="fshead">24 hour access</span><br />
All packages come as standard with access to CPanel 6, a web based management tool that gives you complete control of your account from any where in the world 24/7. Of course you'll have full access to your raw log files or just take advantage of the log analysis tool included in your control panel.</p>
<p><span class="fshead">E-commerce</span><br />
E-Commerce facilities are standard with all packages but for Plan 15 and Plan 50 options which do not include <acronym title="Secure Sockets Layer">SSL</acronym> support, these are designed to be used by everyone, not just the experts. Please note that you will need to acquire your own digital certificates to use this facility. Of course we would be more than happy to help with this process, should you need to request it.</p>
<p><span class="fshead">Reliable high level of performance</span><br />
Our Servers are designed and built for high speed and high reliability hosting. They are housed in a high security data centre, with a direct link to <acronym title=" T-3 carrier">DS3</acronym> Connections backbone connections. We back our services with a 99.5% uptime <acronym title="Service Level Agreement">SLA</acronym>. Furthermore download your daily backups via the control panel for added security.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>279</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>overview</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>terms and conditions</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/terms-and-conditions/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Teacupinastorm.com provides a variety of hosting services, including web hosting (both Windows and Linux based), mail hosting, database services and URL forwarding. Since these services use resources that are shared by many users, the benefits of using the service must be balanced with certain obligations and responsibilities to ensure that all users can have a productive experience.</p>

<p>By using these services, you agree to be bound by the terms and conditions; you agree to indemnify and hold harmless Teacupinastorm.com from any loss, liability, claim, damage and expense arising from or related to your content or use of any services provided by Teacupinastorm.com. If you are not satisfied with these terms and conditions then you must discontinue use of our hosting services.</p>

<p>Teacupinastorm.com may revise these terms and conditions from time to time by posting a new version of this document on our hosting site (http://hosting.Teacupinastorm.com). Any new version of these terms will be effective within 14 days of posting unless Teacupinastorm.com considers (in its sole discretion) that a period shorter than 14 days is necessary to protect the integrity, security or smooth operation of Teacupinastorm.com services. As such, users should consult this document on a regular basis to ensure that they are familiar with the most recent version.</p>

<p>You accept legal responsibility for use of the account, are at least 18 years of age or (if younger) have your parent's or legal guardian's permission before using our services.</p>

<p>The hosting services must not be used for unlawful purposes. Any use of these services which violates any local, state, federal or international laws applicable to Teacupinastorm.com, your jurisdiction, or any jurisdiction that your site is subject to is strictly prohibited.</p>

<p>You agree that use of our services is at your own risk. The services are provided by Teacupinastorm.com on an "AS IS" and "AS AVAILABLE" basis. Teacupinastorm.com expressly disclaims all warranties of any kind, whether express or implied, including but not limited to the implied warranties of merchantability, fitness for a particular purpose and non-infringement.</p>

<p>No advice or information, whether oral or written, obtained by you from Teacupinastorm.com, its employees or associates or through their respective websites shall create any warranty not expressly stated in these terms and conditions.</p>

<p>Teacupinastorm.com does not tolerate SPAM. If you use spam, unsolicited emails or message board posting, or any other similar method to promote your site, then your access to our services will be immediately terminated.</p>

<p>Teacupinastorm.com reserves the right to take action, including legal or suspension of or termination of a service, against a customer who interferes with the rights of another user online, or attempts to interfere with the smooth running of the internet or Teacupinastorm.com's services. We reserve the right to discontinue, without refund or notice, any account or service where usage of the account or service is deemed to be an abuse, and we will charge the customer for costs incurred by any such abuse.</p>

<p>You are responsible for any misuse of our services, even for example, if the misuse was committed by a friend, family member, guest, employee or customer with access to your account or website. You are also responsible for any such misuse regardless of whether it was with or without your consent. Therefore, you must take steps to ensure that others do not gain unauthorised access to your account or website.</p>

<p>Teacupinastorm.com reserves the right to refuse or discontinue service to anyone at our sole discretion without notice. Your access to all or part of our services may be denied without notice if Teacupinastorm.com believes any of the terms and conditions have been violated.</p>

<p>Teacupinastorm.com will automatically rebill a customer's credit card, where credit card details have been provided unless otherwise informed.</p>

<p>You understand that you must maintain your own copy of any content published via a Teacupinastorm.com service and that Teacupinastorm.com should never be used as any "master" or primary or critical copy of any content.</p>

<p>You understand that no intellectual property rights are assigned to you in the use of a service provided by Teacupinastorm.com unless otherwise specifically contracted.</p>

<p>Likewise none of your intellectual property rights are assigned to Teacupinastorm.com via the use of a service provided by Teacupinastorm.com unless otherwise specifically contracted.</p>

<p>If you are aware of any violations of the terms and agreements, please report them to: abuse@Teacupinastorm.com.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>terms-and-conditions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>privacy policy</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/privacy-policy/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=281</guid>
		<description></description>
		<content:encoded><![CDATA[<p>OUR policies and procedures for handling customer information have been created with the understanding that there continues to be constant change in internet technologies. With this change also comes change in internet business methods to keep up with the technological changes. As a result, TEACUPINASTORM's policies and procedures are subject to change.</p>

<p>As we strive to provide the services requested by our clients, we constantly, collect, accumulate and store information and communications that may be deemed private or sensitive to certain individuals and/or bodies. Some of this information - such as the customer's name, address, telephone number, and credit card data - is provided to TEACUPINASTORM by its customers in order to establish service. Other information - such as the customer's account status, choice of services, and customer logs - is created and maintained by TEACUPINASTORM in the normal course of providing service.</p>

<p><span  class="fshead">Data Security</span><br />
TEACUPINASTORM will protect the confidentiality of its customer's information, account information and personal communications to the fullest extent possible and consistent with the law and the legitimate interests of TEACUPINASTORM, its partners, its employees and other customers of TEACUPINASTORM's services. To protect the loss, misuse, and alteration of information that is collected from customers, TEACUPINASTORM has necessary physical, electronic, and managerial procedures in place.</p>

<p><span  class="fshead">Bandwidth Consumption</span><br />
TEACUPINASTORM provides ample amounts of bandwidth to is resellers. TEACUPINASTORM prohibits the establishing of accounts for the sole purpose of abusing its generous bandwidth limits. Such accounts will include downloadable software site, games, etc. Any such violations will be determine solely by TEACUPINASTORM and accounts in violation will promptly be deactivated.</p>

<p><span  class="fshead">Opt Out & Modifications</span><br />
Customers may opt out of receiving notices of new or upgraded products from TEACUPINASTORM and TEACUPINASTORM's partners by sending a request to privacy@teacupinastorm.com. However, customers may not opt out of receiving information from TEACUPINASTORM which is essential for maintaining or updating customers' accounts or system information. </p>

<p>All current customers may access and modify their personal information via their online personal control panel/account information page. </p>

<p>Domain name customers who have registered a domain name with TEACUPINASTORM and wish to change the Technical Contact from TEACUPINASTORM to another company, may log into their domain registration accounts on our website. It is important to note that customer domain name registration information is made publicly available in the registry of domain names. </p>

<p><span  class="fshead">Disclosure of customer information and communications</span><br />
TEACUPINASTORM will not otherwise disclose its customers' personal and account information unless it has reason to believe that disclosing such information is necessary to identify, make contact with, or bring legal action against someone who may be causing harm or interfering with the rights or property of TEACUPINASTORM, its customers, or others, or where TEACUPINASTORM has a good faith belief that the law requires such disclosure. </p>

<p>TEACUPINASTORM also will not, except for reasons stated below, disclose to third parties the contents of any electronic mail or other electronic communications that TEACUPINASTORM stores or transmits for its customers. The circumstances under which TEACUPINASTORM will disclose such electronic customer communications are when: </p>
<ul>
  <li>it is necessary in order to provide service to the customer; </li>
  <li>it is necessary to protect the legitimate interests of TEACUPINASTORM and its customers;</li>
  <li>it is required to cooperate with interception orders, warrants, or other legal process that TEACUPINASTORM determines in its sole discretion to be valid and enforceable; and</li>
  <li>it is necessary to provide to a law enforcement agency when the contents are inadvertently obtained by TEACUPINASTORM and appear to pertain to the commission of a crime.</li>
</ul>
<p>TEACUPINASTORM disclaims any intention to censor, edit or engage in ongoing review or surveillance of communications stored on or transmitted through its facilities by customers or others. TEACUPINASTORM will, however, review, delete or block access to communications that may harm TEACUPINASTORM, its customers or third parties. The grounds on which TEACUPINASTORM may take such action include, but are not limited to, actual or potential violations of TEACUPINASTORM's Acceptable Use Policy.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>281</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>privacy-policy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>compare plans</title>
		<link>http://gregs.tcias.co.uk/2002/12/13/compare-plans/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=282</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Below is a table providing you with a side-by-side comparison of all our hosting plans and the extensive feature list they offer.</p>
<p class="fr">Please note that all prices are in US $</p>
<table border="0" cellpadding="5" cellspacing="0">
<tr valign="top"><td colspan="6" class="fshead">Hosting plans comaprison table</td></tr>
<tr valign="top" class="fr">
  <td class="fbody">Name</td>
  <td>25</td>
  <td>50</td>
  <td>150</td>
  <td>250</td>
  <td>500</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Pricing</td>
  <td>$14.95</td>
  <td>$16.95</td>
  <td>$18.95</td>
  <td>$23.95</td>
  <td>$26.95</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Disk Storage Space</td>
  <td>25 MB</td>
  <td>50 MB</td>
  <td>150 MB</td>
  <td>250 MB</td>
  <td>500 MB</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Monthly Data Transfer in Megabytes</td>
  <td>5000</td>
  <td>8000</td>
  <td>12000</td>
  <td>16000</td>
  <td>20000</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">DS3 Connections backbone connection</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Secure Server</td>
  <td>NO</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Daily Backups</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Your Own Domain Name</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top"><td colspan="6" class="fshead">E-mail Options</td></tr>
<tr valign="top" class="fr">
  <td class="fbody">POP3 Email Accounts</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">smtp (send mail) i.e. outgoing mail server</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">"Catch-All" E-mail</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Email Forwarding</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Email Auto responders</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Mailing Lists </td>
  <td>YES - 10</td>
  <td>YES - 20</td>
  <td>YES - 30</td>
  <td>YES - 35</td>
  <td>YES - unlimited</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Email Manager</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">PGP Mail (encrypted email)</td>
  <td>NO</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top"><td colspan="6" class="fshead">Account Management Tools</td></tr>
<tr valign="top" class="fr">
  <td class="fbody">Virtual Control Panel</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">File Manager</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Extensive Online Documentation</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Mail Manager</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Archive Manager</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Online Billing History System</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Search Engine Submission Tool (submit to over 900 top search engines)</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Network Troubleshooter</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">SSH</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Password Protected Pages</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Resource Meter</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Detailed Site Statistics (Http-Analyze Site Statistics) *INCLUDES REFERRER STATS FREE*</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top"><td colspan="6" class="fshead">Web Site Design Options</td></tr>
<tr valign="top" class="fr">
  <td class="fbody">Microsoft® FrontPage®
2000 Extensions</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">FTP Account Access</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Page Counters</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">URL Forwarding</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
  <td>unlimited</td>
</tr>
<!-- <tr valign="top"><td colspan="6" class="fshead">Domain Name Options</td></tr>
<tr valign="top" class="fr">
  <td>Domain Registration for only $19.95</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr> -->
<tr valign="top"><td colspan="6" class="fshead">E-Commerce Options</td></tr>
<tr valign="top" class="fr">
  <td class="fbody">E-commerce Software Included</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Shopping Cart</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">SSL (Secure Server)</td>
  <td>NO</td>
  <td>NO</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Cybercash support</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Authorize.net support</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top"><td colspan="6" class="fshead">Programming Tools</td></tr>
<tr valign="top" class="fr">
  <td class="fbody">PHP</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Java Servlet Support (Java is supported with all our plans)</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Your own cgi-bin</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Free CGI Scripts (formmail.pl, hitcounter, discussion board, meta tag search, guestbook, web board)</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Form to Email</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Form to PGPmail</td>
  <td>NO</td>
  <td>NO</td>
  <td>NO</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Hosted SSL Scripts</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">MySQL Database</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Mime Types</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">ASP</td>
  <td>NO</td>
  <td>NO</td>
  <td>NO</td>
  <td>NO</td>
  <td>NO</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Anonymous FTP</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Access to Log Files</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top" class="fr">
  <td class="fbody">Server Side Includes</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
  <td>YES</td>
</tr>
<tr valign="top"><td colspan="6" class="fshead">Included with every plan</td></tr>
<tr valign="top"><td colspan="6">E-mail Form Generator </td></tr>
<tr valign="top"><td colspan="6">Graphical Site Statistics</td></tr>
<tr valign="top"><td colspan="6">Park & Point Domains</td></tr>
<tr valign="top"><td colspan="6">Online Support Manual</td></tr>
<tr valign="top"><td colspan="6">Password Protected Directories</td></tr>
<tr valign="top"><td colspan="6">Own CGI/Bin </td></tr>
<tr valign="top"><td colspan="6">Microsoft® FrontPage® 98/2000 Extensions</td></tr>
<tr valign="top"><td colspan="6">Search Engine Submission</td></tr>
<tr valign="top"><td colspan="6">Free CGI Scripts</td></tr>
<tr valign="top"><td colspan="6" class="fshead">Optional Add-Ons</td></tr>
<tr valign="top"><td colspan="6">Extra Disk Storage Space: 	<span  class="fr">$15/mo per extra 20 MB</span> </td></tr>
<tr valign="top"><td colspan="6">Additional Bandwidth: 		<span  class="fr">$7/mo -Extra 1GIGS</span></td></tr>
<tr valign="top"><td colspan="6">Additional Email: 		<span  class="fr">$30/mo for 20 additional Email - 3 month minimum accts.</span></td></tr>
</table>
<p><span class="fshead">Need more information?</span><br />
Do you have any further questions? If so why <a href="contact_us.php?type=plan25" title="Contact us">not drop us a line</a> and we'll endeavour to answer any question you may have.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date>2002-12-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>compare-plans</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>about this site</title>
		<link>http://gregs.tcias.co.uk/2002/11/20/about-this-site/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=324</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So what's all this about then? Well quite frankly I do a lot of stuff everyday, some of it interesting, most of it mundane, but it always boils down to figuring out problems and coming up with solutions. This is all good, however I struggle to remember all the things I learn, figure out or quite simply find useful. I'd much rather focus on solving problems or remembering my beloved's birthday. And that's why I built this site, it does exactly as the tag line indicates helps me remember what I figure out, now all I need to do is put up the stuff that I have figured out over the years.</p>
<p>There a few other reasons behind starting this website. One was to build a CMS and the other was to learn more about PHP. Then there was my interest in WAP and iTV and hence I anted to port the content to those platforms as well. So here we are after 6 months of development the CMS is complete and the site designed for the web. The look and feel of this site went through many many iterations before I finally settled on a minimalist approach. At the end of the day, what swung my design decisions was my needs, and that was to present the information in a clear and simple manner. Another point that was important to me was to make the site standards orientated and I think I have achieved this. I know that some of the older content taken from previous sites is not compliant as yet, but I am working my way through it (and boy is some of the content rough) and in the none to distant future it should be ready. However do feel free to drop me a line if you spot anything that is amiss.</p>
<p>So what's next? Getting the WAP side of things working, the look at making the site iTV enables using the Liberate platform. Also after receiving some positive feedback from others I have decided to make the CMS available to others, so I am currently busy writing documentation, install procedures and setting up a demo site for it. FInally I will revisit these pages to make full use of CSS for the layout of these and finally get rid of tables.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>324</wp:post_id>
		<wp:post_date>2002-11-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about-this-site</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>More gems in my bag</title>
		<link>http://gregs.tcias.co.uk/2003/03/11/more-gems-in-my-bag/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=258</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A whole new collection of interesting tid bits sampled from my Inbox and saved here for posterity:</p>
<ol>
<li>"Bob Allen told me I was nuts". First up the a look back at the heady days of the dot-com boom and the story of Netscape, from NewsFactor and can be seen here: <a href="http://www.NewsFactor.com/perl/story/20961.html">http://www.NewsFactor.com/perl/story/20961.html</a>. An amusing look at the way the internet was in during the it's early years and it's hayday during the boom. And weren't those days just fun, brimming over with unbridled enthusiasm...</li>

<li>The jewel in the crown this week belongs to RockStar Games for putting the original GTA up for free download. On ya guys!! Grab a copy here: <a href="http://63.236.94.8/rockstar/classics/index.php">http://63.236.94.8/rockstar/classics/index.php</a></li>

<li>in last weeks gem bag I pointed to a site that allowed you encrypt your mailto address in JavaScript. However <a href="http://dreamweaverfever.com/">Drew McLellan</a> (of <a href="http://www.alistapart.com/issues/154/">Flash Satay fame</a> (or you can <a href="http://www.macromedia.com/devnet/mx/dreamweaver/articles/flash_satay.html">see it here as well</a>) also had <a href="http://www.wbwip.com/wbw/emailencoder.html">this solution to offer</a>, though it does not look as solid as the one from my previous gem bag, as it make use of special HTML characters. I guess the point to take away from this discussion is, that just because bots can't do read the address now, does not mean they won't in the none to distant future. <!-- Incidently here's how one of my old work addresses would look like:<br />
<pre>&#103;&#114;&#101;&#103;&#115;&#064;&#116;&#101;&#097;&#099;&#117;&#112;
&#105;&#110;&#097;&#115;&#116;&#111;&#114;&#109;&#046;&#099;&#111;&#109;</pre> --></li>

<li>speaking of special HTML characters, while reading through the related information above I stumbled across <a href="http://www.trans4mind.com/personal_development/HTMLGuide/specialCharacters2.htm">this link to list</a> of special HTML characters</li>

<li>this is an older message, but I remembered it today and thought I'd add it here. It's a bit long to read through, but <a href="http://www.k-1.com/Orwell/pol.htm">this essay of George Orwell's about Politics and the English Language</a> is well worth a read. It makes a strong case for keeping your English simple and straightforward, I don't think many politicians or indeed lawyers have read this essay for quite some time.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>258</wp:post_id>
		<wp:post_date>2003-03-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-gems-in-my-bag</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Conditional loops</title>
		<link>http://gregs.tcias.co.uk/2003/03/12/conditional-loops/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=259</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I learned something new a couple of days back! :) I had read about this in the Cold Fusion documentation on CFLOOP previously but never really come across a situation where I really needed to use the attribute CONDITION and subsequently never really thought about it. However yesterday I needed to create a do-while loop that on every loop re-evaluated the length of a list. One option was to use CFSCRIPT but I was having some difficulty getting that value to be evaluated properly at each loop, but then I stumbled across CFLOOP and it's condition attribute. Here is the loop in all it's glory.</p>

<p><em>
&lt;cfset local.selected_items = "" /&gt;<br />
&lt;cfloop condition="#ListLen(local.selected_items)# LTE 2"&gt;<br />
 &lt;cfset local.random_seed = RandRange(1, 4) /&gt;<br />
 &lt;cfif (ListValueCount(local.selected_items, local.random_seed) lt 2)&gt;<br />
   &lt;cfset local.selected_items = ListAppend(local.selected_items, local.random_seed) /&gt;<br />
 &lt;/cfif&gt;<br />
&lt;/cfloop&gt;</em></p>

<p>What I needed to do what was evaluate a list of items and make sure it's length was less than a specified value. If the condition was true then make sure that no values in the list were triplicated (duplicated was acceptable) and add the random value to the aforementioned list if this was true. Then the loop should continue and re-evaluate the length of the list. For some reason I couldn't get this to work in CFSCRIPT. So making use of CFLOOP to perform a do-while loop and dynamically evaluate a condition is a good alternative.</p>

<p>Funny how sometimes you are just not satisfied with one solution and so I revisited the do-while CFSCRIPT solution I was working on a few days later. Now CFLOOP with the condition attribute properly evaluates the condition at each loop, so why wouldn't CFSCRIPT? Well as it turns out the solution is very simple: use the evaluate function around the condition you are checking against. This will force the dynamic variable in the condition to be re-evaluated for each loop and now the solution:</p>

<p><em>&lt;cfscript&gt;<br />
 local.selected_items = "";<br />
 do {<br />
  local.random_seed = RandRange(1, 4);<br />
  if (ListValueCount(local.selected_items, local.random_seed) lt 2) {<br />
   local.selected_items = ListAppend(local.selected_items, local.random_seed);<br />
  }<br />
 } while (evaluate(ListLen(local.selected_items)) lte 2);<br />
 writeoutput(local.selected_items);<br />
&lt;/cfscript&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date>2003-03-12 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>conditional-loops</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CSS image rollovers</title>
		<link>http://gregs.tcias.co.uk/2003/03/12/css-image-rollovers/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=260</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Usually when I build a page that uses image rollovers I use a small and simple Macromedia generated script, that include in my page as an external JavaScript file called "_roll_over.js". The contents of that file is as follows:</p>
<p><em>&lt;!--<br />
function MM_findObj(n, d) { //v3.0<br />
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))&gt;0&&parent.frames.length) {<br />
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}<br />
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i&lt;d.forms.length;i++) x=d.forms[i][n];<br />
  for(i=0;!x&&d.layers&&i&lt;d.layers.length;i++) x=MM_findObj(n,d.layers[i].document); return x;<br />
}<br />
function MM_swapImage() { //v3.0<br />
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i&lt;(a.length-2);i+=3)<br />
   //alert(MM_findObj(a[i]));<br />
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}<br />
}<br />
function MM_swapImgRestore() { //v3.0<br />
  var i,x,a=document.MM_sr; for(i=0;a&&i&lt;a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;<br />
}<br />
<br />
function MM_preloadImages() { //v3.0<br />
 var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();<br />
   var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i&lt;a.length; i++)<br />
   if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}<br />
}<br />
<br />
//--&gt;</em></p>
<p>Next I'd proceed to include the file in the page, pre-load the images required and set the appropriate onMouseOver event for the element that requires a rollover action. As an example here is the sample source of the Sunbeam site:</p>
<p><em>&lt;html&gt;<br />
&lt;head&gt;<br />
	&lt;title&gt;Site name &gt;&gt; Home&lt;/title&gt;<br />
<br />
  &lt;link rel="stylesheet" type="text/css" href="/css/default.css"&gt;<br />
  &lt;script language="JavaScript1.2" type="text/javascript" src="/js/_roll_over.js"&gt;&lt;/script&gt;<br />
&lt;/head&gt;<br />
<br />
&lt;body topmargin="0" leftmargin="0" marginheight="0" marginwidth="0" class="ban_data" onLoad="return MM_preloadImages('/images/sb_home_nav_prod_o.gif', '/images/sb_home_nav_serv_o.gif', '/images/sb_home_nav_about_o.gif', '/images/sb_home_nav_media_o.gif');"&gt;<br />
<br />
&lt;a href="/products/index.cfm?home_id=3" onMouseOut="MM_swapImgRestore();" onMouseOver="MM_swapImage('SB_nav_1','','/images/sb_home_nav_prod_o.gif','SB_txt','','/images/sb_home_txt_prod.gif',1);"&gt;&lt;img name="SB_nav_1" src="/images/sb_home_nav_prod.gif" width="186" height="27" alt="Product centre" border="0" /&gt;&lt;/a&gt;<br />
&lt;/body&gt;<br />
&lt;/html&gt;</em></p>
<p>And this set up worked rather well, as it,  as far as I am aware, works on all browsers. However times are a changing and just recently I noticed that sites were adopting a style sheet based roll over mechanism. Totally makes sense, and hence I wanted to know what made it happen. So off I went and pulled apart <a href="http://www.zeldman.com">Zeldman's homepage</a>. And below is a code sample page making use of the CSS rollover technique</p>
<p><em>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br />
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;<br />
&lt;head&gt;<br />
  &lt;title&gt;Css rollover&lt;/title&gt;<br />
  &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /&gt;<br />
  &lt;meta name="DESCRIPTION" content="" /&gt;<br />
  &lt;meta name="KEYWORDS" content="" /&gt;<br />
<br />
  &lt;!-- style sheet--&gt;<br />
  &lt;style&gt;<br />
  &lt;!--<br />
   /* Totally ripped from http://www.zeldman.com/ <br />
    even the comments :)<br />
   */ <br />
   .rb {<br />
    /* Opera uses this background for the rollover effect. */<br />
  	 background: url(i/categories_btn_o.gif) no-repeat 1px;<br />
   }<br />
   #ic {<br />
   	display: block;<br />
   	padding: 0;<br />
   	border: 1px solid #fff;<br />
   	background: url(i/categories_btn.gif) no-repeat 1px; /* start hiding from macie\*/<br />
   	background-position: 0px; /* stop hiding */<br />
   	width: 100px;<br />
   	height: 14px;<br />
   	voice-family: "\"}\"";   /* Need we explain? */<br />
   	voice-family: inherit;<br />
   	width: 100px;<br />
   	height: 14px; /* Actual values to overlap borders */<br />
   	}<br />
    html&gt;body #ic {<br />
   	width: 100px;<br />
   	height: 14px; /* Be nice to Opera */<br />
  	}<br />
   #ic {<br />
  	 background-image: url(i/categories_btn.gif);<br />
  	}<br />
   a#ic:hover {<br />
    background-image: url(i/categories_btn_o.gif);<br />
    border: 1px solid #333;<br />
   }<br />
   .alt {<br />
   	display: none;<br />
   }<br />
   --&gt;<br />
  &lt;/style&gt;<br />
&lt;/head&gt;<br />
<br />
&lt;body&gt;<br />
&lt;div id="rb"&gt;&lt;a id="ic" href="" title="Categories"&gt;&lt;span<br /> class="alt"&gt;Categories&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;<br />
&lt;/body&gt;<br />
&lt;/html&gt;</em></p>
<p>As stated in the teaser I am not too sure what is going here, but here is what I do know:</p>
<ul>
 <li>the class <strong>rb</strong> defined in the style sheet for the div tag uses the background image set here for the roll over (good comments eh??)</li>
 <li>Now the id <strong>ic</strong> is set twice. Hmm?? The first instance helps define borders, border colours and size as well as setting the default background for this <em>id</em> to the my image.</li>
 <li>And then they make use of the box model hack for IE 5 and above, so that the border displays properly.</li>
 <li>No idea what html&gt;body#ic does, possibly some kind of inheritance?</li>
 <li>However I know that a#ic:hover, is where the roll over action takes place and is very similar to normal roll over behaviour. You just specify the image to display when the mouse hovers, and change the background colour</li>
 <li>The <strong>alt</strong> class is there for browsers that cannot render Style Sheets properly. This would result in nothing being displayed at all, but since older browsers don't understand style sheets, at least the span element will appear, thus giving the user the ability to still surf the site.</li>
</ul>
<p>I guess there is still a lot to learn about style sheets, but it's cool and web standards compliant. Just in case you were wondering why bothering trying to figure it out in the first place.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>260</wp:post_id>
		<wp:post_date>2003-03-12 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css-image-rollovers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Disabling the PC speaker beep</title>
		<link>http://gregs.tcias.co.uk/2003/03/23/disabling-the-pc-speaker-beep/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=261</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It's all fair enough for IS&amp;T policies and strategies to reduce the levels of distraction by not allowing PCs to play music, but I don't think there is anything quite as distracting as the pesky speaker beep.</p>

<p>So a quick search on the Internet revealed the solution to disabling that alert. Bring up your system properties (right-click on my computer), select the hardware tab and click the device manager button. Next you'll need to select the view menu option and select "Show hidden devices". Now look at the list of devices and locate Non-Plug and play drivers. Expand it and then right click on the one called "Beep", from the pop up menu select disable. All you need to do now is reboot your computer and no longer shall you have to cringe at the sound of the dreaded PC speaker beep.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2003-03-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>disabling-the-pc-speaker-beep</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Another week, another gem bag</title>
		<link>http://gregs.tcias.co.uk/2003/03/23/another-week-another-gem-bag/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=262</guid>
		<description></description>
		<content:encoded><![CDATA[p>And yet another week has flown by and yet another deluge of items in my inbox</p>
<ol>
  <li>a whole raft of Google information today. First off a interesting look at <a href="http://www.fastcompany.com/magazine/69/google.html">Google and it's philosophy</a>, is up at <a href="http://www.fastcompany.com/">FastCompany</a>. Which led me to <a href="http://www.norvig.com/">this site</a>. Norvig is the director of Search Quality @ Google, just interesting to see some of the people behind this great search engine. Then there was <a href="http://searchenginewatch.com/searchday/03/sd0317-prstanford.html">this on SearchEngine Watch</a>. Mind boggling, I wish I could be more descriptive, but erm it just didn't make sense to me...</li>
  <li>and now to a book review on... Google (specifically hacks and search tips), courtesy of slashdot! <a href="http://books.slashdot.org/article.pl?sid=03/03/11/1448253&amp;mode=thread&tid=95">Read the review</a> at <a href="http://www.slashdot.org/">Slashdot</a> or <a href="http://www.amazon.com/exec/obidos/ASIN/0596004478/qid=1048040275/teacupinastor-20">find the book at Amazon.com</a>. This sparked my interest in the <a href="http://www.google.com/apis/">Google API</a>, might well have to have a tinker some day.</li>
  <li>Enough with Google time for something different: looking for version 1.0 of Internet Explorer? God knows why but you can <a href="http://www.oldversion.com/">find it here</a></li>
  <li>As a web developer, I am quite interested in how other sites review their implementations and the conclusions they draw from these reviews. Hence take a look at the <a href="http://www.macromedia.com/special/progress_report/beta1/">"Macromedia.com Progess report: Beta 1"</a>. And here are the <a href="http://www.macromedia.com/special/progress_report/">survey results for Beta 2</a>.</li>
  <li>Hot on the heels of this topic Douglas Bowman, has written a piece on <a href="http://www.stopdesign.com/log/default.asp?date=20030317">"Designing in Public"</a>. The way to go? A break from the norm, where every site had to be perfect before launch (and how often did that happen??), maybe this is a viable way forward. Small steps... always a good approach as far as I am concerned.</li>
  <li>Some SSL stuff. It was recently revealed that SSL was vulnerable and not the be all and end all of secure communications [well nothing ever is]. <a href="http://www.counterpane.com/crypto-gram-0303.html#1">At this location</a> you can have read of the truth behind that statement. Interesting to note that hackers wouldn't bother eavesdropping on a communication between a browser and a server (with or without SSL), but rather go for the database that stores the sensitive information. Why gather information one by one, when you can get it in bulk...</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date>2003-03-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>another-week-another-gem-bag</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Setting up favelets</title>
		<link>http://gregs.tcias.co.uk/2003/03/24/setting-up-favelets/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=263</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I first came across the term favelets when I started reading <a href="http://www.zeldman.com/">Zeldman's web site</a>. At first I did what I often do, and just ignored it, but as I spent more time on the site I saw quite a few references to it and especially on some of the sites that were mentioned in his columns. Mainly <a href="http://tantek.com/favelets/">Tantek's Log</a> seemed to have an abundance of them.</p>
<p>So what are they? Well they are a small applications that can reside in your favourites/bookmarks or on your browser toolbar. And what do they do? Well quite a lot, anything from displaying the div structure of a document to helping validate your HTML code. And all this from within the window of your browser.</p>
<p>Ah!! So how do I use them? Well as indicated you can add them to your toolbar or set of bookmarks, and by clicking on the selected favelet you execute the mini application. Here is what I did (all based on <a href="http://www.accessify.com/tools-and-wizards/how-to-use-favelets.asp">How to use favelets</a>, which demonstrates how to set up favelets for IE.) for Mozilla. First things first, right click on your toolbar and select new folder from the pop up. Then open up the bookmarks tab under Personal Toolbar Folder and expand your newly created favelets folder.</p>
<p>OK now you are ready to add favelets to your browser and you do it by just selecting the favelet you are after in the page and dragging it to your favelets folder. Pretty easy. Now to use them simply go to the page you would like to run the favelet against. Once the page has loaded, click on that favelet in your favelets folder. The app should execute and the page will render differently displaying whatever it is the favelet was supposed to do.</p>
<p>For example one of the favelets I particularly like is the <a href="http://www.accessify.com/tools-and-wizards/accessibility-checking-favelets.asp">Show and label divs with ids</a> favelet which gives you an on the fly view of the page structure. Obviously there are many, many more and I am only just discovering these, if you come across any useful ones why not let me know?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>263</wp:post_id>
		<wp:post_date>2003-03-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-favelets</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>The weekly e-mail deluge</title>
		<link>http://gregs.tcias.co.uk/2003/04/01/the-weekly-e-mail-deluge/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=283</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This week in my inbox:</p>
<ol>
  <li>The first thing I'd like to highlight is <a href="http://www.websiteoptimization.com/services/analyze/" title="web site optimisation tools">this new nifty tool</a>. Though not perfect this little application analyses the performance of your code. Love it!!! I ran the latest proof of concept for a client of ours through the analyser and it came up trumps (see CSS and xHTML really does work:))</li>
  <li>Not so much an item in my inbox as something I found while trying to solve a problem for the aforementioned proof of concept. Instructions and code on how to <a href="http://www.webweaver.org/dan/css/corners/with_borders.html" title="CSS rounded corners">create a rounded corner effect for boxes using images and CSS</a></li>
  <li>And an interview with the person behind the <a href="http://devedge.netscape.com/viewsource/2003/espn-interview/01/" title="An Interview With Mike Davidson of ESPN (Part 1)">ESPN standards compliant re-design</a>. Part two out this Friday (28/3).</li>
  <li><a href="http://devedge.netscape.com/viewsource/2003/why-web-standards/" title="Why web standards">Need to make a business case for CSS and xHTML</a>, Netscape Dev Edge has an article, that should give you an idea of how to present it.
Here are my highlights:
  <ul>
    <li>less is more, reduced page weight, saves bandwidth, and hence loads faster</li>
    <li>forward compatible, support the devices of tomorrow</li>
    <li>by separating design from content and mark up, it's easier to maintain a site wide consistency and make changes to these if needed</li>
    <li>accessibility, in many countries for government agencies (US, UK, Canada), and --in some countries like Australia-- for every organization, it is mandatory for sites to be accessible. Coding with standards makes it easier to achieve this</li>
  </ul>
  </li>
  <li>Related to the above article is <a href="http://www.w3.org/QA/2002/07/WebAgency-Requirements" title="Web agency requirements">another one</a> on the <a hrer="http://www.w3.org/" title="W3C">w3c site</a>, which again helps state the business case for standards, this time from a development perspective</li>
  <li>I thought I had put <a href="http://www.jjg.net/ia/visvocab/" title="Visio vocabulary">this link up</a>, but somehow it must have slipped through. Some info on IA and stencils for Visio (amongst others), their meaning, etc... Very useful. He also has put up this <a href="http://www.jjg.net/ia/visvocab/garrett_ia_cheatsheet.pdf" title="Garret's IA cheat sheet">handy cheat sheet</a>, with a brief explanation of all of the shapes.</li>
  <li><a href="http://www.browsercam.com/default.aspx" title="Browser Cam">BrowserCam</a>, this is another web developers dream tool. Bypasses the need for an extensive and expensive testing environment, simply sign up (there is a free trial) and then test your web design/development against a multitude of browsers running on different OS flavours. And the pricing seems pretty reasonable as well.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>283</wp:post_id>
		<wp:post_date>2003-04-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-weekly-e-mail-deluge</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Forcing a download</title>
		<link>http://gregs.tcias.co.uk/2003/04/03/forcing-a-download/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=364</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Most browser these are cleaver enough to determine the mime type of documents being served up by the web server and then fire up the application within the browser window. Every now and then though, this is not the desired effect. And doubly so when you want to a little processing before serving up the required document (like say a download counter). This scenario was causing the served up document to occasionally not render properly (read display complete and utter gobbledegook). Displayed below is a small code snippet that will show you how you can force the browser to prompt the user for download, in this case a PDF document.</p>

<p><em>&lt;cfset local.file = "the full path to your file goes here" /&gt;<br />
&lt;cfheader name="Content-Disposition" value="attachment; filename=#GetFileFromPath(local.file)#"&gt;<br />
&lt;cfcontent type="application/pdf" file="#local.file#" /&gt;</em></p>

<p>The first and third line would normally be used to serve a file of a different content type. This time round it's a PDF document. The trick to forcing the browser to prompt the user for action lies in the &lt;cfheader&gt; tag, namely by specifying an attribute <strong>value</strong> and giving it a value of <em>attachment</em>, separated by a semi colon (;) and followed by the full path and file name again. Et Voila, load the page and dialogue pops up. Omit it and the &lt;cfheader&gt; tag and the PDF file will display in-line.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>364</wp:post_id>
		<wp:post_date>2003-04-03 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>forcing-a-download</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Extending sessions</title>
		<link>http://gregs.tcias.co.uk/2003/04/03/extending-sessions/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=384</guid>
		<description></description>
		<content:encoded><![CDATA[<p>There are always moments when a user leaves his browser window open, goes off does something else, comes back and bang the information he was carefully entering has disappeared. A truly annoying sequence of events and due to the web's stateless nature not too uncommon. Granted such a situation happens rarely, but sometimes users have to read quite lengthy documents in order to make a decision, and depending on your reading speed this could leave you facing a similar situation. SO here is the hack.</p>
<p>By making use of a 1 px high, by 1 px wide &lt;iframe&gt; that is embedded in the template that the user is looking at and which calls a page that is instructed to refresh at a set interval you can fake a user interacting with the application for days on end. Without further ado the code, first the template (aptly called <em>iframe.cfm</em>) with the &lt;iframe&gt;.</p>
<p><em>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;<br />
<br />
&lt;html&gt;<br />
&lt;head&gt;<br />
	&lt;title&gt;Untitled&lt;/title&gt;<br />
&lt;/head&gt;<br />

&lt;body&gt;<br />
&lt;iframe src="refresh.cfm" name="get_time" height="55" width="170" scrolling="No" frameborder="0"&gt;&lt;/iframe&gt;<br />
&lt;p&gt;The content can appear here&lt;/p&gt;<br />
<br />
&lt;/body&gt;<br />
&lt;/html&gt;</em></p>
<p>And now the template that refreshes every 60 seconds (<em>refresh.cfm</em>)</p>
<p><em>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;<br />
<br />
&lt;html&gt;<br />
&lt;head&gt;<br />
	&lt;title&gt;Untitled&lt;/title&gt;<br />
  &lt;META HTTP-EQUIV="REFRESH" CONTENT="60;URL=???"&gt;<br />
&lt;/head&gt;<br />
<br />
&lt;body&gt;<br />
&lt;cfoutput&gt;#now()#&lt;/cfoutput&gt;<br />
&lt;/body&gt;<br />
&lt;/html&gt;</em></p>
<p>Now the real trick to this working is the &lt;META&gt; tag in the header section of the document, which refreshes, in this case every seconds (CONTENT="<strong>60</strong>;URL=???"). If you were to increase the size of the &lt;iframe&gt; you'd be able to see that the time stamp generated and output in <em>refresh.cfm</em> changes every minute, thus proving that something happens every seconds, alternatively just leave your browser window open overnight on the application page you are testing this for and see what happens the next day.</p>
<p>One small caveat is that not all browsers, if memory serves me right support the &lt;META HTTP-EQUIV="REFRESH" CONTENT="60;URL=???"&gt; so be aware of this...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>384</wp:post_id>
		<wp:post_date>2003-04-03 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>extending-sessions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Cron jobs and PHP</title>
		<link>http://gregs.tcias.co.uk/2003/04/11/cron-jobs-and-php/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=385</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have been wanting to schedule a few tasks on my hosted site that call PHP scripts and "do stuff" for ages, but just never found the time to look into it. Finally the opportunity arose to look into it. As with all things, I started by scouring the Internet here is the resources I came across that purely refers to PHP and the command line:</p>

<ol>
  <li>http://www.phpfreaks.com/phpmanual/page/features.commandline.html</li>
</ol>

<p>So the idea was all along to write a bunch of scripts that would be executed say on a daily basis using the cron job. Now my initial impression was that you could only call scripts from the command line. However then I also read the CPanel documentation in a little more depth and realised that I can call php pages via the GET command... So I went ahead and wrote this little script that would send a message out to me (which is one of the examples from the PHP documentation for using the <strong>mail()</strong> function).</p>

<p><em>&lt;?php<br />
$myname = "My name";<br />
$myemail = "my@emailaddress.com";<br />
<br />
$contactname = "The person to be contacted";<br />
$contactemail = "contact@emailaddress.com";<br />
<br />
$message = "hello from happy me";<br />
$subject = "A mail not refused by Hotmail";<br />
<br />
$headers .= "MIME-Version: 1.0\r\n";<br />
$headers .= "Content-type: text/html; charset=iso-8859-1\r\n";<br />
$headers .= "From: ".$myname." <".$myemail.">\r\n";<br />
$headers .= "To: ".$contactname." <".$contactemail.">\r\n";<br />
$headers .= "Reply-To: ".$myname." <$myreplyemail>\r\n";<br />
$headers .= "X-Priority: 1\r\n";<br />
$headers .= "X-MSMail-Priority: High\r\n";<br />
$headers .= "X-Mailer: Just My Server";<br />
<br />
mail($contactemail, $subject, $message, $headers);<br />
?&gt;</em></p>

<p>By calling the url I tested that the page worked properly and in due time I received a message. So now it was time get the CRON job up and running. To this end I entered the following command into the "command to run" field of CPanel: <strong>GET http://www.teacupinastorm.com/clients/sample_mail.php</strong>. I set an interval of five minutes for the job, so in theory I would receive a message every five minutes. I submitted it and all that was left for me to do was wait patiently for a message to wing it's way into my inbox. While I was waiting I did  a little more research which is listed below. Having said that this solution worked a treat and the message landed in my inbox!! Hurrah!</p>

<p>The documentation for setting up Cron jobs in CPanel can be found here: http://www.cpanel.net/docs/cp/cronJobs.htm</p>
<p>And RedHat has some additional information on CRON jobs here: http://www.redhat.com/support/resources/tips/cron/cron.html</p>

<p>And below is an alternative suggestion for PHP and Cron:</p>
<p>http://www.htmlcenter.com/tutorials/tutorials.cfm/155/PHP/<br />
This tutorial makes use of PHP and Lynx to call a page (if you are using PHP as an Apache module) and the cron command looks something like this:<br />
<em>* * * * * lynx -dump http://www.somedomain.com/cron.php</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>385</wp:post_id>
		<wp:post_date>2003-04-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cron-jobs-and-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Last weeks mail bag this week</title>
		<link>http://gregs.tcias.co.uk/2003/04/14/last-weeks-mail-bag-this-week/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=386</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last week's gems this week</p>

<ol>
	<li>Like most people who have seen/use/use the validator buttons, you can't but grimace at their, erm , well, ugliness. Here though are some tasteful buttons for xHTML and CSS compliance display. So much nicer than the W3c ones... <a href="http://www.antipixel.com/blog/archives/2002/10/22/steal_these_buttons.html">Go get them</a></li>
	<li>Part 2 of the <a href="http://devedge.netscape.com/viewsource/2003/espn-interview/02/">interview with Mike Davidson</a> of ESPN</li>
	<li>Over the last couple of weeks I have contemplating the purchase of a laptop. But with so many different options out there and technology having moved on leaps and bounds since I last forked out some case for hardware. It's time to do some serious research, and first up what's the go with UXGA?? Well <a href="http://whatis.techtarget.com/definition/0,,sid9_gci211966,00.html">here is a primer for all those monitor/display related specs</a> (ta Neil).</li>
	<li><a href="http://www.diveintomark.org/archives/2003/03/24/pure_css_tabs.html">Here</a> is a link to CSS tab based lists and how to implement them, but this chap also happens to have a whole heap of other related CSS info, well worth the browse.</li>
	<li>One of the main reasons for developing web sites with web standards in mind
    is so that the pages can be accessible by multiple devices, not just browsers,
    but also PDAs. I have a Palm and I use AvantGo, so I thought I'd look up their
    resources, after all maybe one day I'll find the time to create an AvantGo
    version my site:
    <ul>
			<li><a href="http://www.avantgo.com/support/developer/external.html">Avant Go</a></li>
			<li><a href="http://hotwired.lycos.com/webmonkey/99/20/index2a.html?tw=design">Hotwired</a></li>
		</ul>
	</li>
	<li><a href="http://admin-au.server-secure.com/bestpractices/sql/index.html">This link</a> has some useful tips and hints for designing your database for optimum performance. On that page I also <a href="http://www.sql-server-performance.com/">found a link to</a> a site that is dedicated to MS SQL server performance, which had some more useful resources.</li>
	<li>Over at <a href="http://hivelogic.com/304.html">Hivelogic</a> there is a
    nifty little way to force browsers to reload background images in style sheets.
    By default browsers seem to cache images defined in style sheets, but by pointing
    the url in the style sheet to a link similar to this <strong>background-image:
    url(http://example.com/rotate.php?id=e74b9c816a5303cf337dcfb63f7d86e1);</strong>.
    The browser is prompted to reload the image because a) it's a link, but b)
    it's a template that's being called. Not only that though as you can see from
    this example it's pointing to a PHP template so could even code it in such
    a manner that it rotates the background image. Have a read!!</li>
	<li>I recently wrote a little item on favelets and here is <a href="http://centricle.com/archive/2003/04/updated-ruler">a pretty cool one</a> that reads the x and y co-ordinates of your mouse (and displays them on screen), as well as allowing you to draw a marquee and giving you the exact box dimensions.</li>
	<li>Having recently completed and RDF come RSS feed generator for my CMS I could
    have <a href="http://searchenginewatch.com/sereport/03/04-rss-making.htmlwell">benefited
    from this useful link</a>. A real in depth tutorial for building RSS feeds.</li>
	<li>Digital web is carrying a <a href="http://www.digital-web.com/tutorials/tutorial_2003-04.shtml">tutorial on designing logos</a>, also pretty cool.</li>
	<li>Some Cold Fusion resources: an extensive and detailed explanation of <a href="http://www.systemanage.com/presentations/udf.pdf">using UDFs</a> (User Defined Functions) in CF 5.</li>
	<li><a href="http://www.stcsig.org/id/03conferences.html">Found this page</a>, which contains a list of conferences on User Interface design, while I was reading up on how to <a href="http://www.uiweb.com/issues/issue24.htm">get the most out of conferences</a>.</li>
	<li>Just finished reading the interview on Meet the Makers.com with Steve Champeon
    (the new leader of WaSP), and I have to say I thoroughly enjoyed it. <a href="http://www.meet-the-makers.com/conversations/champeon/1/">Have
    a read</a>. In this interview he also refereed to this site, <a href="http://www.theobvious.com/">Stating
    the Obvious</a>, which at a glance seemed pretty good, as it's on a topic
    that interests me. Focusing on thinking in a critical manner and also formalising
    these thoughts by writing them down.</li>
	<li><a href="http://www.alistapart.com/stories/readspec/">How to read a W3c
    specification</a> is a really good explanation on <a href="http://www.alistapart.com/">A
    List Apart</a> about w3c specifications, their intended audience, how to read
    these and what you can take away from them. </li>
	<li>And now a set of links I found while working on the <a href="http://www.reach-conferecing.com">Reach
    Conferencing</a> project, accumulated over the last month or so, that have
    me helped understand, implement solutions and apply work arounds to a number
    of CSS problems: <a href="http://www.xs4all.nl/~ppk/css2tests/">This has an
    interesting analysis of the current browsers and their implementation of CSS</a>.
    This also makes for a slightly demoralising read, as it shows quite clearly
    all of the deficiencies still out there. <a href="http://gallery.theopalgroup.com/selectoracle/">A
    tool that translates CSS selectors into plain English</a>.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>386</wp:post_id>
		<wp:post_date>2003-04-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>last-weeks-mail-bag-this-week</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Cold fusion 5 - Verity 2K</title>
		<link>http://gregs.tcias.co.uk/2003/04/22/cold-fusion-5-verity-2k/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=391</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As of CF5.0, the engine shipped with the application server is Verity 2K. By default this engine is not enabled and thus the application server still makes use of the VDK (Verity Developer Kit).</p>

<p>To improve performance and take advantage of it?s ability to index more document types (such as PDFs) it is highly recommended to switch to Verity 2K mode. However this is services is not enabled and requires manual configuration and starting (read edit a .ini file and start the service).</p>

<p>Some limitations of Verity are:</p>
<ul>
  <li>Enterprise level restricted to searching 250,000 documents, Pro has half that capacity.</li>
  <li>Collections need to be manually specified in the .ini file.</li>
  <li>Manual start of the server (whn not run as a service, still needs to be initialised manually though to run as a service)</li>
  <li>Restricted to interact with only 1 K2server (need to upgrade to make use of the broker service)</li>
</ul>

<p>So step 1 is to find the k2server.ini file and edit it:</p>

<p>Location of k2server.ini file = c:\cfusion\verity\<os>\bin\, even though the documentation would indicate that it's located in c:\cfusion\bin - this is not the case.</p>

<p>It's default settings are:</p>

<p><em>## portNo: TCP port number for client connections.<br />
portNo=9901<br />
<br />
## Each Collection section controls each collection<br />
## and search service configured for the server<br />
##<br />
## Collection Path Examples:<br />
## Assume there is the collection called "myCollection"<br />
## created by ColdFusion.<br />
##<br />
## The following [coll-0] and [coll-1] collection sections<br />
## register the collections created by ColdFusion.<br />
## <br />
## The "collAlias" entry is the collection alias name<br />
## which is the collection name used by CFSEARCH CFML tag.<br />
## (i.e. "myCollection_file" and "myCollection_custom")<br />
##<br />
## Make sure that the CFSEARCH tag parameter "external" is set to "No"<br />
## and that the collection alias name is unique and not the same<br />
## as any existing collection names managed by ColdFusion.<br />
##<br />
<br />
##[Coll-0]<br />
##collPath=c:\cfusion\verity\collections\mycollection\file<br />
##collAlias=myCollection_file<br />
##topicSet=<br />
##knowledgeBase=<br />
##onLine=2<br />
<br />
##[Coll-1]<br />
##collPath=c:\cfusion\verity\collections\mycollection\custom<br />
##collAlias=myCollection_custom<br />
##topicSet=<br />
##knowledgeBase=<br />
##onLine=2</em></p>

<p>The only thing I changed for my local test was to create a collection. This was going to be aptly named: myCollection</p>

<p><em>[Coll-0]<br />
collPath=c:\cfusion\verity\collections\myCollection<br />
collAlias=myCollection<br />
topicSet=<br />
knowledgeBase=<br />
onLine=2</em></p>

<p>Since there were no instructions on whether or not to create the folders I referenced here I didn't do it and proceeded to start the Verity 2k server. Again the documentation is slightly off for Windows as the executable for my installation was located in the same folder as my .ini file. So go to the command prompt and type in the following command:</p>

<p><em>2kserver iniFile 2kserver.ini</em></p>

<p>Now I am not too keen on manually starting processes, so I decided to make use of service configuration option.</p>

<p><em>k2server -iniFile k2server.ini -ntService 1</em></p>

<p>And this is the output to be displayed</p>

<p><em>K2SERVER - Verity, Inc. Version 2.20pr6<br />
<br />
k2server Created<br />
Starting k2server Now...<br />
k2server Started</em></p>

<p>Now of course it's easy to stop and start the service through your usual techniques from the command line the stop/start commands would look as follows:</p>

<p><em>net stop "k2server"<br />
net start "k2server"</em></p>

<p>Now all we need to is tell the Cold Fusion Administrator that a 2kserver is running and you do that by logging on and specifying the server name and port number after selecting the "Verity server" option from the menu (it's under Data Sources). In my case it was localhost as it was my dev machine and 9901 for the port number (taken from the 2kserver.ini file).</p>

<p>OK so far so good, the server is running, Cold Fusion knows about it's existence, next time we'll look into testing the installation.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>391</wp:post_id>
		<wp:post_date>2003-04-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cold-fusion-5-verity-2k</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Working with Verity 2K</title>
		<link>http://gregs.tcias.co.uk/2003/04/22/working-with-verity-2k/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=392</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Now yesterday we set about configuring our verity server and today we are going to test it and actually do some stuff with it.</p>

<p>Before delving to deep I'd like to mention two command line tools: rck2 and mkvdk. The first is a utility that allows you to query collections from the command line you use it as follows:</p>

<p><em>rck2 - server localhost -port 9901</em></p>

<p>Once in, typing "h" will give you a complete listing of the command line options. The other tool is a command line is an indexing utility. You can use to carry out more sophisticated maintenance of your collections. We will be using the latter to create our collections, add files to them. Then to test the implementation fully we will use the former tool to query the collection.</p>

<p>To create a collection we will be using the mkdvk command with the following two switches: create and collection. The first is self explanatory, the second provides both the name and the path where the collection is to be created. So if we wanted to create a collection called myCollection, as we specified in the previous article, in "c:\cfusion\verity\collections\" type in the following command:</p>

<p><em>mkvdk -create -collection "c:\cfusion\verity\collections\myCollection"</em></p>

<p>And this is the screen output you should be presented with:</p>

<p>mkvdk - Verity, Inc. Version 2.6.1 (_nti40, Aug 11 2000)<br />
mkvdk done</p>

<p>Incidently if you want delete a collection I recommend that you first purge the collection and then you'll need to delete the folders manually. This is what the command line and screen output would look like:</p>

<p><em>mkvdk -purge -collection myCollection<br />
<br />
mkvdk - Verity, Inc. Version 2.6.1 (_nti40, Aug 11 2000)<br />
State: Collection is down<br />
State: Collection is up<br />
mkvdk done</em></p>

<p>But back to setting up the collection. Ok now we have a collection called myCollection in "c:\cfusion\verity\collections\", it's time to add a few documents to the collection. Again we will be using mkvdk and we will be using a file that contains a list of documents to be added to the collection. The command here is:</p>

<p><em>mkvdk -collection collectionname -bulk -insert filespec</em></p>

<p>Or using our example and an external file containing the list of the documents to be added called filelist.txt (stored in the same folder as mkvdk):</p>

<p><em>mkvdk -collection "c:\cfusion\verity\collections\myCollection" -bulk -insert @filelist.txt</em></p>

<p>The file that contains the list has the following format</p>

<p><em>"c:\path to files\filename 1"<br />
"c:\path to files\filename 2"<br />
"c:\path to files\filename 3"</em></p>

<p>As the process runs all the debug information will be displayed on the screen, burt as it tends to fly past, you'll be hard pressed to see what is actually going on, other than spot the odd error message from parsing the document. You can review all this output in the sysinfo.log file that is generated for the collection you are adding the documents to (in our example this would be: c:\cfusion\verity\collections\myCollection\sysinfo.log).</p>

<p>For completeness though here is how you add a single file to a collection.</p>

<p><em>mkvdk -collection "c:\cfusion\verity\collections\myCollection" -insert "C:\Documents and Settings\gstewart\Desktop\some_text.txt"</em></p>

<p>And this is the output that is generated:</p>

<p><em>mkvdk - Verity, Inc. Version 2.6.1 (_nti40, Aug 11 2000)<br />
Initializing dataset 00000003.ddd, index 00000003.did<br />
Totals (1 documents): 12 para  32 sent  770 word  (1392 Kb used)<br />
(400 ms) Indexed 1 docs into c:/cfusion/verity/collections/myCollection/parts/00000003<br />
Writing partition index data<br />
mkvdk done</em></p>

<p>OK now to test a search against the collection. To this end we will be making use of the previously mentioned rck2 utility. Launch it from the command line as shown below.</p>

<p><em>C:\CFusion\Verity\_nti40\bin>rck2 -server localhost -port 9901
RCK2 - Verity, Inc. Version 2.20
Type 'h' for a list of commands</em></p>

<p>Next change to your collection</p>

<p><em>rck2> c myCollection</em></p>

<p>Then run a search against the collection:</p>

<p><em>rck2> s *<br />
Retrieved: (1)1 of 1</em></p>

<p>Now display the results:</p>

<p><em>rck2> r<br />
docId: 1<br />
score: 1.0000<br />
k2dockey: c:/cfusion/verity/collections/myCollection/some_text.txt@myCollection</em></p>

<p>And there you go all done, your collection has been created, documents added to it and results returned.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>392</wp:post_id>
		<wp:post_date>2003-04-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>working-with-verity-2k</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Web trawling</title>
		<link>http://gregs.tcias.co.uk/2003/05/05/web-trawling/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=393</guid>
		<description></description>
		<content:encoded><![CDATA[<ol>
	<li><a href="http://www.web-graphics.com/mtarchive/000852.php" title="Web log CSS tabs">At web graphics</a> there are a set of links to <acronym title="Cascading Style Sheets">css</acronym> tabbed designs, very smart</li>
	<li><a href="http://faustlabs.com/portfolio/iarchitecture.html" title="Faustlabs - Information architecture">This site</a> has some good and interesting <acronym title="Information architecture">IA</acronym> examples</li>
	<li>Web reference is carrying the first chapter of a book on Curl, <a href="http://www.webreference.com/internet/enterprise/curl/chap1/1/" title="Enterprise Curl">Enterprise Curl</a>. Gradually I have been reading more and more about this language and the author does position it as possibly "another software technology...will kill off the current Web...very soon...in the next 2 to 3 years,..." as it follows some of the recommended models of moving the processing back to the desktop and hence back into the realm of the client/server model. Curl looks like it could allow you to develop <acronym title="Rich Internet Applications">RIA</acronym> in the form of an executable available for download.</li>
	<li><a href="http://www.useit.com/alertbox/20030505.html" title="">Another Alert Box on on-line advertising</a>, this time talking about stability and how ineffectual rotating banners are.</li>
	<li><a href="http://www.brainstormsandraves.com/2003_04_27_archive.shtml#93673384">A collection of links</a> to <acronym title="Really simple Syndication">RSS</acronym> related sites with heaps of background information. Just superb and the site looks very pretty too...</li>
	<li>Found <a href="http://guuui.com/issues/02_03_02.asp" title="Visio - the interaction designer's nail gun">these Visio stencils the other day</a> for rapid prototyping, along with a nice article on the topic.</li>
	<li><a href="http://guir.berkeley.edu/projects/denim/" title="Denim">This looks like a pretty good tool</a> for prototyping web sites and UIs</li>
	<li><a href="http://www.usablenet.com/frontend/508as_entry.jsp" title="Free download of Accessibility Suites">Here</a> you'll find a Dreamweaver extension for accessibility checking</li>
	<li><a href="http://www.evolt.org/article/Poodle_Predictor_See_your_site_like_Google_does/12/55157/index.html" title="Poodle">Poodle</a> is a tool that will show you what your site may look like if Google indexed it, i.e. it shows you what Google sees.</li>
	<li><a href="http://www.stcsig.org/usability/resources/pith.html" title="Pithy Quotes">Some pretty hilarious and often true quotes</a>. This site also has <a href="http://www.stcsig.org/usability/resources/toolkit/toolkit.html" title="Usability Toolkit">a useful set of documents</a> that could prove useful in many projects.</li>
	<li>This <a href="http://www.infodesign.com.au/usabilityresources/indexofresources.asp" title="Information and Design">Australian site</a> has another great collection of documents and tools for download.</li>
                     <li>And thanks to <a href="http://photomatt.net/" title="photomatt">Matthew Mullenweg</a> for the link to <a href="http://www.maccaws.org/" title="Making A Commercial Case for Adopting Web Standards">Making A Commercial Case for Adopting Web Standards</a></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>393</wp:post_id>
		<wp:post_date>2003-05-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-trawling</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>My last Aussie mail bag</title>
		<link>http://gregs.tcias.co.uk/2003/06/01/my-last-aussie-mail-bag/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=394</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This is going to be my last entry before embarking on my return trip to the mothership. This time I read up on PHP, trust, navigation, text based advertising, testing , acronyms, accessibility and to wrap it up a little Cold Fusion and Flash.</p>
<ol>
	<li>First off the <a href="http://www.webreference.com/programming/php/cookbook/"
>PHP cookbook</a>. Web reference has chapter 11 of this book up on it's site and this chapter looks at URL Get methods and provides sample code for dealing with these types of requests. </li>
	<li>An <a href="http://www.semanticstudios.com/publications/semantics/000011.php">interesting article on engendering trust</a> in an on-line environment.</li>
	<li>At Adaptive Path you can find a set of links relating to Navigation. In <a href="http://www.adaptivepath.com/publications/essays/archives/000048.php">the first article</a>, the focus is determining the language of navigation (read terminology), so that everybody sings from the same hymn sheet, understands their function and thus can easily identify the components discussed. <a href="http://www.adaptivepath.com/publications/essays/archives/000103.php">The second article</a> focuses it's discussion on managing navigation, i.e. keeping the depth to just three levels and discusses what can form part of the persistent site wide navigation and what should fall into content areas.</li>
	<li><a href="http://www.webreference.com/internet/enterprise/">Web refrerence has an article</a> in similar vein to the metadata one published in the web reference newsletter a few days back</li>
	<li><a href="http://www.useit.com/alertbox/20030428.html">Text-only advertisements work far better than banners, but is this only due to their novelty? Search engine text ads will retain their superiority over time, but text ads on other sites will work only if they focus on directly meeting users' needs.</a>". This article by Jakob Nielsen looks into Plain text banner ads.</li>
	<li>Hot on the trot of the Nielsen Alert box: <a href="http://www.clickz.com/search/strat/article.php/2196411">Google AdWorks: Best Practices</a>. A introduction into how it works and how to make the most of it.</li>
	<li>Bewildered by all those on-line acronyms?? Go to <a href="http://www.webopedia.com/">Webopedia</a> to find out there meaning.</li>
	<li>Some time ago I started using CSS for print based media. Out of curiosity I read up on it again and stumbled across <a href"http://www.webreference.com/js/column95/">this article on the web reference site</a>. It's a few years old, but certaily a worth while read, especially if you need to support those non web standards compliant browsers.</li>
	<li><a href="http://www.alistapart.com/stories/xplatform/">Via Zeldman.com I came across this article on cross platform testing</a> on A List Apart from last year. It looks into setting up a testing environment on a mac for cross browser/platform testing and also has links to a few other sites on the topic.</li>
	<li>Hat tip to Zeldman again for this one. <a hef="http://skillswap.brightonnewmedia.org/">A UK based site dedicated to web dev skill swapping</a>. It also has a pretty good presentation on accessibility the pros and cons and how ot go about it, very good and long (79 slides)</li>
	<li><a href="http://www.useit.com/alertbox/20030428.html">Another Alert Box from Jakob Nielsen on clear text ads</a> and why they are currently working so well and would appear to do so for the forseeable future.</li>
	<li>Boxes and arrows is carrying an article <a href="http://www.boxesandarrows.com/archives/building_a_metadatabased_website.php">on building a meta data based web site</a>. This has some really cool information and includes a fictious case study.</li>
	<li>Another superb collection of IA information, this time <a href="http://www.boxesandarrows.com/archives/002572.php">relating to automating Visio</a>.</li>
	<li><a href="http://www.macromedia.com/devnet/mx/flash/articles/ria_databases.html" title="Bicycle Parts Catalog: Macromedia Flash and Databases">Bicycle Parts Catalog: Macromedia Flash and Databases</a> provides a step by step guide to building a flash front end catalogue that gets it's content from a database.</li>
	<li>I have started playing round with <acronym title="Cold Fusion MX">CFMX</acronym> in earnest now and have been using the built in web server. <a href="http://www.macromedia.com/support/coldfusion/adv_development/config_builtin_webserver/" title="Configuring the Macromedia ColdFusion MX built-in web server">Here is the config information I found.</a></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>394</wp:post_id>
		<wp:post_date>2003-06-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-last-aussie-mail-bag</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Back in Blighty</title>
		<link>http://gregs.tcias.co.uk/2003/06/01/back-in-blighty/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=395</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The inbox for 31/5/2003, the first one posted in Blighty and the focus this week is mainly on lists and style sheets. It's also the first post with full titles in the <strong>href</strong> tags and <strong>acronym</strong> identifiers... it's all very exciting and accessible.</p>
<ol>
	<li>A cool way to highlight links in the body of text <a href="http://www.uoguelph.ca/~stuartr/articles/missinglink.shtml" title="The Search for the Missing Link">is shown here</a>, barely visible until you cursor roles over the paragraph in question. In this example though it's a little too subtle.</li>
	<li><a href="http://www.kalsey.com/tools/csstabs/index.php?section=3" title="CSS Tabs with Submenus"></a>Now this I really like, a list based css formatted tabbed menu and it's even got <acronym title="Cascading Style Sheets">CSS</acronym> show/hide sub menus. <a href="http://kalsey.com/2003/05/css_tabs_with_submenus/">Here</a> you can read more about the background on the development of this technique.</li>
	<li>The <acronym title="World Wide Web Consortium">W3C</acronym> has ,finally,
	  put up a comprehensive list of all<a href="http://www.w3.org/QA/2002/04/valid-dtd-list.html" title="List of valid DTDs you can use in your document."> the
	  valid DTDs</a> (<acronym title="Document Type Definition">DTD</acronym>)</li>
	<li>On dev edge another article on <a href="http://devedge.netscape.com/viewsource/2003/why-web-standards/" title="The Business Benefits of Web Standards">making a business case for fully <acronym title="Cascading Style Sheets">CSS</acronym> based sites</a></li>
	<li>Accessify.com has an <a href="http://www.accessify.com/articles/an-interview-with-bruce-lawson.asp" title="Accessify.com - Interview with DMXzone's Bruce Lawson, accessibility and standards evangelist">interview with Bruce Lawson</a>, on standards, accessibility and Dreamweaver.</li>
	<li><a href="http://www.macrabbit.com/cssedit/" title="CSSEdit">Just a darn cool example</a> of using PNG opacity.</li>
	<li>From A List Apart another quite superb article on <a href="http://www.alistapart.com/stories/taminglists/" title="CSS Design: Taming lists">Taming
	    lists</a>. Which pointed me to this article on dev edge <a href="http://devedge.netscape.com/viewsource/2002/list-indent/" title="Consistent List Indentation">on
	    list indentation.</a></li>
	<li>The first inclusion is a <acronym title="Dynmic Hyper Text Markup Language">dHTML</acronym> style drop menu using style sheets <a href="http://www.gazingus.org/dhtml/?id=109" title="Using lists for dHTML menus">at Gazingus.org</a>. However that site still made use of JavaScript to get the pop up working whereas <a href="http://www.designmeme.com/articles/csspulldownmenu.shtml" title="Pure CSS Pulldown Menus">this version here</a>, makes full use of <acronym title="Cascading Style Sheets">CSS</acronym>. Downside only work in the latest browsers (read Mozilla... :)).</li>
	<li><acronym title="Content Management System">CMS</acronym> watch has an <a href="http://www.cmswatch.com/Features/PeopleWatch/FeaturedPeople/?feature_id=90" title="Content Management and Information Architecture">Interview with Lou Rosenfeld</a> on <acronym title="Information Architecture">IA</acronym> and CMSs. He explains the differences between the two (IA = Spatial, CM = flow), looks at the disciplines and highlights some of the different type of IA approaches and styles there are.</li>
	<li><a href="http://www.csszengarden.com/" title="The beauty in CSS design">Here is a site</a>, which demonstrates the awesome power of CSS.</li>
	<li>Over at Dev Edge a interesting article on <a href="http://devedge.netscape.com/viewsource/2003/inner-browsing/" title="Inner-Browsing: Extending Web Browsing the Navigation Paradigm">Inner
	    browsing</a>, i.e. getting page elements to make remote calls to a server
	    to update dynamically</li>
	<li>After looking at the <a href="http://www.segpub.com.au/" title="design.develop.host">Segment
	    Publishing</a> (incidentally a beautifully developed site in xHTML and CSS),
	    I spotted a set of geographical related tags in the source code. These
	    are used for geographic based search engines. I investigated these a little
	    as I had decided to add some <strong>geo</strong> tags to my pages as well. The site is
	    with all the info can be <a href="http://geotags.com/" title="Location based search engine">found
	    here</a>. It also had a set of <acronym title="Thesaurus of Geograpic Names">tgn</acronym> tags,
	    and here is <a href="http://www.getty.edu/research/tools/vocabulary/tgn/" title="Getty Thesaurus of Geograpic Names - search">a
	    tool</a> for determining yours. Searching for my location returned the <a href="http://www.getty.edu/vow/TGNFullDisplay?find=Wandsworth&place=&nation=United+Kingdom&prev_page=1&english=Y&subjectid=7018933" title="TGN result set for Wandsworth">following
	    result</a>. Once you have completed all the tags you can <a href="http://www.geourl.com/ping/" title="GEO Url">submit
	    it to the search engine here</a>.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>395</wp:post_id>
		<wp:post_date>2003-06-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>back-in-blighty</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>The site re-design</title>
		<link>http://gregs.tcias.co.uk/2003/06/03/the-site-re-design/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=396</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I love having time on my hands. Apart from it being a nice break it gives you the time to work on things that you were planning on doing for absolutely ever. So it was time to re-work the site and finally get rid of all those tables and deliver a truly a site that separates content from presentation. Here's how I went about it and the tools I used to get there.</p>
<p>Since the original design had been built as a go between traditional development methods and <acronym title="eXtensible HyperText Markup Language">xHTML</acronym>, this revamp was actually so much less painful than any other. In terms of time it took me 2 days to re-work the site completely. 3 hours were spent on design the concept and building the prototype and the rest was building/modifying/tweaking. The first tool I used was a color picker called <a href="http://kohaistyle.com/scripts/quickcolor/" title="quick color">Quick Color</a>, and I was lucky enough to stumble across it a few days before starting this re-design at <a href="http://www.zeldman.com/" title="">Zeldman</a>.</p>
<p>By then I had already settled on a layout, opting for a two columned approach, the code for which I found at <a href="http://glish.com/css/" title="Glish.com">Glish.com</a>. Another aspect of the document structure that I was keen to implement was making use of lists for my navigation, which appears the proper semantic way of doing things. I followed the instructions in the article <a href="http://www.alistapart.com/stories/taminglists/" title="Taming Lists">on taming lists</a> on <acronym title="A List Apart">ALA</acronym> and another <a href="http://devedge.netscape.com/viewsource/2002/list-indent/" title="Consistent List Indentation">article over at DevEdge</a></p>
<p>Once the structure and a satisfactory prototype were completed I went about making all the content dynamic, which just involved re-formatting the output from all the queries that drive the site. Imagine how pleased I was that I had decided to code the output for the pages in that manner. There is something to be said for a modular and separating your code from the content approach as well.</p>
<p>The nest item I wanted to add was my e-mail address but being weary of spam and the likes I wanted to make sure it wouldn't get spidered. So I made use of a tool that I came across some time ago from hiveware: <a href="http://www.hiveware.com/enkoder_form.php" title="Enkoder Form 5.0">email enkoder</a>. This app generates a little bit of JavaScript that allows you to display your email address normally, but look under the hood and it's encrypted and hence safe (well for the time being) from those spam spiders.</p>
<p>Now I was nearing the end of my re-design and it was time to validate all my code to make sure it was <acronym title="eXtensible HyperText Markup Language">xHTML</acronym>/<acronym title="Cascading Style Sheets">CSS</acronym> compliant. To this end I made use of the validator service over at <acronym title="World Wide Web Consortium">W3C</acronym>: <a href="http://validator.w3.org/" title="W3C MarkUp Validation Service">for xHTML</a> and <a href="http://jigsaw.w3.org/css-validator/" title="W3C CSS Validation Service">for CSS</a>. Since I had also developed an <acronym title="Really Simple Syndication">RSS</acronym> feed, I decided to validate this one as well, <a href="http://feeds.archive.org/validator/" title="RSS Validator">which you can find here</a>. After all this work I thought I might as well advertise the fact that they were compliant, but the original buttons are pretty ugly, so I made use of this <a href="http://kalsey.com/tools/buttonmaker/" title="Kasey Consulting Group - button maker">button generator tool</a> to create the buttons you see at the bottom of every page. This app is based on the development of <a href="http://www.minimalverbosity.com/2003/May/19/buttons.htm" title="Minimal Verbosity buttons">Minimal Verbosity</a>.</p>
<p>To round it off though, it should be noted that not all pages validate properly. This is due to some outdated content and in some case my just cutting and pasting links and not modifying them to reflect xHTML (i.e. changing the "&amp;" to &amp;amp;). Over time I hope to rectify this. Another thing that I haven't completed yet, is the <acronym title="Web Accessibility Initiative">WAI</acronym> conformance. The tool used here for testing compliance is <a href="http://bobby.cast.org/bobby/" title="Bobby">Bobby</a>. As soon as I am done, I'll be making use of that button tool again. And that's it the background on my re-development is complete.</p>
<p>For completeness here's the complete list of tools and links</p>
<ul>
	<li>Colour scheme - <a href="http://kohaistyle.com/scripts/quickcolor/" title="Quick Color">http://kohaistyle.com/scripts/quickcolor/</a></li>
	<li>Buttons - <a href="http://www.minimalverbosity.com/2003/May/19/buttons.htm" title="Kasey Consulting Group - button maker">http://www.minimalverbosity.com/2003/May/19/buttons.htm</a> and <a href="http://kalsey.com/tools/buttonmaker/" title="Minimal Verbosity buttons">http://kalsey.com/tools/buttonmaker/</a></li>
	<li>The 2 column body layout comes courtesy of - <a href="http://glish.com/css/" title="Glish.com">http://glish.com/css/</a></li>
	<li>Inspiration - <a href="http://www.zeldman.com/" title="The Daily Report">http://www.zeldman.com/</a></li>
	<li>Email encoder - <a href="http://www.hiveware.com/enkoder_form.php" title="Email enkoder">http://www.hiveware.com/enkoder_form.php</a></li>
	<li>Lists and menus - <a href="http://www.alistapart.com/stories/taminglists/" title="Taming lists">http://www.alistapart.com/stories/taminglists/</a></li>
	<li>Consistent List Indentation - <a href="http://devedge.netscape.com/viewsource/2002/list-indent/" title="Consistent List Indentation">http://devedge.netscape.com/viewsource/2002/list-indent/" title="Consistent List Indentation</a></li>
	<li>xHTML validator - <a href="http://validator.w3.org/" title="W3C MarkUp Validation Service">http://validator.w3.org/</a></li>
	<li>CSS validator - <a href="http://jigsaw.w3.org/css-validator/" title="W3C CSS Validation Service">http://jigsaw.w3.org/css-validator/</a></li>
	<li>RSS validator - <a href="http://feeds.archive.org/validator/" title="RSS Validator">http://feeds.archive.org/validator/</a></li>
	<li>Bobby - <a href="http://bobby.cast.org/bobby/" title="Bobby">http://bobby.cast.org/bobby/</a></li>
	<li>Back end - <a href="http://www.php.net/" title="PHP: Hypertext PreProcessor">http://www.php.net/</a></li>
	<li>Database - <a hre="http://www.mysql.com/" title="MySQL">http://www.mysql.com/</a></li>
	<li>Editor - <a href="http://www.macromedia.com/software/dreamweaver/" title="Macromedia Dreamweaver MX">Dreamweaver MX</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>396</wp:post_id>
		<wp:post_date>2003-06-03 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-site-re-design</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Usability and Cold Fusion related links</title>
		<link>http://gregs.tcias.co.uk/2003/06/11/usability-and-cold-fusion-related-links/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=397</guid>
		<description></description>
		<content:encoded><![CDATA[<p>An article from jakob nielsen on doing a usability study on the cheap, then some stuff on setting a vitrualhost with the CFMX web server and heap of links about <acronym title="ColdFusion Components">CFCs</acronym>, then a few more usability articles on why it's important and how to design pages for people entering the site by not using the homepage.</p>
<ol>
	<li>Jakob Nielsen has put together an article on putting together a <a href="http://www.useit.com/alertbox/20030602.html" title="Usability For $200">$200 usability study</a> for a client. The process follows the full blown approach, i.e. review the customer's needs, review the initial design according to usability guidelines, test the prototype (by making use of the <a href="http://www.useit.com/alertbox/20030414.html" title="Paper Prototyping: Getting User Data Before You Code (Book Review)">paper     based prototyping method</a>) and improve the search visibility. The approach does make a few assumptions, i.e. that the person conducting the study is a already a good usability professional. Secondly that he is aware of the principles (<a href="http://www.amazon.com/exec/obidos/ASIN/073571102X/teacupinastor-20/" title="Homepage Usability ">spelt out in his book</a>) and that you don't spend hours debating the results, i.e. trust your findings and roll with it. It all helps bring quality and cut the cost of development for the client.</li>
	<li>Time for some ColdFusion again. First <a href="http://www.macromedia.com/support/coldfusion/adv_development/config_builtin_webserver/config_builtin_webserver08.html" title="Adding a virtual web mapping">how to create a virtual mapping in CFMX for the built in web server</a>. (<acronym title="ColdFusion MX">CFMX</acronym>)</li>
	<li>Some good introductory articles to <acronym title="Cold Fusion Components">CFCs</acronym>, can be found <a href="http://www.macromedia.com/devnet/mx/coldfusion/articles/intro_cfcs.html" title="Introduction to ColdFusion components">here</a>, <a href="http://www.macromedia.com/devnet/mx/coldfusion/extreme/bforta_cfc.html" title="Using ColdFusion Components properly">here</a> and <a href="http://www.macromedia.com/devnet/mx/coldfusion/articles/supsub.html" title="Using inheritance and composition in ColdFusion Components">here</a>.</li>
	<li>An interesting article on the principles behind <a href="http://www.macromedia.com/devnet/mx/coldfusion/articles/oo_interface.html" title="building an OO User Interface in ColdFusion">building an OO User Interface in ColdFusion</a></li>
	<li><a href="http://www.macromedia.com/devnet/mx/coldfusion/articles/cfcmethodology.pdf" title="ColdFusion MX Components: A new methodology for building applications">At this location</a> you can find a PDF file on the new methodology of building ColdFusion applications: Components</li>
	<li><a href="http://www.macromedia.com/devnet/mx/blueprint/" title="PetMarket Blue Print application">And this link</a> shoots you off to a complete application Blue Print (a Pet store) using many of the Macromedia products.</li>
	<li>I found this article <a href="http://www.theusabilitycompany.com/news/newsletter/why_usability_matters.html" title="Why usability matters">on
	    why usability matters</a>, which looked at digital design on the whole and
	    also had related it back to <acronym title="Interactive TV">iTV</acronym>.
	    Interesting in that a lot of projects relating to web tv tend to attempt
	    to mirror a web site, when as the author points out the TV remote is nothing
	    like a mouse and hence web based navigation doesn't seem entirely appropriate</li>
	<li>I loved this quote: "<em>most visitors break a window and crawl in from
	    the backyard, putting a hole in the bathroom wall in the process</em> from <a href="http://www.digital-web.com/columns/ianythinggoes/ianythinggoes_2003-06.shtml" title="How did you get here?">an
	    article</a> about designing for users who didn't enter the site through
	    the homepage. Jeff Lash provides three steps to consider entry pages and
	    their design:
		  <ol>
			<li>Figure out which pages are accessed most from external sources (to improve
			  referral from external sources he points to <a href="http://www.digital-web.com/tutorials/tutorial_2002-07.shtml" title="Three Ways to Improve External Search Engine Usability">this
			  article</a>)</li>
			<li>Then optimise these new popular entry points and turn them into a mini
			  homepage. Describe the site and the functions that can be performed. Allow
			  for additional entry page specific related information. He points to <a href="http://user-experience.org/uefiles/navstress/" title="Navigation Stress Test">another
			  article</a> that can further help analysing your navigation in this context.
			  [The aforementioned article incidentally provides some great questions that
			  you can ask yourself about the navigation, well worth a read]</li>
			<li>Finally review your changes (and their impact on other sections) and keep on optimising.</li>
		</ol>
	</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>397</wp:post_id>
		<wp:post_date>2003-06-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>usability-and-cold-fusion-related-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>So much stuff...</title>
		<link>http://gregs.tcias.co.uk/2003/04/17/so-much-stuff/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=407</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This weeks mail bag is packed to the brim with links from a wide range of topics. Make your selection from IA, web, design, book reviews and site reports.</p>

<ol>
	<li>From the web reference news letter, <a href="http://www.xml.com/pub/a/2003/04/16/dive-into.html">an introduction by Mark Pilgrim to xHTML2</a>. It reviews the &lt;br /&gt; and &lt;style&gt; and details what they have been replaced with. IN a following article he will be talking about the &lt;img&gt; tag which is currently generating a lot of discussion.</li>
	<li>From the web reference news letter, <a href="http://ezine.daemonnews.org/200301/esa3.html">a review of O'Reilly's 3rd edition Essential System Administration</a>.</li>
	<li><a href="http://gemal.dk/mozilla/mozdev.html">Using Mozilla for development and debugging</a>, apart from anything this site has a neat CSS layout</li>
  <li>one of the weekly updates from the web reference list had an interview with <a href="http://www.sensible.com/">Steve Krug</a> (of "Don't make me think" fame) and <a href="http://louisrosenfeld.com/">Lou Rosenfeld</a> ("Information Architecture for the world wide web"), in which they were discussing User Experience (or UX [why oh why do they have to turn everything into acronyms??]). It's just an informal chat about User Experience and their tour of seminars. <a href="http://webreference.com/new/030410.html">Have a read here</a>.</li>
  <li>As a result of this article I had a look at Lou's web site and found <a href="http://connection.ischool.washington.edu/cmslab/">this link</a>, which is a site dedicated to CMS', their evaluation and show casing them.</li>
  <li><a href="http://crocolyle.blogspot.com/">A neat blog on IA, usability and UX</a>. Interestingly the analysis of UX available here not only relates to web sites, but also to the real world.</li>
  <li>Not web related in any way, but something I need to bear in mind when I move back. <a href=" http://www.freeview.co.uk/">Freeview</a> is Digital TV provider that uses your old bog standard aerial to transmit digital broadcasts. Once the adapter is installed you are up and running. Something I might just have to look into once I get back to sunny England.</li>
  <li><a href="http://www.useit.com/alertbox/20030414.html">A review of a book "Paper Prototyping: Fast and Simple Techniques for Designing and Refining the User Interface" by Jakob Nielsen</a>. The bottom line, it's better to capture early on in the process any design and usability flaws than once code has been written. "Ten times the impact if you discover a needed design change early, and 100 times cheaper to make the change. The experience from both fields is clear: early is much better than late." Speaks for itself really...</li>
  <li><a href="http://media.pearsoncmg.com/aw/aw_shneiderma_dtui_4/chapter1.pdf">Here</a> and <a href="http://media.pearsoncmg.com/aw/aw_shneiderma_dtui_4/chapter2.pdf">here</a> are two sample chapters from the forthcoming fourth Edition of Designing the user Interface</li>
  <li>Macromedia now has <a href="http://www.macromedia.com/devnet/topics/usability.html">a usability topic centre go check it out</a>.</li>
  <li>Still on Macromedia's site, following on from the previous beta reports here is <a href="http://www.macromedia.com/special/progress_report/beta3/">Beta 3</a> and <a href="http://www.macromedia.com/special/progress_report/beta4.html">Beta 4</a> reports as well as a set of "under the hood" articles: <a href="http://www.macromedia.com/special/under_the_hood/report1/">report 1</a> and <a href="http://www.macromedia.com/special/under_the_hood/report2/">report 2</a>. Report 1 looks at the CF MX side of things, where the second report delves into Flash.</li>
  <li><a href="http://www.oreillynet.com/pub/a/javascript/2002/02/22/udftips.html">More UDF info courtesy of O'Reilly</a>. Incidently I found this link on <a href="http://www.cfhub.com/">cfhub.com</a>, which has some great resources.</li>
  <li>And this is a fantastic example of a CSS and xHTML compliant web site: <a href="http://www.cingular.com/">Cingular</a>. The navigation is a bullet list and the drop downs are translucent... Very nice. While you are at it <a href="http://www.mediadiva.net/mt/">check out the developers web site</a>.</li>
  <li><a href="http://placenamehere.com/pnhtoolbar/">A fantastic free developer tool bar</a> for web developers who use Mozilla: </li>
  <li>After having taken a close look at the "Cingular" web site and took a moment to look at the site of the UE person working on the project and they had the following link to "<a href="http://www.webstyleguide.com/index.html?/papers/gui2.html">WEB STYLE GUIDE, 2nd edition</a>". This is an awesome source of information. I only looked through the page design chapter and found some great information on page structure, dimensions, length and consistency. <a href="http://www.patricklynch.net/">Here is a link to the author's site</a></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>407</wp:post_id>
		<wp:post_date>2003-04-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>so-much-stuff</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Wedding pictures</title>
		<link>http://gregs.tcias.co.uk/2003/03/16/wedding-pictures/</link>
		<pubDate>Sun, 16 Mar 2003 03:18:27 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/2008/01/04/wedding-pictures/</guid>
		<description></description>
		<content:encoded><![CDATA[[gallery=6]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>434</wp:post_id>
		<wp:post_date>2003-03-16 14:18:27</wp:post_date>
		<wp:post_date_gmt>2003-03-16 03:18:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wedding-pictures</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flash remoting and CFCs</title>
		<link>http://gregs.tcias.co.uk/2003/06/29/flash-remoting-and-cfcs/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=398</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For the last day or so I have been trying to wrap my head around two of Macromedia's product features: ColdFusion MX's <acronym title="ColdFusion Components">CFCs</acronym> and Flash remoting. And what does this mean? Well you can write a ColdFusion Component(CFC) and get Flash to call it then in turn work on the result returned from said CFC. It took me a while to get into it, mainly because of my lack of familiarity with the Flash MX. So we are going to start off this series by looking at some of the pre-requisite, then create a CFC and return a result. Next we'll build a simple Flash form that submits it's input to the CFC using Flash remoting and in turn displays the result from the CFC.</p>
<h2>Pre-requisits</h2>
<p>Ok to get started you'll need the following:</p>
<ul>
	<li>ColdFusion MX</li>
	<li>Flash MX</li>
	<li>Flash remoting</li>
	<li>Dreamweaver MX (or whatever your favourite editor is)</li>
</ul>
<p>All of these are available for trial downloads, if you don't already have them.</p>
<h2>ColdFusion Components (CFCs)</h2>
<p>In the most simple terms a CFC is a logical group of functions or single function housed in a component. And this is how one might look:</p>
<p><em>
	&lt;cfcomponent&gt;<br />
		&lt;cffunction name="thisFunction" access="public" returntype="string" hint="this function when invoked takes an argument and returns a string"&gt;<br />
			&lt;cfargument name="nameField" required="true" type="string" hint="submitted string to be worked on" /&gt;<br />

			&lt;cfset thisResult = "Hello " &amp; nameField /&gt;<br />
			&lt;cfreturn thisResult /&gt;<br />
		&lt;/cffunction&gt;<br />
	&lt;/cfcomponent&gt;<br />
</em></p>
<p>So we have our opening and closing <strong>cfcomponent</strong> tags and it's name is determined by the file name you give it. So in this case we are returning a string so let's call the component <em>returnString</em>, which means that it's file name will be returnString.cfc.</p>
<p>Next we have the <strong>cffuntion</strong> tags, which is where you define the function name or method that is called, set it's access type, the return type that will be sent back to the calling application and finally you can give it a hint. Giving it a hint is a very useful feature as it allows you auto-document your components and functions. To view the documentation of a CFC, simply call it in your browser, eg: <em>http://localhost:8500/returnString.cfc</em> (this assumes that you saved the component in the root of you web server).</p>
<p>The <strong>cfargument</strong> tag defines a parameter submitted to the function. Think of it as the <strong>cfparam</strong> of CFCs. You can specify whether it is required, what it's expected type is, give it a hint and few other attributes. Again the auto-documenting aspect is nice, but more importantly it allows you tighter control over the inputs by validating the type of variable submitted.</p>
<p>Once these attributes have been set you can get to invoking the component. In this example we are simply concatenating the submitted value with another string and then setting this combination to a variable called <em>thisResult</em>.</p>
<p><strong>cfreturn</strong> is used to return the variable to the calling application.</p>
<h2>Invoking CFCs</h2>
<p>So you now have a rough idea of what a CFC is, but what do you do with? That is how do you put it to good use? Even better how do you use it? Well you will have to call it, or more precisely invoke it. Below is the code for invoking our previously created component.</p>
<p><em>
	&lt;cfinvoke component="returnString" method="thisFunction" returnvariable="thisResult"&gt;<br />
		&lt;cfinvokeargument name="nameField" value="you" /&gt;<br />
	&lt;/cfinvoke&gt;<br />
	&lt;cfoutput&gt;#thisResult#&lt;/cfoutput&gt;<br />
</em></p>
<p>If you were to include this code snipped in page called <strong>callFunction.cfm</strong> and requested in your browser (http://localhost:8500/callFunction.cfm) the result should be: <em>Hello you</em>. So what exactly happens:</p>
<ol>
	<li>the browser calls the page</li>
	<li>the <strong>cfinvoke</strong> tag calls a component <em>returnString</em></li>
	<li>looks for and executes the function/method called <em>thisFunction</em></li>
	<li>The function takes the parameter <em>nameField</em> and does it's bit and returns a string called <em>thisResult</em></li>
	<li>finally we move to the output onto the page: <em>Hello you</em></li>
</ol>
<p>Note paths to components are relative. For example if you store your components in a sub folder to your webroot, called say <em>components</em>, then value for the attribute component in <strong>cfinvoke</strong> would be: <em>component="component\returnString"</em>.</p>
<p>Well that's that pretty much. You can now have a play with this little function, why not trying to get it to accepts a dynamic value, say based on a form submission??</p>
<h2>The Flash form</h2>
<p>I love the idea of using Flash and despite it's accessibility issues, I do believe that it can offer a lot of benefits in terms of cross browser experience and in terms of feature richness of the interface. However every single time I open the Flash or Flash MX editor, I get the hibby jibbies and it takes me a while to re-orientate myself and cut and paste a lot of code until I get things figured out again. So posterity my mini form tutorial, because if I write it down I might actually remember it for once.</p>
<p>Once you have fired up Flash and opened a new <em>.fla</em> file. Start off with creating 4 layers and give them these names.</p>
<ol>
	<li>Labels</li>
	<li>All actions</li>
	<li>Frame actions</li>
	<li>UI components</li>
</ol>
<p>This movie will be comprised of two actions, the first will contain the form and the second will be a response page. So in the label layer, insert a key frame in the 6th frame and then another after the 10th. In frame one of this layer edit in the properties tab enter in <em>frame label</em> box: <strong>form</strong> and in frame 6 do the same again, but this time give it a label: <strong>response</strong>.</p>
<p>Next move to layer 4 or the one you labelled: <strong>UI components</strong> and insert another key frame in frame 6. Move back to the first frame and select the text tool. First we'll create a label for our form field. Draw a small text box and type: <strong>your name:</strong>. Make sure that in the properties tab the text type is set to: solid text. Now draw another box along side it. This time however in the properties we'll set the text type to: input text. Also make sure that the <em>Show Border Around Text</em> option has been selected in the properties tab. And finally give it an instance name so that we can latter reference it: <em>nameField</em></p>
<p>Next we'll add a button to this frame. Go to the Components tab and ensure that Flash UI Components is selected. From the options select <em>Push button</em> and drag it into the scene and place it under the two text boxes. Now select it using the Arrow Tool and edit the properties. Set the instance name to <strong>pb_submit</strong>, set the label to <strong>Press me</strong> and finally enter the value <strong>onClick</strong> in the click handler field.</p>
<p>Next move to frame 6 and delete any of the previous components may appear here (this happened to me when I inserted the key frame after adding the form elements). Draw another text box and enter the following text into it: Form submitted.</p>
<p>Now move up to the layer labelled: <strong>All actions</strong>. This layer will contain all the action script code for this movie. First make sure that this layer extends to the 10th frame (you can do this by inserting a key frame in frame 11 and then subsequently removing it). For the button we created previously, we gave the click handler a value of <em>onClick</em>. This is a function that the movie will call when the button is pressed. So you will need to create this function, go to the <strong>Actions</strong> tab (make sure that the you are in expert mode) and enter the following ActionScript in frame 1:</p>
<p><em>function onClick(btn) {<br />
	trace("onClick " + btn._name);<br />
	gotoAndStop("response");<br />
}</em></p>
<p>This function takes the parameter <em>btn</em>, which is instance name we set previously (<em>pb_submit</em>). The first line of the function outputs a trace to your debug window, so that you can check that the function was called. the output should be: <em>onClick pb_submit</em>. Then we send the user to another frame, the one we labelled <em>frame</em>.</p>
<p>Next go to the layer called: Frame actions. Create the frame split we have done for the previous layers. Go to frame 1 and type: <em>stop();</em> in the <strong>Actions</strong> tab. Do the same thing again for Frame 6. When run the movie this will stop the movie from moving through all the frames, instead it will halt and only continue when the button is pressed. Pressing <strong>CTRL+Enter</strong> to run the movie. Simply enter your name and click the button and you should be taken to a page that displays: <strong>Form submitted</strong>.</p>
<p>In your output window you'll see the message: <em>onClick pb_submit </em>. This appear thanks to the <strong>trace</strong> call we added in the <em>onClick</em> function.</p>
<h2>Creating an object in Flash</h2>
<p>Next we'll be creating an object that will capture the form input, so that we can easily pass the value to a CFC. In order to this we'll need to first create an object using ActionScript. So head back to your Flash editor and look at the ActionScript in frame 1 of the "Frame actions" layer. In the action window you should only have <em>stop();</em>. Add the following function call before the <em>stop()</em> function, <em>initData();</em>. This is the function we'll use to initialise the object where we will capture our form input. The entire code for Frame 1 should look like this:</p>
<p><em>initData();<br />
stop();</em></p>
<p>The <em>initData</em> function we will add to Frame 1 of our "All actions" layer and add the following code:</p>
<p><em>function initData()<br />
{<br />
	// make sure we only call initData once<br />
	if ( inited )<br />
		return;<br />
	inited = true;<br />
<br />
	// modeling the form choices with data<br />
<br />
	// set initial values<br />
	userData = new Object();<br />
	userData.nameField = "";<br />
	trace ("object created");
}</em></p>
<p>In the first instance we check whether we have previously created the object. If yes just skip ahead and don't do anything else. If on the other hand we haven't then let's create the object and set the default value to empty (""). Please note that we are creating an object called <strong>userData</strong> and adding a key <strong>nameField</strong> to it. In my mind this looks exactly like a structure in ColdFusion and hence if you had other elements you wanted to capture you could add another key and store an additionally submitted value in it. The trace at the end is just there to re-assure us that the function was called and that the object was created.</p>
<p>The next step is to capture the submitted information in the object as so far we have only created it. OK head to frame 1 of the "All actions" layer and you will need to add the following function call: <em>getSubmittedData();</em> to the previously created <em>onClick()</em> function. It should end up looking something like this:</p>
<p><em>function onClick(btn) {<br />
	trace("onClick " + btn._name);<br />
	getSubmittedData();<br />
	gotoAndStop("response");<br />
}</em></p>
<p>The function will simply add the value submitted to the object we have previously initialised. So staying in the "All actions" layer in frame 1 and insert the following code between the two existing functions:</p>
<p><em>// get the data from the ui elements on page 1
function getSubmittedData()<br />
{<br />
	userData.nameField = name_txt.text;<br />
	trace ("The value of the submitted field is:" + userData.nameField);<br />
}</em></p>
<p>The trace will allow us to make sure that the submitted value has been stored into our object, that we can now pass to a CFC page.</p>
<h2>Flash remoting...</h2>
<p>Now the plan is to take said form input, i.e. your name and pass it to a component, which will do some stuff and return a result to the flash movie. Now the stuff I mentioned just a second ago, is actually the component appending your name to a string, which will be passed back to the end page, where a brief: "hello &lt;your name&gt;" will be displayed. Pretty clever... :) Anyway as you can imagine, you can get it to do all sorts of stuff and then in turn have the receiving ActionScript do something altogether different based on the result sent back.</p>
<p>So what we need to do know is take the object we previously created and pass it to the component. To this end we need to create a connection to the server and then once connected we will pass the object and wait for a result. So go back to the "Frame actions" layer and select frame 6. After the <em>stop()</em> function call, add a call to <em>submitDetails()</em>. And then back on over to the "All actions" layer and frame 1. There we will enter the <em>submitDetails()</em> function.</p>
<p><em>function submitDetails()<br />
{<br />
	// Include the Required NetService class files<br />
	#include "NetDebug.as"<br />
	#include "NetServices.as"<br />
	#include "DataGlue.as"<br />
<br />
	// connect to the Flash Remoting service provider<br />
	if (isGatewayOpen == null) {<br />
		// do this code only once<br />
		isGatewayOpen = true;<br />
		// Make the Gateway connection<br />
		NetServices.setDefaultGatewayUrl("http://localhost:8500/flashservices/gateway");<br />
		gatewayConnnection = NetServices.createGatewayConnection();<br />
		submitForm= gatewayConnnection.getService("your.path.submitForm", this);<br />
		trace("Connected");<br />
		// CALL Web service: return the user input<br />
		submitForm.thisFunction(userData);<br />
		trace("sent request");<br />
	}<br />
}</em></p>
<p>A lot of the work is done for us by including the <em>NetServices.as</em> and <em>DataGlue.as</em> action scripts (<em>NetDebug.as</em> is used for debugging). Based on some code I found over at <a href="http://www.macromedia.com/" title="Macromedia">Macromedia</a>, I learned that the best way was to first check for a connection (check for the existence of a variable <strong>isGatewayOpen</strong>), if not then initiate the connection. These two lines do that for us:</p>
<p><em>NetServices.setDefaultGatewayUrl("http://localhost:8500/flashservices/gateway");<br />
gatewayConnnection = NetServices.createGatewayConnection();</em></p>
<p>Initiate the connection. The next line: <em>submitForm = gatewayConnnection.getService("your.path.submitForm", this);</em>, is the one of interest. Here we create a connection to our CFC. The one thing of note is the path to your CFC. In my example: <strong>your.path.submitForm</strong>, would be represented by the following directory structure: <strong>&lt;your webroot&gt;\your\path\submitForm.cfc</strong>. So it is important that you map the location of your CFC in relation to your web server properly. Otherwise nothing will happen.</p>
<p>At this stage you may wonder how will I know? Well i have included a few trace statements, but that really won't tell you anything other than success or failure. Success is good, but with just a message saying failure you are not going to get very far. Thankfully within Flash MX under <em>Window &gt; NetConnection debuger</em>, you will find a tool that will give you some relevant feedback when it comes to figuring out why your connection failed or indeed how it succeeded.</p>
<p>Now you are ready to run the movie, submit a value via the form to your component. Both the output debugger window should display the following:</p>
<p><em>object created and populated<br />
onClick pb_submit<br />
your name<br />
The value of the submitted field is: Greg<br />
Connected<br />
sent request</em></p>
<p>In your net debugger you should be able to find a line <strong>Result - Hello &lt;your submitted value&gt;</strong> [second from bottom if all executed well]. Problems that may occur are down to the flash file and the CFC not being in the same directory or the reference to the CFC being wrong in your connection call. Another reason I encountered was that the submitted value wasn't found. Initially I thought that the value passed would be the object, i.e. <strong>userData</strong>. In actual fact though it is the field submitted that needs to be referenced in the function, hence use nameField.</p>
<p>This is all well and good, but the proof lies in the pudding so let's output that result back into our closing page, where currently you only see <strong>form submitted</strong> once you launch the movie. To do this we'll start by having to add the following code to the "All actions" layer in frame 1.</p>
<p><em>// :::: DEFAULT RESPONDERS ::::<br />
<br />
function thisFunction_Result(thisResult) {<br />
	trace("server responded: The result is " + thisResult);<br />
	<br />
	trace("setting the field");<br />
	// This function will be invoked by the server when it has finished processing<br />
	myResult.text = "The CFC replied with: " + thisResult;<br />
}</em></p>
<p>The above code is a default Flash remoting reponse function. You invoke it by creating a function of the format <strong>invokedFunction_Result(return variable)</strong>. All I do here is set a trace to output a debug message with the resulting value and then display the result in text field. What text field? The one we will create now on frame 6 of the "UI components" layer. Select the frame and select the text tool. Draw a box and in the properties tab select Dynamic Text from the drop down menu. In the instance name field, specify <strong>myResult</strong>.  There you go all done, launch the movie, submit a value and see the result on the next frame.</p>
<p>For convenience and possibly troubleshooting, <a href="/downloads/flashRemoting.zip" title="Download the complete source">here is a zipped archive with the completed code and flash movie</a>. Most of the information I gleaned from numerous articles in the <a href="http://www.macromedia.com/devnet/mx/flashremoting/" title="Flash Remoting Devlopment Center">Flash Remoting Devlopment Center</a> which are damn useful if you have the time to work through them.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>398</wp:post_id>
		<wp:post_date>2003-06-29 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-remoting-and-cfcs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>This weeks collection of web resources</title>
		<link>http://gregs.tcias.co.uk/2003/06/29/this-weeks-collection-of-web-resources/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=399</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I just completed the design and build of the hosting side of the operation for Teacup In a Storm and now have begun the promotion side of things. So this week my focus for research has been mainly driven by figuring out the best serach optimisation techniques, however since this would have been a little dry a few Flash remoting links as well.</p>
<ol>
	<li>The first site I stumbled across was <a href="http://www.highrankings.com/" title="Search Engine Optimisation">High Rankings</a>. In a <a href="http://www.highrankings.com/issue006.htm" title="Submitting to search engines">newsletter</a> I learned a few things:
		<ol>
			<li>while search engines automatically spider your site, they are a bit slow to do that. From memory Google only indexes a couple of pages a day and even then it still takes a while for those new indexed pages to be included in the systems indexes as they are updated only so often (quite frequently I might add). So what about newer content, the trick here is to include such content on the main (home) page and to also have an up to date site map.</li>
			<li>another point to take away from the article is that while you may submit your site using their tools, there are also options to pay for your site to be indexed. Most of us work on a budget so the pay option is not always appropriate. So you can still submit your link, but with the understanding that paying customers get priority. This means that it could just that little longer for your site to be indexed in full</li>
		</ol>
	</li>
	<li>A further site worth mentioning is <a href="http://www.traffick.com/" title="Minding the Search Engines' Business">Traffick</a>. There a read an article on <a href="http://www.traffick.com/article.asp?aID=102" title="An End to Metatags (Enough Already, Part 1)">meta tags</a> and learned that Google doesn't use them, instead google goes through the page and grabs the content to index. Some consultants believe that it can't hurt to include the meta tags, but the article firmly believes that they are thing of the past. For the time being though I'll stick to including them.</li>
	<li>Back to High Rankings though, <a href="http://www.highrankings.com/quickfix.htm" title="No Quick Fixes Where Search Engine Optimization is Concerned">another article</a>, talks about how it is important to make your meta tags equivalent to what's displayed on the page. The previous bullet point, did say that meta tags are kind of obsolete and the page content is king. Well it turns out that many spiders to a mix of the both and analyse/compare the content and the tags. If the two aren't in sink, then it will use the page content, focusing on words that appear more than once or that appear in page headers to determine the page ranking.</li>
	<li>So we are looking at a mix between Meta Tags and Content. Now how do we ensure that our keyowrds will work. The first thing <a href="http://www.highrankings.com/makingkeyphraseswork.htm" title="Making Keyphrases Work for Your Site and the Search Engines">this article suggests</a>, is to figure out what keywords are being used. <a href="http://www.wordtracker.com/" title="Word Tracker">Word Tracker</a> is a tool that allows you to test your keywords against their database of frequently searcged for terms, thus giving you an indication of popular keywords for a specific topic.</li>
	<li>The following are a few useful links for flash remoting, <a href="http://www.macromedia.com/support/flash_remoting/ts/documents/netcondebugger.htm" title="Debugging Flash Remoting within Macromedia Flash MX applications">the most useful</a> relates to debugging flash remoting connections.</li>
	<li><a href="http://www.macromedia.com/support/flash_remoting/ts/documents/fr_determine_url.htm" title="How createGatewayConnection determines the URL">Another one</a> on determing the connection gateway.</li>
	<li>Meet the makers has <a href="http://www.meet-the-makers.com/conversations/allaire/" title="A Conversation With Jeremy Allaire">an interview with the co-founder of ColdFusion</a>, Jeremy Allaire. Pretty insightful. It also has a <a href="http://radio.weblogs.com/0113297/" title="Jeremy Allaire's Radio">link to his blog</a>.</li>
	<li>Funny how some things come in twos. The interview with J Allaire had a reference to <a href="http://jefferson.village.virginia.edu/elab/hfl0034.html" title="Vannevar Bush">Vannevar Bush</a> and so did <a href="http://www.ramanarao.com/informationflow/archive/2003-04.html" title="Ramana Rao's INFORMATION FLOW ~~~ Issue 2.4 ~~ April 2003">the next one in the web reference news letter<a/>. Haven't had a chance to read the paper he wrote yet, but <a href="http://www.theatlantic.com/unbound/flashbks/computer/bushf.htm" title="As we may think">here it is for posterity and one of those moments where there is nothing else to do</a>.</li>
	<li>Search Engine watch has another <a href="http://www.searchenginewatch.com/searchday/article.php/2200921" title="Optimising Flash for Search Engines">article on optimising Flash for searching</a>.</li>
	<li>Over at <a href="http://www.sheriftariq.org/design/" title="Design matters">Design matters</a>, there are series of articles on <a href="http://www.sheriftariq.org/design/whitespace/" title="White space">white space</a>, <a href="http://www.sheriftariq.org/design/fonts/" title="fonts">fonts</a>, <a href="http://www.sheriftariq.org/design/color/" title="colour">colour</a> and <a href="http://www.sheriftariq.org/design/align/" title="alignment">Text alignement</a>.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>399</wp:post_id>
		<wp:post_date>2003-06-29 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-weeks-collection-of-web-resources</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Much ado about XML (SAX parsing)</title>
		<link>http://gregs.tcias.co.uk/2003/07/01/much-ado-about-xml-sax-parsing/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=400</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This week a whole lot of nothing about XML. Short and sweet, but truly useful.</p>
<ol>
	<li>Based on a couple of articles on PHPBuilder: <a href="http://phpbuilder.com/columns/justin20000428.php3" title="Using expat functions">Using expat functions</a> and <a href="http://www.phpbuilder.com/columns/scheffler20030325.php3" title="Dynamic XML conversion using the SAX parser and a stack">Dynamic XML conversion using the SAX parser and a stack</a>, I found the answer to my search for a SAX parser. <a href="http://www.jclark.com/xml/expat.html" title="Expat">Expat</a> is integrated into PHP. And who says CF can do anything PHP can...</li>
	<li>For complete reference the <a href="http://phpbuilder.com/manual/ref.xml.php" title="php xml manual reference">php xml manual reference</a></li>
	<li><a href="http://www.zend.com/zend/art/parsing.php" title="Parsing XML with PHP">Parsing XML with PHP</a> gives a detailed explanation of a PHP script that parses an XML document and returns the number of characters and elements found in the document.</li>
	<li><a href="http://www.wirelessdevnet.com/channels/wap/features/xmlcast_php.html" title="Parsing XML With PHP">This link</a> and the previous one I found in the PHP help file in the comments part of the XML function reference section. This article goes through parsing a live RSS feed and outputting HTML.</li>
	<li><a href="http://www.analysisandsolutions.com/code/phpxml.htm" title="PHP XML Parsing Basics -- A Tutorial">PHP XML Parsing Basics -- A Tutorial</a> is another neat example of using PHP to parse XML this time pulling live stock quotes in.</li>
                     <li>W3Schools as ever carries <a href="http://www.w3schools.com/xml/default.asp" title="XML Tutorial">an excellent series</a> introducing you to the many acronyms relating to the world of <acronym title="eXtensible Markup Language">XML</acronym>, <acronym title="eXtensible Stylesheet Language">XSL</acronym> and <acronym title="eXtensible Stylesheet Language Transformation">XSLT</acronym></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>400</wp:post_id>
		<wp:post_date>2003-07-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>much-ado-about-xml-sax-parsing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Enabling full text searching on MySQL</title>
		<link>http://gregs.tcias.co.uk/2003/07/10/enabling-full-text-searching-on-mysql/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=401</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A while back I played around with the idea of building a search facility for my site and as since it's driven by a database I used queries using the <em>LIKE '%%'</em> clause to return results. Since then however I have stumbled across full text searching. In the following I'll talk you through setting up your database to accept full text searches and then run a basic query to test it.</p>
<p>Since my table was already up and running I had to ALTER it to create a <strong>Full text</strong> index on the column I wanted to search against. So if you are in the same boat and are adding such a feature to an existing database, you will have to type something similar to the following:</p>
<p><em>ALTER TABLE `yourTable` ADD FULLTEXT `yourFullTextColumnName` (<br />
`yourTableColumnName`<br />
)</em></p>
<p>If you are creating your table form scratch, then you can add this to the CREATE table statement, like such:</p>
<p><em>CREATE TABLE yourTable (<br />
id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,<br />
yourTableColumnName body TEXT,<br />
FULLTEXT (yourTableColumnName)<br />
);</em></p>
<p>So far so good, so know let's test our set up. Executing a full text search will require you to require select statement, like the one shown below:</p>
<p><em>SELECT *<br />
FROM yourTable<br />
WHERE MATCH (<br />
yourFullTextColumnName<br />
)<br />
AGAINST (<br />
'keyword'<br />
)</em></p>
<p>The MATCH statement executes a natural language search for a given string (in this case 'keyword') against the column listed in the MATCH and returns a result set ranked by highest relevance but only if the statement appears in the where clause. The following statement gives you a chance to also generate a score for your result set. Please note that by using MATCH () AGAINST () statement in the WHERE clause we ensure that the result is ordered by relevance.</p>
<p><em>SELECT other columns,<br />
MATCH (yourFullTextColumnName) AGAINST ('keyword') AS score<br />
FROM yourTable<br />
WHERE MATCH (yourFullTextColumnName) AGAINST ('keyword')</em></p>
<p>So there you go, a rough guide to enabling and testing full text searching on MySQL.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>401</wp:post_id>
		<wp:post_date>2003-07-10 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>enabling-full-text-searching-on-mysql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Java 101</title>
		<link>http://gregs.tcias.co.uk/2003/07/15/java-101/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=402</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This will provide a brief overview of the tools and documentation needed to get into Java programming and how to define classes (looking at the differences between applets and java applications) before delving into OO concepts a little. So for starters you'll need to get a hold of the following items, which are available for download:</p>
<ol>
	<li>Get the <a href="http://java.sun.com/j2se/1.4/download.html" title="Java Software Development Kit">SDK</a>, at time of writing the version was 1.4</li>
	<li>Get the full documentation</li>
	<li>Get the <a href="http://java.sun.com/docs/books/tutorial/book.html" title="books and tutorials">tutorial</a></li>
	<li>Get a good editor, <a href="" title="TextPad">TextPad</a> is useful or use the IDE: <a href="http://java.sun.com/j2se/1.4/download.html" title="Sun Studio One">Sun Studio One</a> [now bundled with the <acronym title="Software Development Kit">SDK</acronym>]</li>
</ol>
<h2>Easy beginnings: comments in java</h2>
<p>Listed below are three ways of commenting your code:</p>

<p><em>
// single line<br />
/* */ multi line<br />
/** */ documentation, creates the documentation using the <a href="http://java.sun.com/products/JDK/tools/index.html" title="more info on javadoc here">javadoc tool</a></em></p>

<p>All pretty self explanatory!</p>

<h2>Next step: Defining an class</h2>

<p>Listed below are the two types of class definitions I found:</p>

<p><em>class YourClassName {<br />
...<br />
}</em></p>

<p>Where <strong>YourClassName</strong> is the same as your file name in this case it would be: <em>YourClassName.java</em>. The other one I came across is as follows</p>

<p><em>public class YourClassName {<br />
...<br />
}</em></p>

<p>There are of course a few other components to a class declaration, however a point worth noting is that if you omit the <strong>public</strong> component from a class, this class will only be accessible to other classes in it's package. Whereas using the <strong>public</strong> statement indicates that this class is accessible by other classes, regardless of their package membership.</p>

<p><strong>abstract</strong>, <strong>final</strong>, <strong>extends</strong> and <strong>implements</strong> form the other components of a class declaration.</p>

<h2>The "main" Method in Java Applications</h2>

<p>Every Java application must have a "main" method and it takes the following signature (or structure)</p>

<p><em>public static void main(String[] args) {<br />
...<br />
}</em></p>

<p>When an application is executed this the method that is first called. What is a method? A method is a function, i.e. it carries out an action.</p>

<p>What is a constructor? And what's the difference? You can recognize a constructor because it has the same name as the class and has no return type. You can also have multiple constructors, in which case they still have the same name, but take a different number or type of arguments. If you fail to specify a constructor in your class, the Java automatically provides a no argument constructor or "default constructor".</p>

<h2>Applets, what's the difference</h2>
<p>Things are slightly different when working with applets. As opposed to applications where a lost of system classes are readily made available, for starters to draw an applet you need to import a few new classes, like such:</p>

<p><em>import java.applet.Applet;<br />
import java.awt.Graphics;</em></p>

<p>Furthermore when creating your class you will make a few more changes:</p>

<p><em>public class YourClassName extends Applet {<br />
...<br />
}</em></p>

<p>By using the "extends" statement you are in fact making "YourClassName" a sub class of "Applet", which also means that "YourClassName" inherits all of the behaviour and hence functionality of "Applet".</p>

<p>The equivalent of "main" for applets is "init", "start" or "paint". Every applet, must implement one or more of these methods. For example:</p>

<p><em>public void paint(Graphics g) {<br />
...<br />
}</em></p>

<p><strong>g</strong> is an object of Graphics passed to the "paint()" method this sets the onscreen drawing context . One argument that can be passed is the Graphics drawString() method. For example:</p>

<p><em>g.drawString("Hello World", 50,25);</em></p>

<p>This method takes a string as the first argument, then the x and y co-ordinates for the display. There are two more methods available to Applets: "stop" and "destroy".</p>

<h2>Enough already, a quick overview of OO concepts</h2>

<strong>What Is an Object?</strong>

<blockquote>"An object is a software bundle of related variables and methods." </blockquote>

<p>Software objects are often used to model real-world objects you find in everyday life. Examples of objects are things you can see in everyday life: such as a bike. All objects share two characteristics: state and behaviour. Using our bike example, a bike's state might be current gear, current speed or two wheels. And it's behaviour could be braking or accelerating. A software object stores it's state in one or more "variables" and implements behaviour by way of "methods".</p>

<p>A handy way to model this is by using a donut. Where the methods (behaviour) are displayed in the ring and variables (state) is kept inside the hole. Such variables are known as instance variables in objects as they map the state for a particular object. MyBike might have a completely different state to YourBike. The same applies to methods within objects, they are formerly known as instance methods because they add behaviour to a particular instance of an object, not all objects.</p>

<p>The analogy of a donut is good for another reason as it also shows that variables are hidden to the outside world by methods, this is also known as "Encapsulation". However it can also occur that an object may wish to expose these values and/or hide some of the methods.</p>

<strong>What Is a Message?</strong>

<blockquote>"Software objects interact and communicate with each other using messages."</blockquote>

<p>Most objects form part of a greater whole, as such these individual objects may need to interact with other ones. For example a bike is useless and unless you interact with it, i.e. use it and pedal. This kind of interaction in the software world is achieved by way of sending messages from one object to another, or simply put one object calls a method in another object. In some cases calling another method may really on additional information to be passed, these additional bits of information are known as parameters. For example: The object YourBicycle may wish to change to a lower gear, so it would call a method changeGear with a parameter to determine whether to change up or down and in this case the parameter would have a value of lowerGear.</p>

<strong>What Is a Class?</strong>

<blockquote>"A class is a blueprint or prototype that defines the variables and the methods common to all objects of a certain kind."</blockquote>

<p>Using our real world example: bicycles exist by the millions and all share common traits (two wheels, breaks), this would be known as a "class". Whereas your bike would be just one instance of this class or also known as an "object" because it's state or behaviour at any given time can be different to another bike's.</p>

<p>On top of the objects separate instance variables a class can define class variables, these are variables that are shared by all instances of this class. For example a class variable could be the number of gears a bike has. Just as objects have instance methods, classes have "class methods".</p>

<strong>What Is Inheritance?</strong>

<blockquote>"A class inherits state and behaviour from its superclass. Inheritance provides a powerful and natural mechanism for organizing and structuring software programs." </blockquote>

<p>A good example for inheritance is this: Do you know what a "Penny farthing" is? If i told you it was a bicycle it would greatly help to understand that it has two wheels, handle bars and pedals. Essentially inheritance allows you to pass common traits from a superclass (bicycle) to a subclass (penny farthing). Penny farthing inherits all of the traits of the bicycle class and is able to add additional states and behaviour. The tandem bike is a classic example where it inherits a lot of state and behaviour from a bike, but also adds new state (two seats for example).</p>

<p>Subclasses can also override states and behaviour, for example a mountain bike may override the bike superclass by specifying more gears than the original.</p>

<p>Inheritance is not limited to one layer, it can be as deeply nested as needed, this is known as either the inheritance tree or hierarchy. Generally speaking as you navigate deeper down the tree you keep adding more specialised behaviour and state.</p>

<strong>What Is an Interface?</strong>

<blockquote>"An interface is a contract in the form of a collection of method and constant declarations. When a class implements an interface, it promises to implement all of the methods declared in that interface."</blockquote>

<p>Back to the bicycle analogy. A bike class only defines what it can do, not how it interacts with the rest of the world. An unrelated item could be an inventory management tool in a store. The two evidently share a relationship but it's not in terms of what they can each do. In order for the inventory program to be able to track the bike it needs to have a price and tracking number. Where they come from is what matters to the inventory program. So in order for the bike to be in the system it agrees to implement the state and behaviour for the inventory. It interfaces with the application by delivering the price and track number.</p>

<p>And this completes part 1. Part 2 will look at the language itself in more detail, covering variables, operators, expressions, statements, blocks, control flow statements and branching statements.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>402</wp:post_id>
		<wp:post_date>2003-07-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java-101</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>More great links... honestly</title>
		<link>http://gregs.tcias.co.uk/2003/07/16/more-great-links-honestly/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=403</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A nice spread of items gleaned over the last couple of weeks. Some <acronym title="eXtensible Markup Language">XML</acronym>, some <acronym title="Hypertext Preprocessor">PHP</acronym>, a few <acronym title="Cascading Style Sheets">CSS</acronym> items, a long but interesting and funny article on the next instalment of the Browser wars (post Netscape), a Flash based <acronym title="Unified Modeling Language">UML</acronym> diagram tool and, and, and...</p>
<ol>
	<li>This article gives a good overview of using the <a href="http://www.devshed.com/Server_Side/XML/XMLwithPHP/XMLwithPHP1/" title="XML with PHP part 1">exPat SAX parser with <acronym title="Hypertext Preprocessor">PHP</acronym></a>. <a href="http://www.devshed.com/Server_Side/XML/XMLwithPHP/XMLwithPHP2/" title="XML with PHP part 2">Part 2</a> if you are interested looks at XML parsing and PHP using the DOM</li>
	<li><a href="http://www.devshed.com/Server_Side/PHP/FormValidatorClass/" title="Classes by example: form validation">PHP and Classes</a>, which is another great article introducing the concepts of classes by way of a form validation example class.</li>
	<li>Superb <acronym title="Cascading Style Sheets">CSS</acronym> re-design for adaptive path. <a href="http://www.stopdesign.com/log/2003/07/09/the_new_path.html" title="The New Path">Douglas Bowman comments on his work.</a></li>
	<li>This was release on a list Apart some time ago:<a href="http://www.alistapart.com/stories/accesskeys/" title="Unlocking Hidden Navigation">give your website a set of keyboard shortcuts</a>.</li>
	<li><a href="http://www.holovaty.com/blog/archive/2003/07/13/1623" title="Lawrence weather site in all CSS">Adrian Holotavy's blog entry for the re-design of a weather channels homepage</a> using <acronym title="Cascading Style Sheets">CSS</acronym>. Absolutely beautiful and some neat little tricks.</li>
	<li><a href="http://www.evolt.org/article/Browser_Wars_II_The_Saga_Continues/25/60181/index.html" title="Browser Wars II: The Saga Continues">A great review of the browser wars and the future</a>, some truly great insight into why things are the way they are with IE and the lack of <acronym title="Cascading Style Sheets">CSS</acronym> support. And a roadmap for the future...</li>
	<li><a href="http://jim.spath.com/lynx_win32/" title="Lynx for windows">A windows port of Lynx</a> the good ol' text based browser. Love it, test your <acronym title="HyperText Markup Language">HTML</acronym> sites in that and see if they work...</li>
	<li><a href="http://www.economist.com/research/styleGuide/" title="The Economists style guide">The Economists style guide</a> a damn good/useful read and it also points to George Orwell's essay on politics and the English Language.</li>
	<li><a href="http://www.mikepick.com/news/archives/000104.html" title="Pull quotes on the Web">An introduction to pull quotes</a>, their possibilities, and heap of more detailed resources for using and implementing them. What's a pull quote? Well go and have a read...</li>
	<li>A really cool <a href="http://www.gskinner.com/gmodeler/app/gOS.swf" title="UML diagram in Flash">Flash based UML diagram</a> and documentation tool.</li>
	<li>From mezzoblue <a href=" http://www.easyrgb.com/" title="Easy RGB">a link</a> to another nifty site that helps you create colour schemes</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>403</wp:post_id>
		<wp:post_date>2003-07-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-great-links-honestly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Flash remoting with PHP</title>
		<link>http://gregs.tcias.co.uk/2003/07/30/flash-remoting-with-php/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=408</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Not so long ago I made my first foray into invoking a CFC from Flash MX and shortly after that I stumbled across a PHP port of Flash remoting. I immediately decided to have a play round with it as I don?t have access to ColdFusion MX on this server and as I indicated back then the idea of working with Flash and dynamic content was something that really appealed to me. So here was the opportunity to build something Flash based and also put it to good practise. In the following I shall go through the set up, the PHP class that will be invoked by the Flash movie and highlight the differences between the CF version and the PHP one.</p>

<h2>Remoting services with PHP</h2>
<p>First off head on over to <a href="http://www.amfphp.org/" title="AMFPHP">http://www.amfphp.org/</a> and grab the latest install files. Now the directory structure is rather important as the PHP files and classes reference one another quite a bit. The easiest approach to follow is to either install the files just off the root of your web site or create a mapping that will have the same effect. Hence on my local configuration I extracted the files into my <em>Apache/htdocs</em> directory. After you have done this you should see a flashservices folder under your web site root. Ok so far so good.</p>

<p>Now we will be following a similar example to the CF one whereby we?ll be using a form to submit a value to a PHP class, which will concatenate the value with a string, which will return: ?Hello <em>your submitted string</em>?. So we?ll be creating a class called <strong>SubmitForm</strong>, as a result create a directory called <em>submitform</em> also in your root, or alternatively place it wherever you like just make sure you create a virtual mapping for it. </p>

<p><em>Root<br />
 |-----flashservices<br />
 |-----submitform</em></p>

<p>The above representation shows what your directory structure should ideally look like. In the last folder we added, create another one called: services. This is the actual folder that will hold your class file: <em>submitForm.php</em>. Back up one level create a file called <em>gateway.php</em>. The latter file will hold the following PHP code:</p>

<p><em>&lt;?php<br />
	include "../flashservices/app/Gateway.php";<br />
	$gateway = new Gateway();<br />
	$gateway -&gt; setBaseClassPath("./services/");<br />
	$gateway -&gt; service()<br />
?&gt;</em></p>

<p>This file includes all the relevant flash remoting components that you will need while setting the path to your services that Flash will interact with.</p>

<p><em>&lt;?php
	class SubmitForm {<br />
	<br />
		function SubmitForm() {<br />
			$this-&gt;methodTable = array(<br />
				"submitThis" =&gt; array(<br />
					"description" =&gt; "Echoes the passed argument back to Flash (no need to set the return type)",<br />
					"access" =&gt; "remote", // available values are private, public, remote<br />
					"roles" =&gt; "role, list", // currently inactive<br />
					"arguments" =&gt; array("arg1")<br />
				)<br />
			);<br />
		}<br />
		function submitThis($nameField) {<br />
			$thisResult = "Hello ".$nameField;<br />
			return $thisResult;<br />
		}<br />
	}<br />
?&gt;</em></p>

<p>The above code is the actual contents of you class file, here you define the class a constructor and a method called: <strong>submitThis</strong>. This latter method is the one that will eventually be called by the Flash movie, passing the submitted form value to it. Nothing amazingly complicated happens here. The constructor (<em>SubmitForm()</em>) sets an array that will be returned back to the Flash movie for the <strong>submitThis</strong> method. At this point you might as well create another file in the <em>submitform</em> folder and this one will be used for your flash movie as it is embedded into an HTML template.</p>

<p>And that pretty much covers the server side of the set up. Now I encountered a few problems with the class file, my constructor I named in-correctly and also I made use of the following code to set the return variable:</p>

<p><em>$this-&gt;thisResult = ?Hello ?.$nameField;</em></p>

<p>However this did not work and resulted in null values being passed back to Flash, so follow the code above.</p>

<h3>The Flash form</h3>

<p>The form itself has changed very little from the example I built using ColdFusion as the backend, so let?s just take a closer look at the ActionScript:</p>

<p><em>// Include the Required NetService class files<br />
#include "NetDebug.as"<br />
#include "NetServices.as"<br />
#include "DataGlue.as"<br />

var gatewayurl = "http://localhost/submitform/gateway.php";<br />

function onClick(btn)<br />
{<br />
	trace("onClick " + btn._name);<br />
	getSubmittedData();<br />
	gotoAndStop("response");<br />
}<br />
<br />
// get the data from the ui elements on page 1<br />
function getSubmittedData()<br />
{<br />
	trace(nameField.text);<br />
	userData.nameField = nameField.text;<br />
	trace ("The value of the submitted field is:" + userData.nameField);<br />
}<br />

function submitDetails()<br />
{<br />
	// connect to the Flash Remoting service provider<br />
	if (isGatewayOpen == null) {<br />
  		// do this code only once<br />
  		isGatewayOpen = true;<br />
  		// Make the Gateway connection<br />
  		NetServices.setDefaultGatewayUrl(gatewayurl);<br />
  		gatewayConnnection = NetServices.createGatewayConnection();<br />
  		submitForm = gatewayConnnection.getService("submitForm", this);<br />
  		trace("Connected");<br />
  		// CALL Web service: submit the form variable<br />
  		submitForm.submitThis(userData.nameField);<br />
  		trace("sent request");<br />
	}<br />
}<br />
<br />
// :::: DEFAULT RESPONDERS ::::<br />
function submitThis_Result(result) <br />
{<br />
	trace("server responded: The result is " + result);<br />
	<br />
	trace("setting the field");<br />
	// This function will be invoked by the server when it has finished processing<br />
	myResult.text = "The Php class replied with: " + result;<br />
}<br />
<br />
function initData()<br />
{<br />
	// make sure we only call initData once<br />
	if ( inited )<br />
		return;<br />
	inited = true;<br />
	<br />
	// modeling the form choices with data<br />
	<br />
	// set initial values<br />
	userData = new Object();<br />
	userData.nameField ="";<br />
	trace ("object created and populated");<br />
}</em></p>
<p>The first thing worth noting is that here I have included the ActionScript remoting components by default, rather than after the form has been submitted. Additionally I have declared a variable [<em>var gatewayurl = "http://localhost/submitform/gateway.php";</em>] that stores the path to our <em>gateway.php</em> file which if you remember points to the PHP flash services files.</p>

<p>Now let?s take a quick look at the <strong>submitDetails()</strong> method, which submits our details to the PHP class. Two lines that differ from the CFC are: <em>submitForm = gatewayConnnection.getService("submitForm", this);</em> [1] and <em>submitForm.submitThis(userData.nameField);</em>[2].</p>

<p>[1] simply invokes the object, whereas in the CFC version you still had to include the full path in a ?.? Annotation.<br />
[2] in the CFC we simply passed the whole object to the component, whereas in the PHP class case we pass the variable <strong>nameField</strong> of the object <strong>userData</strong>. </p>

<p>Subtle differences, but still important. And there you go two implementations on two different platforms with the exact same outcome. One difference however, you can see this one in action <a href=http://projects.teacupinastorm.com/submitform/ title=?Go on try it out?>here</a> and you can <a href="/downloads/submitform_php.zip" title="Get the files here">download all the files here</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>408</wp:post_id>
		<wp:post_date>2003-07-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-remoting-with-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Java 102</title>
		<link>http://gregs.tcias.co.uk/2003/07/30/java-102/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=409</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The second part of my Java learning extravaganza. This time looking at variables, operators, expressions and statements. As ever all mistakes are mine...</p>
<h2>Variables</h2>

<p>Variables allow the storage of an object's state. A name and a type must be explicitly provided, it takes this form:</p>

<p><em>"type name"</em></p>

<p>A type helps define what values the variables can store and the type of operations that can be carried out. For example you can carry mathematical operations on variables of the type integer. These are the different types that are at your disposal:</p>

<p><strong>(integers)</strong><br />
byte ==	Byte-length integer ==	8-bit two's complement<br />
short == Short integer == 16-bit two's complement<br />
int == Integer == 32-bit two's complement<br />
long == Long integer == 64-bit two's complement</p>

<p><strong>(real numbers)</strong><br />
float == Single-precision floating point == 32-bit IEEE 754<br />
double == Double-precision floating point == 64-bit IEEE 754</p>

<p><strong>(other types)</strong><br />
char == A single character == 16-bit Unicode character<br />
boolean == A boolean value (true or false) == true or false</p>

<p>Since Java also specifies the format and size of these types, you do not have to worry about system dependencies, which is another great abstraction feature for code running on different systems. There is an additional <em>reference</em> type, which consists of arrays, classes and interfaces. These types don't actual contain values, but rather reference addresses in memory where the values are kept.</p>

<p>The following naming convention is suggested:</p>

<blockquote>"Variable names begin with a lowercase letter, and class names begin with an uppercase letter. If a variable name consists of more than one word, the words are joined together, and each word after the first begins with an uppercase letter, like this: isVisible. The underscore character (_) is acceptable anywhere in a name, but by convention is used only to separate words in constants (because constants are all caps by convention and thus cannot be case-delimited)."</blockquote>

<p>In addition to this a variable is scoped. This scope depends on where the variable is declared, i.e. in relation to other code elements. There are four categories into which they can fall:</p>

<p>A member variable is declared outside of any method or constructor (what is a constructor) and belongs to a class and hence can be accessible from the outside. You usually find them after the declaration of the class and before the first method is defined.</p>

<p><em>public class YourClassName extends Applet {<br />
		int memberNumber = 1;<br />
}</em></p>

<p>Local variables a declared within a block of code and are only accessible by that method (for example you can define local variables in your main variable).</p>

<p><em>public static void main(String[] args) {<br />
	int localNumber = 1;<br />
}</em></p>

<p>This variable is no accessible right to the closing curly bracket of the main method.</p>

<p>Method parameters are values that are passed to methods and constructors. These can be values that the method needs to operate on and it's scope is the entire method. <em>args</em> is an example of a method parameter.</p>

<p>Exception-handler parameters sit between the curly brackets after a catch statement. Rather than being values passed to a method they are arguments.</p>

<p><strong>Final variables</strong></p>
<p>These are variables that are declared once and whose values never change once assigned. Changing the value of a final variable will result in a compile error. You can declare them like such: "final int aFinalVar = 0;". Alternativaly you can declare them ("final int aFinalVar;") and then assign them a value later. But once assigned a value has been assigned that's it no more changes.</p>

<h2>Operators</h2>

<p>There are three different types of operators: unary ("++" as in i++;), binary ("=" as x=y;) and tertiary ("?:" as in 0 ? 1 : false). <em>unary</em> allows for postfix and prefix notation. Postfix means that the operator appears after the variable (or as it's also known the operand) and hence this means that the value is read before incrementing/decrementing. Prefix simply means that the operator appears before the operand and this means that values are incremented/decremented before being read. Their role is to perform and operation on a value and as a result return a value. Furthermore operators can be categorised as follows:</p>

<p>Arithmetic Operators: +,-,*,/,% [computes the remainder of a division on two operands]. Generally speaking these carry out operations on two operands [binary]. However +.- have unary function as well. <em>+</em> promotes an operand from byte, short or char to int. <em>-</em> negates a value (i.e. -1).</p>

<p>Relational and Conditional Operators: &gt;, &gt;=, &lt;, &lt;=, ==, !=. These compare two values to determine the relationship [usually true or false]. There more such operators however: &amp;&amp; [eg (a&gt;c) and (b&lt;c) are true], || [or], ![false], &amp; [for bolean values: if a&amp;b are true. For numbers it does a bitwise operation], |, ^.</p>

<p>Shift and Logical Operators [bitwise operators]: &gt;&gt; [x &gt;&gt; z, shift x right by z], &lt;&lt; [x &lt;&lt; z, shift x left by z], &gt;&gt;&gt; [x &gt;&gt;&gt; z, shift x right by z (unsigned)], &amp; [and], | [inclusive or], ^ [xor], ~ [bitwise complement].</p>

<p>Bitwise <em>and</em> operations result in 1 being returned when operand 1 and  2 are set to 1, else it returns 0. If a 1 is in either operand 1 or two then bitwise "<em>inclusive or</em>" returns 1. The only time it returns 0 is when operand 1 and 2 are set to 0. "<em>exclusive or</em>" return1 1 whenever operand 1 and 0 are not equal. For example if op1 = 1 and op2 = 0 or op1 = 0 and op2 = 1, then the result is 1. if op1 = 1 and op2 = 1, or even op1 = 0 and op2 = 0 then the result would be 1. Complement operators simply revert the outcome. So if operand bit is 1, then the result is 0</p>

<p>When do you use them? Useful for setting for many Boolean flags.</p>

<p>unsigned?? Not sure yet watch this space...</p>

<p>Assignment Operators: =. These operators basically assign 1 value to another. The other ones are shorthand annotations also assigning one value to another: += [op1 += op2 equal to: op1 = op1 + op2], -= [op1 -= op2 equal to: op1 = op1 - op2], *=, /=, %=, &=, %=, |=, ^=, &lt;&lt;=, &gt;&gt;=, &gt;&gt;&gt;=.</p>

<p><strong>Other Operators</strong></p>
<ul>
	<li><strong>?:</strong> = Shortcut if-else statement</li>
	<li><strong>[]</strong> = Used to declare arrays, create arrays, and access array elements</li>
	<li><strong>.</strong>  = Used to form qualified names</li>
	<li><strong>( params )</strong> = Delimits a comma-separated list of parameters</li>
	<li><strong>( type )</strong> = Casts (converts) a value to the specified type</li>
	<li><strong>new</strong> = Creates a new object or a new array</li>
	<li><strong>instanceof</strong> = Determines whether its first operand is an instance of its second operand</li>
</ul>

<h2>Expressions, statements and blocks</h2>

<p>Variables and operators from the building blocks of the above entitled section. What is an expression? An expression is a segment of code that carries out computations and returns values. A statement is made of one or several expressions and are grouped together into complete units of execution. Zero or Several statements that are grouped together are known as chunks of code and separated by "<em>{}</em>".</p>

<p><strong>Expressions</strong>: carry out the work of the program. On top of execution they control the flow of the program. 1 rule is that the values of each part of the expression must have the same matching data type. The order of execution is important and in your coding you should make your expressions as unambiguous as possible (this helps you read your code in the long term as well). You can explicitly indicate the order of execution by using "<em>()</em>". If you don't this is determined by precedence. Here is the order of precedence:</p>
<ul>
	<li><strong>postfix operators</strong>	[] . (params) expr++ expr--</li>
	<li><strong>unary operators</strong>		++expr --expr +expr -expr ~ !</li>
	<li><strong>creation or cast</strong>	new (type)expr</li>
	<li><strong>multiplicative</strong>		* / %</li>
	<li><strong>additive</strong>		+ -</li>
	<li><strong>shift</strong>			&lt;&lt; &gt;&gt; &gt;&gt;&gt;</li>
	<li><strong>relational</strong>		&lt; &gt; &lt;= &gt;= instanceof</li>
	<li><strong>equality</strong>		== !=</li>
	<li><strong>bitwise AND</strong>		&amp;</li>
	<li><strong>bitwise exclusive OR</strong>	^</li>
	<li><strong>bitwise inclusive OR</strong>	|</li>
	<li><strong>logical AND</strong>		&amp;&amp;</li>
	<li><strong>logical OR</strong>		||</li>
	<li><strong>conditional</strong>		? :</li>
	<li><strong>assignment</strong>		= += -= *= /= %= &amp;= ^= |= &lt;&lt;= &gt;&gt;= &gt;&gt;&gt;=</li>
</ul>

<p>If operators are of equal precedence, they are evaluated based on the following rules. Binary operators (other than assignment ones) are executed from left to right. Assignment ones on the other hand are evaluated from right to left.</p>

<p><strong>Statements</strong>: Equate roughly to sentences and logically forms a complete unit of execution. There are four groups of statements: assignment (x=1), increment (x++), method call (System.out.println(x)) and object creation (int integerObject = new Integer(4)). However you also have declaration statements (x=1) and control flow statements (if else).</p>

<p>What's the diff between assignment and declaration? Again watch this space</p>

<p><strong>Blocks</strong>: As stated 0 or more statements that are grouped together by curly braces, eg:</p>

<p><em>if (this is true) {<br />
	do something<br />
} else {<br />
	do something else<br />
}</em></p>

<h2>Control flow statements</h2>

<p>The above code is also an example of a Control Flow Statement. Without control flow statements the interpreter executes the code line by line, reading from left to right. Control flow is used to selectively execute statements or repeatedly execute them. There are four types of control flow statements: looping (for, while, do-while), decision making (if/else, switch/case), exception handling(try/catch/finally/throw), branching (break, continue, label:, return). Please note that <em>goto</em> is a reserved word but not used by Java.</p>

<p>What is an interpreter? Yet another question to haven't seen the answer yet</p>

<ul>
	<li>"<em>While</em>" executes the statement if the condition is true</li>
	<li>"<em>Do-While</em>" executes the statement first, then evaluates the condition (the opposite of "while")</li>
	<li>"<em>for</em>" is a loop and the evaluation is carried out at the start of each loop.</li>
	<li>"<em>if</em>" used to selectively execute the program. Breaks out of the flow once one condition has been met, which could be Boolean or integer based.</li>
	<li>"<em>switch</em>", another flow control statement that can only evaluate integer values. Note that the value of each case statement must bee unique and also each statement is ran through even if a condition is met. The only way to break out of a "case" is by placing a "break;" statement for when the conditions is met.</li>
	<li>"<em>try/catch</em>" used for exception handling and helps to gracefully resolve an error. The "try" part is for the statement where an error might occur. The "catch" is associated with the "try" and has a statement that attempts to resolve the error if an exception is encountered in the try block.</li>
</ul>
<h2>Branching statements</h2>

<p>There are three types of such statements: break, continue and return. The first two can be used with or without a label.</p>

<p><strong>break</strong>: This allows the application to break out of a loop and return to the normal flow of the application, i.e. after the loop or switch statement (also known as the innermost switch/for/do-while/while). The labelled approach terminates an outer statement. If can be used for nested loops to terminate both the inner and outer loops to return to the application flow.</p>

<p><strong>continue</strong>: is slightly different in that it can allow the control flow to skip to the next iteration. Unlabeled this statement also affects the innermost loop. When labelled it can be used to skip to the next outer iteration of the loop.</p>

<p><strong>return</strong>: is used to exit the current method. It can or cannot return a variable/result of the method. Note that if a method is declared as void use just "return" as no value is expected to be returned from such a method. Also note that a value returned from a method must match the type specified by the method's declared return type.</p>

<p>And thus ends another review of what I have digested this week. Next time, heaps more on objects!!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>409</wp:post_id>
		<wp:post_date>2003-07-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java-102</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Gotta love the internet</title>
		<link>http://gregs.tcias.co.uk/2003/08/06/gotta-love-the-internet/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=410</guid>
		<description></description>
		<content:encoded><![CDATA[<p>2-3 weeks worth of useful stuff I have found while working, doing research or just plain trawling the net for fun. Everything from inkblots, to deign patterns, <acronym title="Cascading Style Sheets">CSS</acronym> hacks and workarounds, java stuff, a couple of essays/speeches on standards and then some.</p>
<ol>
	<li><a href="http://research.microsoft.com/displayArticle.aspx?id=417" title="Is is just my imagination">Using inkblots</a> to create 20 character strong and memorable passwords.</li>
	<li>Some more useful information on <a href="http://www.clickz.com/sales/traffic/article.php/2236061" title="Rank Well in Search Engines and Convert the Traffic">keyword search and optimisation article</a>.</li>
	<li>Courtesy of Zeldman <a href="http://www.contentquality.com/" title="Welcome to the Cynthia Says Portal">an accessibility checking tool</a> along the lines of Bobby... and agree it's better!</li>
	<li>A work around to using the dotted property in IE which results in dashes being displayed. With the help of an image and some CSS this can be overcome, find the work around and an explanation <a href="http://kalsey.com/2003/07/css_dotted_borders_in_ie/" title="CSS dotted borders in IE">here</a>.</li>
	<li>Doug Bowman presents <a href="http://www.stopdesign.com/articles/css/replace-text/" title="using background-image to replace text">a neat little technique</a> for replacing text with images, <acronym title="Cascading Style Sheets">CSS</acronym> style!</li>
	<li><a href="http://www.javaranch.com/" title="A friendly place for Java greenhorns">A cool resource</a> with tons resources, books, study guides, mock exams for those interested in Java certification</li>
	<li>The <a href="http://www.javacoffeebreak.com/articles/toptenerrors.html" title="Top Ten Errors Java Programmers Make">top ten errors</a> when programming in Java</li>
	<li>From Digital web <a href="http://www.digital-web.com/columns/ianythinggoes/ianythinggoes_2003-07.shtml" title="Prototyping With Style">a brief article</a> on using <acronym title="Extensible HyperText Markup Language">xHTML</acronym> to build a rough and plain prototype to test the <acronym title="Information Architecture">IA</acronym> of a web site, before delving into the visual aspect. Stylesheets can then easily be applied to the prototypes once the structure and usability has been verified. Pretty neat. For those interested the corporate side of <a href="http://www.teacupinastorm.com/" title="TCIAS">TCIAS is undergoing this technique </a></li>
	<li>Forever reading... Found <a href="http://wireless.java.sun.com/blueprints/articles/game/" title="Designing and Writing Java Action Games for Small Devices">this article</a> on writing Java games for wireless devices</li>
	<li><a href="http://www.boxesandarrows.com/archives/web_traffic_analytics_and_user_experience.php" title="Web Traffic Analytics and User Experience">One for later</a>, an article on User Metrics.</li>
	<li>A List Apart presents a <a href="http://www.alistapart.com/stories/seo/" title="Using XHTML/CSS for an Effective SEO Campaign">short and sweet guide</a> to why <acronym title="Extensible HyperText Markup Language">xHTML</acronym> and <acronym title="Cascading Style Sheets">CSS</acronym> can improve your pages readability for search engines. Yet another reason to opt for standards!</li>
	<li><a href="http://www.uiconf.com/8/articles/landay_vanduyne_article.html" title="Design Patterns: An Evolutionary Step to Managing Complex Sites">design patterns for design...</a> not programming. Sounds like a good idea, just as design patterns are a great idea in the programming world</li>
	<li>A look behind web standards<a href="http://www.w3.org/People/Bos/DesignGuide/introduction.html" title="What is a good standard?">and why they are the way they are</a>.</li>
	<li><a href="http://www.kuro5hin.org/story/2003/7/31/2335/08552" title="Setting up mod_rewrite on Apache">This site</a> offers an introduction to mod_rewrite for Apache. Why? Amongst other things very useful for search engine optimisation.</li>
	<li>A commercial <a href="http://www.reqwireless.com/webviewer.html" title="WebViewer">phone emulation tool</a> for viewing your pages as they would be on a mobile device. Heaps of different devices are emulated/li>
	<li>Zeldman has just come back from the "Web Design World" conference and has kindly put up his presentations on <a href="http://www.happycog.com/lectures/dwws/" title="Designing With Web Standards">Web Standards</a> and <a href="http://www.happycog.com/lectures/access/" title="Accessibility">Section 508</a></li>
	<li>An introduction to building accessible and standards compliant <a href="http://www.alistapart.com/stories/smil/" title="SMIL when you play that">multimedia presentations</a> using <acronym title="Synchronized Multimedia Integration Language">SMIL</acronym>.</li>
	<li>And to finish it all off, something a little bizarre, a tutorial on <a href="http://www.sci.fi/~alboin/tengwartutorial.htm" title="Writing With Elvish Fonts">writing using Elven fonts</a>...</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>410</wp:post_id>
		<wp:post_date>2003-08-06 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gotta-love-the-internet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Stored procedures</title>
		<link>http://gregs.tcias.co.uk/2003/10/20/stored-procedures/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=411</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As indicated previously, I have been doing a lot more database based stuff in recent months and hence I have learned a number of new things. In the following I'll be attempting to share my newly found knowledge on <strong>stored procedures</strong> and SQL <strong>case</strong> statements.</p>
<h2>Stored procedures</h2>
<p>Let's start off by looking at some code:</p>
<p><em>CREATE PROCEDURE [dbo].[qGetBannerAd] (<br />
	@adBannerType int = NULL,<br />
	@ad_amsSectionID varchar(30) = NULL,<br />
	@adPageLocation int = NULL,<br />
	@NumOf int = 1<br />
)<br />
AS<br />
<br />
DECLARE<br />
	@BaseSQL varchar(1000),<br />
	@SQLStatement varchar(8000)<br />
<br />
/* <br />
 initialise the base SQL <br />
 if banner type is valueCLick get code<br />
 else get display name, filename, width and height<br />
*/<br />
IF @adBannerType = 0<br />
	SET @BaseSQL = 'SELECT TOP ' + cast(@NumOf as varchar(100)) + 'AD.adAdvertsID, AD.adCodeSnippet, AD.adRanking'<br />
ELSE<br />
	SET @BaseSQL = 'SELECT TOP ' + cast(@NumOf as varchar(100)) + 'AD.adAdvertsID, AD.adDisplayName, AD.adBannerType, AD.adBannerLink, AD.adMaximumDisplays, AD.adRanking, AD.adHeight, AD.adWidth, AD.adFileName'<br />
<br />
SET @BaseSQL = @BaseSQL + '<br />
	FROM tbl_Adverts_Details AD <br />
	WHERE getDate() BETWEEN AD.adStartDateTime AND AD.adEndDateTime<br />
	AND AD.adPublish = 1<br />
	AND AD.adIsDeleted = 0'<br />
<br />
/* if an internal make sure it's not passed it's max display span */<br />
IF @adBannerType = 1<br />
	SET @BaseSQL = @BaseSQL + ' AND  AD.adTimesDisplayed < CASE AD.adMaximumDisplays WHEN - 1 THEN 200000000000000 ELSE  AD.adMaximumDisplays END'<br />
<br />
SET @SQLStatement = ' AND AD.adBannerType = ' + cast(@adBannerType as varchar(100)) + ' AND AD.ad_amsSectionID = ' + cast(@ad_amsSectionID as varchar(100)) + ' AND AD.adPageLocation = ' + cast(@adPageLocation as varchar(100))<br />
<br />
/* Append the order by clause */<br />
SET @SQLStatement = @BaseSQL + @SQLStatement + ' ORDER BY NewID()'<br />
<br />
/* Exceute the SQL */<br />
EXEC(@SQLStatement)<br />
GO</em></p>
<p>This stored procedure was created to retrieve a set of Banner ads for an application we had developed. In the first instance we create the stored procedure (<em>SP</em>) and declare the parameters that it expects to take (these are prefixed by the'@' symbol). Next I declared a set of variables that I as to use to build up the SQL to be executed. As you can see after the declaration based on one of the parameters passed (<em>@adBannerType</em>) I determine which select statement to run and set it to <em>@BaseSQL</em> which I declared previously.</p>
<p>The rest of the SP follows the same kind of tack, only know I use the parameters passed to determine what kind of where clauses to run. Some things that may make you ponder at this stage are the <em>CASE</em> statement and <em>ORDER BY NewID()</em>, fear not I'll be covering these shortly.</p>
<p>Now we have our SP how do we test it? Simply open your Query Analyzer and using the above example the statement to execute would be:</p>
<p><em>exec qGetBannerAd 1,2,2,3</em></p>
<p>the comma delimited values are the parameters that the SP expects and these are provided in the sequence they are specified. If you fail to do that the SP will more than likely fail.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>411</wp:post_id>
		<wp:post_date>2003-10-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stored-procedures</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Randomly displaying query rows</title>
		<link>http://gregs.tcias.co.uk/2003/10/20/randomly-displaying-query-rows/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=412</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ever wanted to have a result set to be displayed in a random fashion on each display?? This is a really short and hopefully useful tit bit. Programmatically I am sure you have all figured out how to retrieve a random record, but have you ever considered letting the database do the work? Or have an ordered result set be displayed in a random fashion on each refresh of the page?</p>
<p>The trick is to order the query based on the <strong>newID()</strong> function, like such:</p>
<p><em>SELECT * FROM tablename ORDER BY  NewID();</em></p>
<p>As you may guess for eacxh record retrieved a new UUID is generated and the output order by that value. Simple as...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>412</wp:post_id>
		<wp:post_date>2003-10-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>randomly-displaying-query-rows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Base guidelines for accessibility</title>
		<link>http://gregs.tcias.co.uk/2003/08/18/base-guidelines-for-accessibility/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=424</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Having recently been faced with an accessibility complaint I was tasked with rectifying the issues that one of our sites faced. In the following I have drawn up my very own base guidelines for making a site accessible, well at least as far as I understand it and do please note that this is by no means a complete listing of the requirements. For more information, please take a look <a href="#resources" title="resource listing">at the resource listing</a> below.</p>

<h2>Priority 1</h2>
<ol>
	<li> give alternative text options for non-text elements: Flash, images (concentrating on image content, functionality or representation [for bullet point image use for example "* bullet item"]). Note spacer images is used should be have alt attribute value of "*" [according to RNIB]. If a longer description is required (due to an elaborate image) use the <strong>longdesc</strong> attribute for &lt;img&gt; and title for &lt;a&gt;.</li>
	<li>another reason not to use Frames: if used need to provide meaningful NOFRAMES content (such as links to navigation and content)</li>
	<li>avoid image maps or provide redundant links for these</li>
	<li>if multimedia is being used (videos for example): there should be a text based description of the auditory track</li>
	<li>in addition to the previous items, consider providing a closed caption for the presentation</li>
	<li>colours, where colours are used to convey information (i.e. red for errors), ensure that information is also conveyed without (i.e. "warning: errors have occurred!", bolded and bigger font size)</li>
	<li>natural language: if you change the language used in the body of text say from English to French, clearly mark it using the <strong>lang</strong> attribute within and encapsulating tag</li>
	<li>where tables are used make sure you clearly identify column and row headers. For example:<br /><br />
<em>&lt;table summary="table description goes here"&gt;<br />
	&lt;caption&gt;table caption goes here&lt;/caption&gt;<br />
	&lt;tr&gt;<br />
		&lt;th id="header1"&gt;column header&lt;/th&gt;<br />
		&lt;th id="header2"&gt;2nd column header&lt;/th&gt;<br />
	&lt;/tr&gt;<br />
	&lt;tr&gt;<br />
		&lt;td id="header1"&gt;column value 1&lt;/td&gt;<br />
		&lt;td id="header2"&gt;column value 2&lt;/td&gt;<br />
	&lt;/tr&gt;<br />
&lt;/table&gt;</em><br /><br />
Which would be rendered as follows by a screen reader:<br /><br />
<strong>Caption:</strong> table caption goes here<br />
<strong>Summary:</strong> table description goes here<br />
<strong>Column header:</strong> column value 1, 2nd column header: column value 2<br /></li>
	<li>Organise documents so that can be read without style sheets (semantic use of <acronym title="HyperText Markup Language">HTML</acronym>/<acronym title="eXtensible HyperText Markup Language">xHTML</acronym> tags)</li>
	<li>If dynamic content is used make sure that all the text for non text equivalents is also updated, i.e. images, applets, frames. For example:<br /><br />

<em>&lt;applet code="Press.class" width="500" height="500" alt="Java applet: how temperature affects pressure"&gt;<br />
         As temperature increases, the molecules in the balloon...<br />
&lt;/applet&gt;</em><br />
<br />
OR<br />
<br />
<em>&lt;object classid="java:Press.class" width="500" height="500"&gt;<br />
        As temperature increases, the molecules in the balloon...<br />
&lt;/object&gt;</em><br />
<br />
If scripts are used to present dynamic content (such as JavaScript to load in content), then make use of the &lt;noscript&gt; tag to represent alternative content</li>
	<li><acronym title="Portable Document Format"><strong>PDFs</strong></acronym>: provide text alternative for PDF files, such text or <acronym title="eXtensible HyperText Markup Language">xHTML</acronym>. Also consider directing user to <a href="http://www.adobe.com/products/acrobat/solutionsacc.html" title="Acrobat solutions for accessibility">this link</a></li>
	<li>since most user agents (browsers and <acronym title="personal digital assistant">PDA</acronym>s for example) don't allow for control over flickering content such as &lt;blink&gt;, avoid using it!!!</li>
	<li><strong>server side image maps</strong>: where image maps are generated server side use redundant links again to allow for access to the site as an alternative, also use the alt attribute in the image to inform the user of the meaning and where the redundant links are</li>
	<li>frames: gives frames meaningful names and titles.</li>
</ol>

<h2>Priority Level 2 and 3</h2>
<ol>
	<li>while rendering image maps make sure appropriate text equivalents are displayed (lv 3)</li>
	<li>provide enough contrast between foreground and back ground colours (both for HTML and images) (lv 2)</li>
	<li>where possible use a text link rather than an image. (lv 2)</li>
	<li>font sizes use relative rather than absolute values , i.e. use em, rather than px, pt, cm (lv 2)</li>
	<li>user header elements to outline document structure (hidden <hx> [where x is a numeric value] tag that renders when style sheet is disabled) (lv 2)</li>
	<li>Only use tables for presentation when their content can be linearised (i.e. each cell translates to a paragraph and is rendered from column to column, row by row) (lv 2)</li>
	<li>do not visually table cell content (lv 2)</li>
	<li>do not use auto-refreshing pages, until browsers can allow end users to control this behaviour (lv 2)</li>
	<li>tabbing, create a logical tab order in your navigational links, form controls and other objects [use the attribute <strong>tabindex</strong>] (lv3)</li>
	<li>no to pop ups and no to changing the window focus without warning the user first (lv 2)</li>
	<li>Label your form controls (lv 2). e.g:<br />
<br />
<em>&lt;label for="firstname"&gt;First name: <br />
	&lt;input type="text" id="firstname" tabindex="1"&gt;<br />
&lt;/label&gt;</em><br />
<br />
Another point to consider is grouping a large amount of fields together into logical groups. You can do this using the <strong>&lt;fieldset&gt;</strong> tag around a grouping of form controls. You also may want to consider using the an additional <strong>&lt;legend&gt;</strong> tag to describe the logical grouping.
	</li>
	<li>when using links clearly label the target link, i.e. use the title attribute in <strong>&lt;a&gt;</strong> to indicate the target document (such as the document title) (lv 2)</li>
	<li>provide semantic information about each document in your site, e.g. <strong>&lt;title&gt;</strong> and meta data. (lv 2)</li>
</ol>

<p>There you go my review of the base requirements with some hints on how to achieve Level 1,2 and three compliance. Below I have listed a whole raft of additional resources that delve into more depth or simply provide good tools for testing your site. </p>

<a name="resrouces"></a>
<h2>External resources</h2>
<ul>
	<li><a href="http://joeclark.org/book/sashay/serialization/">http://joeclark.org/book/sashay/serialization/</a> - the complete book "Building accessible web sites" by Joe Clark is available on-line!</li>
	<li><a href="http://www.accessify.com/">http://www.accessify.com/</a> - A great first stop for finding out information about accessibility guidelines and issues</li>
	<li><a href="http://www.juicystudio.com/services/colourcontrast.asp">http://www.juicystudio.com/services/colourcontrast.asp</a>  - a handy tool for measuring the colour contrast to make sites accessible according to 2.1 of the priority 1 guidelines. </li>
	<li><a href="http://www.w3.org/TR/WCAG10/full-checklist.html">http://www.w3.org/TR/WCAG10/full-checklist.html</a> - the checklist for achieving basic accessibility</li>
	<li><a href="http://www.vischeck.com/">http://www.vischeck.com/</a> - Simulates colour blind vision</li>
</ul>

<h2>Font control resources</h2>
<ul>
	<li><a href="http://www.useit.com/alertbox/20020819.html">http://www.useit.com/alertbox/20020819.html</a></li>
	<li><a href="http://www.wilk4.com/webdevres/fontcss3.htm">http://www.wilk4.com/webdevres/fontcss3.htm</a></li>
	<li><a href="http://www.happycog.com/thinking/colophon.html">http://www.happycog.com/thinking/colophon.html</a></li>
	<li><a href="http://www.alistapart.com/switcher.html">http://www.alistapart.com/switcher.html</a></li>
	<li><a href="http://hotwired.lycos.com/webmonkey/00/16/index2a_page2.html">http://hotwired.lycos.com/webmonkey/00/16/index2a_page2.html</a></li>
	<li><a href="http://www.alistapart.com/stories/sizematters/">http://www.alistapart.com/stories/sizematters/</a></li>
	<li><a href="http://devedge.netscape.com/">http://devedge.netscape.com/</a></li>
</ul>

<h2>Tools</h2>
<ul>
	<li><a href="http://www.uoguelph.ca/~stuartr/articles/favlets.shtml">http://www.uoguelph.ca/~stuartr/articles/favlets.shtml</a> - colour contrast favelet</li>
	<li><a href="http://liftonline.usablenet.com/as/download/gT9lTKLd/download.html">http://liftonline.usablenet.com/as/download/gT9lTKLd/download.html</a> - Dreamweaver extension</li>
</ul>

<h2>CSS/xHTML</h2>
<ul>
	<li><a href="http://www.w3.org/Style/CSS/">http://www.w3.org/Style/CSS/</a> - CSS specification</li>
	<li><a href="http://jigsaw.w3.org/css-validator/">http://jigsaw.w3.org/css-validator/</a> - CSS validator</li>
	<li><a href="http://www.w3.org/MarkUp/">http://www.w3.org/MarkUp/</a> - Markup specifications</li>
	<li><a href="http://validator.w3.org/">http://validator.w3.org/</a> - Markup validator</li>
	<li><a href="http://www.csszengarden.com/">http://www.csszengarden.com/</a> - a superb example of CSS and xHTML working together</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>424</wp:post_id>
		<wp:post_date>2003-08-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>base-guidelines-for-accessibility</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Big List</title>
		<link>http://gregs.tcias.co.uk/2003/09/04/big-list/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=425</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It's been a while since I last put together a list of links and sites I have uncovered/discovered/been led to, so this is a big one. A right old collection of resources and information. Dig it!</p>
<ol>
	<li><a href="http://www.asp101.com/articles/matteo/google/default.asp" title="Cheating Google (and Spiders)">A little trickery</a> using server side scripting to determine the user agent and then dynamically displaying additional keyword info (a better way than using black on black text) if the user agent is a spider</li>
	<li><a href="http://www.google.com/webmasters/index.html" title="">Google Information for Webmasters</a>, as the title indicates all webmasters need to know to get their site high up on Google's listings.</li>
	<li><a href="http://www.robotstxt.org/wc/robots.html" title="The Web Robots Pages">Information and resources</a> about the robot.txt file</li>
	<li>A quite hilarious <a href="http://www.newswriting.com/groaners.htm" title="The 100 Worst Groaners">list of words</a> not to use in web writing...</li>
	 <li>Found a <a href="http://modulo26.net/daily/080703.php" title="Multi-Part Forms">useful article</a> which makes use of show/hide JavaScript to keep forms that are extremely long short. Enhances the experience by segmenting the questions and not submitting until all fields are completed. Also has a few externals on advice how to build good web forms.</li>
	 <li>The last post included a link to Doug Bowmans explanation of an image replacement technique. Sadly Screen readers such as Jaws had issues with this technique and hence made the solution no good due to accessibility issues. Now <a href="http://phark.typepad.com/phark/2003/08/accessible_imag.html" title="Accessible Image Replacement">here a solution is presented</a>, which makes the hidden text span shift off the visible area of the screen... funky text image, plus accessibility... well done.</li>
	 <li>All about <a href="http://fawny.org/issn.html" title="ISSN for Weblogs">ISSN's</a> (International Standard Serial Number).</li>
	 <li><a href="http://www.javascriptkit.com/howto/htaccess.shtml" title="Comprehensive guide to .htaccess">Comprehensive guide to .htaccess</a>, a really comprehensive guide to using your .htaccess file. Hot on the trot <a href="http://zlog.co.uk/archives/2003/08/clean_urls" title="clean URLS">this blog</a> talks about their conversion using rewrite  and a useful article on <a href="http://alistapart.com/stories/urls/index.html" title="URLS, URLS,URLS">ALA</a>. And finally here you can find a comprehensive "<a href="http://www.engelschall.com/pw/apache/rewriteguide/" title="A Users Guide to URL Rewriting with the Apache Webserver">cook book</a>" on the topic.</li>
	 <li>Resource listing from <a href="http://www.modrewrite.com/" title="mod-rewrite.com">mod-rewrite.com</a>.</li>
	 <li>Another useful article on how to <a href="http://www.alistapart.com/stories/succeed/" title="How to Succeed With URLs, Part One">combine PHP and htaccess</a>.</li>
	 <li>In depth listing and explanation of <a href="http://www.altaway.com/support/htaccess.html#4" title=".htaccess files">all the switches</a> courtesy of the above entry</li>
	 <li><a href="http://www.sitepoint.com/article/910/" title="mod_rewrite">A Beginner's Guide to URL Rewriting</a> - is exactly that... very useful</li>
	 <li>Since mod_rewrite can heavily rely on regular expressions <a href="http://etext.lib.virginia.edu/helpsheets/regex.html" title="Using Regular Expressions">here is a link</a> to an excellent resource on the topic.</li>
	 <li>And another <a href="http://gnosis.cx/publish/programming/regular_expressions.html" title="Introduction to the Tutorial">Regular expressions resource</a> to help me a long the way</li>
	 <li>This looks like <a href="http://www.textads.biz/" title="Textads.biz">a useful site</a> that serves up text based banners and manages all aspects for you (billing, impressions and rotation).</li>
	 <li><a href="http://www.statmarket.com/" title="Stat Market">Stat Market</a> a useful site with information on global browser stats (payment required) </li>
	 <li><a href="http://www.blogstakes.com/" title="Blog stakes">Blog stakes</a> - had a cool little widget thingy: <strike>&brvbar;</strike> and this is the source: &lt;strike&gt;&amp;brvbar;&lt;/strike&gt;</li>
	 <li>A neat little article from Eric Meyer on <a href="http://www.complexspiral.com/publications/containing-floats/" title="Containing Floats">containing floats</a>, i.e. how to stop floating items from superimposing over the next layer. Pretty cool.</li>
	 <li>Adaptive path have put a heap of their <a href="http://www.adaptivepath.com/events/training/construct/files.php" title=From Construct to Structure: Downloads"">workshop assets</a> for download. Very insightful.</li>
	 <li>Ryan Carver, <a href="http://www.fivesevensix.com/studies/onetruefit/" title="One True Fit - standards design">discusses his implementation</a> of the "One True Fit" web site. He also discusses his <a href="One True Fit - standards design" title="framework">framework</a>, which I found extremely interesting.</li>
	 <li>Ever wondered <a href="http://www.welie.com/patterns/">design patterns</a>? Specifically for the web? This site has a raft of patterns, with explanations and rationales... well worth book marking.</li>
	 <li>Ian Wilson of WaSP has written <a href="http://www.mezzoblue.com/cgi-bin/mt/mezzo/archives/000238.asp" title="Designing for the Future, and the Training Gap">this excellent article</a> on the gap between web standards and training.</li>
	 <li>Vincent Flanders has put up an article on standards and accessibility and is entitled: <a href="http://www.fixingyourwebsite.com/googleisgod.html" title="Google is god. Don't piss her off">Google is god. Don't piss her off</a>, not only does it help to build your site with accessibility in mind, but it also improves a search engine's ability to index your site... it sees your site, just the way Lynx does!!</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>425</wp:post_id>
		<wp:post_date>2003-09-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>big-list</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Portfolio</title>
		<link>http://gregs.tcias.co.uk/2003/09/24/portfolio/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=426</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="case">
			<img src="/v2/i/case/reach_case_1.gif" width="50" height="50" alt="Reach 1" align="left" class="floatleft" />
			<h4>Reach Conferencing</h4>
			<p>Find out how we helped a new Australian conferencing start up enter the on-line fray, define an on-line identity and implement a successful search engine optimised web site. </p>
			<p align="right"><a href="reach_conferencing.php" title="read more about Reach Conferencing"><img src="/v2/i/tcias_more.gif" alt="next case study" align="absmiddle" width="16" height="16" border="0" /></a></p>
			</div>
			<div class="case">
			<img src="/v2/i/case/robbie_case_1.gif" width="50" height="50" alt="Robbie 1" align="left"  class="floatleft" />
			<h4>Robbie Slater</h4>
			<p>Former socceroo and now Foxtel TV pundit Robbie Slater was looking to make his voice heard on topics covering all aspects of football, but more specifically he wanted a forum to discuss the game in Australia.</p>
			<p>See how we helped him realise his goals?</p>

			<p align="right"><a href="robbie_slater.php" title="read more about Robbie Slater"><img src="/v2/i/tcias_more.gif" alt="next case study" align="absmiddle" width="16" height="16" border="0" /></a></p>
			</div>
			<div class="case">
			<img src="/v2/i/case/chandler_case_1.gif" width="50" height="50" alt="Chandler Macleod Group" align="left"  class="floatleft" />
			<h4>Chandler Macleod Group</h4>
			<p>Chandler Macleod Group (CMG) are the largest Australian owned Recruitment and Human Capital management company, providing services to individuals and companies alike ranging from employment opportunities, outsourced salary packaging to on-line aptitude and psychology assessment.</p>
<p>Read about what we were able to do for them...</p>
			<p align="right"><a href="chandler_macleod_group.php" title="read more about Chandler Macleod"><img src="/v2/i/tcias_more.gif" alt="next case study" align="absmiddle" width="16" height="16" border="0" /></a></p>
			</div>
			<div class="case">
			<img src="/v2/i/case/masala_case_1.gif" width="50" height="50" alt="Masala Mix" align="left"  class="floatleft" />
			<h4>Masala Mix</h4>
			<p>Masala Mix is a unique radio show broadcast on community radio 2SER-FM in Sydney. Each week the Masala Mix broadcasts a cross-pollinated sound which brings together Hindi film music, Bhangra, dhol break beats and the latest in experimental Asian underground music.</p>
			<p>Read about TCIAS? involvement in re-vamping their existing site?</p>

			<!--<p align="right"><a href="masala_mix.php" title="read more about Masala Mix"><img src="/v2/i/tcias_more.gif" alt="next case study" align="absmiddle" width="16" height="16" border="0" /></a></p>-->
			</div>
			<!--<div class="case">
			<img src="/v2/i/case/aphyxn_case_1.gif" width="50" height="50" alt="Aphyx Nation 1" align="left"  class="floatleft" />
			<h4>Aphyx Nation</h4>
			<p>Lorem ipsum dolor sit amet, consectetaur adipisicing elit, sed do eiusmod tempor incididunt ut et dolore magna aliqua.</p>
			<p align="right"><a href="aphyx_nation.php" title="read more about Aphyx Nation"><img src="/v2/i/tcias_more.gif" alt="next case study" align="absmiddle" width="16" height="16" border="0" /></a></p>
			</div>-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>426</wp:post_id>
		<wp:post_date>2003-09-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>portfolio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Changing an icon\&#039;s colour scheme</title>
		<link>http://gregs.tcias.co.uk/2003/10/20/changing-an-icons-colour-scheme/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=427</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was recently asked to modify the colour scheme of an existing set of icons and since I do this infrequently enough I am bound to forget it in next to no time. So here is my little aide memoire on how you go about changing the colour scheme of an icon with the help of the Magic Wand Tool in Photoshop. I have also included all the keyboard shortcuts I used to speed up the process, these appear in brackets.</p>
<p>So open up your image and select your Magic Wand Tool (short cut shift+W) and for this exercise make sure that Tolerance is set to 0 and anti-aliased, Contiguous and Use all Layers are unchecked. Then  go to the Image menu option (Alt+i), select Mode (M) and set the Mode to RGB Colour (R). The groud work has been done, now it's time to choose the new colour scheme. I use the colour switcher, for the purpose here the colours aren't that important, just the process is, so pick a foreground colour and a background colour. ALT+backspace fills the image area with the foreground colour and CTRL+backspace fills the image area with the background colour. OK, but that's exactly what we had in mind. We wanted to change the colour scheme of an icon, i.e. change the background colour but leave the image intact and this is where the Magic Wand Tool comes in handy.</p>
<ol>
<li>With the wand tool selected click on the background area to select it.</li>
<li>Use CTRL+backspace or ALT+backspace to set the background colour to your selected foreground/background colour selection. You can have additional features for this kind of fill action by doing SHIFT+backspace.</li>
<li>Once you are happy with the background you can do the same with the foreground image if you like, by selecting that with your Magic Wand Tool and using the same keystrokes again.</li>
<li>Once you are happy, do SHIFT+CTRL+ALT+s to save the image for the web</li>
</ol>
<p>And you are done, pretty straightforward as with most things in Photoshop once you know how!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>427</wp:post_id>
		<wp:post_date>2003-10-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>changing-an-icons-colour-scheme</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>reach conferencing</title>
		<link>http://gregs.tcias.co.uk/2003/10/01/reach-conferencing/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=428</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="/v2/i/case/reach_case_2.gif" width="100" height="100" alt="Reach 1" class="floatleft" /><img src="/v2/i/case/reach_case_3.gif" width="100" height="100" alt="Reach 1" class="floatleft" /><img src="/v2/i/case/reach_case_4.gif" width="100" height="100" alt="Reach 1" class="floatleft" /><img src="/v2/i/s.gif" width="100" height="100" alt="spacer" class="floatleft2" /><img src="/v2/i/s.gif" width="100" height="100" alt="spacer" class="floatleft2" /><img src="/v2/i/s.gif" width="100" height="100" alt="spacer" class="floatleft2" /><img src="/v2/i/s.gif" width="100" height="100" alt="spacer" class="floatleft2" /><img src="/v2/i/s.gif" width="100" height="100" alt="spacer" class="floatleft2" /><img src="/v2/i/s.gif" width="100" height="100" alt="spacer" class="floatleft2" /><img src="/v2/i/s.gif" width="100" height="100" alt="spacer" class="floatleft2" />
<h4>The challenge</h4>
<p style="padding-bottom:5px;padding-left:120px;">Reach Conferencing are a Brisbane (Qld, Australia) based conferencing service provider, that started up in 2003. Having just launched they were equally keen to have an on-line identity that would reflect their brand and core values. Reach Conferencing ?s principal goal was to communicate effectively with their customers.</p>

<p style="padding-bottom:5px;padding-left:120px;">The site was to load fast, be forward compatible and search engine optimised. Furthermore Reach Conferencing should have the ability to maintain the site?s content themselves without needing to refer to the implementation team for every site change.</p>

<p style="padding-bottom:5px;padding-left:120px;">The site should be structure in such a manner that future services could be added in a modular manner without impacting the existing structure and functionality and therefore not reduce the user experience.</p>
<h4>The approach</h4>
<p style="padding-bottom:35px;padding-left:120px;">After detailed discussions with the project champions at Reach Conferencing, Teacup In A Storm set about developing a proposal that would meet all of the challenges set out previously. After carrying out a detailed analysis of the requirements and talking at length with the people involved, Teacup In A Storm was able to put together a set of requirements, site architecture and proposal documents that would enable Reach Conferencing to move forward in their chosen direction.</p>
<h4>The solution</h4>
<p style="padding-bottom:5px;padding-left:120px;">Teacup In A Storm set out in the accepted proposal was the development of standards based interface (using <acronym title="Extensible Hypertext Markup Language">xHTML</acronym> transitional and <acronym title="Cascading Style Sheets">CSS</acronym>), which would be powered by the in-house developed <a href="/v2/products/amp.php" title="AMP">&amp;amp;</a> content management system. By adopting a standards based development approach Teacup In A Storm not only ensured optimised rendering times and search engine readability of the site, but also separated content from presentation allowing for easy and independent site maintenance.</p>

<p style="padding-bottom:5px;padding-left:120px;">The site architecture took careful consideration of the companies declared on-line goals as well as those of the end-users of the site. The site was developed using the open source <acronym title="PHP: Hypertext Preprocessor">PHP</acronym> platform and MySQL database server to allow for flexible and powerful delivery of the site.</p>

<p style="padding-bottom:5px;padding-left:120px;">Adopting a phased approach to the development of the site, allowed a break down of the site goals into functional modules. In the first phase the aim was to define the on-line identity and allow the site to act as an information tool for both existing and potential clients. The second phase focused on delivering more customer focused interaction, but integrating a client registration and secure login. In the near future Reach Conferencing is looking to extend the functionality of the customer section with on-line billing facilities and conferencing booking.</p>

<p style="padding-bottom:5px;padding-left:120px;" align="right"><a href="robbie_slater.php">Next case study <img src="/v2/i/tcias_more.gif" alt="next case study" align="absmiddle" width="16" height="16" border="0" /></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>428</wp:post_id>
		<wp:post_date>2003-10-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reach-conferencing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>contact us</title>
		<link>http://gregs.tcias.co.uk/2003/10/09/contact-us/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=429</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Get in touch with us and you?ll be talking to an individual who will champion your project. Our approach is as easy as 1,2,3</p>
			<p>Let?s talk, be it by mail, e-mail, using the form below or over the phone, or indeed in person and we can start discussing your needs and ideas. Based on that we?ll quickly deliver a proposal or if you require help you deliver a request for proposal. Once you are ready we?ll get started and of course keep you up to date every step of the way.</p>
			<br />
			<form action="confirmation.php" method="post" name="frm_contact_us" id="frm_contact_us" enctype="application/x-www-form-urlencoded">
				<fieldset>
					<legend>Send us a message</legend>
					<div class="row">
						<span class="label">Name</span><span class="formw"><label for="r_name"><input type="text" name="r_name" id="r_name" title="Text input: name" value="" size="20" /></label></span>
					</div>
					<div class="row">
						<span class="label">E-mail</span><span class="formw"><label for="r_email"><input type="text" name="r_email" id="r_email" title="Text input: e-mail" value="" size="35" /></label></span>
					</div>
					<div class="row">
						<span class="label">How can we help you?</span><span class="formw"><label for="r_about"><select name="r_about" id="r_about" title="Select input: how can we help you">
						<option value="CMS">&amp;amp; [our cms]</option>
						<option value="campaign manager">&amp;64; [our campaign manager]</option>
						<option value="development">Development</option>
						<option value="design">Design</option>
						<option value="usability">Usability</option>
						<option value="accessibility">Accessibility</option>
						<option value="get to know us">Get to know us?</option>
						</select></label>
					</span>
					</div>
					<div class="row">
						<span class="label">Drop us a note:</span><span class="formw">
						<label for="r_note"><textarea name="r_note" id="r_note" title="Text area: drop us a note" cols="30" rows="6"></textarea></label>
						</span>
					</div>
					<div class="spacer">
					&nbsp;
					</div>
					<div align="center" style="clear: both;"><input type="submit" name="btn_submit" id="btn_submit" value="get in touch" class="button" /></div>
			</fieldset>
		 </form>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>429</wp:post_id>
		<wp:post_date>2003-10-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>contact-us</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Full text catalogs in MS SQL</title>
		<link>http://gregs.tcias.co.uk/2003/10/20/full-text-catalogs-in-ms-sql/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=430</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Having recently explored Verity 2K, I have come across another way of implementing a search feature on your site. If most of your content is stored an MS SQL database then you can make use of Full Text Catalogues to search your content for keywords. This article is a little bity as it just covers the basic steps without many in-depth explanations. For those who would like to know more about the various steps, please just consult on-line help books as that's where all of this stuff was lifted from. So without further ado, let's get started.</p>
<h2>Preparing a full text catalogue</h2>
<p><em>sp_fulltext_database</em>. This stored procedure initialises full-text indexing or removes all full-text catalogs from the current database, and the syntax is as follows:</p>
<p><em>USE Northwind<br />
EXEC sp_fulltext_database 'enable'</em></p>

<h2>Creating a full text catalogue</h2>
<p><em>sp_fulltext_catalog</em>, this stored procedures drops and creates a full-text catalog, and starts and stops the indexing action for a catalog. Multiple full-text catalogs can be created for each database, e.g.:</p>

<p><em>USE Northwind<br />
EXEC sp_fulltext_catalog 'our_test_catalogue', 'create'</em></p>

<h2>Preparing the table to be indexed for full-text searching</h2>
<p><em>sp_fulltext_table</em>, this marks or unmarks a table for full-text indexing, e.g.:</p>
<p><em>USE Northwind<br />
EXEC sp_fulltext_table 'Categories', 'create', 'our_test_catalogue', 'PK_Categories'</em></p>

<h2>Adding a column to a catalogue</h2>
<p><em>sp_fulltext_column</em> specifies whether or not a particular column of a table participates in full-text indexing.</p>
<p><em>USE Northwind<br />
EXEC sp_fulltext_column Categories, Description, 'add'</em></p>

<h2>To actually populate the catalogue</h2>
<p>SQL Server MMC >> Database to be catalogues >> Full Text catalogue >> Actual catalogue >> Right click, then start full population.</p>

<h2>Maintenance</h2>
<p>You'll want to run a scheduled task to populate the catalogue regularly with new and updated records, as this is not handled automatically.</p>

<h2>Searching</h2>
<p>Searching your catalogs couldn't be simpler, all you need to do is write a select statement that runs against your catalog.</p>

<p><strong>Basic search: </strong> <em>Select * from Categories where contains(Description, 'formsof(inflectional, coffee)')</em></p>

<p><strong>Advanced search: </strong>Use CONTAINSTABLE as it is faster on larger record sets</p>

<p><strong>Weighting:</strong> Weighting allows you to weigh the importance of your keywords. In this case bread has higher importance.</p>
<p><em>USE Northwind<br />
GO<br />
SELECT FT_TBL.CategoryName, FT_TBL.Description, KEY_TBL.RANK<br />
FROM Categories AS FT_TBL INNER JOIN <br />
   CONTAINSTABLE(Categories, Description, <br />
   'ISABOUT (breads weight (.8), <br />
   fish weight (.4), beers weight (.2) )' ) AS KEY_TBL<br />
   ON FT_TBL.CategoryID = KEY_TBL.[KEY]<br />
ORDER BY KEY_TBL.RANK DESC<br />
GO</em></p>

<p><strong>Matches the entire string:</strong> Below is an example of matching an entire string, in this case the entire keywords to be searched for are: "soft drinks"</p>
<p><em>USE Northwind<br />
GO<br />
SELECT FT_TBL.CategoryName, FT_TBL.Description, KEY_TBL.RANK<br />
FROM Categories AS FT_TBL INNER JOIN <br />
   CONTAINSTABLE(Categories, *, '"soft drinks"') AS KEY_TBL<br />
   ON FT_TBL.CategoryID = KEY_TBL.[KEY]<br />
ORDER BY KEY_TBL.RANK DESC<br />
GO</em></p>

<p><strong>Breaking the string apart without "" and using operators 'and', 'or':</strong></p>
<p><em>USE Northwind<br />
GO<br />
SELECT FT_TBL.CategoryName, FT_TBL.Description, KEY_TBL.RANK<br />
FROM Categories AS FT_TBL INNER JOIN <br />
   CONTAINSTABLE(Categories, *, 'soft and drinks') AS KEY_TBL<br />
   ON FT_TBL.CategoryID = KEY_TBL.[KEY]<br />
ORDER BY KEY_TBL.RANK DESC<br />
GO</em></p>

<p><strong>Searching for a list of keywords:</strong></p>
<p><em>USE Northwind<br />
GO<br />
SELECT FT_TBL.CategoryName, FT_TBL.Description, KEY_TBL.RANK<br />
FROM Categories AS FT_TBL INNER JOIN <br />
   CONTAINSTABLE(Categories, *, 'ISABOUT (soft, drinks, bread)') AS KEY_TBL<br />
   ON FT_TBL.CategoryID = KEY_TBL.[KEY]<br />
ORDER BY KEY_TBL.RANK DESC<br />
GO</em></p>

<h2>Some links</h2>
<ul>
        <li><a href="http://www.sqlmag.com/Articles/Index.cfm?ArticleID=8828">Build a Better Search Engine</a></li>
        <li><a href="http://www.sqlmag.com/Articles/Index.cfm?ArticleID=8967">Sample full text search</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>430</wp:post_id>
		<wp:post_date>2003-10-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>full-text-catalogs-in-ms-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>SQL Case statements</title>
		<link>http://gregs.tcias.co.uk/2003/10/20/sql-case-statements/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=431</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Switch/case will be familiar to most developers, but did you know you could used them in your SQL statements as well?? I didn't and here's how you do it.</p>
<p>The syntax for this is pretty straightforward, but briefly take a look at the SQL statement below</p>
<p><em>SELECT TOP #arguments.recordcount# tbl1.someID, tbl1.adDisplayName, type = <br />
CASE tbl1.someBannerType<br />
WHEN 0 THEN 'ValueClick'<br />
WHEN 1 THEN 'Internal'<br />
ELSE 'Not yet categorized'<br />
END, <br />
tbl1.someRanking, tbl1.someStartDateTime, tbl1.someDateAdded, tbl1.someDateUpdated, tbl1.someModifiedBy, tbl2.someCode, tbl3.someName<br />
FROM tbl_2  tbl2<br />
INNER JOIN tbl_1 tbl1 ON tbl2.someOtherID = tbl1.someOtherID <br />
INNER JOIN tbl_3 tbl3 ON tbl2.someCode = tbl3.someCode<br />
WHERE  1 = 1<br /></em></p>
<p>The query was used for a banner ad component, so based on the Banner type being passed I wanted to dynamically set a type. If the value was 0 then the column <em>type</em> should display <strong>ValueClick</strong>, if 1 then it was an <strong>internally</strong> served advert. If the value passed was neither 0 or 1 then it should display another message.</p>
<p>As you can see the syntax differs somewhat from switch/case, but the principal is similar. <strong>CASE</strong> is equal to <em>switch</em> where <em>tbl1.someBannerType</em> is the value being evaluated. Where you would normally use <em>case</em>, you know have <strong>WHEN</strong>. So for each case if you have a <strong>WHEN x THEN something</strong> statement. The default case found if switch/case statements also exists and looks thus: <strong>ELSE something</strong>. And to conclude you'll need to close that block and you do so by way of and <strong>END</strong></p>
<p>And just as an afterthought, if you are using Oracle the function to use is <strong>DECODE</strong> and this is how you would apply it:</p>
<p><em>SELECT field1,<br />
       DECODE (field2,<br />
               100000, 'Rich',<br />
               1000000, 'Richer',<br />
               10000000, 'Richest')<br />
  FROM table<br />
</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date>2003-10-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-case-statements</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Updates from a select</title>
		<link>http://gregs.tcias.co.uk/2003/10/20/updates-from-a-select/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=432</guid>
		<description></description>
		<content:encoded><![CDATA[I have been doing a lot more database based work recently and have learned one or two pretty useful techniques. Here is an extremely useful one: Running an update based on a select statement.

In the past whenever I could have wanted to do a bulk update on a table based on certain criteria, I would have run a select statement to retrieve a bunch of columns first and then programmatically looped over the result set and updated the values. But there is a much, much easier and way more efficient way of doing this. Just take a quick look at the statement below.

[code]UPDATE someUsersTable
SET someUsersTable.EmailPrivate = someOtherJoinTable.PublicEmail
FROM someUsersTable INNER JOIN someOtherJoinTable ON someUsersTable.userID = someOtherJoinTable.userID
WHERE (tbl_Users.userEmailPrivate = '')[/code]

It was constructed very much the way I would have normally approached the problem. First I wrote the select statement in Query Analyzer, i.e. <em>SELECT * FROM FROM someUsersTable INNER JOIN someOtherJoinTable ON someUsersTable.userID = someOtherJoinTable.userID WHERE (tbl_Users.userEmailPrivate = '')</em>. This gave me the result set I wanted to work with. Next I quite simply removed the SELECT statement replaced it with a corresponding UPDATE statement. So easy when you know how and the performance should be way better than before hand, because rather than making multiple trips back and forth to the database server from the web application it's all handled by the database server in one swoop!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>432</wp:post_id>
		<wp:post_date>2003-10-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>updates-from-a-select</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ms-sql"><![CDATA[MS SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Building an accessible and standards compliant form</title>
		<link>http://gregs.tcias.co.uk/2003/12/16/building-an-accessible-and-standards-compliant-form/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=328</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In recent weeks I have come across two articles, that have helped me massively along the way to create standards based and accessible websites. One of the things that was holding me back so to say was my inability to layout forms nicely without having to resort to tables. That was until I came across Mark Newhouse's <a href="http://alistapart.com/articles/practicalcss/" title="Practical CSS Layout Tips, Tricks, &amp; Techniques">practical CSS article</a>, which had the answers I was after. Having spent some time recently developing accessibility guidelines for my current employer's sites I wanted to put together a brief outline of how to combine accessibility and standards, combined with Patrick Griffith's recent article on <a href="http://www.htmldog.com/guides/htmladvanced/forms.php" title="Accessible Forms">Accessible Forms</a> I was fully equipped to merge the two into one and add a liberal sprinkling of my own knowledge.</p>
<p>So let's start off with the code:</p>
<pre>
<code><em>&lt;style&gt;
#form {
	width: 230px;
	padding: 5px;
	margin: 0px auto;
	font-family: verdana;
	font-size: 0.8em;
}
div.row {
  clear : both;
  padding-top : 10px;
}
div.row span.label {
  float : left;
  width : 80px;
  text-align : right;
}

div.row span.formw {
  float : right;
  width : 130px;
  text-align : left;
}

legend {
}

fieldset {
	margin : 0;
	padding : 5px;
}
input {
	border: 1px solid #000;
	font-family: verdana;
	font-size: 0.8em;
}
textarea {
	border: 1px solid #000;
	font-family: verdana;
	font-size: 0.8em;
}
select {
	border: 1px solid #000;
	font-family: verdana;
	font-size: 0.8em;
}
&lt;/style&gt;
&lt;div id="form"&gt;
	&lt;form action="index.cfm?fuseaction=loginUser" method="post" name="frm_test" id="frm_test"<br />enctype="application/x-www-form-urlencoded"&gt;
	&lt;fieldset&gt;
		&lt;legend&gt;Personal details&lt;/legend&gt;
		&lt;div class="row"&gt;
			&lt;label for="firstName"&gt;
			  	&lt;span class="label"&gt;First name:&lt;/span&gt;
			  	&lt;span class="formw"&gt;&lt;input type="text" size="12" name="firstName" id="firstName" <br />title="text input: first name" value="" tabindex="1" /&gt;&lt;/span&gt;
		  	&lt;/label&gt;
		&lt;/div&gt;
		&lt;div class="row"&gt;
		  	&lt;label for="surname"&gt;
				&lt;span class="label"&gt;Surname:&lt;/span&gt;
				&lt;span class="formw"&gt;&lt;input type="text" size="12" name="surname" id="surname"<br /> title="text input: surname" value="" tabindex="2" /&gt;&lt;/span&gt;
		  	&lt;/label&gt;
		&lt;/div&gt;
 	&lt;/fieldset&gt;
	&lt;fieldset&gt;
		&lt;legend&gt;Address&lt;/legend&gt;
		&lt;div class="row"&gt;
			&lt;label for="address"&gt;
				&lt;span class="label"&gt;Your address:&lt;/span&gt;
				&lt;span class="formw"&gt;&lt;textarea name="address" id="address"<br /> title="textarea input: address" rows="5" cols="16" tabindex="3"&gt;&lt;/textarea&gt;&lt;/span&gt;
			&lt;/label&gt;
		&lt;/div&gt;
		&lt;div class="row"&gt;
			&lt;label for="country"&gt;
			&lt;span class="label"&gt;Country:&lt;/span&gt;
				&lt;span class="formw"&gt;&lt;select name="country" id="country" title="select: country"<br /> tabindex="4"&gt;
				&lt;optgroup label="Europe"&gt;
					&lt;option value="uk"&gt;UK&lt;/option&gt;
					&lt;option value="fr"&gt;France&lt;/option&gt;
					&lt;option value="ger"&gt;Germany&lt;/option&gt;
				&lt;/optgroup&gt;
				&lt;optgroup label="Oceania"&gt;
					&lt;option value="au"&gt;Australia&lt;/option&gt;
					&lt;option value="nz"&gt;New Zealand&lt;/option&gt;
				&lt;/optgroup&gt;
				&lt;/select&gt;&lt;/span&gt;
			&lt;/label&gt;
		&lt;/div&gt;
	&lt;/fieldset&gt;
	&lt;div class="row" align="center"&gt;
	  &lt;input type="submit" name="btn_submit" id="btn_submit" value="submit"/&gt;
	&lt;/div&gt;
	&lt;/form&gt;
&lt;/div&gt;</em></code>
</pre>
<p>OK all clear? Nothing to explain then... Quite honestly most of it you'll glean from the article I mentioned previously, but I'll dwell on a few points.</p>
<ol>
	<li>The form layout: The controlling factor here is the initial style/width definition for the <code>&lt;div&gt;</code> with an id of <strong>form</strong>, which in this case is set to 230px. The columns that hold your form label and form field have also widths specified (in <em>span.label</em> and <em>span.formw</em>). Be careful that your combined totals for these two values do not exceed the overall width specified for <strong>form</strong>, if you don't you'll get an interesting wrap happening.</li>
	<li><code>&lt;fieldset&gt;</code> allows you to group form controls together in a logical or semantic way, e.g. personal details would be one such grouping</li>
	<li><code>&lt;legend&gt;</code> is another useful tag that allows you to specify a legend for a field set. Using the above example of a field set for personal details, you could assign this field set a legend of, you guessed it, <strong>personal details</strong>.</li>
	<li>The <code>&lt;label&gt;</code> allows a form control to be explicitly associated with a label (no doubling up intended, i.e. username: &lt;input id="username" /&gt;) and you should always aim to associate these.</li>
	<li>For all form controls such as <code>&lt;input&gt;</code> ones I like to include the attribute <strong>title</strong>. This attribute has the same effect as when used in <code>&lt;a&gt;</code> tag, i.e. when you hover the element a little call out box appears displaying the value captured in the attribute and is, as far as I know, usable by screen readers. I also use this chance to tell the user what type fo form controlled they are presented with, i.e. input, textarea, select, etc...</li>
	<li>The attribute <strong>tabindex</strong> I like to use as well as it allows me to easily tab through the form. In most cases the sequence is straightforward, but sometimes you may wish to control the order. By numbering your form controls accordingly using <strong>tabindex</strong> you can control the order in which a user can navigate the form.</li>
	<li>The <code>&lt;optgroup&gt;</code> tag allows us to group together the elements of <code>&lt;select&gt;</code> form control in a logical manner. This also results in a non-selectable pseudo header for the grouped items.</li>
</ol>
<p>And this concludes my contribution to building an accessible form, you can <a href="http://projects.teacupinastorm.com/samples/accessible_form.html" title="see the form in action">view a sample here</a>. Hope you found it useful.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>328</wp:post_id>
		<wp:post_date>2003-12-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>building-an-accessible-and-standards-compliant-form</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Where CF mappings are stored in MX running on JRUN</title>
		<link>http://gregs.tcias.co.uk/2003/12/16/where-cf-mappings-are-stored-in-mx-running-on-jrun/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=329</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ever wondered were CF MX stores all it's mapping information? Well we were and Simon Horwith of the CFDJ list was kind enough to point it out for us. As with most things these days the information is captured in an XML file called <em>neo-runtime.xml</em> and resides in <em>{root_drive}\JRun4\servers\{server_name}\cfusion-ear\cfusion-war\WEB-INF\cfusion\lib</em>. He also indicated that the information was actually captured in a WDDX packet.</p>
<p>So I went and took a peak at the file and it actually stores a lot of the cfadmin information, such  as the servers settings (missing template, site wide template, Timeout Requests and Enable HTTP status), cache settings (trusted cache, Template cache size, save class files), memory variables (session and application), mappings, logging settings (slow Request Time Limit), mail settings (mail char settings) and custom tag paths.</p>
<p>Using a WDDX packet as the store for such information opens up the options to use it programmatically and Simon Horwith was again kind enough to provide a sample script:</p>
<p><em>&lt;cfscript&gt;<br />
   foo="myMappingName";<br />
   bar = "myMappingValue";<br />
   factory = createObject("java","coldfusion.server.ServiceFactory");<br />
   runtime = variables.factory.getRuntimeService();<br />
   maps = variables.runtime.mappings;<br />
   maps[variables.foo] = variables.bar;<br />
 &lt;/cfscript&gt;</em></p>
<p>As it's WDDX the data is returned or added programmatically in the shape of structures, which as he suggest allows possibly for the use of StructDelete() to remove mappings programmatically as well. But he did also point out that this is something you'd do at your own risk.</p>
<p>While I was in the aforementioned folder I decided to take a closer look at some of the XML files in there:</p>
<ol>
	<li><em>neo-security.xml</em>: This file contains references to security information held in the cfadmin under security. There are three Boolean settings here, one for enabling a password for cfadmin, another for RDS and yet another for sandbox security. There is also a reference to <em>context</em>, but I am not sure what this is for.</li>
	<li><em>neo-query.xml</em>: Holds a lot of database related information. Specifically for query caching in the cache settings of cfadmin there is an entry. I also saw a bunch of information relating to SQL statements, though not entirely sure what it is used for. And finally there is a lot of what looks like database driver information.</li>
	<li><em>neo-mail.xml</em>: This WDDX packet stores all of the mail settings found in cfadmin.</li>
	<li><em>neo-logging.xml</em>: expands on the logging information already captured in <em>neo-runtime.xml</em>. It also contains information that is not accessible in cfadmin, such as the log pattern.</li>
	<li><em>neo-cron.xml</em>: This one stores all the scheduled tasks set up in cfadmin.</li>
	<li><em>neo-debug.xml</em>: as the name indicates this stores the setting for debugging, both for debugging and debugging IP addresses in cfadmin.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>329</wp:post_id>
		<wp:post_date>2003-12-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>where-cf-mappings-are-stored-in-mx-running-on-jrun</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>SOAP anyone??</title>
		<link>http://gregs.tcias.co.uk/2003/12/22/soap-anyone/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=345</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A general collection of odds and sods. Some more ColdFusion framework discussions, some CSS, mobile blogging, some SOAP, PHP and a few interface design considerations.</p>
<ol>
 <li><p>There has been a lot of discussion of the CFDev mailing list over appropriate architectures for developing RIAs, of course all focused also on harnessing the power of CFCs. The bets solution pout forward was to move away form 3 tier applications and look to n-tier applications (items listed after the slash are for Mach-II and typical web applications using HTML templates for the presentation layer): </p>
 	<ol>
		<li>client (web browser)</li>
		<li>presentation tier (Flash UI) / presentation tier (ColdFusion .cfm pages)</li>
		<li>business-presentation tier (Flash ActionScript controller) / business-presentation tier (Mach II &amp; listener CFCs)</li>
		<li>business-facade tier (ColdFusion CFC / web service facade) / business-facade tier (ColdFusion CFC facade)</li>
		<li>business-model tier (ColdFusion CFCs)</li>
		<li>integration tier (ColdFusion CFCs &amp;Java)</li>
		<li>data tier (Oracle 9i)</li>
	</ol>
	<p>Below are some link with articles that should provide further insight.<br /></p>
	<ol>
		<li><a href="http://www.15seconds.com/issue/011023.htm" title="Application Architecture: An N-Tier Approach - Part 1">http://www.15seconds.com/issue/011023.htm</a></li>
		<li><a href="http://www.macromedia.com/devnet/mx/coldfusion/articles/ntier.html" title="Benefits of using N-tiered approach for web applications">http://www.macromedia.com/devnet/mx/coldfusion/articles/ntier.html</a></li>
		<li><a href="http://www.macromedia.com/devnet/flex/articles/design_patterns02.html" title="Design Patterns into RIA">http://www.macromedia.com/devnet/flex/articles/design_patterns02.html</a></li>
		<li><a href="http://www.macromedia.com/devnet/mx/flashcom/articles/scalable02.html" title="Developing Scalable Macromedia Flash Communication Server MX Applications">http://www.macromedia.com/devnet/mx/flashcom/articles/scalable02.html</a></li>
	</ol>
  </li>
  <li>The <a href="http://www.alistapart.com/articles/slashdot2/" title="Retooling Slashdot with Web Standards Part II">two articles</a> were interesting for a number of reasons. One of course being a showcase of how standards implemented sites could benefit companies. That's one of the reasons I am jotting this one down, the other he has links to some mobile device emulators... Always come in handy these!</li>
  <li><a href="http://www.alistapart.com/articles/customcorners/" title="CSS Design: Creating Custom Corners &amp; Borders">how to implement round corners</a>.</li>
  <li>A little review on the benefits of <a href="http://www.notestips.com/80256B3A007F2692/1/TAIO-5TT34F" title="The benefits of a fixed width design">fixed width design</a>. Much has been said about the benefits of fluid designs, but little so far about fixed width. The bottom line fixed width delivers better readability as the length of the content area is fixed. Studies in the print world have shown that shorter lines are easier to read...</li>
  <li>Ken Wistin relates his experiences and ideas for <a href="http://www.digital-web.com/features/feature_2003-12.shtml" title="Web Globalisation On A Local Budget ">developing global website</a>s for local markets without having necessarily the financial backing of a major organisation.</li>
  <li>More for a friend of mine, but this resources contains all of the information relating to <a href="http://www.macromedia.com/devnet/mx/flash/video.html" title="Video Resources">integrating Flash and Video</a>.</li>
  <li><a href="http://www.briankotek.com/index.cfm?fuseaction=coldfusion.main" title="Cold Fusion and Fusebox">Brian Kotek</a> provides a brief <a href="http://builder.com.com/5100-6386-5111975.html" title="Software Development: Introduction to the Mach-II application framework">overview of the Mach-ii framework for ColdFusion</a>. He also provides an links to an overview with examples of using <a href="http://builder.com.com/5100-6371-5087794.html" title="Write efficient code with the Composition object pattern and CFCs">CFCs and Composition</a> and an overview of the <a href="http://builder.com.com/5100-6386-1049862.html" title="MVC design pattern brings about better organization and code reuse">MVC design pattern</a>.</li>
  <li>I put up the CFMX coding guidelines a while back,  but here are now the <a href="http://livedocs.macromedia.com/wtg/public/coding_standards/" title="Coding Guidelines">complete set of guidelines</a> from Macromedia for HTML, CFMX, mach-ii and accessibility.</li>
  <li>One of the few <a href="http://www.ohsogooey.com/coldfusion/machii/machii.cfm" title="All mach-ii baby">mach-ii related blogs</a> and it also contains a bunch of filters and plug-ins for the framework.</li>
  <li>A brief article form Sun giving an overview of the <a href="http://developers.sun.com/techtopics/mobility/midp/articles/blogging/" title="Introduction to mobile blogging">current state of play</a> on the mobile blogging front.</li>
  <li>This <a href="http://www.moblogging.org/" title="moblogging.org">site</a>, in the shape of a blog, provides a review of software, hardware and news relating to mobile blogging</li>
  <li>A <a href="http://www.webdevforager-london.co.uk/" title="The directory of web developers in greater london">directory listing</a> for web developers based in London.</li>
  <li>As above, <a href="http://www.ukwebdevelopers.com/" title="UK web developers">another directory listing</a> for us web developers.</li>
  <li>Hat tip to <a href="http://www.bpurcell.org/" title="Brandon Purcell's home page">Brandon Purcell</a> for this one. <a href="http://www.dslwebserver.com/" title="DSL/Cable Webserver">This site</a> contains a raft of information on setting up a web server on your home broadband connection even if you are using a dynamic IP address. Tones more info...</li>
  <li>A neat little article highlighting the <a href="http://www.ms-studio.com/articlesarialsid.html" title="How to spot Arial">differences</a> between Arial type and Helvetica and Grotesque. Thanks to <a href="http://www.zeldman.com/" title="The daily report">Zeldman</a> for that one (incidentally he has re-designed).</li>
  <li>I had a script running on this now for quite a while that gathers book info based on what section of the site you are in and then displays the book thumbnails. It works, but I have found it very intermittent. So I decided to dig a little deeper and see if I could fix this up a little. Check this site out for a <a href="http://www.chipdir.nl/amazon/" title="Jaap's Free Amazon PHP Scripts">few free scripts</a>.</li>
  <li>This is <a href="http://dietrich.ganx4.com/nusoap/" title="NuSOAP">a PHP object</a> that allow developers to easily instantiate and consume SOAP requests. DevShed has a set of article on using it with the Amazon Web Service [read <a href="http://www.devshed.com/Server_Side/PHP/AmazonAPI/AmazonAPI1/page1.html" title="Using Amazon Web Services With PHP And SOAP (part 1)">part 1</a> and <a href="http://www.devshed.com/Server_Side/PHP/AmazonAPI/AmazonAPI2/page2.html" title="Using Amazon Web Services With PHP And SOAP (part 2)">part 2</a>]</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>345</wp:post_id>
		<wp:post_date>2003-12-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>soap-anyone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Changing the XML parser</title>
		<link>http://gregs.tcias.co.uk/2004/01/05/changing-the-xml-parser/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=346</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A while back I stumbled across some information over at <a href="http://www.bpurcell.org/blog/" title="B. Purcell - homepage">Brandon Purcell's site</a> on how to change the <acronym title="eXtensible Markup Language">XML</acronym> parser that CFMX uses. You may at this stage wonder why I would want to do that? Well CFMX uses by default a <acronym title="Document Object Model">DOM</acronym> based parser, which is great if you are working with small XML files, but gets rather memory intensive when you work with larger ones. ION our case we were going to have to work with a 250 Megabyte XML file and DOM parsing would have soon brought our server to it's knees. SAX parsers are far more suited to parsing large files so that was reason number 1. Number 2 we needed to be able to validate the XML file and I don't think that this is possible using the DOM based parser. Xerces on the other hand met both of our requirements, being both a SAX based parser and able to validate XML files on the fly.</p>
<p>Below I have reproduced Brandon's <a href="http://www.bpurcell.org/blog/index.cfm?mode=entry&entry=942" title="Changing XML Parsers in JRun or ColdFusionMX">instructions</a>:</p>
<ol>
	<li>Get the Xerces kit at <a href="http://xml.apache.org/dist/xerces-j/Xerces-J-bin.1.4.4.zip" title="Get the kit">http://xml.apache.org/dist/xerces-j/Xerces-J-bin.1.4.4.zip</a></li>
	<li>extract xerces.jar and place it in the classpath ahead of jrun.jar (for example, in runtime/servers/lib)</li>
	<li>add these switches to the <acronym title="Java Virtual Machine">JVM</acronym> arguments in CF Administrator (or in jvm.config for JRun). Note that this is one long line, not three lines:
		<ul>
			<li>Dorg.xml.sax.driver=org.apache.xerces.parsers.SAXParser -Djavax.xml.parsers.DocumentBuilderFactory=org.apache.xerces.jaxp.DocumentBuilderFactoryImpl -Djavax.xml.parsers.SAXParserFactory=org.apache.xerces.jaxp.SAXParserFactoryImpl</li>
		</ul>
	</li>
	<li>restart CFMX (JRun)</li>
</ol>
<p>It all looks pretty straightforward right? Well I still ran into a few problems, and Brandon was only too kind to answer my questions. Now for starters I got a little confused about the <em>classpath</em> statement, but after a little digging I figured out my development installation of CFMX running as an instance on JRun, that the <em>jrun.jar</em> file was actually situated at <em>&lt;drive letter&gt;:\JRun\lib</em> and that's where I extracted the <em>xerces.jar</em> file to. Then when it was time to specify the actual classpath I needed to locate <em>jvm.config</em>. This file is located inside of <em>&lt;drive letter&gt;:\JRun\bin</em>. Before editing your file please make a backup of the <em>jvm.config</em> file. Why when I started messing round with this, I didn't and messed up my install of CFMX and needed to re-install the lot (there's nothing quite like learning the hard way :)). The JVM classpath info I needed to edit was located at the end of the file and the entry I added I have bolded in the following:</p>
<p><em><code># JVM classpath<br />
java.class.path={application.home}/servers/lib,{application.home}/servers/cfusion/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib/cfusion.jar,{application.home}/servers/cfusion/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib,<strong>{application.home}/lib/xerces.jar,</strong>{application.home}/lib/jrun.jar,{application.home}/lib</code></em></p>
<p>Next we needed to add the switches for the parser to JVM's arguments. If you look at your <em>jvm.config</em> file again you'll see a line like this (and the following lines [which are all on one line]):</p>
<p><em><code># Arguments to VM<br />
java.args=-server -Xmx512m -Dsun.io.useCanonCaches=false -Xbootclasspath/a:"{application.home}/servers/cfusion/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib/webchartsJava2D.jar" -XX:MaxPermSize=128m -XX:+UseParallelGC -DJINTEGRA_NATIVE_MODE -DJINTEGRA_PREFETCH_ENUMS</code></em></p>
<p>Now you will need to add the switches Brandon mentioned as follows:</p>
<p><em><code># Arguments to VM<br />
java.args=-server -Xmx512m -Dsun.io.useCanonCaches=false -Xbootclasspath/a:"{application.home}/servers/cfusion/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib/webchartsJava2D.jar" -XX:MaxPermSize=128m -XX:+UseParallelGC -DJINTEGRA_NATIVE_MODE -DJINTEGRA_PREFETCH_ENUMS -Dorg.xml.sax.driver=org.apache.xerces.parsers.SAXParser -Djavax.xml.parsers.DocumentBuilderFactory=org.apache.xerces.jaxp.DocumentBuilderFactoryImpl -Djavax.xml.parsers.SAXParserFactory=org.apache.xerces.jaxp.SAXParserFactoryImpl</code></em></p>

<p>Right all of the configuration is done now, all that's left is to re-start your JRun instance. I started off with just re-starting the cfusion instance as that was the one that mattered to me. And this is where I ran into some strange behaviour, but I'll tell you this as far as I can tell it works. Stopping the server was no problem, but on -restart the console was telling me that it has failed to re-start. And that was true, however when I tried to re-start it again it came up no problems and had loaded the Xerces XML parser. I tried this a few more times and after every stop it appeared to need a little break before being started up again. Go figure, but at least it works.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>346</wp:post_id>
		<wp:post_date>2004-01-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>changing-the-xml-parser</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFMX and filters</title>
		<link>http://gregs.tcias.co.uk/2004/01/05/cfmx-and-filters/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=347</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am back on the performance trail. For a while I have been meaning to use <abbr title="GNU Zip">gZip</abbr> to compress files sent by the server and for the most part I was focusing on letting the web server handle this, but I have just come across an article that let's <acronym title="ColdFusion MX">CFMX</acronym> do the job: enter servlet filters.</p>
<p>The article in question was published in the <a href="http://www.sys-con.com/coldfusion/" title="Check out the ColdFusion Developer's Journal over at Sys-Con">CFDJ magazine</a> back in February 2003. Here's what you need to know about Filters:</p>
<ul>
	<li>A filter is a Java program</li>
	<li>Can be executed before or after CFMX template (sounds like <em>Application.cfm</em> and <em>OnRequestEnd.cfm</em>?? The main difference being that you can control the execution of Filters [conditional processing, apply to all templates not just <em>.cfm</em> ones, etc...])</li>
	<li>Can manipulate <acronym title="HyperText Transfer Protocol">HTTP</acronym> headers/requests, branch your code and modify the <acronym title="HyperText Transfer Protocol">HTTP</acronym> responses</li>
	<li>YOu can write your own or use existing ones.</li>
</ul>
<p>And here are some of the advantages as highlighted in the article of the control you can exercise over the execution of Filters:</p>
<ul>
	<li>A single template (of any type, not just <em>.cfm</em>)</li>
	<li>All templates in a given directory and subdirectories</li>
	<li>All templates of a given file type</li>
	<li>All templates on the entire server</li>
</ul>
<p>And here are a few resources where you can find some that have already been created:</p>
<ul>
	<li><a href="http://www.jsptags.com/" title="Go to JSPTags.com">http://www.jsptags.com/</a></li>
	<li><a href="http://www.servletsuite.com/" title="Go to ColdBeans software">http://www.servletsuite.com/</a></li>
</ul>
<p>The latter is where we found the GZip filter (<a href="http://www.servletsuite.com/servlets/gzipflt.htm" title="Get the Compress Filter">Grab it here</a>)and in the following we'll discuss how to implement it. You'll need to copy the <em>JAR</em> file into your <em>cfusionmx\wwwroot\WEB-INF\lib</em> folder (where <em>cfusionmx</em> is your servers install directory). Or if you are running CFMX as an instance on JRun, then you'll need to copy it into: <em>JRun4\servers\cfusion\cfusion-ear\cfusion-war\WEB-INF\lib</em>.</p>
<p>Next you'll need to configure your CFMX server to use that Filter, locate your <em>web.xml file</em> [usually found in: <em>\JRun4\servers\cfusion\cfusion-ear\cfusion-war\WEB-INF</em>] and open it for editing [just in case anything goes wrong, remember to make a back up before editing this file]. Scroll to the end of the file and before the closing &lt;/web-app&gt; tag copy the following lines in:</p>
<p><em><code>&lt;filter&gt;<br />
	&lt;filter-name&gt;GZIPFilter&lt;/filter-name&gt;<br />
	&lt;filter-class&gt;com.cj.gzipflt.GzipFilter&lt;/filter-class&gt;<br />
&lt;/filter&gt;<br />
&lt;filter-mapping&gt;<br />
	&lt;filter-name&gt;GZIPFilter&lt;/filter-name&gt;<br />
	&lt;url-pattern&gt;*.cfm&lt;/url-pattern&gt;<br />
&lt;/filter-mapping&gt;</code></em></p>
<p>The final step requires you to restart the CFMX server so that the changes can take effect. Now if you are using the JRun web admin interface when carrying out the restart you may come across a few error messages, such as it took too long for the server to re-start. If you get this message and click on the home link in the top left hand corner of the interface, it will refresh the page and you should see that your server is running. If not remove the lines we added to web.xml, re-start your server and start again!</p>
<p>Here are links to resources relating to this article:</p>
<ul>
	<li><a href="http://www.sys-con.com/coldfusion/article.cfm?id=573" title="Fun with Filters in CFMX">http://www.sys-con.com/coldfusion/article.cfm?id=573</a>, this is source of the article I gleaned this from.</li>
	<li>The article referred to this resource for more information: <a href="http://www.systemanage.com/presentations/index.cfm#cf">http://www.systemanage.com/presentations/index.cfm#cf</a>, but when I tried to look at it nothing was coming up.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>347</wp:post_id>
		<wp:post_date>2004-01-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmx-and-filters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Unordered pop-up lists</title>
		<link>http://gregs.tcias.co.uk/2004/01/28/unordered-pop-up-lists/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=348</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My contribution to drop down lists based on your old faithful lists.</p>
<p>This page is heavily based on: <a href="http://www.magnin-sante.ch/journal/html/menu3/menuhorizontal.htm" title="Menu horizontal à plusieurs niveaux">http://www.magnin-sante.ch/journal/html/menu3/menuhorizontal.htm</a>. The main difference are a few style tweaks and the absolute positioning, that allows the pop up list to display over the page content [the existing incarnation forced the remainder of the content to be pushed downward]. To position this properly edit this style definition in the <strong>popup</strong> &lt;div&gt;: <em>style="position: absolute; top: 10px"</em>, by changing the top value to be whatever you need. This was the only way I could think of getting the pop ups to overlay the actual content.</p>
<p>You can <a href="/downloads/unorderedPopUpList.htm" title="check it out">see it in action here</a></p>
<p>Browsers tested on:</p>
<ul>
	<li>Mozilla 1.4 (OS: Win2k)</li>
	<li>IE 6 sp1 (OS: Win2k)</li>
	<li>IE 5.5 sp2 (OS: Win2k)</li>
	<li>IE 5.01 sp2  (OS: Win2k)</li>
</ul>

<p>The source:</p>

<p><em>&lt;script language="JavaScript1.2" type="text/javascript"&gt;<br />
	&lt;!--<br />
	function show(id) {<br />
		if (document.getElementById) {<br />
		  document.getElementById(id).style.display="block";<br />
		} else if (document.all) {<br />
		  document.all[id].style.display="block";<br />
		} else if (document.layers) {<br />
		  document.layers[id].display="block";<br />
		} <br />
	} <br />
	<br />
	function hide(id) {<br />
		if (document.getElementById) {<br />
		  document.getElementById(id).style.display="none";<br />
		} else if (document.all) {<br />
		  document.all[id].style.display="none";<br />
		} else if (document.layers) {<br />
		  document.layers[id].display="none";<br />
		} <br />
	} <br />
//--&gt;<br />
&lt;/script&gt;<br />
&lt;style&gt;<br />
	ul, li {<br />
		list-style-type : none;<br />
		margin : 0;<br />
		padding : 0;<br />
	}<br />
<br />
	ul.menu ul li { <br />
		display : inline; <br />
	}<br />
<br />
	ul.menu li {<br />
		float : left;<br />
	}<br />
<br />
	ul.menu a {<br />
		margin : 0 2px;<br />
		width : 100px;<br />
		height : 20px;<br />
		display : block;<br />
		text-align : center;<br />
		text-decoration : none;<br />
		border : 1px solid gray;<br />
		color : #000;<br />
		background : #fff;<br />
	}<br />
<br />
	ul.menu a:hover {<br />
		background : #ccc;<br />
		border : 1px solid gray; <br />
	}<br />
<br />
	ul.menu a:active {<br />
		background : gray;<br />
		border : 1px solid gray; <br />
		color : #fff;<br />
	}<br />
<br />
	#smenu1, #smenu2 {<br />
		padding : 0;<br />
		float : left;<br />
		display : none;<br />
		font-size : 10px;<br />
		width : 100px;<br />
		color : #000;<br />
	}<br />
	hr {<br />
		display: none<br />
	}<br />
&lt;/style&gt;<br />
&lt;div id="nav" style="position: absolute; top: 50px"&gt;<br />
	&lt;ul class="menu"&gt;<br />
		&lt;li&gt;&lt;a href="" title=""&gt;Menu 1&lt;/a&gt;&lt;/li&gt;<br />
		&lt;li&gt;&lt;a href="" onmouseover="show('smenu1');" onmouseout="hide('smenu1');"&gt;Menu 2&lt;/a&gt;<br />
			&lt;ul id="smenu1" onmouseover="show('smenu1');" onmouseout="hide('smenu1');"&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 1&lt;/a&gt;&lt;/li&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 2&lt;/a&gt;&lt;/li&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 3&lt;/a&gt;&lt;/li&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 4&lt;/a&gt;&lt;/li&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 5&lt;/a&gt;&lt;/li&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 6&lt;/a&gt;&lt;/li&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 7&lt;/a&gt;&lt;/li&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 8&lt;/a&gt;&lt;/li&gt;<br />
			&lt;/ul&gt;<br />
		&lt;/li&gt;<br />
		&lt;li&gt;&lt;a href="" onmouseover="show('smenu2');" onmouseout="hide('smenu2');"&gt;Menu 3&lt;/a&gt;<br />
			&lt;ul id="smenu2" onmouseover="show('smenu2');" onmouseout="hide('smenu2');"&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 1&lt;/a&gt;&lt;/li&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 2&lt;/a&gt;&lt;/li&gt;<br />
				&lt;li&gt;&lt;a href="" title=""&gt;Sub menu 3&lt;/a&gt;&lt;/li&gt;<br />
			&lt;/ul&gt;<br />
		&lt;/li&gt;<br />
		&lt;li&gt;&lt;a href="" title=""&gt;Menu 4&lt;/a&gt;&lt;/li&gt;<br />
		&lt;li&gt;&lt;a href="" title=""&gt;Menu 5&lt;/a&gt;&lt;/li&gt;<br />
	&lt;/ul&gt;<br />
	&lt;hr /&gt;<br />
&lt;/div&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>348</wp:post_id>
		<wp:post_date>2004-01-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>unordered-pop-up-lists</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Centered designs CSS stylee</title>
		<link>http://gregs.tcias.co.uk/2004/01/28/centered-designs-css-stylee/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=349</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This is a real short one. A while back I got inpired about Doug Bowman's work for a client (Adative Path) where he was using CSS to control layouts, determening from within the style sheet whether or not to have 1, 2 or three columns to display content. This alone blew me away, as it does work so well. I added the following stylesheet definition to one of our sites to add a simple centered layout:</p>

<p><em>#content {<br />
margin: 0 auto 0 auto;<br />
}</em></p>

<p>I lifted this little bit of CSS from <a href="http://www.studiotwin.com/" title="studio twin">this site</a>.</p>
<p>I should also point out the #content is a div that encompasses the previously mentioned three columns.</p>

<p>Update: Well I noticed that this doesn't work with IE 5.5, but as usual there is a work around.</p>
<p><em>body {<br />
	background: #fff;<br />
	text-align: center;/* centre it for IE5.5 */<br />
	voice-family: "\"}\""; /* Now re-adjust for Mozilla and IE6 since we don't want all of our text centred*/<br />
  	voice-family:inherit;<br />
	text-align: left;<br />
}</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>349</wp:post_id>
		<wp:post_date>2004-01-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>centered-designs-css-stylee</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>This week I\&#039;ll be mostly eating gems</title>
		<link>http://gregs.tcias.co.uk/2003/12/08/this-week-ill-be-mostly-eating-gems/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=365</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This week I have been mainly reading up on ColdFusion [frameworks, architecture, how-to&#39;s and what not&#39;s all to do with MX]... And a little CSS.</p>
<ol>
 <li>Sean Corfield, is the Director of Architecture at Macromedia and a one of the people behind Mach-ii, this is his <a href="http://www.corfield.org/blog/" title="An Architect's View">blog</a> and it some has some pretty useful insights into the CF developer world.</li>
 <li>Basically a <a href="http://livedocs.macromedia.com/wtg/public/machiidevguide/index.html" title="Mach II Development Guide TOC">Macromedia document</a> explaining the development of applications using the Mach-II framework</li>
 <li><a href="http://www.mach-ii.com/" title="Mach-ii">FuseBox for MX</a>, this is the official home</li>
 <li>The <a href="http://www.corfield.org/index.php?fuseaction=machii.main" title="Mach-ii unofficial home">unofficial home</a> of Mach-II at Sean Corfield's site</li>
 <li>A nifty <a href="http://www.bpurcell.org/blog/index.cfm?mode=entry&amp;entry=980" title="Configuring the third party MySQL database driver in ColdFusion MX">little guide</a> to configuring native MySQL JDBC drivers in CFMX [and <a href="http://www.bpurcell.org/blog/index.cfm?mode=entry&amp;entry=981" title="Configuring the Microsoft SQL Server 2000 JDBC database driver in ColdFusion MX">more JDBC info</a>]. His site also has a wealth of additional information on CFMX, great stuff...</li>
 <li><a href="http://www.bpurcell.org/macromedia/coldfusion/multiple_instances.cfm" title="ColdFusion MX 6.1 Step-by-Step Creating and Configuring Multiple Instances">ColdFusion MX 6.1 Step-by-Step Creating and Configuring Multiple Instances</a> - as the title indicates how to install/configure CFMX to run multiple instances of a server on JRun, though this article appears to be only focused on using the built-in web server he does talk about using IIS when adding new sites.</li>
 <li>Purcell also pointed to <a href="http://java.sun.com/j2se/1.4.2/docs/guide/jpda/" title="JavaTM Platform Debugger Architecture">this source</a> for debugging cfmx apps. Check it out and <a href="http://www.bpurcell.org/blog/index.cfm?mode=entry&amp;entry=969" title="Using the Java Remote Debugger Interface (JPDA) with ColdfusionMX or JRun">his set up info</a></li>
 <li><a href="http://www.bpurcell.org/blog/index.cfm?mode=entry&amp;entry=942" title="Changing XML Parsers in JRun or ColdFusionMX">Integrating Xerces with CFMX/Jrun</a>.</li>
 <li><a href="http://download.macromedia.com/pub/coldfusion/tag_updates/DreamweaverMXTags.mxp" title="Dreamweaver MX tag updates for ColdFusion 6.1">Tag insight updates</a> for Dreamweaver users after the 6.1 upgrade to CFMX</li>
 <li>For those lucky enough to have the joy of working with Spectra, well Macromedia <a href="http://spectrasource.macromedia.com/active/" title="Spectra Open-source Release Announcement">released the source</a> a while back...</li>
 <li>I am definitely on the CF trail... Here is a <a href="http://www.macromedia.com/devnet/mx/coldfusion/extreme/cftags_cfscript.html" title="Using ColdFusion tags in cfscript">little article</a> on how to create your own cftags to be used from within cfquery. Swell.</li>
 <li>Subscribe to a <a href="http://www.cfczone.org/listserv.cfm" title="welcome to the cfcdev listserv">CFC mailing list</a> covering topics on OO Methodologies and Design Patterns for CF</li>
 <li>Sean is rapidly becoming my favourite source of information for all things CF/Flash. <a href="http://www.macromedia.com/devnet/mx/flashremoting/articles/facades.html" title="Software Design Patterns For Macromedia Flash Remoting">Here he discusses</a> design patterns in relation to Flash remoting.</li>
 <li>Mezzoblue provides <a href="http://www.mezzoblue.com/css/cribsheet/" title="CSS Crib Sheet">a handy list</a> of things to consider when developing CSS and it also contains the order for borders, think TRouBLed (Top, Right, Bottom, Left).</li>
 <li>An <a href="http://www.andybudd.com/blog/archives/000114.html" title="Margin Collapsing">interesting discussion</a> about collapsing margins in CSS</li>
 <li>A lot of <a href="http://www.positioniseverything.net/" title="Position is Everything">info on CSS and it's bugs</a>, some neat demos and <a href="http://www.positioniseverything.net/articles/float-theory.html" title="Float: The theory">a great article on Floats</a>. Eric Meyer also <a href="http://www.complexspiral.com/publications/containing-floats/" title="Containing Floats">gives us more insight</a> into the float problem.</li>
 <li>Something I was going to write about, but someone beat me to it. All you need to know about building an <a href="http://www.htmldog.com/guides/htmladvanced/forms.php" title="Accessible Forms">accessible form...</a></li>
 <li>This <a href="http://www.alistapart.com/articles/slashdot2/" title="Retooling Slashdot with Web Standards Part II">two part article</a> was interesting for a number of reasons. The main one being a showcase on how standards implemented sites could benefit companies in terns of savings. That's only one of the reasons I am jotting this one down, the other he has links to some mobile device emulators... Always come in handy these!</li>
 <li>ALA is carrying a second article this week, another look at <a href="http://www.alistapart.com/articles/customcorners/" title="CSS Design: Creating Custom Corners & Borders">how to implement round corners</a>.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>365</wp:post_id>
		<wp:post_date>2003-12-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-week-ill-be-mostly-eating-gems</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>products</title>
		<link>http://gregs.tcias.co.uk/2003/10/26/products/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=413</guid>
		<description></description>
		<content:encoded><![CDATA[<p>&amp;amp; (<strong>a</strong>uthor, <strong>m</strong>anage and <strong>p</strong>ublish) is our flagship <acronym title="content management system">CMS</acronym> product, giving you full power over authoring, managing and publishing your web content. Based on open standards and built using PHP and MySQL it offers an affordable high end Content Management System.</p>
			<p><a href="/v2/products/amp.php" title="Why not find out more information about amp?">Read more about &amp;amp;? <img src="/v2/i/tcias_more.gif" alt="more on &amp;amp;" align="absmiddle" width="16" height="16" border="0" /></a></p>
			<p>Additionally we have developed @ (&amp;#64;) our fully fledged e-mail campaign manager.</p>
		 	<p><a href="/v2/about_us/contact_us/" title="Why not ask for more information about @?">Why not contact us to find out more about &amp;64;? <img src="/v2/i/tcias_more.gif" alt="next case study" align="absmiddle" width="16" height="16" border="0" /></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date>2003-10-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>products</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>design</title>
		<link>http://gregs.tcias.co.uk/2003/10/26/design/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=414</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="content_item">
			<p>Our core beliefs when it comes to design are: user centricity and accessibility, which all flow into our mantra of form follows function. And were would we be without flair and elegance? A clean and content focused interface is paramount to a successful on-line presence. Combining the visual with the functional and accessibility will empower your users to easily complete their tasks.</p>
			</div>
			<div class="content_item">
			<a name="usability"></a><h4>Usability</h4>
			<p>At the heart of all on-line solutions lie users and their tasks. The interface can be as beautiful as anything can be, but users will not be fooled by appearances if they cannot use it. A good experience results in return visits and referrals. Do not antagonise your users, empower them!</p>
			</div>
			<div class="content_item">
			<a name="accessibility"></a><h4>Accessibility</h4>
			<p>When you engage us for a project we deliver accessibility by default and not as an add-on. We firmly believe that the web is for everyone and that no one should be excluded. Build it right ? first time round.</p>
	<p>Of course should your site currently not meet your countries accessibility regulations TCIAS is more than happy to assist in guiding you toward compliance. <a href="/v2/about_us/contact_us.php" title="Get in touch and see how we can help">Contact us</a> and we will gladly help you review your requirements.</p>
			</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>414</wp:post_id>
		<wp:post_date>2003-10-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>design</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>development</title>
		<link>http://gregs.tcias.co.uk/2003/10/26/development/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=415</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="content_item">
			<p>Here the creative meets technology. Implementing the carefully crafted design into a dynamic database driven web site is our speciality.</p>
			</div>
			<div class="content_item">
			<h4>Technology</h4>
			<p>We are comfortable developing solutions using PHP, ColdFusion, Java/JSP and .NET at the application level. The databases that drive our applications have been MySQL/Oracle and Microsoft SQL server. At the interface level we develop solely using xHTML and CSS.</p>
			<p>Whatever your preferred platform we can accommodate your requirements thanks to our exposure to a plethora of platforms running on both Unix and Windows, served by IIS, Apache or Tomcat.</p>
			</div>


			<div class="content_item">
			<h4>Web standards</h4>
			<p>What if we told you that we could deliver solutions that are leaner, faster loading, cross platform compatible and easier to maintain?? When it comes to the interface, web standards deliver massive gains. Leaner code delivers smaller pages, which in turn download faster and save on bandwidth. Separating content from presentation means easier maintenance and cross platform/device compatibility.</p>
			<p>These are the promises of web standards based design and implementation, but don?t take our word for it, see the business cases put forward by others: <a href="http://devedge.netscape.com/viewsource/2003/why-web-standards/" title="The business of Web Standards">The business of Web Standards</a>, <a href="http://www.alistapart.com/articles/seo/" title="Using xHTML/CSS for an effective SEO campaign">Using xHTML/CSS for an effective SEO campaign</a> and <a href="http://www.adaptivepath.com/publications/essays/archives/000266.php" title="The business value of web standards">The business value of web standards</a>.</p>
			</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>415</wp:post_id>
		<wp:post_date>2003-10-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>development</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>about us</title>
		<link>http://gregs.tcias.co.uk/2003/10/26/about-us-2/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=416</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Martin Cleave and <a href="http://gregs.teacupinastorm.com/" title="read Greg's log">Greg Stewart</a> are the driving force behind TCIAS. They met back in Sydney in the year of the 2000 Olympics while working for <a href="http://www.sapient.com/" title="Go to the Sapient web site">Sapient</a>. Since then they have <a href="/v2/about_us/portfolio/" title="see our portfolio">collaborated</a> on a number of projects that made them realize, that they work well together and we deliver good solutions.</p>
<p>So in early 2003, upon their return to London, England they set about forming TCIAS. Since then they have been involved in getting <a href="/v2/about_us/portfolio/reach_conferencing.php" title="see what we did for Reach Conferencing">Reach Conferencing</a> on-line, built an on-line registration and self assessment system for the <a href="/v2/about_us/portfolio/chandler_macleod_group.php" title="see what we did for the ChandlerMacleod Group">ChandlerMacleod Group</a>, to name but two of the projects in their <a href="/v2/about_us/portfolio/" title="see our portfolio">portfolio</a>.</p>
<p>The decision to set up their own web design/development shop was easy. Martin fills the creative and Greg the implementation boots. Both continuously strive to deliver exceptionally creative and technically optimised solutions that exceed both their client?s expectations and in turn their user?s needs.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date>2003-10-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about-us-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>services</title>
		<link>http://gregs.tcias.co.uk/2003/10/26/services/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=417</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="content_item">
			<p>We can offer a broad variety of services covering all parts of the web development life cycle. We can assist you in gathering your requirements and help you formulate an on-line strategy. Maybe you need to define your on-line identity, we have been involved in a number of such projects.</p>
			<p align="right"><a href="/v2/services/design/" title="read more about design">design <img src="/v2/i/tcias_more.gif" alt="all about design" align="absmiddle" width="16" height="16" border="0" /></a></p>

	<p>Or perhaps your site needs to be updated, given a facelift or maybe you are concerned about accessibility issues?</p>
	<p align="right"><a href="/v2/services/design/#accessibility" title="read more about accessibility">accessibility <img src="/v2/i/tcias_more.gif" alt="next case study" align="absmiddle" width="16" height="16" border="0" /></a></p>
	<p>Possibly your site?s content has grown to such a level that finding information is hard? We can aid in analysing your content, your users and streamline your content to match your user?s expectations.</p>
	<p align="right"><a href="/v2/services/design/#usability" title="read more about usability">usabilty <img src="/v2/i/tcias_more.gif" alt="next case study" align="absmiddle" width="16" height="16" border="0" /></a></p>
	<p>Need to integrate your back end applications into an on-line environment? Do you need to be able to access this information across different mobile devices.</p>
	<p align="right"><a href="/v2/services/development/" title="read more about development">development <img src="/v2/i/tcias_more.gif" alt="read all about development" align="absmiddle" width="16" height="16" border="0" /></a></p>
	<p>Whatever your needs, TCIAS can help you achieve your goals, get in touch with us and see how we can assist you!!</p>
			</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>417</wp:post_id>
		<wp:post_date>2003-10-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>services</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Delayed gems...</title>
		<link>http://gregs.tcias.co.uk/2003/11/02/delayed-gems/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=418</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Seems like forever since I have posted up a set of links discovered/uncovered and digested. There's quite a few, so enjoy this months traves into <acronym title="Cascading Style Sheets">CSS</acronym>, .htaccess, <acronym title="extensible Hyper Text Markup Language">xHTML</acronym>, mod_gzip and setting up your own business just to name a few.</p>
<ul>
	<li>Kynn Bartlett provides <a href="http://www.maccessibility.com/archive/000843.php" title="A Web Designer's Guide to JAWS">an overview</a> of the screen reader technology out there and what the options are for web developers. The bottom line is the recommendation: IBM's homepage reader. Cheaper and well for testing gives you as much of an insight about the accessibility of the site you are working on.</li>
	<li>The web standards group pasted these two links: <a href="http://infocentre.frontend.com/servlet/Infocentre?access=no&page=article&rows=5&id=286" title="Link 1">link 1</a> and <a href="http://www.w3.org/WAI/eval/" title="Link 2">link 2</a>, in an article on <a href="http://www.webstandards.org/buzz/archive/2003_09.html#a000183" title="Evaluating for Accessibility">Evaluating for Accessibility</a>. The first discusses the ins and outs of text based versions as an answer to accessibility problems (and frankly the answer is a no...), the latter is a document providing developers/designers with a set of guidelines when conducting an accessibility review.</li>
	<li><a href="http://adactio.com/journal/display.php/20030509135127.xml" title="Random New Media Company Generator">Something light-hearted</a>, a new media name generator with tag line and logo... get inspired!</li>
	<li>Doug Bowman <a href="http://www.stopdesign.com/log/2003/09/03/absolute.html" title="Making the Absolute, Relative">provides</a> a rational for nesting an absolute div into a relative. In the process he gives a good explanation on CSS positioning</li>
	<li><a href="http://www.juicystudio.com/assistivedeviceschart.html" title="Assistive Device Behaviour Chart">A set of charts and tables</a> outlining the features and functionality of assistive devices</li>
	<li>A nice looking site by <a href="http://yellowpencil.com/" title="standards based designers">Yellow Pencil</a>.</li>
	<li>Jakob Nielsen <a href="http://www.useit.com/alertbox/20030908.html" title="Misconceptions About Usability">discusses</a> yet again the benefits of usability and some cheap alternatives</li>
	<li><a href="http://www.wikipedia.org/" title="Wikipedia">Wikipedia</a> - a free multi lingual encyclopaedia </li>
	<li>At <a href="http://www.webdesignpractices.com/index.html" title="Web design practices">this site</a> you can find a set of articles on navigation (<a href="http://www.webdesignpractices.com/navigation/globalnav.html" title="global navigation">global navigation</a> and <a href="http://www.webdesignpractices.com/navigation/localnav.html" title="local navigation">local navigation</a>)</li>
	<li>There haven't been alertboxes metioned here for a while but the you get two in one serving... <a href="http://www.useit.com/alertbox/20030915.html" title="Time to Make Tech Work">This one</a> looks at the reduction in innovation and the maturing of the IT industry, the core message really is that the energies and innovation invested in product development, should be aimed at making the user more powerful now and no longer chasing the latest fad...</li>
	<li>Fast on the heels of <a href="http://www.maxdesign.com.au/presentation/listamatic/index.htm" title="">Listamatic</a>, the same gang of people have released <a href="http://www.maxdesign.com.au/presentation/listutorial/" title="Listutorial">a set of tutorials</a> on creating CSS lists with some lovely effects.</li>
	<li>Eric Meyer discusses the ins and outs of creating un-ordered lists as nav items with <a href="http://www.complexspiral.com/publications/rounding-tabs/" title="Rounding Tab Corners">rounded borders</a>.</li>
	<li>Title says it all: "<a href="http://blogplanet.net/" title="Mobile Photo Blogging - made easy!">Mobile Photo Blogging - made easy!</a>" posts your blogs from your phone!!!</li>
	<li><a href="http://www.redmelon.net/tstme/" title="Roll your CSS" >CSS roll over images</a>, this time without any delay!! </li>
	<li>A <a href="http://www.echoecho.com/csscursors.htm" title="CSS Cursors">complete list</a> of the style sheet properties and values for the good old' cursor</li>
	<li>After having had a bash at mod_rewrite, it's time for <a href="http://www.zopenotes.com/004235.html" title="mod_gzip Victory!">mod_gzip</a>. Compression galore and here is a further list of resources I have stumbled across. http://leknor.com/code/gziped.php - gziped? This script tests whether or not a server has been configured for gzip compression</li>
	<li><a href="http://diveintomark.org/archives/rooms/apache/" title="Dive into mark's apache resources">Dive into mark's apache resources</a>- very useful and insightful.</li>
	<li><a href="http://www.zope.org/Members/softsign/ZServer_and_Apache_mod_gzip" title="Getting mod_gzip to compress Zope pages proxied by Apache (Using ZServer)">Apache, Zope and mod_gzip</a> getting the whole malarkey to work together.</li>
	<li>A useful set of information <a href="http://httpd.apache.org/docs-2.0/howto/htaccess.html" title="Apache Tutorial: .htaccess files">on the usage of the .htaccess file</a></li>
	<li><a href="http://www.schroepl.net/cgi-bin/http_trace.pl" title="HTTP trace">Tests</a> whether your browser can accept compression</li>
	<li><a href="http://phplens.com/lens/php-book/optimizing-debugging-php.php" title="A HOWTO on Optimising PHP">A HOWTO on Optimising PHP</a>, as the title indicates... optimise your PHP</li>
	<li><a href="http://forum.rackshack.net/showthread.php?s=ed9f6c2249705b9/cbcdc77ae587a12ae&amp;threadid=19872" title="Enable Query Caching in MySQL 4">[HOWTO]</a> Enable Query Caching in MySQL 4 - Another HOW TO that does what the title implies...</li>
	<li>After spending a while looking at Apache and HTTP compression, I iread up on the same topic for <a href="http://www.microsoft.com/technet/treeview/default.asp?url=/technet/prodtechnol/iis/iis5/maintain/featusability/httpcomp.asp" title="Using HTTP Compression On Your IIS 5.0 Web Site">IIS</a>.</li>
	<li>For those wanting to get a <a href="http://www.webreference.com/programming/xforms/" title="XForms Essentials: XForms Building Blocks">heads up on XForms</a>, this is a worthwhile read. It talks you through an example solution for creating and editing a UBL Purchase Order.</li>
	<li><a href="http://dubinko.info/writing/xforms/ubl/" title="UBL in XForms, a worked example">This link</a> contains the source for the above article with some more related links to XForms and <acronym title="Universal Business Language">UBL</acronym>.</li>
	<li>A little article on <a href="http://www.gerrymcgovern.com/nt/2003/nt_2003_10_13_map.htm" title="Information architecture: web page mental maps emerge">what user's expect from sites</a>. It would seem that standards are emerging in the user interface of web pages. The example here: where to find the link back to the home page. The answer (95% of the time): top left please!</li>
	<li>A site with a database of <a href="http://www.pheed.com/" title="Syndicated Photography Feeds">information about photos</a> on the web. The idea here is extending RSS that appropriately label or provide accurate meta data about the images in XML, thus making the search for photos more successful</li>
	<li>Another <a href="http://www.searchengineworld.com/robots/robots_tutorial.htm" title="Robots.txt Tutorial">Robots Exclusion Standard tutorial</a> with links to other related resources such as <acronym title="request for comments">RFCs</acronym>, validators and meta tag information.</li>
	<li>Carrie Bickner's <a href="http://www.webreference.com/promotion/design/" title="Web Design on a Shoestring">new book</a> on web dev projects that run with a little or no budget. The excerpt on Web reference highlights the virtues of planning! Great work...</li>
	<li>All you could possibly want to know about <a href="http://www.webreference.com/programming/javascript/hform/" title="The HTML Form Element">form elements</a> in two pages and with links to the specifics of forms and their elements @ w3c.</li>
	<li>There were a few applications that were keeping me routed in windows world: Outlook and CFstudio/Dreamweaver. With the <a href="http://www.codeweavers.com/" title="Bringing windows to Linux">announcement that Cross Over Office</a> not only supports Office XP, but also Dreamweaver and Flash MX, what excuse have I got left?? Ah yes Warcraft.... :)</li>
	<li>While looking at logged missing pages I stumbled across an entry for crossdomain.xml. The <a href="http://moock.org/asdg/technotes/crossDomainPolicyFiles/" title="cross domain policy files">tech note posted here</a>, explains the changes made to Flash 6/7 players in terms of accessing external properties from different domains and sub-domains and how to set up a cross domain policy file.</li>
	<li><a href="http://www.pirated-sites.com/" title="Pirated Sites">Love this site</a>, see how blatantly some people rip other designs </li>
	<li>ALA is back and here is the <a href="http://www.alistapart.com/articles/slidingdoors2/" title="Sliding Doors part II">second</a> of two articles by Doug Bowman on creating visually stunning Tab based nav items.</li>
	<li><a href="http://www.hotdesign.com/seybold/" title="Why tables for layout is stupid: Problems defined, solutions offered">Why tables for layout is stupid: Problems defined, solutions offered</a> - a wonderful presentation from Hot Design on the pros and cons of web standards design.</li>
	<li>An <a href="http://studio.adobe.com/" title="Adobe Studio">on-line resource</a> for all things digital</li>
	<li>Bags of <a href="http://www.alistapart.com/articles/startingabusiness/" title="Starting a Business: Advice from the Trenches">advice on starting up your own company</a>. There I found info on <a href="http://www.sba.gov/starting_business/planning/basic.html" title="Business plan basics">putting together the business plan</a>. A series of <a href="http://www.alistapart.com/authors/scottkramer/" title="articles by Scott Kraemer at ALA">articles by Scott Kraemer</a> on starting your own business. And why not give a link back to <a href="http://www.graphicpush.com/" title="Check out the author's site">this man's</a> site?? And I also followed these links from the article:
	<ul>
		<li><a href="http://www.businessplans.org/" title="centre for business planning">centre for business planning</a></li>
		<li><a href="and http://www.businessplanarchive.org/" title="centre for business planning">the business plan archive</a> [has some information not as much as would appear to be indicated, but still fun to look at all the failings]</li>
	</ul>
	</li>
	<li>From the above article is meant to be a <a href="http://www.creativepro.com/" title="Resources for creative Professionals">great resources</a> on business related documentation (contracts, NDAs for example)</li>
	<li>Again from the previous entry more <a href="http://www.score.org/" title="Counsellor to America's small business">information on getting started</a></li>
	<li>A resource where businesses can register and <a href="http://www.elance.com/" title="Elance">post/look for projects</a>
	. Low margins but it's all about getting work in the first place</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>418</wp:post_id>
		<wp:post_date>2003-11-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>delayed-gems</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>More SQL trickery : dateparts dateadd and casting</title>
		<link>http://gregs.tcias.co.uk/2003/11/02/more-sql-trickery-dateparts-dateadd-and-casting/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=419</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Recently I needed to updated all date fields from whatever value they were to have a date format like this: <em>dd/mm/yyyy 23:59:00</em></p>

<p>Now the dates were stored like such: 12/10/2003 12:23:06 and many more variants on that theme.</p>

<p>The first step that was needed was to get just the date part and ditch the existing time stamp. I did this by writing a select statement like this one to test my theory:</p>

<p><em>select top 10 cast(cast(datePart(dd,theDateColumn) as nvarchar)+ '/'+ cast(datePart(mm,theDateColumn) as nvarchar)+ '/'+ cast(datePart(yyyy,theDateColumn) as nvarchar) AS smalldatetime) <br />
from yourTable</em></p>

<p>So first I grabbed the date part I was interested in, say the year: <strong>datePart(yyyy,theDateColumn)</strong>. And of course for the other ingredients of a date: months and days as well. Next I wanted to create a new date without the timestamp, so I needed to create a date string. Hence in the query above you see that each date part is wrapped around a <strong>cast()</strong> function. The value for year for example was cast to varchar, like such: <strong>cast(datePart(dd,theDateColumn)</strong> as nvarchar).</p>

<p>Next in that step I concatenated the entire date parts and casts into a string that took the format dd/mm/yyy and finally cat it back to small date time giving me a format similar to this: <em>dd/mm/yyyy 00:00:00</em></p>

<p>OK now I wanted to have that date but with the time part showing one minute to midnight. So the thought process here was take the date in the database increase it by 1 day and take a minute off it (I could do this because I had the exact date at the midnight after the first select process). So first let's increase the day by 1 and you do this using <strong>dateadd(datepart,number,column)</strong>. In our case the date part if this function needs to update the day, which is annotated using 'dd'. So back to the theory and let's write a select statement again:</p>

<p><em>select top 10 dateAdd(dd,1,theDateColumn)<br />
from yourTable</em></p>

<p>So now we can build this up to take a minute of that created time using dateadd() again, this time taking off a minute (number = -1 and datepart is 'n'), the combination of the two would take the column advanced it by a day and take a minute off:</p>

<p><em>select top 10 dateadd(n,-1,dateAdd(dd,1,theDateColumn))<br />
yourTable</em></p>

<p>Now the moment of truth, let's combine the first query and the last one we build up, so that we get the time stamp of 00:00:00 and then the date advanced by day followed by subtracting a minute, like such:</p>

<p><em>select top 10 dateadd(n,-1,dateAdd(dd,1,cast(cast(datePart(dd,theDateColumn) as nvarchar)+ '/'+ cast(datePart(mm,theDateColumn) as nvarchar)+ '/'+ cast(datePart(yyyy,theDateColumn) as nvarchar) AS smalldatetime)))<br />
from yourTable</em></p>

<p>If you are satisfied with the transformation then you can happily write the update.</p>

<p><em>UPDATE yourTable<br />
SET theDateColumn = dateadd(n,-1,dateAdd(dd,1,cast(cast(datePart(dd,theDateColumn) as nvarchar)+ '/'+ cast(datePart(mm,theDateColumn) as nvarchar)+ '/'+ cast(datePart(yyyy,theDateColumn) as nvarchar) AS smalldatetime)))</em></p>

<p>Easy as... once you know how...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2003-11-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-sql-trickery-dateparts-dateadd-and-casting</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Creating links in a Flash movie</title>
		<link>http://gregs.tcias.co.uk/2003/11/05/creating-links-in-a-flash-movie/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=420</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Something real basic but since I never did it before, here is how you mimic the <strong>&lt;a href=""&gt;</strong> behaviour of a hyperlink in a Flash movie using a little bit of ActionScript:</p>

<p>When I do Flash work I tend to place most of ActionScript code in Layer 1 Frame 1. And in this place I set a variable called link, which will hold the URL I want to point to, like such:</p>

<p><em>link = "http://gregs.teacupinastorm.com/";<br />
stop();</em></p>

<p>Next I create a button and make it a symbol and assign an action to this symbol:</p>

<p><em>on (release) {<br />
	getURL(link, "_blank");<br />
}</em></p>

<p>The value for link is passed through when the movie starts up and as soon as you click on the button surface you?ll be taken through to the URL.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>420</wp:post_id>
		<wp:post_date>2003-11-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-links-in-a-flash-movie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Sending e-mail directly from MS SQL</title>
		<link>http://gregs.tcias.co.uk/2003/11/12/sending-e-mail-directly-from-ms-sql/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=421</guid>
		<description></description>
		<content:encoded><![CDATA[<p>And look ma, no Outlook!!! I had been writing a whole bunch of reports recently, essentially just a bunch of queries and having them e-mailed out to me every night. To accomplish this I was using the ColdFusion and it's scheduling capabilities, however in the recesses of my mind I remembered something about using <acronym title="Microsoft">MS</acronym> <acronym title="Structured Query Language">SQL</acronym> server to that job, which in this case made a hell of a lot of sense. So off I went in search of this vague memory and a way to capture and apply it.</p>

<p>Sure enough a simple search on Google reveals plenty of information about using MS SQL to send e-mail. <a href="http://www.sqlmag.com/Forums/messageview.cfm?catid=3&amp;threadid=19212" title="SQL MAIL">This is a good starting point</a>. However, it wasn't long before the first hurdle was thrown my way. Whereas previous versions of MS SQL quite happily supported sending e-mails, <acronym title="Microsoft">MS</acronym> <acronym title="Structured Query Language">SQL</acronym> 2000 actually requires a copy of MS Outlook to send messages (why? <a href="http://support.microsoft.com/default.aspx?scid=kb;EN-US;281293" title="FIX: SQL Mail 2000 Needs Microsoft Outlook 2000 Client">Have a read here</a>). And what did we use? <acronym title="Microsoft">MS</acronym> <acronym title="Structured Query Language">SQL</acronym> 2000. Of course being tight, there was no way that the company was going to splash out on another copy of <acronym title="Microsoft">MS</acronym> Outlook 2000, so back to square one.</p>

<p>Back to Google, another search this time a solution please without using Outlook. <a href="http://oldlook.experts-exchange.com/Databases/Microsoft_SQL_Server/Q_20766215.html" title="Send Mail without installing Outlook">The solution</a> presented itself on the ever excellent Experts-Exchange.</p>

<p>The trick, well <a href="http://www.sqldev.net/xp/xpsmtp.htm" title="XPSMTP.DLL - SQL Server SMTP Mail XP">go to this site here</a>. Here you'll find detailed instructions and the relevant files to download. A 54k download later, I had copied the relevant file [for 2000 use this one: <strong>xpsmtp80.dll</strong>] to the '<em>&lt;your drive letter&gt;:\Program Files\Microsoft SQL Server\Binn</em>' folder and opened up my query analyzer.</p>

<p>In order to use this <acronym title="Dynamic Link Library">DLL</acronym> and the stored procedures associated it with it, you'll need to first register it and then assign it the right execute permissions. Below are the steps required as found on the aforementioned web site.</p>

<p><em>-- SQL Server 2000 install<br />
exec sp_addextendedproc 'xp_smtp_sendmail', 'xpsmtp80.dll'<br />
-- give execute permissions<br />
grant execute on xp_smtp_sendmail to public</em></p>

<p>Well nearly ready to go if all this worked, however I recommend you change the execute permissions to a user more suited to this task. So here is how I tested that it was all working by running the following code through the query analyzer again:</p>

<p><em>-- ************************************************************************<br />
-- greg's minimum number of parameters<br />
-- ************************************************************************<br />
declare @rc int<br />
exec @rc = master.dbo.xp_smtp_sendmail<br />
    @FROM   = N'from@yourdomain.com',<br />
    @TO     = N'to@yourdomain.com',<br />
    @subject    = N'Hello SQL Server SMTP Mail',<br />
    @message    = N'Goodbye MAPI, goodbye Outlook',<br />
    @server     = N'mail.yourdomain.com'<br />
select RC = @rc<br />
go</em></p>

<p>Easy enough. As indicated have a good read through the site where this information originally came from as it contains a lot of information on the different options at your disposal.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>421</wp:post_id>
		<wp:post_date>2003-11-12 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sending-e-mail-directly-from-ms-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Links, links and more links</title>
		<link>http://gregs.tcias.co.uk/2003/11/25/links-links-and-more-links/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=422</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Another week and links covering <acronym title="International Organisation for Standardization">ISO</acronym> downloads in ten minutes, <acronym title="Cascading Style Sheets">CSS</acronym> and other client side related information. <acronym title="eXtensible Mark-up Language">XML</acronym> gets a few mentions, as well as a few titbits on AvantGo and <acronym title="Interactive TV">iTV</acronym> development.</p>
<ol>
	<li>Jakob Nielsen offers some <a href="http://www.useit.com/alertbox/20031027.html" title="About Us -- Presenting Information About an Organization on Its Website">advice on presenting your company to the world</a></li>
	<li><a href="http://usability.gov/pdfs/guidelines.html" title="Research-Based Web Design &amp; Usability Guidelines">Here's a resources</a> with government based usability and web design guidelines</li>
	<li>Probably one of the <a href="http://www.quirksmode.org/" title="Quirksmode">most comprehensive source</a> of browser quirks I have come across</li>
	<li>A great, registration required, source for <a href="http://www.tendersdirect.co.uk/" title="Tenders direct">searching a database of tenders</a>, quite substantial and big contracts.</li>
	<li><a href="http://www.bipcontracts.com/products.htm" title="Tendermatch">Another</a> good looking service for tenders</li>
	<li>Web Reference offers up yet <a href="http://www.webreference.com/programming/xml/parser/" title="Effective XML: 50 Specific Ways to Improve Your XML">another great snippet</a>. A working example of parsing/validating <acronym title="eXtensible Mark-up Language">XML</acronym> documents using Xerces</li>
	<li><a href="http://www.webreference.com/programming/javascript/venkman/" title="Debugging JavaScript Using Venkman, Part 1">An introduction</a> to this quite sublime Mozilla plug in for debugging JavaScript</li>
	<li>A pretty <a href="http://css-discuss.incutio.com/?page=CssHacks" title="CSS Hacks">complete list</a> of hacks for using <acronym title="Cascading Style Sheets">CSS</acronym> in a variety of browsers as well as some discussion about the usefulness of using such hacks. Incidentally The css-discuss Wiki is an absolutely wonderful resource of CSS based discussions demos. Weird and wonderful.</li>
	<li>All the <acronym title="Cascading Style Sheets">CSS</acronym> bugs, quirks and a set of workarounds for <a href="http://developer.apple.com/internet/css/ie5cssbugs.html" title="CSS hints for IE5 on a MAC">IE5 on the Mac</a>!!! Possibly a little late, but you never know</li>
	<li>This has been a bug that has been bugging (no pun intended) me for ages. In <acronym title="Internet Explorer">IE</acronym> sometimes the page will <a href="http://www.bluerobot.com/web/css/fouc.asp" title="Flash of un-styled content">render un-styled for a split second</a>. This only happens if the external <acronym title="Cascading Style Sheets">CSS</acronym> file is not held in cache. The workaround is to only have one script tag or one link tag in between the &lt;head&gt; tags.</li>
	<li>Beautifully shaped <a href="http://www.thesunreport.org/exp/minitabs/vertical.html" title="Shaped mini tabs">minitabs</a>. Well worth a little peek.</li>
	<li>From Zeldman a <a href="http://www.htmlhelp.com/reference/css/text/" title="Text properties">full list</a> of Style sheet text properties. Marvellous</li>
	<li>A few years old but it has some great <acronym title="Cascading Style Sheets">CSS</acronym> applications including <a href="http://alistapart.com/articles/practicalcss/" title="Practical CSS">table-less form layouts</a></li>
	<li><acronym title="Cascading Style Sheets">CSS</acronym> based <a href="http://www.pixy.cz/blogg/clanky/cssnopreloadrollovers/" title="Fast rollovers, no preload needed">image roll overs</a> no preload needed and really quite fast</li>
	<li>Finally someone has <a href="http://www.insert-title.com/web_design/?page=articles/dev/multi_IE#universal" title=" Multiple IE's in Windows">cracked it</a>. Thanks to the "new" developer edition of IE (resultant of the patent violation), Joe Maddalone of insert title web design (http://www.insert-title.com/) figured it out and shares his knowledge with the world.</li>
	<li><acronym title="eXtensible Hyper Text Mark-up Language">xHTML</acronym>/<acronym title="Cascading Style Sheets">CSS</acronym>, usable and fully accessible <a href="http://www.alistapart.com/articles/dropdowns/" title="Suckerfish dropdowns">drop down menus</a>... And no <acronym title="Dynamic Hyper Text Mark-up Language">dHTML</acronym> in sight, sweet!</li>
	<li>Jakob Nielsen gives us the <a href="http://www.useit.com/alertbox/20031110.html" title="The Ten Most Violated Homepage Design Guidelines">run down</a> of the ten most frequently abused usability guidelines.</li>
	<li>Nick Usborne's <a href="http://www.excessvoice.com/" title="Excess Voice">web site</a> on all things copy writing for the web. Came across this after reading <a href="http://www.alistapart.com/articles/hammers/" title="A Fairy, a Low-Fat Bagel, and a Sack of Hammers">his article at ALA</a>, truly well written.</li>
	<li>A full list of all <a href="http://www.macromedia.com/support/coldfusion/ts/documents/cfmx61_issues.htm" title="CFMX 6.1 confirmed issues">known issues</a> in <acronym title="ColdFusion MX">CFMX</acronym> 6.1</li>
	<li>I recently put up a few links on robots.txt files and being a little curious  wanted to know what makes up a robot. At <a href="http://www.math-net.de/project/tools/harvest/index.html" title="Math-Net -- Tools: Harvest">this location</a> you can find the source and documentation for a robot.</li>
	<li><a href="http://xmljs.sourceforge.net/index.html" title="XML for &lt;SCRIPT&gt;">A resource with documentation</a>, examples, tools on how to get <acronym title="eXtensible Mark-up Language">XML</acronym> parsing working with a JavaScript <acronym title="eXtensible Mark-up Language">XML</acronym> parser.</li>
	<li>A useful little <a href="http://www.cfugorama.com/cfugorama/codelibrary/ical.cfm" title="Using ColdFusion to Create Outlook Events">article/presentation</a> on MIME types and how to get ColdFusion to generate a templates that adds an event to your Outlook calendar</li>
	<li>Stuart Langridge has put some pretty neat browser experiments (all to tbe found <a href="http://www.kryogenix.org/code/browser/" title="Browser experiments">here</a> ), including this one <a href="http://www.kryogenix.org/code/browser/nicetitle/" title="Nice Titles">nice hover titles</a>. My favourite though has to be the <a href="http://www.kryogenix.org/code/browser/sorttable/" title="sort-able tables example">sort-able tables</a>.</li>
	<li>Can't remember if I put this one up, but a pretty nifty look at <a href="http://www.welie.com/patterns/" title="Web Design Patterns">design patterns for web interfaces</a>, analysis and all.</li>
	<li>More on <a href="http://time-tripper.com/uipatterns/index.php" title="UI Patterns and Techniques">design patterns</a> for user interfaces, this site contains a whole raft of information</li>
	<li>A detailed set of instructions on <a href="http://photomatt.net/archives/2003/11/13/how-to-create-a-favicon/" title="how to create a FavIcon">how to create those lovely little FavIcons</a> on a Windows system. For Mac users <a href="http://leavesrustle.com/articles/72/" title="Mac users look here">look here</a>.</li>
	<li>Useful <a href="http://www.macromedia.com/macromedia/accessibility/" title="Macromedia Accessibility Centre">information on how to make Flash accessible</a> (and some hints for Dreamweaver developers). Also found a useful link on creating <a href="http://download.macromedia.com/pub/solutions/downloads/accessibility/accessible_cf.pdf" title="Building Accessible Dynamic Websites with Macromedia ColdFusion MX">accessible dynamic applications</a> using ColdFusion.</li>
	<li>Full <acronym title="International Organisation for Standardization">ISO</acronym> downloads using <a href="http://linux.dsi.internet2.edu/" title="Skip the wait: ISOs in 5-10mins">Logistical Networking</a>, instead of the long wait download a Linux Distribution in ten minutes or so.</li>
	<li>The full developer guide, with tutorials, mark-up specifications, tips and tricks, in short everything you need to know about <a href="http://www.ianywhere.com/avantgo/developer/channel_developer/index.html" title="AvantGo Channel Developer Guide v2.0">developing a site to be used as a AvantGo channel</a> [there is <a href="http://www.ianywhere.com/avantgo/developer/channel_developer/ad_index.html" title="banner ad development guide">banner ad development guide</a> as well].</li>
	<li>NTL provide a whole raft of <a href="http://www.digitalcabletv.co.uk/ofdoc_vw.asp?ProdID=74" title="NTL Downloads">interactive TV tool</a> downloads at their site. The tools are geared toward Liberate.</li>
	<li>Insightful infomartion on <a href="http://www.websiteoptimization.com/speed/tweak/shorthand/" title="CSS: Use Shorthand Properties">CSS shorthand techniques</a> from the man behind web site optimisation, Mr. Andy King.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>422</wp:post_id>
		<wp:post_date>2003-11-25 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-links-and-more-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>switch/case statements in cfscript</title>
		<link>http://gregs.tcias.co.uk/2003/11/27/switchcase-statements-in-cfscript/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=423</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just recently I have been moving away from using the tag based development methodology of ColdFusion and been doing most of my coding using cfscript. Of course this doesn't natively give me access to the wealth of functionality that ColdFusion has [note: there are ways around that and I hope I'll be bale to write something up soon], however it does give you a more traditional feel for coding and can certainly be a bit tighter. Here I just wanted to highlight how &lt;cfswitch&gt; and &lt;cfcase&gt; differ slightly when used as swicth/case in &lt;cfscript&gt;</p>
<p>OK let's take a look at the code traditional CF style side by side with cfscript stylee:</p>
<p style="float: left;"><em>&lt;cfswitch expression="#yourExpression#"&gt;<br />
	&lt;cfcase value="a,b,c"&gt;<br />
		...something...<br />
	&lt;/cfcase&gt;<br />
	&lt;cfcase value="d"&gt;<br />
		...something else...<br />
	&lt;/cfcase&gt;<br />
	&lt;cfdefaultcase&gt;<br />
		... default behaviour goes here ...<br />
	&lt;/cfdefaultcase&gt;<br />
&lt;/cfswitch&gt;</em></p>
<p style="float: right;"><em>&lt;cfscript&gt;<br />
	switch(yourExpression) {<br />
		case "a": case "b": case "c":<br />
			...something...<br />
			break;<br />
		case "d":<br />
			...something else...<br />
			break;<br />
		default:<br />
			... default behaviour goes here ...<br />
			break;<br />
	}<br />
&lt;/cfscript&gt;</em></p>
<p style="clear: both;">I guess that side by side the comparison in terms of neatness and tightness does not really shine through. However this is just for swicth/case, once you come to work with cfscript you'll truly appreciate the scripting approach. So what differs:</p>
<ol>
	<li>The first thing is that you will need to include a <em>break;</em> statement for each case. Failure to do that will result in the call processing the entire switch until either reaches the end or encounters a <em>break;</em></li>
	<li>Multiple cases on one line need to listed individually (<em>case "a": case "b": etc...</em>) as opposed to a comma delimited list in cfcase (<em>value="a,b,etc..."</em>)</li>
	<li>The default case in <strong>cfscript</strong> is declared using <em>default:</em> (and don't forget the <em>break;</em>)</li>
</ol>
<p>And that's about it. A useful reference hopefully.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>423</wp:post_id>
		<wp:post_date>2003-11-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>switchcase-statements-in-cfscript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>177126</wp:comment_id>
			<wp:comment_author><![CDATA[Peter Tilbrook]]></wp:comment_author>
			<wp:comment_author_email>peter.tilbrook@clubgroup.com.au</wp:comment_author_email>
			<wp:comment_author_url>http://www.clubgroup.com.au/</wp:comment_author_url>
			<wp:comment_author_IP>122.49.204.10</wp:comment_author_IP>
			<wp:comment_date>2012-01-10 22:23:26</wp:comment_date>
			<wp:comment_date_gmt>2012-01-10 22:23:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very handy!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1326839597.2156";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1326234206.5636";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>home</title>
		<link>http://gregs.tcias.co.uk/2003/10/26/home/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=433</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Welcome to Teacup In A Storm, online solutions providers, specialising in custom web applications, database driven sites, with a focus on accessible, user centric and standards based design.</p>
		<p>Based in London England,  Teacup In A Storm, have helped a number of clients spanning the globe.</p>
                                                     <p>Delivering solutions that empower your users to complete their tasks with minimum effort or confusion is what drives our process. &#8220;Form follows function&#8221; is the guiding principle of each and every stage of implementing your solution. For more information on us, checkout our <a href="/v2/about_us/" title="about us">about us</a> section.</p>
		<p>If on the other hand you&apos;d like to know more about what we do and how we do it, why not see <a href="/v2/services/" title="see what we have to offer">how we can help you</a>.</p>
		<p>At Teacup In A Storm we put you and your users first!!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>433</wp:post_id>
		<wp:post_date>2003-10-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Session tracking</title>
		<link>http://gregs.tcias.co.uk/2004/02/04/session-tracking/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=330</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In recent weeks I have noticed a decided increase in information exposing Java methods to ColdFusion. <a href="http://www.rewindlife.com/archives/000069.cfm" title="Undocumented Application scope functions">This one</a> here from RewindLife shows how to put an undocumented function to good use and track the users session. Check out this titbit of code (for simplicities sake put it in your Application.cfm):</p>

<p><em>&lt;cfapplication name="sessionInfoTester" sessionManagement="true"&gt;<br />
&lt;cfparam name="session.sUser.timeArrived" default="#now()#" /&gt;<br />
&lt;cfset session.sUser.lastClick=now() /&gt;<br />

&lt;cfset tracker = createObject("java","coldfusion.runtime.SessionTracker") /&gt;<br />
&lt;cfset sessions = tracker.getSessionCollection(application.applicationName) /&gt;<br /></em></p>

<p><em>&lt;cfset count=0&gt;<br />
&lt;cfloop collection="#sessions#" item="s"&gt;<br />
  &lt;cfset count=count+1 /&gt;<br />
  &lt;cfoutput&gt;<br />
  &lt;strong&gt;#s#&lt;/strong&gt;&ltlbr /&gt;<br />
  - Time arrived at #lcase(timeformat(sessions[s].sUser.timeArrived,'h:mmtt'))#&lt;br /&gt;<br />
  - Last click #datediff('s',sessions[s].sUser.lastClick,now())#<br />
	second&lt;cfif datediff('s',sessions[s].sUser.lastClick,now()) NEQ 1&gt;s&lt;/cfif&gt; ago<br />
  &lt;/cfoutput&gt;<br />
&lt;br /&gt;<br />
&lt;/cfloop&gt;<br /></em></p>

<p><em>&lt;cfdump var="#sessions#" /&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>330</wp:post_id>
		<wp:post_date>2004-02-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>session-tracking</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Paths to java packages</title>
		<link>http://gregs.tcias.co.uk/2004/02/04/paths-to-java-packages/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=331</guid>
		<description></description>
		<content:encoded><![CDATA[<p>From the <a href="http://www.cfczone.org/" title="CFCzone.org">cfcdev-zone list</a>, Stephen Bosworth posted the following explanation about paths to packages in Java. This made it clear once and for all what com.package.something actually meant and how it relates to your stored files:</p>
<p>"Say I have a suite of classes that I want to sell, I would create a package name based on my domain (newcastle.edu.au). All my classes would belong to my package, and be assured of no conflict with any one else?s on their systems (unless they create a package named after my domain with the same classes, but why would you want to do that :-) )</p>
<p>Example:<br />
======<br />
Say I have a component name user and I want to give it to you, and you also have a component named user, and you need to use both of them in an application.<br />
All your components should be in your own "package", namely a reference to au.com.tq (the reference to component would look something like {root}\au\com\tq\user.cfc).<br />
I could give you a "package" of my components, namely au.edu.newcastle (e.g. {root}\au\edu\newcastle\user.cfc ). Now you can reference both without the worry of reference conflicts."</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date>2004-02-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>paths-to-java-packages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Cold Fusion server service factory</title>
		<link>http://gregs.tcias.co.uk/2004/02/06/cold-fusion-server-service-factory/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=332</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A question arose on the CFDJ list about the debugging information that gets displayed, specifically the person asking the question wanted to know where this information comes from. Simon Horwith pointed it out the service factory is responsible for this information. Someone posted <a href="http://spike.oli.tudelft.nl/jochemd/index.cfm?PageID=10" title="cf.Factory">this link</a> which gives an overview of the service factory in CFMX and how it can be accessed. The author also has a few in-depth examples of how to access and put this information to good use.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>332</wp:post_id>
		<wp:post_date>2004-02-06 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cold-fusion-server-service-factory</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>OO and UML resources</title>
		<link>http://gregs.tcias.co.uk/2004/02/06/oo-and-uml-resources/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=333</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.corfield.org/" title="An architects view">Sean Corfield</a> blogged about <a href="http://www.step-10.com/notes/" title="Articles, Notes, and Presentations">this one</a> and as I am one of those trying to get to grips with OO and UML, I can heartily agree that Stephen Palmer's list of articles about object modelling is tremendously useful.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>333</wp:post_id>
		<wp:post_date>2004-02-06 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oo-and-uml-resources</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>XPath tools and info</title>
		<link>http://gregs.tcias.co.uk/2004/02/06/xpath-tools-and-info/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=334</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For posterity I came across this post on CFCDev when dealing with an xPath issue:</p>
<p><strong>Tools:</strong><br />
http://sourceforge.net/projects/xpe/ - Xpath Explorer<br />
http://www.topxml.com/xpathvisualizer/ - The XPath Visualizer Version 1.4<br />
<strong>Tutorials</strong><br />
http://www.w3schools.com/xpath/default.asp - W3Schools XPath Tutorial<br />
http://www.topxml.com/xsl/default.asp - Learn XSL & XPath Tutorial<br />
<strong>Book</strong><br />
http://www.oreilly.com/catalog/xpathpointer/ - XPath and XPointer</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>334</wp:post_id>
		<wp:post_date>2004-02-06 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xpath-tools-and-info</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>AOL re-designs using web standards</title>
		<link>http://gregs.tcias.co.uk/2004/02/06/aol-re-designs-using-web-standards/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=335</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The top news for me today was that <a href="http://www.aol.com/" title="AOL">AOL</a> have re-designed and re-launched using a table-less layout and CSS. Another notch for the web standards based design!!! On this note I can't remember if posted this previously, but you can look up the latest standards based web sites, by visiting <a href="http://www.dailystandards.com/" title="the Daily Standards">the Daily Standards</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>335</wp:post_id>
		<wp:post_date>2004-02-06 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aol-re-designs-using-web-standards</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>An interview with Lou Rosenfeld</title>
		<link>http://gregs.tcias.co.uk/2004/02/06/an-interview-with-lou-rosenfeld/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=336</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The webreference news letter pointed me to <a href="http://www.informationdesign.org/special/rosenfeld_interview.htm" title="Louis Rosenfeld: The InfoDesign interview">an interview with Lou Rosenfeld</a>. The second half of the interview deals with CMS', which as a web developer usually forms an intrinsic part of development time. Some useful information, diagram and resources for CMS design and development.</p>
<ul>
	<li><a href="http://cmswatch.com/" title="CMS watch">CMS watch</a></li>
	<li><a href="http://www.cms-forum.org/" title="CMS Forum">CMS Forum</a></li>
	<li><a href="http://www.amazon.com/exec/obidos/tg/detail/-/076454862X/teacupinastor-21" title="Content Management Bible">Content Management Bible</a></li>
	<li><a href="http://www.amazon.com/exec/obidos/tg/detail/-/0735713065/teacupinastor-21" title="Managing Enterprise Content: A Unified Content Strategy">Managing Enterprise Content: A Unified Content Strategy</a></li>
	<li><a href="http://www.amazon.com/exec/obidos/tg/detail/-/0471085863/teacupinastor-21" title="Content Management for Dynamic Web Delivery">Content Management for Dynamic Web Delivery</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>336</wp:post_id>
		<wp:post_date>2004-02-06 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>an-interview-with-lou-rosenfeld</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>An intervierw with Sean Corfield</title>
		<link>http://gregs.tcias.co.uk/2004/02/06/an-intervierw-with-sean-corfield/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=337</guid>
		<description></description>
		<content:encoded><![CDATA[<p>And over a cfoop there is <a href="http://www.cfoop.com/interview.cfm?view=Corfield" title="Sean Corfield of Macromedia">an interview</a> with the most excellent Sean Corfield.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>337</wp:post_id>
		<wp:post_date>2004-02-06 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>an-intervierw-with-sean-corfield</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Design Patterns</title>
		<link>http://gregs.tcias.co.uk/2004/02/09/design-patterns/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=338</guid>
		<description></description>
		<content:encoded><![CDATA[<p>More on <a href=" http://java.sun.com/blueprints/patterns/catalog.html" title=" J2EE Patterns Catalog">design patterns</a> this time courtesy of the Sun website. I was in particular looking at the <acronym title="Model View Controller">MVC</acronym> and <acronym title="Data Access Objects">DAO</acronym> as these two are often referred to on Mach-ii related discussions. The general design pattern page at Sun can be <a href=-"http://java.sun.com/blueprints/patterns/index.html" title="patterns">found here</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date>2004-02-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>design-patterns</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Vertically challenged footers</title>
		<link>http://gregs.tcias.co.uk/2004/02/09/vertically-challenged-footers/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=339</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Courtesy of <a href="http://www.zeldman.com" title="The Daily Report">Mr Zeldman</a>, a hint to look at the <a href="http:///www.alistapart.com/" title="A List Apart">ala web site</a> where Bobby Van Der Sluis looks at different ways to <a href="http://www.alistapart.com/articles/footers/" title="Exploring Footers">display a footer that is consistently bottom aligned</a>. He looks at the standards way of doing it, before looking at the workarounds for all those lovely browsers. The bottom line... finally a set of solutions for consistently bottom aligned footers, no matter what the length of your page or the height of your browser.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>339</wp:post_id>
		<wp:post_date>2004-02-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vertically-challenged-footers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>cfqueryparam</title>
		<link>http://gregs.tcias.co.uk/2004/02/10/cfqueryparam/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=340</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As part of our dev guidelines for CFMX, all data that is submitted by a user to the database is passed in by making use of the &lt;cfqueryparam&gt; tag, which basically allows you to validate the data type of the value submitted. There also a few additional parameters that allow you to further validate the values passed such as length, scale, whether it can be null or not, or if it is a list. It's a useful addition to protecting your applications. However there appears to be a bug with single quotes in CFMX when you are inserting data, i.e. single quotes are escaped and passed into the database, e.g. O'Brien becomes O''Brien. The documentation for CFMX specifically states that:</p>

<p><em>"New in ColdFusion MX: ColdFusion automatically escapes simple-variable, array-variable, and structure-variable references within a cfQuery tag body or block. (Earlier releases did not automatically escape array-variable references.)"</em></p>

<p>However out of the box it doesn't, admittedly I have only come across this problem in conjunction with components and haven't tested it outside of these. Now this has since been patched, but for those not in a position to apply it, there is a workaround. Simply wrap the string in the PreserveSingleQuotes() function. As a result your SQL statement should look something like this:</p>

<p><em>?<br />
YourField = &lt;cfqueryparam value="#trim(PreserveSingleQuotes(YourField))#" cfsqltype="CF_SQL_VARCHAR"&gt;,<br />
?</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>340</wp:post_id>
		<wp:post_date>2004-02-10 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfqueryparam</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>how big is a database field??</title>
		<link>http://gregs.tcias.co.uk/2004/02/10/how-big-is-a-database-field/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=341</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This has puzzled me for a while when dealing with Varchar database field types. Say I assign a value of 255 to the length of my database field, I simply assumed that I could capture 255 bytes worth of characters. However this is not the case. Looking at mailing lists I found some info and this is how I understand it now: if you have three characters, each character takes up 1 byte, making the total length 3 bytes. Then add to that 1 byte to store the number of chars, giving you 4 bytes used. Next I also found a reference to an additional byte, relating to table definitions because Varchar uses variable length data. So number of chars (where 1 byte equals one character) + 2 bytes should give you the right value. Thus is we have a field of type Varchar and of Length 255, can we safely assume that the maximum length a submitted string can be is 253? I hope so!!!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>341</wp:post_id>
		<wp:post_date>2004-02-10 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-big-is-a-database-field</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>SAX parsers</title>
		<link>http://gregs.tcias.co.uk/2004/02/10/sax-parsers/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=342</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A while ago I spent a while configuring JRun to use the Xalan SAX parser, thinking incorrectly that CFMX could not do XML validation. My assumption for this was based on the CF documentation which points to DOM based parsing, as it turns out CFMX uses the Crimson as the underlying parser and by accessing the Java API it is totally possible to validate an XML document. Massimo of CFCDev list posted a few links to code snippets (<a href="http://www.cfmentor.com/code/index.cfm?action=script&amp;id=130" title="view the thread and code for: validateXMLString">validateXMLString</a> [also available for <a href="http://www.massimocorner.com/demos/validateXMLString.zip" title="Download validate XML String UDF">download here</a>] and <a href="http://www.cfmentor.com/code/index.cfm?action=script&amp;id=129" title="view the thread and code for: validateXMLFile">validateXMLFile</a> [also available for <a href="http://www.massimocorner.com/demos/validateXMLFile.zip" title="Download validate XML File UDF">download here</a> ]) that accessed aforementioned API and validated XML.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>342</wp:post_id>
		<wp:post_date>2004-02-10 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sax-parsers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>cflogin and the session scope</title>
		<link>http://gregs.tcias.co.uk/2004/02/11/cflogin-and-the-session-scope/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=343</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just wanted to make a note of this since it was brought up on the CFCDev list. By default the CFLogin tag is not tied into the session scope and hence it was logins were timing out at different times to the session scope. One solution was to do the following</p>
<p><em>&lt;cfapplication sessiontimeout="#createtimespan(0,0,30,0)#"...&gt;<br />
&lt;cflogin idletimeout="#createtimespan(0,0,30,0)#"&gt;</em></p>
<p>However far more elegant a solution was to do this:</p>
<p><em>&lt;cfapplication sessiontimeout="#createtimespan(0,0,30,0)#" loginstorage="session" ...&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>343</wp:post_id>
		<wp:post_date>2004-02-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cflogin-and-the-session-scope</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>ActionScript 2.0 resources</title>
		<link>http://gregs.tcias.co.uk/2004/02/04/actionscript-20-resources/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=350</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A thread on the CFCDev mailing list was discussing a ActionScript 2.0 books and resources. Here are two of the ones mentioned that grabbed my attention:</p>

<ul>
	<li><a href="http://www.markme.com/mesh/archives/004232.cfm" title="ActionScript 2.0 Resources from Mike Chamber, Macromedia's Flash MX community manager"> ActionScript 2.0 Resources from Mike Chamber</a>, Macromedia's Flash MX community manager </li>
	<li> Darron Shall's blog  <a href="http://www.darronschall.com/weblog/" title=" Darron Shall's blog all about ActionScript ">all about ActionScript </a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>350</wp:post_id>
		<wp:post_date>2004-02-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>actionscript-20-resources</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Introducing JSP and J2EE</title>
		<link>http://gregs.tcias.co.uk/2004/02/04/introducing-jsp-and-j2ee/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=351</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://java.sun.com/developer/technicalArticles/Intl/MultilingualJSP/" title="Developing Multilingual Web Applications Using JavaServer Pages Technology">A nifty article on the Sun site</a> about creating multi-lingual websites using JSP. It starts with a brief overview of <acronym title="JavaServer pages">JSP</acronym> and <acronym title="JavaServer pages Standard Tag Library">JSTL</acronym>, guides you through determining the users locale and preferences, Character encoding and then some.</p>

<p>The newsletter that lead me to the previous entry also pointed me to <a href="http://java.sun.com/developer/EJTechTips/2003/tt1222.html" title="INTRODUCING THE J2EE 1.4 PLATFORM">an introduction to the J2EE platform</a>, covering all the features that <acronym title="Java 2 Platform Enterprise Edition">J2EE</acronym> offers for developers and application development as well installation instructions. The second item on this newsletter is all about the <acronym title="JavaServer pages Standard Tag Library">JSTL</acronym>...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>351</wp:post_id>
		<wp:post_date>2004-02-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-jsp-and-j2ee</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CSS underlines</title>
		<link>http://gregs.tcias.co.uk/2004/02/04/css-underlines/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=352</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.alistapart.com/articles/customunderlines/" title="CSS Design: Custom Underlines">More CSS wonders...</a> though I don't how useful, or how many will adopt it, but Stuart Robertson shows us how to create stylised underlines, even animated ones. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>352</wp:post_id>
		<wp:post_date>2004-02-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css-underlines</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Using XML and Databases</title>
		<link>http://gregs.tcias.co.uk/2004/02/04/using-xml-and-databases/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=353</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Described as "<a href="http://www.rpbourret.com/xml/XMLAndDatabases.htm" title="XML and databases">a high level overview of how to use XML with databases</a>", this turns out to be quite an in depth and lengthy over view of the topic.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>353</wp:post_id>
		<wp:post_date>2004-02-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-xml-and-databases</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Declaring variables in CFCs</title>
		<link>http://gregs.tcias.co.uk/2004/02/11/declaring-variables-in-cfcs/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=354</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This was another question on the CFCDev mailing list and I keep forgetting the answer to this so for posterity here is the answer. There are three ways to scope variables in a CFC, using "var", "variables" and "this". Now the question that often comes up is what are the differences between the scopes, which ones should you use and when.</p>
<ul>
<li><strong>var</strong>: use it between functions/methods and it exists for the life of the function invocation and are immune to race conditions. Very important to declare these specifically and at the beginning of the method (i.e. immediately after cfargument [one exception if you are using CFSCRIPT declare them immediately after the opening tag])</li>
<li><strong>variables</strong>: private variable accessible to the whole CFC and for the lifetime of the CFC. Great for use as CFC specific data</li>
<li><strong>this</strong>: similar to "variables" (i.e. lives for the duration of the instance and available to all methods of the CFC), but public (i.e. they can be written to by client code [calling page] and methods in the CFC). Some people don't recommend using it</li>
</ul>
<p><a href=? http://www.markme.com/cantrell/archives/002918.cfm? title=? Learning to Like the Var Keyword?>This blog entry</a> on Christian Cantrell's site also has some info on the use of "var"</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>354</wp:post_id>
		<wp:post_date>2004-02-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>declaring-variables-in-cfcs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Outputting queries with CFScript</title>
		<link>http://gregs.tcias.co.uk/2004/02/11/outputting-queries-with-cfscript/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=355</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Over the past few months I have using more and more of CFScript to do my development. One of the things that still bothered me though was that I had not figured out how to loop over a result set. That no longer is the case... by using a combination of a CFC to execute the query and storing the result in a variable I was able to loop over this result set and grab the records and values in question.</p>
<p>As a base I used a CFC that executed the query and made a note of the column names that I wanted to work with. The format for accessing a record when using CFScript is: <strong>queryName['column name'][record]</strong>. A thing ot note is you can still access to the default variables that the query object generated.</p>
<p>For starters I made use of the <em>recordcount</em> variable to determine the number of loops that need to be executed. The loop takes the shape of a for loop.</p>
<p><em>&lt;cfscript&gt;<br />
 //invoke the object<br />
 yourCFC = CreateObject("pathToCfc/cfcName");<br />
 // execute the query by calling the method that holds the query<br />
 myQuery = yourCFC.fnYourMethod();<br />
 attributes.totalRecord = myQuery.recordcount;<br />
 if (attributes.totalRecord neq 0) { // check that a result was returned<br />
	// loop over the query<br />
	for (i=1; i lte attributes.totalRecord; i=i+1) {<br />
		// output the value for column: columnName<br />
		writeoutput(myQuery.currentrow &amp; ". Column name has a value of: " &amp; myQuery['columnName'][i] &amp; "&lt;br /&gt;");<br />
	}<br />
 } else {<br />
 	writeoutput("&lt;p&gt;Sorry no result.&lt;/p&gt;");<br />
 }<br />
&lt;/cfscript&gt;</em></p>
<p>It is pretty straight forward you just have to know how. Since you also have access to the query object variables <em>columnList</em>, I suppose you could stores these in a list and loop over that for each value of <em>i</em> as well.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>355</wp:post_id>
		<wp:post_date>2004-02-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>outputting-queries-with-cfscript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CSS flash in IE</title>
		<link>http://gregs.tcias.co.uk/2004/03/15/css-flash-in-ie/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=356</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The solution to the "flash of unstyled content" in IE [<a href="http://www.bluerobot.com/web/css/fouc.asp" title="Flash of Unstyled Content (FOUC)">Look here</a> for a full discussion on what it is], is a simple but effective one. Include the following lines after your closing <strong>title</strong> and immeditately before any style sheet is called.</p>
<p><em>&lt;!-- to correct the unsightly Flash of Unstyled Content. http://www.bluerobot.com/web/css/fouc.asp --&gt;<br />
&lt;script type="text/javascript"&gt;&lt;/script&gt;<br /></em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>356</wp:post_id>
		<wp:post_date>2004-03-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css-flash-in-ie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Reducing whitespace in CF</title>
		<link>http://gregs.tcias.co.uk/2004/03/17/reducing-whitespace-in-cf/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=358</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://tech.badpen.com/?mode=entry&entry=17" title="Modifying page generated content">A neat post</a> showing how to use the underlying Java of COldFusion MX to supress the annoying whitespace that CF seems to generate. He also included this little tidbit of Code:</p>
<p><em>&lt;!--- no output except cfoutput ---&gt; &lt;cfsetting enablecfoutputonly="yes"&gt; &lt;!--- all generation goes here ---&gt;&lt;cfoutput&gt;#repeatstring(chr(10),5)##createuuid()#&lt;/cfoutput&gt; &lt;!--- then we get all buffered output ---&gt; &lt;cfset variables.allout = getPageContext().getCFOutput().getString()&gt; &lt;!--- reset the content type and flush the buffer at the same time ---&gt; &lt;cfcontent type="text/html" reset="yes"&gt; &lt;!--- and output the trimmed version ---&gt; &lt;cfoutput&gt;#trim(variables.allout)#&lt;/cfoutput&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date>2004-03-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reducing-whitespace-in-cf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>IE comments</title>
		<link>http://gregs.tcias.co.uk/2004/03/17/ie-comments/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=359</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have been seeing this type of browser detection over the last month or so and now been <a href="http://www.andyjarrett.co.uk/andy/blog/index.cfm?mode=entry&entry=4D826949-3048-28EB-0E989A822BBACB52" title="AndyJarrett.co.uk">reminded of it in a few blogs</a>, so I thought I'd also link to this MSDN article on <a href="http://msdn.microsoft.com/workshop/author/dhtml/overview/ccomment_ovw.asp" title="About Conditional Comments">Internet Explorer Conditional Comments</a>. These comments only work for IE 5.x and above. Maybe these could be combined into something as useful as this:</p>
<p><em>&lt;!--[if IE lte 6.0]&gt;<br />
&lt;link rel="stylesheet" href="ie7-html.css" type="text/css"/&gt;<br />
&lt;![endif]--&gt;</em></p>
<p>Which would include the "IE7" stylesheet created by <a href="http://dean.edwards.name/IE7/" title="dean.edwards.name/IE7/">Dean Edwards</a> if the browser was IE 6 or less?? This would effectively patch the versions 6.0 and 5.5 of INternet Explorer to so support CSS better.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>359</wp:post_id>
		<wp:post_date>2004-03-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ie-comments</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Consuming webservices with PHP</title>
		<link>http://gregs.tcias.co.uk/2004/03/17/consuming-webservices-with-php/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=360</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://web.zdnet.com.au/builder/program/web/story/0,2000034810,20283202,00.htm" title="Consuming Web services in PHP">ZDNet</a>, has a nice little article on the different options to consume web services if you are using PHP. It focus on three: <acronym title=" Simple Object Access Protocol">SOAP</acronym>, <acronym title="Extensible Markup Language-Remote Procedure Call">XML-RPC</acronym> and <acronym title="Representational State Transfer">REST</acronym>, and provides an overview, a few examples and the strengths and weaknesses of each type.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>360</wp:post_id>
		<wp:post_date>2004-03-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>consuming-webservices-with-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>A few CFC best practices</title>
		<link>http://gregs.tcias.co.uk/2004/03/17/a-few-cfc-best-practices/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=361</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A rather <a href="http://www.dintenfass.com/cfcbestpractices/" title="CFC best practice">innocent post about a CFC best practice doc</a> caused a veritable deluge of e-mails and discussions on the CFCDev list yesterday. The discussion ranged from whether to set <strong>OUTPUT="false"</strong> in your CFCs, to invoking CFCs and of course the ever returning discussion over the CFC variable scopes. Admittedly quite a bit of it went over my head but there were a few tidbits that sunk in, which I have attempted to summarise as follows.</p>

<p>The following two implementations of CFC invocation are thread safe. The first is known as the semaphore:</p>

<p><em>&lt;cflock scope="application" type="readonly" timeout="10"&gt;<br />
	&lt;cfset reload_app_vars = NOT structKeyExists(application,
"app_vars_loaded") /&gt;<br />
&lt;/cflock&gt;<br />
&lt;cfif reload_app_vars&gt;<br />
&lt;cflock scope="application" type="exclusive" timeout="10"&gt;<br />
&lt;cfif NOT structKeyExists(application, "app_vars_loaded")&gt;<br />
	&lt;cfset application.foo = createObject("component", "foo") /&gt;<br />
	&lt;cfset application.foo.init() /&gt;<br />
	&lt;cfset application.app_vars_loaded = true /&gt;<br />
&lt;/cfif&gt;<br />
&lt;/cflock&gt;<br />
&lt;/cfif&gt;</em></p>

<p>As would this one, which is known as method chaining:</p>
<p><em>&lt;cfif not structKeyExists(application,"foo")&gt;<br />
	&lt;cflock name="myApplication_foo" type="exclusive"&gt;<br />
		&lt;cfif structKeyExists(application,"foo")&gt;<br />
			&lt;cfset application.foo =
createObject("component","com.acme.foo").init() /&gt;<br />
		&lt;/cfif&gt;<br />
	&lt;/cflock&gt;<br />
&lt;/cfif&gt;</em></p>

<p><a href="http://www.corfield.org" title="An Architect's View">Sean Corfield</a> also gave this explanation as to why these would be the correct way of doing it:</p>
<p><em>"Why? Because the code checks for the *existence* of application.foo, not whether application.foo is initialized. By doing create-and-initialization in one expression, you avoid getting into the state where you have a created-but-not-initialized object." </em></p>

<p>And for completeness here is an example that isn't, just so you can see how not to do it:</p>
<p><em>&lt;cfif not structKeyExists(application,"foo")&gt;<br />
	&lt;cflock name="myApplication_foo" type="exclusive"&gt;<br />
		&lt;cfif structKeyExists(application,"foo")&gt;<br />
			&lt;cfset application.foo = createObject("component","com.acme.foo") /&gt;<br />
			&lt;cfset application.foo.init() /&gt;<br />
		&lt;/cfif&gt;<br />
	&lt;/cflock&gt;<br />
&lt;/cfif&gt;</em></p>

<p>The thread safety was an interesting part and lead to the proposition of [or started because of, I really can't remember at this stage] another best practice, using the init() method as your constructor since CFCs don't have them. A key thing I took from it was that whatever I set in my constructor method, in the end I should make it to this: <em>&lt;cfreturn this /&gt;</em>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>361</wp:post_id>
		<wp:post_date>2004-03-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-few-cfc-best-practices</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Usability forgotten</title>
		<link>http://gregs.tcias.co.uk/2004/03/18/usability-forgotten/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=362</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was just wondering what I was going to write about, when I came across <a href="http://www.37signals.com/svn/archives/000600.php" title="Web design going in the wrong direction?">Jason Fried's post</a>, in which he wrote about the latest craze sweeping across the web development, i.e. <acronym title="eXtensible HyperText Markup Language">xHTML</acronym>/<acronym title="Cascasding Style Sheets">CSS</acronym> and a trend he has noticed. He had a very valid point to make and that is something I had put to the back of my mind: the human on the other side of the interface. If I am honest I am guilty! I too seem to have lost sight of the importance of the user experience in my ambitions to ditch tables for more semantically correct web pages.</p>

<p>The question remains: so even if the page renders better faster and reaches a broader audience, does this mean it's more usable? Well of course the simple application of Standards does not translate into better usability and as such I think it is important that we not loose sight of this and perhaps we should constantly remind ourselves of this. After all there was a time in the late 90s to early 2000, where nearly everybody was evangelising about usability and Mr Nielsen really came to the for and of course was quoted over and over again. And then we somehow forgot about it again and in a very <acronym title="Lord of the rings">LOTR</acronym>-esque way this skill, this mindset that shouldn't have been forgotten was forgotten. So look up the folks at <a href="http://www.37signals.com/" title="Web Design and Usability Expoerts">37Signals</a>, <a href="http://www.boxesandarrows.com/" title="The Design behind the Design">Boxes and Arrows</a> and <a href="http://www.adaptivepath.com/" title="The value of experience">Adaptive Path</a> (and of course let's not forget about <a href="http://www.useit.com/" title="Jakob Nielsen's Website">Mr Nielsen</a>) and let's not loose sight of our real goal, empowering our users and serving our audience.</p>

<p>One last thing I'd like to comment on, was a post by <a href="http://www.veen.com/jeff/archives/000503.html" title="I don't care about accessibility">Jeffery Veen in his blog entry</a>, which drives a point firmly home that I can only wholeheartedly agree with. Accessibility is not an add-on to your development and implementation process. If I may paraphrase his entry, if you practise your design/development as a craft, paying heed to standards and applying your knowledge and experience your sites will pretty much automatically be accessible.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>362</wp:post_id>
		<wp:post_date>2004-03-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>usability-forgotten</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JRun ? CFMX instance log files</title>
		<link>http://gregs.tcias.co.uk/2004/03/02/jrun-cfmx-instance-log-files/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=366</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you are running CF on top of JRun and have separate instances you may be wondering where the log files for these applications are now kept and here is where:<p>
<p><em>{install path}\servers\instanceName\cfusion-ear\cfusion-war\WEB-INF\cfusion\logs</em></p>
<p>The following path holds the logs files for JRun instances with their start up info, error/debug and event information<p>
<p><em>{install path}\logs</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>366</wp:post_id>
		<wp:post_date>2004-03-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jrun-cfmx-instance-log-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>More rounded corners with CSS</title>
		<link>http://gregs.tcias.co.uk/2004/03/02/more-rounded-corners-with-css/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=367</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I think a while back I posted this <acronym title=?A List Apart?>ALA</acronym> article on rounded corners for liquid <acronym title=?Cascading Style Sheets?>CSS</acronym> layouts, <a href="http://www.alistapart.com/articles/customcorners2/" title="CSS Design: Creating Custom Corners & Borders Part II">here</a> the author expands on his previous article showing you how to accommodate gradient backgrounds.</p>
<p>Incidentally ALA also has a few other articles up there worth checking out: <a href="http://www.alistapart.com/articles/cssdropshadows/" title="CSS Drop Shadows">CSS drop shadows</a> and <a href="http://www.alistapart.com/articles/designingforcontext/" title="Designing for Context with CSS">delivering context (media) sensitive content using CSS</a>, which takes the concept of different <acronym title=?Cascading Style Sheets?>CSS</acronym> types (eg: print, screen, etc...) to a new level.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>367</wp:post_id>
		<wp:post_date>2004-03-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-rounded-corners-with-css</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Homesite+ on Linux</title>
		<link>http://gregs.tcias.co.uk/2004/03/03/homesite-on-linux/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=368</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Steve Erat has an entry on his <a href="http://www.talkingtree.com/blog/index.cfm?data=20040129#65213609-45A6-2844-7768DF9B2E68372D" title="Running the ColdFusion IDE HomeSite+ on Red Hat 9 Linux">blog</a> on how he set up Homesite+ to run on RedHat using Wine. Getting so close now to be able to switch over, if only I could get my wireless card to work under Linux. Incidentally he also has a whole raft of other information relating to ColdFusion.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>368</wp:post_id>
		<wp:post_date>2004-03-03 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>homesite-on-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Where users click</title>
		<link>http://gregs.tcias.co.uk/2004/03/05/where-users-click/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=369</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The web reference news letter from a few weeks back carried a link to <a href="http://urlgreyhot.com/drupal/node/view/1440" title="Tracking user navigation methods by logging where users click on web pages">Micheal Angeles' blog entry</a> on ways that he adopted to find out how user's were using page layouts, the outcome of this analysis and the resulting case for change.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>369</wp:post_id>
		<wp:post_date>2004-03-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>where-users-click</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>The Blank Slate</title>
		<link>http://gregs.tcias.co.uk/2004/03/05/the-blank-slate/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=370</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Signal 37 have brought up a common issue with delivering projects, that we all face, but probably have never identified as a real/tangible problem before. <a href="http://www.37signals.com/svn/archives/000375.php" title="The Challenge of Designing the &quot;Blank Slate&quot;">The Challenge of Designing the &quot;Blank Slate&quot;</a>, reflects on the delivery of a dynamic site to the customer with no content available, after all he will be populating it with content once he starts using it.</p>
<p>The solution that have adopted is populating the interface with context relevant information, which will gradually be replaced by the end users content. A nice idea... <a href="http://www.37signals.com/svn/archives/000578.php">And here</a> you can see the follow up with some sample screenshots.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>370</wp:post_id>
		<wp:post_date>2004-03-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-blank-slate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>The differences between Oracle and MS SQL</title>
		<link>http://gregs.tcias.co.uk/2004/03/03/the-differences-between-oracle-and-ms-sql/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=371</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I-Lin Kuo, who regularly contributes to the CFDJ list on matters relating to databases has just had his <a href=" http://www.sys-con.com/coldfusion/article.cfm?id=711" title="Writing Queries for Oracle vs SQL Server - Utilize the database in CF apps">first article published</a> (hat tip Simon Horwith). This is a really good overview of the differences in coding for Oracle and MS SQL and in addition in answers many commonly encountered questions on the list and how they can be solved for either system and of course making the most of the database.</p>

<p>On another note I guess there is very little chance of getting away from having to re-write the queries but if you add DAO design pattern that I mentioned a few weeks back [the SUN website has a pretty good overview, with some samples, of how to apply the pattern in an environment that accommodates MS SQL and Oracle (http://java.sun.com/blueprints/patterns/DAO.html)]. So in addition to the above at least the maintenance/development of queries for differing platforms could be further lightened.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>371</wp:post_id>
		<wp:post_date>2004-03-03 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-differences-between-oracle-and-ms-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFIDE instances on JRun</title>
		<link>http://gregs.tcias.co.uk/2004/03/08/cfide-instances-on-jrun/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=372</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the main benefits of using CFMX instances on JRun was the ability to have multiple CFIDE administrators for your applications/instances. However despite the CFIDE working fine, the interface was not displaying properly. i.e. all the images and CSS templates were quite simply missing. Checking the path to the CFIDE showed that they were all there (<em>{your Path}\servers\instanceName\cfusion-ear\cfusion-war\CFIDE\administrator\</em>), so what was going on?</p>
<p>Well as it turns out, when you run a ColdFusion instance on JRun, it runs in distributes mode. What this means is that JRun is responsible for handling the <em>.cfm</em> and <em>.cfc</em> templates and your web server is responsible for serving the static content, e.g. images and style sheets. So I created a folder combination of CFIDE/administrator in my virtual host directory for that instance (e.g. <em>{your Path}\Apache Group\Apache2\htdocs\cfide\administrator</em>), copied over the style sheets from <em>{your Path}\servers\instanceName\cfusion-ear\cfusion-war\CFIDE\administrator\</em>. Then created another folder for the images and copied them from the previous folder as well. Checked my ColdFusion administrator and all the images and styles were being applied!</p>
<p>Now if you have multiple instances you may not want to copy all of these files over and over again into each websites virtual host directory, in which case you can simply copy them into your default website directory (say <em>{your Path}\Apache Group\Apache2\htdocs\ </em>) and then edit your <em>httpd.conf </em> by adding the following instruction:</p>
<p><em>Alias /cfide/ "{your Path}/Apache Group/Apache2/htdocs/Cfide/"</em></p>
<p>Big thanks to Sean Corfield for mentioning this on the CFCDev mailing list.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>372</wp:post_id>
		<wp:post_date>2004-03-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfide-instances-on-jrun</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Eclipse tools and resources</title>
		<link>http://gregs.tcias.co.uk/2004/03/08/eclipse-tools-and-resources/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=373</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have recently started doing some development with Eclipse IDE and I have to say I like it. This entry's aim is to compile an extensive list of resources and will hopefully continue to grow over time.</p>
<ul>
<li><a href="http://www.eclipse.org/" title="eclipse.org">http://www.eclipse.org/</a> - eclipse home</li>
<li><a href="http://cfeclipse.rohanclan.com/" title="Basic ColdFusion Eclipse plug-in">http://cfeclipse.rohanclan.com/</a> - CF auto completion</li>
<li><a href=" http://www.eclipse-plugins.info/eclipse/plugins.jsp?category=Languages " title=" Plugins for category Languages">http://www.eclipse-plugins.info/eclipse/plugins.jsp?category=Languages</a> - eclipse plugins</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>373</wp:post_id>
		<wp:post_date>2004-03-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eclipse-tools-and-resources</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>IE7</title>
		<link>http://gregs.tcias.co.uk/2004/03/08/ie7/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=374</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Dean Edwards has released <a href="http://dean.edwards.name/IE7/" title="dean.edwards.name/IE7/">a patch for IE 6.0 and 5.5</a> that IE more compliant when it comes to dealing with CSS2. I haven't tested it but will be sure to [come of the feedback is very positive: http://annevankesteren.nl/archives/2004/03/internet-explorer-7]. The implementation is real simple as well, simply include the <acronym title="Cascading Style Sheets">CSS</acronym> file he has created first in your pages.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>374</wp:post_id>
		<wp:post_date>2004-03-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ie7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>This week @ ALA</title>
		<link>http://gregs.tcias.co.uk/2004/03/08/this-week-ala/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=375</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This week <abbr title="A list Apart">ALA</abbr> carries two new articles. <a href="http://www.alistapart.com/articles/zebratables/" title="Zebra Tables">The first entitled Zebra Tables</a> show how to use CSS and a little JavaScript to style table rows, Paying close attention to cross brows compatibility and page weight.</p>
<p><a href="http://www.alistapart.com/articles/sprites/" title="CSS Sprites: Image Slicing's Kiss of Death">The other</a> shows wonderfully how to create image maps using <acronym title="Cascading Style Sheets">CSS</acronym>. Especially <a href="http://www.alistapart.com/d/sprites/ala-blobs2.html" title="Irregular shaped CSS image map rollover demo">the irregular shapes one...</a> Simply awesome.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>375</wp:post_id>
		<wp:post_date>2004-03-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-week-ala</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Published</title>
		<link>http://gregs.tcias.co.uk/2004/03/11/published/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=376</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="/html/i/cfdj200403s.png" width="163" height="209" alt="ColdFusion Developer Journal - March 2004" class="floatleft" /><p><a href="http://www.sys-con.com/magazine/?issueid=369&src=false" title="Volume: 6 Issue: 3">This months CFDJ</a> carries an article that I wrote, I know it's a shameless plug, but it really doesn't happen often. It's all about <a href="http://www.sys-con.com/story/?storyid=43994&DE=1" title="Using JRun Instances for CFMX Deployment">my experiences with JRun and CFMX instances</a> using Apache or IIS as the web server. Benjamin Blackwell also contributed an article about JRun in this issue entitled <a href="http://www.sys-con.com/story/?storyid=43997" title="Confronting JRun - Who's Afraid of J2EE?">Confronting JRun - Who's Afraid of J2EE?</a>, which takes a good look at what's going on under the hood of JRun!</p>
<p>Since writing that article I have also made a few additional posts here, which I have listed for convenience and completeness below:</p>
<ul>
	<li><a href="http://gregs.teacupinastorm.com/html/article/article.php?id=b64674a918271055ddfbc64f3cebd8da" title="CFIDE instances on JRun">CFIDE instances on JRun</a></li>
	<li><a href="http://gregs.teacupinastorm.com/html/article/article.php?id=e9a905e63c16e2a528a5bb529a0af1f3" title="JRun ? CFMX instance log files">JRun ? CFMX instance log files</a></li>
	<li><a href="http://gregs.teacupinastorm.com/html/article/article.php?id=6bc8f06d1a3eec17fd225a6c0bd8a0b0" title="Where CF mappings are stored in MX running on JRun">Where CF mappings are stored in MX running on JRun</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>376</wp:post_id>
		<wp:post_date>2004-03-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>published</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Mobile web content</title>
		<link>http://gregs.tcias.co.uk/2004/03/12/mobile-web-content/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=377</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The O'Reilly wireless dev centre is carrying a couple of articles on developing and creating content for mobile phone browsers. It's pretty good as apart from just giving you a few <a href="http://www.oreillynet.com/pub/a/wireless/2004/02/06/mobile_browsing.html" title="Creating Web Content for Mobile Phone Browsers, Part 1">WML and xHTML MP examples</a>, it also looks at <a href="http://www.oreillynet.com/pub/a/wireless/2004/02/06/mobile_browsing.html" title=" Creating Web Content for Mobile Phone Browsers, Part 2">the technical limitations of mobile phones and their diversity</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>377</wp:post_id>
		<wp:post_date>2004-03-12 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mobile-web-content</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>More stored procedures</title>
		<link>http://gregs.tcias.co.uk/2004/03/12/more-stored-procedures/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=378</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This time round I wanted to execute a query within my stored procedure (SP) and store the result in a variable that I could use at a later point in the SP. The idea is that you have to declare a variable that will hold the result (in this case <strong>@currentDay</strong>) and then you write your SQL like such: "<em>Select  @currentDay = DATEPART(dw, GETDATE())</em>" [incidentally I am grabbing the numeric day value, e.g. 1 which means Sunday]. Just to demonstrate the principle, below is some code that creates an SP, defines the expected inputs, declares a few variables, then

executes the <em>select</em> statement, assigns the result to <strong>@currentDay</strong> and then prints it.</p>

<p><em>CREATE PROCEDURE [dbo].[qSomeSP] (<br />
@someID int = NULL,<br />
@someChar varchar(30) = NULL,<br />
)<br />
AS<br />
<br />
DECLARE<br />
@currentDay varchar(10)<br />
<br />
Select  @currentDay = DATEPART(dw, GETDATE())<br />
PRINT(@currentDay)
</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>378</wp:post_id>
		<wp:post_date>2004-03-12 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-stored-procedures</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Mozilla/IE6 CSS hack</title>
		<link>http://gregs.tcias.co.uk/2004/03/12/mozillaie6-css-hack/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=379</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was having an annoying problem with a unordered list I was using for navigation. The list was encased by a div (which had an ID of <em>globalNav</em>), for which I had specified a width of 110px. Now in order to have the roll over background stretch to the width of the container I specified the same width in the style for the element a. This worked fine in IE6, but overlapped the containing div, rather infuriatingly when using Mozilla. Since pictures speak volumes have a look at the screen grabs and you?ll see what I mean.</p>

<img src="/html/i/css_hack_ie.gif" alt="IE screengrab" /><img src="/html/i/css_hack_mozilla.gif" alt="IE screengrab" />

<p>Now the problem is not a new one and it has been quite well documented in the past I just somehow have never had to really deal with it or indeed have to understand it. What appears to happen is that Mozilla takes the padding of the a element (10px left and right) into account whereas <abbrev title=?Internet Explorer?>IE</abbrev> doesn't, meaning IE believes the width to be 110px, but Mozilla on the other hand thinks it's 130px. This is no fault of Mozilla?s as this is the correct interpretation of the box model and it?s my fault for building this with IE only in the first place.</p>

<p>Now my first instinct was to do away with 110px from within the <strong>a</strong> element, but that of  course had implications for IE, now the back ground colour rollover didn?t look quite right anymore. There was no option to increase the width of the container to 130px due to the design and our application development framework, which makes extensive use of <acronym title=?Cascading Style Sheet?>CSS</acronym> to render templates using a page builder component.</p>

<p>The work around I came across I found <a href="http://chris.dzygn.com/tutorials/css/hacks/" title="css hacks">here</a> and was coined by <a href=?http://www.tantek.com/CSS/Examples/boxmodelhack.html? title=?Box Model Hack?>Tantek Çelik</a> as the ?be nice to Opera 5? hack. Ironically it also helps IE 6 and thus in turn Mozilla. As far as I can gather the <em>html>body #ID Element</em> selector rule is ignored by IE, but understood by Mozilla and hence the width is accordingly reset to 90px.Below is for completeness sake a snippet of the new and improved style sheet.</p>

<p><em><br />
/* start global nav */<br />
#globalNav {<br />
   	margin: 0; <br />
	border: 1px solid #6cc; <br />
	width: 110px; <br />
}<br />

/*<br />
	ul/li styles go here<br />
*/<br />

#globalNav a {<br />
	display: block; <br />
	padding: 2px 10px; <br />
	color: #f00; <br />
	background-color: #fff; <br />
	text-decoration: none; <br />
	border-bottom: 1px dotted #6cc; <br />
	width: 110px; <br />
}<br />
html>body #globalNav a { width: 90px; }<br />
/* end global nav */<br />
</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>379</wp:post_id>
		<wp:post_date>2004-03-12 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mozillaie6-css-hack</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Text Based</title>
		<link>http://gregs.tcias.co.uk/2004/04/13/text-based/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I had stumbled across <a href="http://textbased.com/~minimalist/" title="textbased.com &gt;&gt; Minimalist Web Project">this site</a> ages ago and I loved is so much that it inspired me to a design in a minimalist kind of approach and more importantly gave me my first taste of web standards. Somehow I lost the address, but thanks to <a href="http://hownow.brownpau.com/" title="how now, brownpau">how now, brownpau</a>, I found it again!!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2004-04-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>text-based</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Undocumented ColdFusion MX functions</title>
		<link>http://gregs.tcias.co.uk/2004/04/13/undocumented-coldfusion-mx-functions/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Another helpful person on the <abbr title="ColdFusion Developer Journal">CFDJ</abbr> mailing list posted <a href="http://www.cfdev.com/mx/undocumentation/" title="The ColdFusion MX Un-Documentation">this link</a>, which is a neat site that lists some of the undocumented functions in <abbr title="ColdFusion MX">CFMX</abbr> and also shows how they found out about them [yep, by taking advantage of the Java/<abbr title="ColdFusion MX">CFMX</abbr> integration].</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2004-04-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>undocumented-coldfusion-mx-functions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>All you ever wanted to know about CFMAIL</title>
		<link>http://gregs.tcias.co.uk/2004/04/15/all-you-ever-wanted-to-know-about-cfmail/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Cameron Childress has put up the first part of what could really be <a href="http://www.sumoc.com/?fuseaction=cfmail.home" title="Sumo Guide to CFMAIL > Home">an impressive document on CFMAIL</a>, which aims to cover everything you?d ever need (or indeed want) to know about the tag. Currently available is the information the tag actually works, future additions will cover: tweaks, tips and tricks, errors and some trouble shooting advice.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2004-04-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>all-you-ever-wanted-to-know-about-cfmail</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Updating the JDBC drivers</title>
		<link>http://gregs.tcias.co.uk/2004/04/15/updating-the-jdbc-drivers/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I found myself in a position today where I had to update the <acronym title="Java Database Connectivity">JDBC</acronym> drivers on our <acronym title="ColdFusion MX">CFMX</acronym> servers. You can find out more about <a href="http://www.macromedia.com/support/coldfusion/ts/documents/cfmx61_sqlserver_cpu.htm" title="ColdFusion MX 6.1: Updated DataDirect drivers for 100% CPU utilization and other issues">the fixes when applying the driver and download here</a>.</p>

<p>First things first, to check what version you are running add the following lines to a .cfm template and run it:</p>

<p><em>&lt;cfscript&gt;<br />
	jdbcDriver = CreateObject("java", "macromedia.jdbc.sqlserver.SQLServerDriver");<br />
	writeoutput(jdbcDriver.getMajorVersion() & "." & jdbcDriver.getMinorVersion());<br />
&lt;/cfscript&gt;<br />
&lt;!--- just for the hell of it dump all the methods ---&gt;<br />
&lt;cfdump var="#jdbcDriver#" /&gt;</em></p>

<p>This should return <strong>3.2</strong> (if you are running 6.1 anyway). Now back up your copy of macromedia_drivers.jar, stop your instance and copy the new macromedia_drivers.jar file over. Now if you have CFMX running as an instance of JRun (or as Macromedia call it: the J2EE configuration), you?ll need to copy the drivers over to instance cfusion\lib folder. Simply copying it into JRun\lib will only affect JRun.</p>

<p><em><strong>{your install path}</strong>\JRun4\servers\<strong>{your instance}</strong>\cfusion-ear\cfusion-war\WEB-INF\cfusion\lib\ </em></p>

<p>Then remember to restart the CFMX instance and the re-run the script and see if the version number has increased to <strong>3.3</strong>. If not consider stopping and restarting your JRun server and all the instance associated with it.</p>

<p>One thing I noticed and this was purely coincidental was that if I checked the version of jdbc driver currently loaded after copying the new drivers over and not restarting the instance, the version number returned was: <strong>-1.-1</strong>!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2004-04-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>updating-the-jdbc-drivers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JMC tales</title>
		<link>http://gregs.tcias.co.uk/2004/04/21/jmc-tales/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The JRun management console is intended to be a handy on-line tool for
managing your JRun installation, however it has turned to be a nuisance on
more than one occasion.</p>

<p>For starters, and <a href="http://www.sys-con.com/story/?storyid=43994"
title="Using JRun Instances for CFMX Deployment">I mentioned this in my
article</a>, when ever I stopped an JRun instance using the <abbr title="JRun Management Console">JMC</abbr>, it would
pretty much immediately start up. Great if the server had choked, but when
it's my intention... not so good. The only solution was to stop (and then
subsequently start)  the instance from the command line. Or installing it as
a service, that worked too.</p>

<p>A couple of months back, <a
href="http://www.sys-con.com/story/?storyid=43997" title="Confronting JRun -
Who's Afraid of J2EE?">Benjamin Blackwell</a>, who also published an article
in that issue, came across another problem with the <abbr title="JRun Management Console">JMC</abbr>. He happened to try
and add Verity and <abbr title="Component Object Model">COM</abbr> support for JRun using the <abbr title="JRun Management Console">JMC</abbr>. Having added the
arguments to the <em>java.library.path</em>, he tried to restart the JRun
server to have the changes take effect. And that's when JRun failed spitting
out:</p>

<p><em>Unrecognized option: -server<br />
Could not create the Java Virtual Machine</em></p>

<p>I turns out that somehow the <abbr title="JRun Management Console">JMC</abbr> had added this to the <abbr title="Java Virtual Machine">JVM</abbr> arguments:</p>

<p><em># Arguments to VM<br />
java.args=-Xmx512M
<strong>-server</strong> -Dsun.io.useCanonCaches=false</em></p>

<p>And there you go, another handy hint should run into a few issues with
JRun. Thanks to Simon and Benjamin for sharing the info.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2004-04-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jmc-tales</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Freakish Firefox behaviour</title>
		<link>http://gregs.tcias.co.uk/2004/04/21/freakish-firefox-behaviour/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=68</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was trying access my locahost on a non-standard port and firefox kindly
re-directed me to <a href="http://localhost.be/" title="check out
localhost.be">localhost.be</a>. I turns out that having
<strong>keyword.enabled</strong> = true, in your
<strong>about:config</strong> results in you being re-directed there. The
fix can also <a
href="http://www.localhost.be/?dir=weblog&item=belogged-detail&id=25"
title="Hit it">be found</a> on that site. Thanks!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2004-04-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>freakish-firefox-behaviour</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>XML feed fixed up</title>
		<link>http://gregs.tcias.co.uk/2004/04/21/xml-feed-fixed-up/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=69</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So I finally got round to updating my rdf feed. Originally it used to be
controlled by the CMS using a priority listing based on selection. But this
turned out to be time consuming to manage, and so I opted to simply rely on
pulling out the latest 20 items.</p>

<p>I also changed the way it was generated. Originally it used to down by
writing to a file. Again this seemed just too much and by simply outputting
the content to a PHP template and using the following line preceding the
output: <em>header("Content-type: text/xml");</em>, it works just as well
and always serves fresh content.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date>2004-04-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xml-feed-fixed-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Where does JRun/CFMX store the compiled cfcs?</title>
		<link>http://gregs.tcias.co.uk/2004/04/21/where-does-jruncfmx-store-the-compiled-cfcs/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=70</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A while back I found out that <abbr title="ColdFusion MX">CFMX</abbr> compiles ColdFusion Components and I was curious as to where they were stored. I found two locations where they were kept:</p>

<p><em>&lt;your drive&gt;:\CFusionMX\wwwroot\WEB-INF\cfclasses<br />
&lt;your drive&gt;:\CFusionMX\wwwroot\WEB-INF\cfc-skeletons<br />
<br />
&lt;your drive&gt;:\JRun4\servers\&lt;instance name&gt;\cfusion-ear\cfusion-war\WEB-INF\cfclasses<br />
&lt;your drive&gt;:\JRun4\servers\&lt;instance name&gt;\cfusion-ear\cfusion-war\WEB-INF\cfc-skeletons
</em></p>

<p>I am not sure what the differences are between the two folders and usually I find the compiled components in <strong>cfclasses</strong> folder [only once so far have I found one im <strong>cfc-skeleton</strong>]. Once compiled the <acronym title="ColdFusion Components">CFC</acronym> seems to be compiled into a one generic class file and then another one for each function in the CFC.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2004-04-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>where-does-jruncfmx-store-the-compiled-cfcs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Flashy Flash</title>
		<link>http://gregs.tcias.co.uk/2004/04/23/flashy-flash/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=71</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Something to play around with. Over at <a href="http://www.7nights.com" title="asterisk * | D. Keith Robinson's Web Design Blog.">asterisk *</a>, there is an example of standards compliant mark-up for Flash (not sure if it's backward compatible with older browsers, but that's by the by at this point), which I was thinking of combining with <a href="http://whatdoiknow.org/archives/001629.shtml" title="Flash slide show source">Todd Dominey's Flash Slide Show</a> [you know the one he used on the <a href="http://www.pga.com/pgachampionship/2003/" title="The 85th PGA Championship">PGA 2003 site</a>] for my little header. Below, for future reference, is the code that validates the Flash embedding as xHTML 1.1 strict.</p>
<p><em>&lt;object type="application/x-shockwave-flash" data="c.swf?path=intro.swf" width="600" height="200"&gt;<br />
 &lt;param name="movie" value="c.swf?path=intro.swf" /&gt;<br />
&lt;/object&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date>2004-04-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flashy-flash</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Usability guidelines</title>
		<link>http://gregs.tcias.co.uk/2004/04/23/usability-guidelines/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=72</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just read the <a href=?http://www.webreference.com? title=?WebReference.com - The Webmaster's Reference Library
?>Webreference</a> newsletter and they pointed to the <a href="http://web.mit.edu/ist/usability/usability-guidelines.html" title="MIT IS&amp;T: Usability Guidelines">MIT usability guidelines</a>, which is actually just a nice list of items to check your work off against. Nice...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2004-04-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>usability-guidelines</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Some nice sites</title>
		<link>http://gregs.tcias.co.uk/2004/04/23/some-nice-sites/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just a couple of sites I stumbled across today and would like to make a note of:</p>
<ul>
	<li><a href="http://www.airbag.ca/" title="Airbag - The World's Safest Website">Airbag - The World's Safest Website</a>: simply a cool design with some inspiring comments in his code.</li>
	<li><a href="http://www.shauninman.com/" title="ShaunInman.com">ShaunInman.com</a>: again beautifully designed site, with a really cool unordered pop up list in CSS. He is also the mind behind the FIR and now the Inman Flash Replacement technique</li>
	<li><a href="http://www.7nights.com/asterisk/index.php" title="asterisk* | D. Keith Robinson's Web Design Blog.">asterisk* | D. Keith Robinson's Web Design Blog</a>, web standards, css and Flash... and of course another beautiful design</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2004-04-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>some-nice-sites</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Lack of updates</title>
		<link>http://gregs.tcias.co.uk/2004/05/17/lack-of-updates/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just a quick note to apologies about the lack of updates. I have been real busy setting up my own servers (web, mail, database and DNS) over the last month and then moving all the sites across and as a result you can expect to see a few posts on the setting up and configuring these services over the coming weeks.</p>
<p>I took the opportunity to move this blog over to a little page creation framework that I have been working on in <acronym title="PHP: Hypertext Preprocessor">PHP</acronym> and <acronym title="ColdFusion">CF</acronym> and so far am quite pleased with it, though it seems to run a little slow on this site. There are also a few small bugs, so bear with me on that front as well. Yep everything is a work in progress!! :)</p>
<p>Additionally I have also accepted a new role, so it truly has been all change over the last month! And all for the better!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2004-05-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lack-of-updates</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CF plugin for Eclipse update</title>
		<link>http://gregs.tcias.co.uk/2004/05/17/cf-plugin-for-eclipse-update/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=75</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The guys behind CFEclipse, a CFML plug for then eclipse editor have released a new update and it's hosted on <a href="http://cfeclipse.tigris.org/" title="CFEclipse project">a new site</a>.</p>
<p>You can also find some more information and resources over on <a href="http://www.dopefly.com/pages/cfeclipse.html" title="CFEclipse Resource Page">Nathan Strutz's page</a>, which has some good info on getting started with Eclipse (which isn't as obvious as it may seem if you are used to CFStudio or Dreamweaver).</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2004-05-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cf-plugin-for-eclipse-update</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>How to pop up and remain compliant</title>
		<link>http://gregs.tcias.co.uk/2004/05/17/how-to-pop-up-and-remain-compliant/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=76</guid>
		<description></description>
		<content:encoded><![CDATA[<p>An interesting thread over at simplebits (http://www.simplebits.com/archives/2004/05/06/sq.html - SimpleQuiz ? Part XVI: Launching Windows) on luanching pop-ups and what path to take. It's an interesting discussion on attitudes towards standards and the methods devised to work with them. For many remaining with a strict doctype and using JavaScript was the way to go, but there were a number of good solutions. Here are two that I liked:</p>
<ul>
	<li><a href="http://www.youngpup.net/2003/popups" title="How to Create Pop-Up Windows">How to Create Pop-Up Windows</a> - a JavaScript solution</li>
	<li><a href="http://www.accessify.com/tutorials/standards-compliant-new-windows.asp" title="Standards-Compliant New Windows">Standards-Compliant New Windows</a> - adding/extending the xHTML modules.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2004-05-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-pop-up-and-remain-compliant</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Migrating CFMX from windows to Linux</title>
		<link>http://gregs.tcias.co.uk/2004/04/13/migrating-cfmx-from-windows-to-linux/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=208</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This was a thread from a while back n the <abbr title="ColdFusion Developer Journal">CFDJ</abbr> list in which someone asked what needed to be considered when migrating <abbr title="ColdFusion MX">CFMX</abbr> instance running on JRun from a windows server to a Linux box. I have summarised the findings for posterity:</p>
<ul>
	<li>Files are case sensitive on unix, hence Application.cfm, OnRequestEnd.cfm and all cfincludes must have the exact case.</li>
	<li>The same applies to &lt;a href=""&gt; and &lt;img src=""&gt;, however there is a module for Apache that allows you to fix that potential pitfall.</li>
	<li>No COM support</li>
	<li>Any C++ CFX tags would need to be recompiled for Linux</li>
	<li>Verity Support is limited to certain Linux distros see the release notes</li>
	<li>talking to an MS Access database is trickier.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date>2004-04-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>migrating-cfmx-from-windows-to-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>A little optimisation trick</title>
		<link>http://gregs.tcias.co.uk/2004/03/30/a-little-optimisation-trick/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=363</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here is a really nice way to reduce some of the page weight in your <acronym title="HyperText Markup Language">HTML</acronym> code. Simply introduce the &lt;base&gt; tag into your template between the &lt;head&gt; tags with the <acronym title="Unified Resource Locator">URL</acronym> of your site as the value of the <em>href</em> attribute and all of your links, path to images, styles, javascript files can be referenced relatively. Consider this example:</p>
<p><em>&lt;a href="http://www.tcias.co.uk/v2/products/amp.php" title="Read more about &amp;amp;"&gt;Read more about &amp;amp;&lt;/a&gt;</em></p>
<p>Could now simply be referenced like such if you set your base href to "<em>http://www.tcias.co.uk/v2/</em>":</p>
<p><em>&lt;a href="products/amp.php" title="Read more about &amp;amp;"&gt;Read more about &amp;amp;&lt;/a&gt;</em></p>
<p>This saves yourself a few bits here and there.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>363</wp:post_id>
		<wp:post_date>2004-03-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-little-optimisation-trick</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Testing</title>
		<link>http://gregs.tcias.co.uk/2004/03/30/testing/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=380</guid>
		<description></description>
		<content:encoded><![CDATA[<p>On my list of things to do this month is to come up with a set of testing guidelines. Bearing that in mind I came across Anti-clue's website, who provided the following list of types and levels of testing (the original can be found <a href="http://www.anticlue.net/archives/000194.htm" title="Anticlue: Types of Testing">here</a>). A good starting point to make sure I don't forget anything!!</p>

<ul>
<li><strong>Concept Testing:</strong> Testing to see if the concept of the application is viable.</li>
<li><strong>Functional Testing:</strong> Testing if the function that was changed/enhanced works as expected.</li>
<li><strong>Unit Testing:</strong> Testing to see if the program still functions as anticipated based upon scenarios.</li>
<li><strong>Data Migration Testing:</strong> If you are switching to a new system, this is a test to ensure the data from the old system migrates properly to the new system.</li>
<li><strong>Integrated Testing:</strong> Testing to see if the application still functions as anticipated with other applications also based upon scenarios.</li>
<li><strong>Stress Testing:</strong> Testing to ascertain the load an application can withstand.</li>
<li><strong>Regression Testing:</strong> Testing to ensure that with the existing software, the newly added component doesn't have a negative impact. Normally scenarios are a good idea here.</li>
<li><strong>Interoperability Testing:</strong> Two systems are being tested for the data passed between the systems. Again scenarios are ideal.</li>
<li><strong>Usability Testing:</strong> How users interact with the application. Is it cumbersome or does it flow?</li>
<li><strong>User acceptance Testing:</strong> The overall process satisfaction by the project sponsor and customers.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>380</wp:post_id>
		<wp:post_date>2004-03-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Google re-designs</title>
		<link>http://gregs.tcias.co.uk/2004/03/30/google-re-designs/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=381</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Google has re-designed, and it certainly looks leaner and meaner, however a peak under the hood reveals not exactly web standards code, by virtue of missing quotes around attributes and even the odd &lt;font&gt; tag. I can't help but wonder why they didn't go for the full standards approach, after all it is supposed to reduce the bloat of your code and in turn cut down on bandwidth (which in Google's case must be astronomical). So why no Standards? I can only speculate that after analysis they opted for this solution as it provided the greatest benefits in terms of savings and efficiency. Certainly dropping all of the double quotes would reduce the page weight, though I still can't find a rational for the &lt;font&gt; tag =-1 value. Would a style rule really weigh that much? Especially if you externalised the <acronym title="Cascading Style Sheets">CSS</acronym> file? Hmm?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>381</wp:post_id>
		<wp:post_date>2004-03-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-re-designs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Internationalisation</title>
		<link>http://gregs.tcias.co.uk/2004/04/01/internationalisation/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=382</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A subject that I have been interested in since my Sapient days, only then it was referred to it as globalisation [G11N] [personally I think localisation [I10N]/internationalisation [I18N] sounds better, but these two form a subset of G11N] and it has been receiving a little interest over the last couple of months in the ColdFusion developer community and most notably in CFDJ which published a couple of articles over the last few months on the topic.</p>

<p><a href="http://www.sys-con.com/story/?storyid=43795&amp;DE=1" title="Add Localization to Your Web Site">The first one</a> was Ray Camden, which introduced the basic concepts and terminology of localisation as well as a small working example. Ray also pointed to a few resources:</p>

<ul>
	<li><a href="http://cfg11n.blogspot.com" title="Globalizing ColdFusionMX">Paul Hastings blog</a></li>
	<li><a href="http://oss.software.ibm.com/icu4j/demo_tools/RBManager.html" title="Resource Bundle Manager">Resource Bundle tool</a></li>
	<li><a href="http://java.sun.com/developer/technicalArticles/Intl/ResourceBundles/" title="Java Internationalization: Localization with ResourceBundles">Java Internationalization: Localization with ResourceBundles</a></li>
</ul>

<p><a href="http://www.sys-con.com/story/?storyid=43993&amp;DE=1" title="It's Not Called The 'World Wide Web' for Nothing">The second article</a> by Paul Hastings is much more about putting case for the importance of I18n and l10n forward. Some nice facts and figures on the usage of the internet and it's growth around the world, which clearly point to taking this seriously as a development practice. He also covers the terminology in this field.</p>

<p>I came across <a href="http://www.macromedia.com/devnet/mx/coldfusion/articles/globalize.html" title="Creating Globalized ColdFusion Applications">another article</a> by Paul Hastings over at DevNet on the topic and this covers a lot of the points above but also contains a few pointers to good practices. Yep that's right good, not best, as Paul indicates this is very much and emerging field and hence a lot of learning and re-assessing is being done. However I don't think there is much doubt, that Paul is the cf guru on this topic at present.</p>

<p>Here is another <a href="http://www.benorama.com/coldfusion/libraries/i18n.htm" title="I18N FUNCTIONS LIBRARY">i18N link</a> with a set of functions for download. After a little bit of digging round the Sun web site I was also able to find <a href="http://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/native2ascii.html" title="Native-to-ASCII Converter">the documentation for the native 2 ascii tool</a> that was referred to in the <abbr title="ColdFusion Developer Journal">CFDJ</abbr> articles.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>382</wp:post_id>
		<wp:post_date>2004-04-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>internationalisation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFMX/Java integration</title>
		<link>http://gregs.tcias.co.uk/2004/04/13/cfmxjava-integration/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=383</guid>
		<description></description>
		<content:encoded><![CDATA[<p>There is nothing quite like learning by example and Pete Freitag has kindly pointed to a few of his examples on accessing Java methods from within ColdFusion MX.</p>

<ul>
	<li><a href="http://www.petefreitag.com/item/85.cfm" title="How to make ColdFusion MX go to sleep">How to make ColdFusion MX go to sleep</a></li>
	<li><a href="http://www.petefreitag.com/item/115.cfm" title="ColdFusion Memory Usage Stats">ColdFusion Memory Usage Stats</a></li>
	<li><a href="http://www.petefreitag.com/item/104.cfm" title="Using Java Web Services with CFMX">Using Java Web Services with CFMX</a></li>
	<li><a href="http://www.petefreitag.com/item/97.cfm" title="Getting the server hostname programmatically">Getting the server hostname programmatically</a></li>
	<li><a href="http://www.petefreitag.com/item/118.cfm" title="Checking your JDBC Driver Version">Checking your JDBC Driver Version</a></li>
</ul>
<p>For more info on all the Java methods available to cfmx look no further than the <a href="http://java.sun.com/j2se/1.4.2/docs/api/index.html" title="JavaTM 2 Platform Std. Ed. v1.4.2">Java Api documentation</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>383</wp:post_id>
		<wp:post_date>2004-04-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmxjava-integration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Shortcuts</title>
		<link>http://gregs.tcias.co.uk/2004/05/18/shortcuts/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=45</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Came across two handy little keyboard shortcuts that I did not know about previously.</p>
<ul>
	<li>When using Dreamweaver MX you can jump ahead to any line of code, by hitting <strong>CTRL+G</strong>, which brings up a little dialogue box where you can specify the line number you want to jump to.</li>
	<li>To quickly edit a field or a rename a file name in Windows, simply select it and hit <strong>F2</strong>.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2004-05-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shortcuts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Regular expressions</title>
		<link>http://gregs.tcias.co.uk/2004/05/18/regular-expressions/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=46</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Stumbled across <a href="http://www.regular-expressions.info/" title="Regular-Expressions.info">Regular-Expressions.info</a>, which claims to be &quot;The Premier Web Site about Regular Expressions&quot; and I certainly found one or two handy hints to help me fix a few bugs with my blog.</p>
<p>And while I am on the topic someone posted this site on the CFCDev list today: <a href="http://regexlib.com/" title="Regular Expression Library">Regular Expression Library</a>, which has some 638 expressions from contributors, is fully searchable and it even has a little test application for checking your <abbr title="Regular Expression">RegExp</abbr> against JavaScript and ASP.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2004-05-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>regular-expressions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Final big list</title>
		<link>http://gregs.tcias.co.uk/2004/05/18/final-big-list/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I guess this will be the final list, now that I have finally decided to take part in the publishing craze that is blogging. In future these will make their way into individual posts and hopefully with a little bit more personal insight as well.</p>

<ul>
 <li><a href="http://www.webreference.com/programming/mozilla/" title="Rapid Application Development with Mozilla: Navigation. Pt. 1">A full chapter</a> from the PrenticevHall book: Rapid Application Development with Mozilla. This chapter talks you through developing a navigation system using XUL. The focus is XUL and it's associated tags used for navigation development, however it does contain some code samples to highlight the use of these tags as well.</li>
 <li><a href="http://www.webreference.com/programming/javascript/j_s/column5/" title="Web Code Fixes Required by Internet Explorer in Early 2004">A brief article</a> on what the impact of the changes to IE as a result of the lost patent case. It also provides a workaround using JavaScript and document.write to load anything that uses &lt;applet&gt;, &lt;embed&gt; or &lt;object&gt;.</li>
 <li>A blog maintained by a ColdFusion development company, contains a lot of <a href="http://www.webapper.net/index.cfm?fuseaction=fuseblog.mainpage" title="Webapper blog">their experiences in developing ColdFusion applications</a>.</li>
 <li>A <a href="http://www.holub.com/goodies/uml/index.html" title="Allen Holub's UML Quick Reference">quick reference</a> on UML diagrams.</li>
 <li>Hat tip Zeldman, <a href="http://www.d.umn.edu/itss/support/Training/Online/webdesign/" title="Web Design References">an absolutely huge resource</a> of links to all sorts of web design related information [some 30,000 links]. I had a quick look through the PHP stuff and immediately learned something new from one of the links. Superb!!!</li>
 <li>This is the author behind the O'Reilly book: CFMX Developers Cookbook. It's <a href="http://www.petefreitag.com/" title="Pete Freitag's Homepage">his blog</a> and from just an initial scan I saw quite a few useful little scripts and information.</li>
 <li><a href="http://blog.daemon.com.au/" title="Daemon | serious web development">Another CF blog</a>, this time by a group of developers down in Elizabeth Bay, Sydney.</li>
 <li>This is Matt Liotta a name that comes up frequently in the ColdFusion developer community, real clever bloke, <a href="http://devilm.com/" title="Confessions of a Code Addict">check out his blog</a>.</li>
 <li>Central is a product from Macromedia that in short allows developers to develop desktop based Flash applications. This site is <a href="http://www.centralmx.com/" title="Central MX">a centralised blog on the technology</a>.</li>
 <li>A presentation on <a href="http://www.systemanage.com/presentations/cfmxHiddenGems.pdf" title="CFMX Hidden Gems [PDF file]">the hidden gems in CFMX</a>, the reason this is up here is the reference to cftry/cfcatch within cfscript <a href="http://buildcfcs.blogspot.com/2003_03_01_buildcfcs_archive.html#90939832" title="The Build CFCs tool">more info can be found here</a> and <a href="http://livedocs.macromedia.com/cfmxdocs/Developing_ColdFusion_MX_Applications_with_CFML/CFScript5.jsp#1118165" title="LiveDocs: Handling Exceptions">here</a>. But in itself it's a very useful presentation containing a raft of information on CFMX, links to resources, tips, tricks and articles.</li>
 <li>It's been a while since I have put up an ALA article, so here is one on <a href="http://www.alistapart.com/articles/fauxcolumns/" title="Faux Columns">how to get one column that is shorter than another to stretch all the way to the end of the content</a>. Well it's a trick really... but it works real good!</li>
 <li>Well it never rains it pours. Here is another ALA article this one <a href="http://www.alistapart.com/articles/elastic/" title="Elastic Design">talks about em</a>. I had started using em for specifying the font size, but ran into exactly the same problem that Patrick talks about in his article. The solution use percentages. He actually goes much further and talks about creating designs that are completely based on ems and not pixels.</li>
 <li><a href="http://www.corej2eepatterns.com" title="Core J2EE patterns">The website for the book on "Core J2EE patterns"</a>.</li>
 <li>More <a href="http://www.patternscentral.com/index.php" title="Pattern Central">patterns</a>, all things related to design patterms, forums, news and articles.</li>
 <li>The author Peter-Paul Koch <a href="http://www.digital-web.com/columns/keepitsimple/keepitsimple_2004-01.shtml" title="Keeping it simple">tackles JavaScript and accessibility</a>. He dissects current approaches into three views: plain view (xHTML), simple presentation view (xHTML+CSS) and the full view (xHTML+CSS+JavaScript), where this final view forms the behaviour layer. He then proceeds to look at a fourth view, the one that most commonly deals with accessibility mark-up (xHTML) and behaviour (JavaScript) and introduces ways to incorporate the two to make sites more accessible and usable.</li>
 <li>A site purely dedicated to discussions about <a href="http://www.phppatterns.com/" title="PHP Patterns">patterns for PHP</a>. Yet more concept introductions, discussions on design patterns, code examples and much much more.</li>
 <li><a href="http://www.macromedia.com/support/jrun/ts/documents/tn18206.htm" title="Configuring Individual JVM Settings for each JRun Server">This tech note</a> describes how you can configure each instance of a JRun server to have different settings (such as use a different XML parser).</li>
 <li>Brandon Purcell once again <a href="http://www.macromedia.com/devnet/mx/coldfusion/articles/multi_instances.html" title="Installing and Configuring ColdFusion MX 6.1 Multiple Instances with IIS and Apache Virtual Hosts">talks us through</a> getting CFMX instances up and running, this time with attention to Apache and not just IIS.</li>
 <li>Ben Edwards brings us <a href="http://www.mach-ii.com/downloads/docs/Mach-II%20Request-Event-Exception%20Handling%20-%20CF%201.0.pdf" title="Mach-II Request, Event, and Exception Handling">more documentation</a> on the inner workings of Mach-II, explaining in this PDF how Requests, Events and Exceptions are handled/implemented by the framework. He also has <a href="http://www.mach-ii.com/downloads/docs/Beans%20in%20Mach-II.pdf" title="Beans, Beans, the Musical Fruit">published another article</a>, which gives us developers an insight into how beans work.</li>
 <li>You can never <a href="http://www.15seconds.com/issue/040115.htm" title="Database Performance Philosophy">read enough about Performance</a>, even if you have covered certain areas before, it's always good to have a look again and again. You can always learn something new from someone else's experience.</li>
 <li>I didn't know you could do this: <strong>&lt;div id="main" class="class1 class2"&gt;...&lt;/div&gt;</strong>, i.e. specify two classes in one go! If you go over to web optimisation <a href="http://www.websiteoptimization.com/speed/tweak/classes/" title="CSS: Group Common Styles into Shared Classes">you can read more about this technique</a>, which is yet another bandwidth saving technique.</li>
 <li>A two part article helping you figure out how to benchmark performance. The <a href="http://www.databasejournal.com/features/mssql/article.php/3298411" title="Benchmarking Performance of a Query - Part 1 Elapsed Time">first part</a> focuses on understanding elapsed time and highlights a couple techniques for measuring the execution time of your database code using the Query Analyser.</li>
 <li>A <a href="http://www.rewindlife.com/archives/000041.cfm" title="Unzip a file in CFMX with java.util.zip">useful UDF</a> from the guys over a Rewindlife that unzips a file using the java.util.zip, requires the use of CFMX 6.1</li>
 <li>This is a great way to <a href="http://www.rewindlife.com/archives/000023.cfm" title="Handling file uploads without CFFILE">incorporate CFFILE into</a>  cfscript by using both java.lang.String and the java.io.FileReader classes.</li>
 <li>Here's a cool way to <a href="http://www.rewindlife.com/archives/000135.cfm" title="Pass CFCATCH to a UDF expecting a structure">xdump the contents of cfcatch</a> to a UDF for use with &lt;cfdump&gt;</li>
 <li>A fully <a href="http://www.cfcomet.com/other/index.cfm?ArticleID=32381637-0922-41CA-BBE305C2D66A7025" title="ColdFusion &amp; Com">qualified list</a> of common COM errors</li>
 <li>A neat little article that shows how the <a href="http://www.benorama.com/coldfusion/patterns/part2.htm" title="THE MVC PATTERN APPLIED TO COLDFUSION MX">MVC pattern can used in conjunction with CFMX</a>. It's not quite Mach-ii, but it's more information on the topic and I guess shows that the CF community is getting more and more into developing web applications using methodologies. His site also has a link to a <a href="http://www.cf-europe.org/preso/bhediard/168409/index.html" title="look at the presentation">breeze presentation</a> on the subject</li>
 <li>An IBM paper on <a href="http://www-106.ibm.com/developerworks/webservices/library/ws-secure/" title="Web Services Security (WS-Security)">securing web services</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2004-05-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>final-big-list</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Dynamic variable names</title>
		<link>http://gregs.tcias.co.uk/2004/05/18/dynamic-variable-names/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I always thought you needed to use evaluate to build up dynamic variables, but nope that is not required you can simply do this:</p>
<p><em>&lt;cfset "#arguments.str#.#key#" =  variables.holder["#key#"]&gt;</em></p>
<p>And even better it saves a few CPU cycles and dispenses with the <strong>evaluate</strong> function.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2004-05-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dynamic-variable-names</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Core CSS</title>
		<link>http://gregs.tcias.co.uk/2004/05/18/core-css/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=49</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Stumbled across <a href="http://www.corecss.com/" title="CoreCss">this site</a>, thanks to a post on Slashdot. Yet another book on CSS further indicating the rising tide of CSS, but what I liked about this site (event if the CSS layout wasn't perfect in FireFox), was the compatibility charts and full CSS property lists.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2004-05-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>core-css</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>cachedWithin</title>
		<link>http://gregs.tcias.co.uk/2004/05/18/cachedwithin/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=77</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Tasked with optmising an application I decided to first look at my queries (based on the adage that the database is the bottleneck) and yes some of the queries were running a little slow, and since the data displayed wasn't changed all to frequently I thought it a good idea to cache these queries. The first thing I decided to do was make use of the cachedWithin attribute of the cfquery tag. However this yielded a small surprise: You cannot use it if you are using cfqueryparam in the same query. Sadly there was no mention of this in the documentation for the cfquery tag, however there was a mention about it in the <a href="http://livedocs.macromedia.com/coldfusion/6.1/htmldocs/tags-b20.htm" title="cfqueryparam">Livedocs</a>, which again highlights the importance of checking the LiveDocs first.</p>

<p>As an aside under the comments there was also <a href="http://www.blinex.com/~sam/CF_SQL_TYPES.cfm" title="view CFSQLTYPES for differenf RDBMSs">this little link</a> to more thorough listing of data types for CFSQLTYPES across RDBMSs.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2004-05-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cachedwithin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JRun resources</title>
		<link>http://gregs.tcias.co.uk/2004/05/19/jrun-resources/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=78</guid>
		<description></description>
		<content:encoded><![CDATA[It was time for me to compile a comprehensive list of JRun/cfmx resources for work, so I thought I'd put them up here as well.
<h4>Brandon Purcell</h4>
<ul>
	<li><a href="http://www.bpurcell.org/blog/index.cfm?mode=cat&amp;catid=2" title="JRun resources &amp; articles">JRun resources &amp; articles</a></li>
	<li><a href="http://www.bpurcell.org/blog/index.cfm?mode=cat&amp;catid=1" title="CFMX resources &amp; articles">CFMX resources &amp; articles</a></li>
	<li><a href="http://www.macromedia.com/devnet/mx/coldfusion/j2ee/articles/multiple.html" title="Advantages of Using Multiple Instances for ColdFusion MX for J2EE">Advantages of Using Multiple Instances for ColdFusion MX for J2EE</a></li>
	<li><a href="http://www.macromedia.com/devnet/mx/coldfusion/articles/multi_instances.html" title="Installing and Configuring ColdFusion MX 6.1 Multiple Instances with IIS and Apache Virtual Hosts">Installing and Configuring ColdFusion MX 6.1 Multiple Instances with IIS and Apache Virtual Hosts</a></li>
	<li><a href="http://www.macromedia.com/support/jrun/ts/documents/tn18206.htm" title="JRun 4.0: Configuring Individual JVM Settings for each JRun Server">JRun 4.0: Configuring Individual JVM Settings for each JRun Server</a></li>
</ul>
<h4>Macromedia</h4>
<ul>
	<li><a href="http://www.macromedia.com/support/coldfusion/ts/documents/tn17883.htm" title="CFMX hotfixes">CFMX hotfixes</a></li>
	<li><a href="http://www.macromedia.com/support/jrun/ts/documents/jrun_hotfix_central.htm" title="JRun hotfixes">JRun hotfixes</a></li>
	<li><a href="http://www.macromedia.com/cfusion/webforums/forum/index.cfm?forumid=2" title="JRun Support forums">JRun Support forums</a></li>
	<li><a href="http://www.macromedia.com/software/coldfusion/j2ee/index.html" title="ColdFusion MX and the Java Platform">ColdFusion MX and the Java Platform</a></li>
	<li><a href="http://www.macromedia.com/support/coldfusion/j2ee/cfmxj2ee_home.html" title="ColdFusion MX 6.1 for J2EE - Deploying ColdFusion MX 6.1 on J2EE Application Servers">ColdFusion MX 6.1 for J2EE - Deploying ColdFusion MX 6.1 on J2EE Application Servers</a></li>
	<li><a href="http://livedocs.macromedia.com/coldfusion/6.1/htmldocs/installj.htm" title="Installing the J2EE Configuration">Installing the J2EE Configuration</a></li>
	<li><a href="http://livedocs.macromedia.com/coldfusion/6.1/htmldocs/java.htm" title="Integrating J2EE and Java Elements in CFML Applications">Integrating J2EE and Java Elements in CFML Applications</a></li>
	<li><a href="http://www.macromedia.com/devnet/mx/coldfusion/articles/multiple_61.html" title="Introducing Multiple Server Instances in ColdFusion MX Enterprise 6.1">Introducing Multiple Server Instances in ColdFusion MX Enterprise 6.1</a></li>
	<li><a href="http://www.macromedia.com/devnet/mx/coldfusion/java_j2ee.html" title="ColdFusion Developer Center / Java and J2EE Architecture">ColdFusion Developer Center / Java and J2EE Architecture</a></li>
</ul>
<h4>Sys-Con articles</h4>
<ul>
	<li><a href="http://www.sys-con.com/story/?storyid=44481" title="Making the Case for CFML on J2EE">Making the Case for CFML on J2EE</a></li>
	<li><a href="http://www.sys-con.com/story/?storyid=43994" title="Using JRun Instances for CFMX Deployment">Using JRun Instances for CFMX Deployment</a></li>
	<li><a href="http://www.sys-con.com/story/?storyid=43997" title="Confronting JRun - Who's Afraid of J2EE?">Confronting JRun - Who's Afraid of J2EE?</a></li>
	<li><a href="http://www.sys-con.com/story/?storyid=42059" title="ColdFusion MX/J2EE Hybrid Applications">ColdFusion MX/J2EE Hybrid Applications</a></li>
	<li><a href="http://www.sys-con.com/story/?storyid=36739" title="The Many Sides of J2EE Development">The Many Sides of J2EE Development</a></li>
	<li><a href="http://www.sys-con.com/coldfusion/article.cfm?id=636" title="ColdFusion/J2EE hybrid applications">ColdFusion/J2EE hybrid applications</a></li>
	<li><a href="http://sys-con.com/coldfusion/article.cfm?id=618" title="Making the Case for CFML ">Making the Case for CFML </a></li>
	<li><a href="http://sys-con.com/coldfusion/article.cfm?id=588" title="It's Not ColdFusion - It's J2EE!">It's Not ColdFusion - It's J2EE!</a></li>
	<li><a href="http://www.sys-con.com/coldfusion/article.cfm?id=573" title="Fun with filters in CFMX">Fun with filters in CFMX</a></li>
</ul>
<h4>JVM tuning</h4>
<ul>
	<li><a href="http://www.robisen.com/index.cfm?mode=entry&amp;entry=FD4BE2FC-55DC-F2B1-FED0717CC1C7E0AF" title="Hung Servers, Java.lang.OutOFMemory errors and Tuning CF JVM">Hung Servers, Java.lang.OutOFMemory errors and Tuning CF JVM</a>: article by Robi Sen</li>
	<li><a href="http://www.sumoc.com/blog/index.cfm?mode=entry&amp;entry=CDCDBF8B-5004-2066-B7460CDEAB79328F">the difference between MaxPermSize and Heap Size</a>: article by Cameron Childress</li>
	<li><a href="http://www.petefreitag.com/item/89.cfm">Have you tuned your JVM on ColdFusion MX yet?</a>: article by Pete Freitag</li>
</ul>
<h4>Additional Blogs</h4>
<ul>
	<li><a href="http://www.markme.com/cantrell/archives/cat_jrun.cfm" title="Christian Cantrell">Christian Cantrell</a></li>
	<li><a href="http://www.talkingtree.com/blog/index.cfm?getCategory=ColdFusion&amp;start=100" title="Steven Erat">Steven Erat</a></li>
	<li><a href="http://www.fullasagoog.com/index.cfm?blogcat=ColdFusionMX" title="fullasagoog [ColdFusionMX Feeds]">fullasagoog [ColdFusionMX Feeds]</a></li>
	<li><a href="http://www.camdenfamily.com/morpheus/blog/index.cfm?mode=cat&amp;catid=395FA1CE-D93A-60DF-CBD9B942C80F06B0" title="Raymond Camden's Blog (CF specific)">Raymond Camden's Blog (CF specific)</a></li>
	<li><a href="http://www.cfoop.com/" title="Object Oriented ColdFusion">Object Oriented ColdFusion</a></li>
	<li><a href="http://www.forta.com/blog/index.cfm?mode=c&amp;catid=12" title="Ben Forta's Blog (JRun category)">Ben Forta's Blog (JRun category)</a></li>
	<li><a href="http://www.cfczone.org/blogs/rob/index.cfm" title="Rob Brooks-Bilson's blog (CF specific)">Rob Brooks-Bilson's blog (CF specific)</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>78</wp:post_id>
		<wp:post_date>2004-05-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jrun-resources</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>site enhancement</title>
		<link>http://gregs.tcias.co.uk/2004/05/24/site-enhancement/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Got round to applying <a href="http://whatdoiknow.org/archives/001629.shtml" title="Flash slide show source">Todd Dominey&#8217;s Flash Slide Show</a> to display some of the photos I have taken over the last fours years. Using the technique mentioned on <a href="http://www.7nights.com/asterisk/archives/flash_sells_web_standards.php" title="Flash Sells! (Web Standards?)">asterisk *</a>. Yep it&#8217;s quite unobtrusive and besides I was getting bored of the one image.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2004-05-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>site-enhancement</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>&amp; for nought</title>
		<link>http://gregs.tcias.co.uk/2004/05/24/amp-for-nought/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=80</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After making the header change I decided to re-validate my pages, and shock horror they were valid. No fault of the code embedding the Flash, but rather my sloppy blogging technique.</p>
<p>I built the CMS that drives this site 2 years ago  and built it purely with flexibility in mind. Truth be told I think it served it&#8217;s purpose well in this capacity. Times have moved on and faced with content that doesn&#8217;t validate (even if the template framework is valid), I have decided to re-build &amp;amp; (that&#8217;s the CMS).</p>
<p>So as my first step in re-vamping the CMS I thought I&#8217;d put out version 1 for nought. Yep you can download it, install it, use it, do whatever you like with version 1. I am hoping that some of you may find it useful and maybe you can provide me with some feedback or even suggestions as to where version 2 should head.</p>
<p>For a full list of what 1.0 can do, have <a href="http://www.tcias.co.uk/v2/products/amp/" title="">a look at this page</a></p>
<p>For version 2 here are a few things that I intend to add/enhance:</p>
<ul>
	<li>generate/store xHTML valid content (and deal with all those special characters)</li>
	<li>add a spell checker (probably Jazzy)</li>
	<li>preview content</li>
	<li>improved content management</li>
	<li>revamp the entire interface using CSS and xHTML (a first taster is the nice logo designed by <a href="http://www.aphyx.com/" title="www.aphyx.com">Martin Cleave</a>)</li>
	<li>build it using ColdFusion (<a href="http://www.newatlanta.com/products/bluedragon/index.cfm" title="Blue Dragon">New Atlanta&#8217;s version</a>, though it should be fully compatible with <a href="http://www.macromedia.com/software/coldfusion/" title="Macromedia ColdFusion MX 6.1">CFMX</a>)</li>
	<li>base it on the <a href="http://www.mach-ii.com/" title="mach-ii.com">Mach-ii</a> Framework</li>
	<li>better install scripts and documentation</li>
</ul>
<p>I am sure the lost will grow, but these so far have been the goals I have set myself for this project. In the meantime, hope you like version 1. <a href="http://gregs.teacupinastorm.com/downloads/amp_1.0.zip" title="Download the source">Grab the source here</a>! Do note that it doesn&#8217;t contain much in the way of documentation and only possess rudimentary install scripts. Drop me a line if you need any help.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2004-05-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>amp-for-nought</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Mapping an instance to Apache</title>
		<link>http://gregs.tcias.co.uk/2004/06/02/mapping-an-instance-to-apache/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Having started a new job, I set about building up my development environment. I opted to run multiple CFMX instances on top of JRun. Apache is on the production servers so it made sense to run Apache on my development machine. When it came to installing Apache I opted for al of the default paths which resulted in the application being installed under <strong>Program files</strong>.</p>

<p>When the time came to create the connector I stumbled across something that I hadn't anticipated. The space between "program" and "files", when executing the command. Here is an amended command line statement to create a connector (in bold, please note the quotation marks):</p>

<p><em>{your install path}JRun4runtimejrebinjava -jar {your install path}JRun4libwsconfig.jar -host 127.0.0.1 -server www.yoursite.com -ws Apache -dir <strong>"C:Program FilesApache GroupApacheconf"</strong> -norestart -map .cfm,.cfc,.cfml -coldfusion -v</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2004-06-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mapping-an-instance-to-apache</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Setting up additional instances</title>
		<link>http://gregs.tcias.co.uk/2004/06/07/setting-up-additional-instances/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=82</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This assumes that you already have Apache, JRun and one instance up and running. Basically it's a short (check)list:</p>
<ol>
<li>create the instance using the JRun Administrator</li>
<li>edit the Apache httpd.conf file and add a new virtual host, restart the web server and test virtual host (see listing 1)
	<ol>
		<li>if developing locally you may need to edit your hosts file to reflect the server/host name</li>
	</ol>
</li>
<li>copy the default CFusion-ear installation over into the {install path}\JRun4\servers\{instance name}\</li>
<li>delete the default-ear (why they [cfusion and default] share the same root context, which causes conflicts)</li>
<li>start the instance, which will now deploy the CFusion-ear (I prefer the command line over the JMC: {path to JRun}>jrun -start yourInstanceName)</li>
<li>Back to the JMC and remove/un-deploy the Flash Remoting EAR (aka flashgateway.ear) from J2EE components>>Enterprise Applications</li>
<li>Still in the JMC, make a note of the Proxy Port (e.g. 51002), check that Proxy Service is running (on Apache this has a tendency to be set to initialised the first time you fire up JRun, so just click start for the Proxy Service action)</li>
<li>create a folder in {install path}\JRun4\lib\wsconfig (e.g. vh2, but it can be whatever you like)</li>
<li>Add the lines from Listing 2 to your virtual host config, changing the Bootstrap port to reflect the Proxy Service port you just recorded (See Listing 3 for complete listing)</li>
<li>restart apache</li>
<li>restart JRun</li>
<li>test cfml page with code in listing 4, which should reflect the newly created instance name</li>
<li>Next create a separate jvm.config file, where we'll substitute all references to default cfusion instance with our instance name (listing 5)</li>
<li>Stop and then re-start the JRun instance with the following command: {install path}\JRun4\bin>jrun -start -config {you jvm.config file name} {your instance name}</li>
<li>test this by reviewing the System Information on the CF Administrator the Java Class Path should contain references to your instances server path.</li>
</ol>
<h5>Listing 1</h5>
<p><em>&lt;VirtualHost *&gt;<br />
    ServerAdmin yourName@yourDomain.com<br />
    DocumentRoot {Path to webroot}/www/{your website folder}/<br />
    ServerName www.yourDomain.com<br />
    ErrorLog logs/yourDomain.com-error_log<br />
    CustomLog logs/yourDomain.com-access_log common<br />
&lt;/VirtualHost&gt;</em></p>

<h5>Listing 2</h5>
<p><em>JRunConfig Serverstore "{install path}/JRun4/lib/wsconfig/vh2/jrunserver.store"<br />
JRunConfig Bootstrap 127.0.0.1:51002</em></p>

<h5>Listing 3</h5>
<p><em>&lt;VirtualHost *&gt;<br />
    ServerAdmin yourName@yourDomain.com<br />
    DocumentRoot {Path to webroot}/www/{your website folder}/<br />
    ServerName www.yourDomain.com<br />
    ErrorLog logs/yourDomain.com-error_log<br />
    CustomLog logs/yourDomain.com-access_log common<br />
    JRunConfig Serverstore "{install path}/JRun4/lib/wsconfig/vh2/jrunserver.store"<br />
    JRunConfig Bootstrap 127.0.0.1:51002<br />
&lt;/VirtualHost&gt;</em></p>

<h5>Listing 4</h5>
<p><em>&lt;cfscript&gt;<br />
	jr = CreateObject("java","jrunx.kernel.JRun");<br />
	servername = jr.getServerName();<br />
	writeOutput("<p>JRun Server Name: " & servername & "</p>");<br />
&lt;/cfscript&gt;</em></p>

<h5>Listing 5</h5>
<p>Replace the instance name highlighted in bold with your instance name</p>
<p><em>#<br />
# VM configuration<br />
#<br />
# Where to find JVM, if {java.home}/jre exists then that JVM is used<br />
# if not then it must be the path to the JRE itself<br />
java.home={Install path}/JRun4/runtime/jre<br />
#<br />
# If no java.home is specified a VM is located by looking in these places in this<br />
# order:<br />
#<br />
#  1) bin directory for java.dll (windows) or lib/<arch>/libjava.so (unix)<br />
#  2) ../jre<br />
#  3) registry (windows only)<br />
#  4) JAVA_HOME env var plus jre (ie $JAVA_HOME/jre)<br />
#<br />
<br />
# Arguments to VM<br />
java.args=-server -Xmx512m -Dsun.io.useCanonCaches=false -Xbootclasspath/a:"{application.home}/servers/<strong>{yourInstanceName}</strong>/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib/webchartsJava2D.jar" -XX:MaxPermSize=128m -XX:+UseParallelGC -DJINTEGRA_NATIVE_MODE -DJINTEGRA_PREFETCH_ENUMS<br />
<br />
#<br />
# commas will be converted to platform specific separator and the result will be passed<br />
# as -Djava.ext.dirs= to the VM<br />
java.ext.dirs={jre.home}/lib/ext<br />
<br />
#<br />
# where to find shared libraries<br />
java.library.path={application.home}/servers/<strong>{yourInstanceName}</strong>/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib,{application.home}/servers/<strong>{yourInstanceName}</strong>/cfusion-ear/cfusion-war/WEB-INF/cfusion/jintegra/bin,{application.home}/servers/<strong>{yourInstanceName}</strong>/cfusion-ear/cfusion-war/WEB-INF/cfusion/jintegra/bin/international,{application.home}/servers/<strong>{yourInstanceName}</strong>/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib/_nti40/bin<br />
system.path.first=false<br />
<br />
# JVM classpath<br />
java.class.path={application.home}/servers/lib,{application.home}/servers/<strong>{yourInstanceName}</strong>/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib/cfusion.jar,{application.home}/servers/<strong>{yourInstanceName}</strong>/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib,{application.home}/lib/jrun.jar,{application.home}/lib</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date>2004-06-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-additional-instances</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JVM tuning</title>
		<link>http://gregs.tcias.co.uk/2004/06/02/jvm-tuning/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=83</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Stumbled across <a href="http://www.sumoc.com/blog/index.cfm?mode=entry&entry=CDCDBF8B-5004-2066-B7460CDEAB79328F" title="CFMX JVM Tuning - The difference between MaxPermSize and Heap Size">this post</a> from Cameron Childress about  JVM tuning and specifically the difference between MaxPermSize and Heap Size.</p>
<ul>
	<li>A JVM is the amount of memory assigned to store Java classes and objects</li>
	<li>keep the heap size the same as the MaxPermsSize (ideally at least 512)</li>
	<li>What is "MaxPermSize"? This set the size for Permanent Generation and this contains information about the objects and classes in the heap.</li>
	<li>The MaxPermSize is in addition to the Heap, so if you have 512 as your heap and 512 as MaxPermSize, then your server has an overall setting of 1024 in size.</li>
</ul>

<p>A place to look at if you are experience problems with "java.lang.OutOfMemoryError", Cameron states is "<em>/coldfusionmx/wwwroot/WEB-INF/cfclasses/</em>" (or if you are running instances on JRun: "<em>{install path}\JRun4\servers\{instance name}\cfusion-ear\cfusion-war\WEB-INF\cfclasses\</em>") and see if there are a lot of class files in that folder. If the answer is yes you are likely to have to increase the MaxPermSize setting.</p>

<p>Some external sources that Cameron put together:</p>
<ul>
	<li><a href="http://www.bpurcell.org/blog/index.cfm?mode=entry&entry=967" title="Performance Tuning and Monitoring Coldfusion or JRun">Performance Tuning and Monitoring Coldfusion or JRun</a></li>
	<li><a href="http://java.sun.com/docs/hotspot/gc1.4.2/" title="Tuning Garbage Collection with the 1.4.2 Java[tm] Virtual Machine">Tuning Garbage Collection with the 1.4.2 Java[tm] Virtual Machine</a></li>
	<li><a href="http://java.sun.com/docs/hotspot/gc1.4.2/faq.html" title="Frequently Asked Questions
about Garbage Collection in the HotspotTM JavaTM Virtual Machine">Frequently Asked Questions
about Garbage Collection in the HotspotTM JavaTM Virtual Machine</a></li>
	<li><a href="http://www.macromedia.com/support/coldfusion/ts/documents/cfmx_perf_tips.htm" title="ColdFusion MX: Tips for performance and scalability">ColdFusion MX: Tips for performance and scalability</a></li>
</ul>
<p>And finally I'd also like to add this resource to the list (courtesy of <a href="http://www.talkingtree.com/blog/index.cfm?getCategory=ColdFusion" title="Talking Tree, Steven Erat's Blog">Steven Errat</a>):<a href="http://www.ferdia.org/blog/index.cfm?getCategory=ColdFusion" title="Ferdia's Blog">Ferdia's Blog</a>, which also contains some jvm tuning options and out of memory solutions.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2004-06-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jvm-tuning</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Virtual host configuration error</title>
		<link>http://gregs.tcias.co.uk/2004/06/07/virtual-host-configuration-error/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=84</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was faced with an issue in getting a second site up and running using virtual hosts, and this was down to a mistake in my httpd.conf file. If you encounter the following error in your log files:</p>

<p><em>[Thu May 27 12:44:54 2004] [warn] _default_ VirtualHost overlap on port 80, the first has precedence</em></p>

<p>You can resolve it by un commenting the following line in your httpd.conf line:</p>
<p><em>NameVirtualHost *</em></p>

<p>And then setting host directive to: <virtualHost *>, instead of specifying a server name. Courtesy of: <a href="http://httpd.apache.org/docs/vhosts/name-based.html" title="Name-based Virtual Host Support">Name-based Virtual Host Support</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date>2004-06-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>virtual-host-configuration-error</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JavaScript detection</title>
		<link>http://gregs.tcias.co.uk/2004/06/07/javascript-detection/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=85</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here is a little script that I adapted to use CSS to hide parts of a document if JavaScript was disabled, for example a login box. Might come in handy one day.</p>

<p><em>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br />
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;<br />
&lt;head&gt;<br />
&lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /&gt;<br />
&lt;title&gt;Untitled Document&lt;/title&gt;<br />
&lt;/head&gt;<br />
&lt;script language="JavaScript1.2" type="text/javascript"&gt;<br />
&lt;!--<br />
function show(id) {<br />
	if (document.getElementById) {<br />
		document.getElementById(id).style.display="block";<br />
	} else if (document.all) {<br />
		document.all[id].style.display="block";<br />
	} else if (document.layers) {<br />
		document.layers[id].display="block";<br />
	}<br />
}<br />
<br />
function hide(id) {<br />
	if (document.getElementById) {<br />
		document.getElementById(id).style.display="none";<br />
	} else if (document.all) {<br />
		document.all[id].style.display="none";<br />
	} else if (document.layers) {<br />
		document.layers[id].display="none";<br />
	}<br />
}<br />
//--&gt;<br />
&lt;/script&gt;<br />
&lt;style&gt;<br />
#login {<br />
 display: none;<br />
}<br />
#noJS {<br />
 display: show;<br />
}<br />
&lt;/style&gt;<br />
&lt;body onload="show('login'); return hide('noJS');"&gt;<br />
&lt;div id="login"&gt;<br />
 I am a login box<br />
 &lt;ul&gt;<br />
 	&lt;li&gt;I am bullet point&lt;/li&gt;<br />
	&lt;li&gt;I am bullet point 2&lt;/li&gt;<br />
 &lt;/ul&gt;<br />
&lt;/div&gt;<br />
&lt;div id="noJS"&gt;<br />
 &lt;p&gt;If you can't see anything this is because you have disabled JavaScript&lt;/p&gt;
&lt;/div&gt;<br />
&lt;/body&gt;<br />
&lt;/html&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2004-06-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-detection</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Populate form from pop up</title>
		<link>http://gregs.tcias.co.uk/2004/06/07/populate-form-from-pop-up/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=86</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here's another little script that came in handy recently: populating a form field from a pop window. Listing 1 contains the form that will be populated and the call to the pop up. The second  is a list that once i selection has been made from, closes the window and populates the field. It uses JavaScript <a href="http://gregs.teacupinastorm.com/ui/javascript/javascript_detection.php" title="JavaScript detection">so make sure it's enabled!</a></p>
<h5>Listing 1</h5>
<p><em>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /&gt;
&lt;title&gt;js RePopulate Form From PopUp&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;form name="frm_someName" id="frm_someName" method="post" action="" enctype="application/x-www-form-urlencoded"&gt;
	Name: &lt;input type="text" name="name" id="name" value="" size="15" /&gt;&lt;br /&gt;
	&lt;a href="jsRePopulateFormFromPopUp_CountryList.htm" title="Select a country" onclick="window.open(this.href, 'popupwindow', 'width=400,height=300,scrollbars,resizable'); return false;"&gt;Select a country&lt;/a&gt;&lt;br /&gt;
	Country: &lt;input type="text" name="country" id="country" value="" size="15" /&gt;&lt;br /&gt;

	&lt;input type="submit" name="btnSubmit" id="btnSubmit" value="submit" /&gt;
&lt;/form&gt;
&lt;p&gt;And here is a div that we populated dynamically:&lt;/p&gt;
&lt;div id="someDiv"&gt;No country selected&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</em></p>
<h5>Listing 2</h5>
<p><em>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /&gt;
&lt;title&gt;js RePopulate Form From PopUp - Coutry List&lt;/title&gt;
&lt;script language="javascript1.2" type="text/javascript"&gt;
	function rePopulate(c) {
		window.opener.document.frm_someName.country.value=c;
		window.opener.document.getElementById('someDiv').innerHTML="New country : " + c;
		window.close();
	}
&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href="" title="select England as the country to display" onClick="rePopulate('England');"&gt;England&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href="" title="select Germany as the country to display" onClick="rePopulate('Germany');"&gt;Germany&lt;/a&gt;&lt;/li&gt;

	&lt;li&gt;&lt;a href="" title="select France as the country to display" onClick="rePopulate('France');"&gt;France&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date>2004-06-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>populate-form-from-pop-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Manic Mansion</title>
		<link>http://gregs.tcias.co.uk/2004/06/08/manic-mansion/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=87</guid>
		<description></description>
		<content:encoded><![CDATA[<p>And now for something a little different. A few days back I was just contemplating finding a way to play Manic Mansion again. Lo and behold, some kind soul on Slashdot provided a link to <a href="http://people.freenet.de/lucasfangames/maniac/games_eng.htm" title="Manic Mansion Deluxe">Manic Mansion Deluxe</a>. The site also hosts a Zak McKracken game. If you have found memories of these classics point and click adventure games, then head on over there and grab yourself a copy. It's free! Both games were built using <a href="http://www.adventuregamestudio.co.uk/" title="Adventure Game Studio">Adventure Game Studio</a> and that is free too.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date>2004-06-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>manic-mansion</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Flash Design Patterns</title>
		<link>http://gregs.tcias.co.uk/2004/06/08/flash-design-patterns/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=88</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Colin Mook has put <a href="http://moock.org/webdesign/lectures/as2patterns/" title="DESIGN PATTERNS IN ACTIONSCRIPT 2.0">an interesting lecture/presentation</a> up which looks at design patterns from the Gang Of Four book as applied to Flash. He discusses the Obverser design pattern, as well as the <acronym title="Model View Controller">MVC</acronym> by providing explanations, usage scenarios along with example implementations.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2004-06-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-design-patterns</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Worn Look</title>
		<link>http://gregs.tcias.co.uk/2004/06/08/worn-look/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.zeldman.com/" title="The daily report">Zeldman</a> pointed this one out: Cameron Moll has started putting together a series of <a href="http://www.cameronmoll.com/archives/000024.html" title="That wicked worn look">how-tos covering the worn look</a>. Very nice indeed!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2004-06-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>worn-look</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFMX debug and xHTML</title>
		<link>http://gregs.tcias.co.uk/2004/06/08/cfmx-debug-and-xhtml/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=90</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just as cameron has found out, I have noticed this for quite some time: ColdFusion debug output combined with CSS/xHTML sometimes finds itself overlapped by the actual page content and hence cannot be read. Unlike me, who just endured it, Cameron has come up with <a href="http://www.sumoc.com/blog/index.cfm?mode=entry&amp;entry=011AF661-5004-2066-B78D9413A412BBBE" title="Debug Output vs Design - Custom Debug Templates To The Rescue!">a work around</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2004-06-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmx-debug-and-xhtml</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFMX garbage collection</title>
		<link>http://gregs.tcias.co.uk/2004/06/08/cfmx-garbage-collection/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=104</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Pete Freitag has put up really interesting info on <a href="http://www.petefreitag.com/item/139.cfm" title="ColdFusion Garbage">SUN ColdFusion garbage collection/performance tuning</a> and a summary outline of a Sun document on <a href="http://www.petefreitag.com/articles/gctuning/" title="Tuning Garbage Collection Outline">that topic</a>.</p>
<p>Furthermore he demonstrates how to use <a href="http://developers.sun.com/dev/coolstuff/jvmstat/" title="Emerging Technologies
CoolStuff - jvmstat">jvmstat</a> to <a href="http://www.petefreitag.com/item/141.cfm" title="Visualize Garbage Collection">monitor and visualise garbage collection</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date>2004-06-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmx-garbage-collection</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>IE funkiness</title>
		<link>http://gregs.tcias.co.uk/2004/07/15/ie-funkiness/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=4</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Migrations can tend to be a little painful at the best of times, but IE just sometimes enjoys adding to the mix. Version 6.028xxx was causing us quite a few headaches yesterday. For some reason that version of the browser refused to store cookies and hence prompted users to log in over and over again for each page request. We eventually figured out that it was the temporary domain name we were using:some_domain.domain.com. Pervious versions of IE simply truncated the domain name at the first "_" and set the cookie quite happily. This version apparently decided that this was not valid and rejected it. There you go something else to remember.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4</wp:post_id>
		<wp:post_date>2004-07-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ie-funkiness</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Mysql set up</title>
		<link>http://gregs.tcias.co.uk/2004/07/13/mysql-set-up/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have to give the guys at BD a lot of credit for the documentation and the level of support they provide on the <a href="http://www.newatlanta.com/products/bluedragon/self_help/archive_search/index.cfm" title="BlueDragon Self-Help: Mailing List">New Atlanta mailing list</a>, this time they stepped into the breach and helped resolve my problems getting the MySQL jdbc driver to work with BlueDragon.</p>
<p>First things first though, the fact that I had problems with MySQL and verifying a connection from BD, had nothing to do with <a href="http://www.newatlanta.com/biz/c/products/bluedragon/self_help/faq/detail?faqId=216" title="How can I define a MySQL datasource?">the instructions</a> provided by BD. Rather this was a Debian issue and Gregg Orangio was quick to point out that the verification failure was most likely down to MySQL not accepting connections via port 3306. Which struck me as odd, since I had been happily using PHP/MySQL to drive this site for yonks now... Well assumptions are the mother of all f*#ck ups as I always say.</p>
<p>PHP uses the MySQL.sock file to carry out it's connections, JDBS however relies on tcp/ip. So here is how you check if the MysQL is listening on port 3306:</p>
<p><em>netstat -ltpn</em></p>
<p>This nifty little Linux shell command, returns all the services and what ports they are listening on. And guess what? Yep no MySQL. A little more digging pointed the finger at Debian's default install which disables networking. Locate your mysql.conf and comment out the <strong>skip-networking</strong> directive.</p>
<p><em># The skip-networkin option will no longer be set via debconf menu.  You<br />
# have to manually change it if you want networking i.e. the server<br />
# listening on port 3306. The default is "disable" - for security<br />
# reasons.<br />
# skip-networking</em></p>
<p>Next simply re-start MySQL so that the configuration changes can take effect and you are done!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2004-07-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-set-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>IDs and name attributes</title>
		<link>http://gregs.tcias.co.uk/2004/06/22/ids-and-name-attributes/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=91</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yesterday I stumbled across this little discovery relating to <acronym title="eXtensible HyperText Markup Language">xHTML</acronym> attributes <strong>name</strong> and <strong>id</strong> that you use for example in form tags such as <strong>input</strong>, e.g.: &lt;input type="text" <strong>name="r_name"</strong> <strong>id="r_name"</strong> value="" size=20 /&gt;</p>
<p>Now I'd always gotten into the habit of setting the name attribute to same value as the id one, because as I understood it the name attribute would eventually be phased out and was thus hoping to future proof my forms. But what about this scenario involving making forms accessible and using radio buttons for selections?</p>
<p><em>&lt;input type="radio" name="clientType" id="clientType" value="1" title="radio button: for new client id" checked="true" />&lt;label for="clientType">By new&lt;/label>&lt;br />
&lt;input type="radio" name="clientType" id="clientType" title="radio button: for old client id" value="0" />&lt;label for="clientType">By old&lt;/label>
</em></p>
<p>Using my previously adopted technique the &lt;label&gt; tag could not fathom which field I was referring to. Why? Because IDs <strong>*must*</strong> be unique!! This is part of the <a href="http://www.w3.org/" title="World Wide Web Consortium">W3C</a> spec and I have known about this, but somehow never put 2 and 2 together when it came to forms. So here now is the new and improved radio button solution.</p>
<p><em>&lt;input type="radio" name="clientType" id="clientType_1" value="1" title="radio button: for new client id" checked="true" /&gt;&lt;label for="clientType_1"&gt;By new&lt;/label&gt;&lt;br /&gt;
&lt;input type="radio" name="clientType" id="clientType_2" title="radio button: for old client id" value="0" /&gt;&lt;label for="clientType_2"&gt;By old&lt;/label&gt;</em></p>
<p>Downside is that these radio buttons are now no longer grouped by ID, instead they use the name attribute.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2004-06-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ids-and-name-attributes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>FireFox extensions</title>
		<link>http://gregs.tcias.co.uk/2004/06/23/firefox-extensions/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=92</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Via <a href="http://www.corfield.org/" title="An Architects View">Sean Corfield</a> over to <a href="http://blog.pengoworks.com/blogger/" title="dans.blog">Dan Switzer</a> and thanks to both of you for a great list of FireFox extensions.</p>
<ol>
	<li><a href="http://white.sakura.ne.jp/~piro/xul/_tabextensions.html.en" title="Tabbrowser Extensions">Tabbrowser Extensions</a></li>
	<li>Having played around with Aggreg8 as an RSS aggregator and not being 100% satisfied I tried this one: <a href="http://fls.moo.jp/moz/rssreader.html" title="RSS Reader Panel">RSS Reader Panel</a></li>
	<li>Ever felt the need to check something out in IE? Here's an extension for you then: <a href="http://ieview.mozdev.org/" title="ieview">ieview</a></li>
	<li>This one is superb as well: <a href="http://editcss.mozdev.org/" title="EditCSS">EditCSS</a>, which allows you to edit currently loaded style sheets</li>
	<li><a href="http://spiderzilla.mozdev.org/" title="SpiderZilla">SpiderZilla</a>, off line browsing alternative for FireFox</li>
	<li>From the guys behind the <a herf="http://www.chrispederick.com/work/firefox/webdeveloper/" title="Web Developer Extension">web developer tool bar</a>. another useful extension: <a href="http://www.chrispederick.com/work/firefox/useragentswitcher/" title="User Agent Switcher">User Agent Switcher</a></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2004-06-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>firefox-extensions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>To close or not to close</title>
		<link>http://gregs.tcias.co.uk/2004/06/23/to-close-or-not-to-close/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=93</guid>
		<description></description>
		<content:encoded><![CDATA[<p>An interesting little thread on CF talk this afternoon: the usual .Net is better than CF. However the reasoning centered around the fact that CF keeps it's database connections open and this was bad as it slowed down the Application. While it is true that CF keeps the connection open by default, it can be disabled in the Administrator on a data source by data source basis. More importantly though the fact that the connection stays open is actually for performance reasons: there is way more overhead to opening and closing a database connection.</p>
<p>Some may argue that leaving it open is an un-necessary overhead, but from my experience and that of others on the list, I believe we can say that this is negligible. But also consider that CFMX is built on-top of Java and uses JDBC, so there is actually very little that you can't control if you are prepared to dig under the hood: number of connections that CF can use, whether they are kept open or not and when they timeout (Thanks to Mark Krueger for this info).</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2004-06-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>to-close-or-not-to-close</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>For those challenged by design</title>
		<link>http://gregs.tcias.co.uk/2004/06/28/for-those-challenged-by-design/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=94</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this case me!! Here is a fabulous tool <a href="http://slayeroffice.com/tools/color_palette/" title="Color Palette Creator">Color Palette Creator</a>, does what it says in the box. Allows you to specify a base colour and then generates hex based color palette for you. Marvelous!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2004-06-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>for-those-challenged-by-design</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CSS hack management</title>
		<link>http://gregs.tcias.co.uk/2004/06/28/css-hack-management/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=95</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Molly Holzschlag has written an article <a href="http://www.informit.com/articles/article.asp?p=170511" title="Strategies for Long-Term CSS Hack Management">outlining some strategies for managing CSS hacks</a>, i.e. when to use them and how to use them. It's very insightful as it for one explains some of the hack techniques in good detail (like the high pass filter one), but also outlines how you can exploit poor CSS implementations to accommodate the latest CSS features without disrupting those that have poor support at least until they catch up!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>95</wp:post_id>
		<wp:post_date>2004-06-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css-hack-management</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>cfcUnit</title>
		<link>http://gregs.tcias.co.uk/2004/07/01/cfcunit/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=96</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.pjk.us/paul/blog/" title="Best Served Cold">Paul Kenney</a> released few days back his equivalent to JUnit for ColdFusion Components: <a href="http://www.cfcunit.org/" title="&lt;cfcUnit/&gt;">&lt;cfcUnit/&gt;</a>. It requires cfmx 6.1 and the Mach-II framework. The documentation is not complete yet, however the install instructions are up. Be sure to check back!!</p>
<p>Paul has also kindly put up an excerpt from Christian's Cantrell's article &#8220;<a href="http://www.cfcunit.org/docs/intro/whatIsUnitTesting.html" title="What is Unit Testing?">What is Unit Testing?</a>&#8221;, which was initially published on the Macromedia DRK 3. The full article was called: "CFUnit Testing Components".</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>96</wp:post_id>
		<wp:post_date>2004-07-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfcunit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Two CFCs released</title>
		<link>http://gregs.tcias.co.uk/2004/07/07/two-cfcs-released/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=97</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have just completed putting together two <acronym title="ColdFusion Components">CFCs</acronym> that I hope will help reduce some of my UI coding time. The first is a <a href="/downloads/form.zip" title="get form CFC">form CFC</a> and <a href="http://www.tcias.co.uk/projects/form/index.cfm" title="see formCFC in action">you can see a small demo of it here</a>. It allows you to build up form elements and their labels programmatically, while taking away the chore of making sure you specify all the attributes that make it web standards compliant form (it validates as xHTML 1.0 transitional) and also ensuring that it adheres to accessibility guidelines. Furthermore you can pass in dynamic values, queries (for drop downs), enable and disable fields. Have a look at <em>index.cfm</em> to see how I used it for the example (or explore the component using the component browser).</p>
<p>The second is a <a href="/downloads/table.zip" title="get table CFC">table CFC</a> (<a href="http://www.tcias.co.uk/projects/table/index.cfm" title="table CFC in action">demo here</a>). Like the form CFC it aims to take the chore out of creating tables, remembering all the right attributes (this one too validates as xHTML 1.0 transitional) and adhering the accessibility guidelines. Yep , no more excuses now (at least not while it comes to tables and forms). Feedback, suggestions, problems, etc, are welcomed!!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date>2004-07-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>two-cfcs-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>BD/CFMX - query.columnList</title>
		<link>http://gregs.tcias.co.uk/2004/07/09/bdcfmx-querycolumnlist/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=98</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have just started using BlueDragon on this server here and have come across a small (un-documented) discrepancy between the BD implementation of CFML and that of CFMX. When using the queryName.columnList variable CFMX decides to alphabetically order the column names from your select statement. BD on the other hand doesn't. I was most surprised that CFMX ordered the columnList for you.</p>
<p>One other thing I spotted and this is in the documentation, is that cfscript does not support try/catch. Apparently this will be addressed in the upgrade patch for version 6.2, which is due out in September/October.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2004-07-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bdcfmx-querycolumnlist</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>BlueDragon patch available</title>
		<link>http://gregs.tcias.co.uk/2004/07/09/bluedragon-patch-available/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=99</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Patch for BD (place it in your lib folder and re-cycle BD):  <a href="ftp://ftp.newatlanta.com/public/bluedragon/6_1/server/patches" title="go get the patch">ftp://ftp.newatlanta.com/public/bluedragon/6_1/server/patches</a>
which helps get rid of the following error message in your log files:</p>
<p><em>java.lang.StringIndexOutOfBoundsException: String index out of range: 26<br />
[Mon Jun 28 09:51:30 CDT 2004]  at java.lang.String.substring(Unknown Source)<br />
[Mon Jun 28 09:51:30 CDT 2004]  at com.newatlanta.servletexec.HttpServerRequest.ParseHeader(HttpServerRequest.java:309)</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2004-07-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bluedragon-patch-available</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>XSL transformations</title>
		<link>http://gregs.tcias.co.uk/2004/07/09/xsl-transformations/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Mark Mandel put up <a href="http://www.compoundtheory.com/?action=displayPost&amp;ID=4" title="Reasons I hate XMLTransform()">a post and some code</a> for a ColdFusion function that he wrote which uses the underlying Java architecture to do some XSL transformations using the Xalan engine and thus by passing the built-in xmltransform() function that doesn't support xsl:param and xsl:import. Might come in handy for future reference. [<a href="http://www.cfmentor.com/code/index.cfm?action=script&amp;id=136" title="xslTransformFile">Massimo Foti put up something similar a while back</a>.]</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2004-07-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xsl-transformations</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFMX wrapper for java file reader</title>
		<link>http://gregs.tcias.co.uk/2004/07/09/cfmx-wrapper-for-java-file-reader/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=101</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here is a code snippet I stumbled across recently. I modified it slightly to simply output the line that is being read. It serves as a simple example as to how you can read a file and then deal with it line by line.</p>
<p><em>&lt;cfscript&gt;<br />
	var linecount = 0;<br />

	filename = "/absolutePath/toYourFile";<br />
	fileReader = createObject("java", "java.io.FileReader");<br />
	fileReader = fileReader.init(filename);<br />
	lineReader = createObject("java","java.io.LineNumberReader");<br />
	lineReader = lineReader.init(fileReader);<br />

	line = lineReader.readLine(); //Read first line, if any into variable line<br />

	while (isDefined("line")) {<br />
		lineCount = lineCount + 1;<br />
		<br />
		//Process the variable line<br />
		WriteOutput(lineCount & ". " & line & "&lt;br /&gt;");<br />

		line = lineReader.readLine(); //Read the next line, if any<br />
	}<br />
&lt;/cfscript&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date>2004-07-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmx-wrapper-for-java-file-reader</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Memory usage</title>
		<link>http://gregs.tcias.co.uk/2004/07/09/memory-usage/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=102</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here is another code snippet, this time from the CF-Talk mailing list, which allows you to display server memory info.</p>
<p><em>&lt;cfscript&gt;<br />
	runtime = CreateObject("java","java.lang.Runtime").getRuntime();<br />
	freeMemory = runtime.freeMemory() / 1024 / 1024;<br />
	totalMemory = runtime.totalMemory() / 1024 / 1024;<br />
	maxMemory = runtime.maxMemory() / 1024 / 1024;<br />
<br />
	writeOutput("Free Allocated Memory: " & Round(freeMemory) & "mb&lt;br /&gt;");<br />
	writeOutput("Total Memory Allocated: " & Round(totalMemory) & "mb&lt;br /&gt;");<br />
	writeOutput("Max Memory Available to JVM: " & Round(maxMemory) & "mb&lt;br /&gt;");<br />
&lt;/cfscript&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2004-07-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>memory-usage</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>BlueDragon on debian</title>
		<link>http://gregs.tcias.co.uk/2004/07/11/bluedragon-on-debian/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=103</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have just completed setting up the free <a href="http://www.newatlanta.com/products/bluedragon/product_info/overview.cfm" title="BlueDraong product overview">BlueDragon 6.1 server</a> [BD] on my Debian box running Apache 1.3.26  and wanted to set down the steps I took to get it up and running. On the whole the instructions were good, though as they were no specific Debian instructions available a few things deviated from the documentation. I'd also like to point to the great <a href="http://www.newatlanta.com/products/bluedragon/self_help/archive_search/index.cfm" title="BlueDragon Self-Help: Mailing List">New Atlanta</a> mailing list where my questions were answered with useful suggestions and good pointers to figure out some of the difficulties I encountered from a variety of helpful people.</p>

<p>My debian installation only supports console access, so I ran the install with the following command (BTW this was executed from the folder where the BlueDragon_Server_61-Linux.sh installer was downloaded to).</p>

<p><em>sh ./BlueDragon_Server_61-Linux.sh -I console</em></p>

<p>I had to wait something like 30 seconds for the script to get started. It seemed to hang for quite a while before progressing, so be aware of that, just in case it seems to take a while to get going. Next follow the instructions and prompts and you should be fine. According to what I read I thought that it would be during the install that BD would attempt to configure Apache but the prompt never came. Don't worry if that happens to you as well, just let the install complete.</p>

<p>Ok so now you should find that BD was installed to <strong>/usr/local/NewAtlanta/BlueDragon</strong>. We'll be configuring the web connector next and the way this is done is by using the BD admin interface. Somehow I had managed to miss this in the documentation and I was already preparing myself to configure the httpd.conf manually, when someone on the mailing list pointed out that he set it using the BD admin interface. So we need to fire up BD and use the built-in server to do this. Before we do that let's look at why BD didn't configure Apache and work through some preparatory steps.</p>

<p>So why doesn't BD detect apache and configure the connector itself? This, in my case, was down to the somewhat non-standard installation of Apache on a Debian system. To work around that you'll be creating a few directories and creating a number of symbolic links. If you haven't already read up on the sections in 3.7.4 onwards to get an understanding on what needs to be done to get this working, do it now! Finished? Good let's continue here are the commands I used to mimic a default Apache setup or one that BD recognises at least.</p>

<p><em>mkdir -p /usr/local/apache<br />
ln -s /etc/apache/conf /usr/local/apache/conf<br />
ln -s /var/www /usr/local/apache/htdocs<br />
ln -s /usr/lib/apache/1.3 /usr/local/apache/libexec<br />
ln -s /usr/lib/apache/1.3 /usr/local/apache/modules<br />
mkdir -p bin // because it didn't exists<br />
ln -s /usr/sbin/apache /usr/local/apache/bin/httpd</em></p>

<p>The following line was not needed, the system told me the file already existed.</p>

<p><em>ln -s /etc/apache/conf/httpd.conf /usr/local/apache/conf/httpd.conf</em></p>

<p>Right those are the mappings I needed to make BD believe it was using a default apache installation. Next I copied the start (StartBlueDragon.sh) and shutdown (StopBlueDragon.sh) scripts to my /etc/init.d, as they weren't in there (again I may have misread this, but I expected them to be copied over during install). Those two scripts can be found in: <strong>/usr/local/NewAtlanta/BlueDragon_Server_61/bin</strong>. There is also an apache folder there that contains the apache modules. Which I also copied over to <strong>/usr/lib/apache/1.3</strong>.</p>

<p>Time to fire up BD and access the BD admin interface. Now the admin interface runs on localhost on port 8080 (unless specified otherwise), so I had to set up SSH tunneling. Again the BD documentation comes up trumps (see 6.2.2) and you'll be up in no time accessing the admin interface following those instructions. Once logged in to the BD admin console, select the option "web server adapter" and follow the instructions to configure apache. Nearly there now... BD should have edited your httpd.conf file accordingly, however in my case BD had written the wrong location for my apache modules. So I commented out the BD instruction and added my own as shown below.</p>

<p><em># LoadModule servletexec_module libexec/mod_servletexec.so<br />
LoadModule servletexec_module /usr/lib/apache/1.3/mod_servletexec.so</em></p>

<p>Right, now re-start BD and re-start apache. Everything appears OK, apart from this little message I saw:</p>

<p><em>[Thu Jul  1 20:23:39 2004] [warn] Loaded DSO /usr/lib/apache/1.3/mod_servletexec.so uses plain Apache 1.3 API, this module might crash under EAPI! (please recompile it with -DEAPI)<br />
[Thu Jul  1 20:23:40 2004] [warn] NameVirtualHost 65.19.178.219:80 has no VirtualHosts
Syntax OK</em></p>

<p>Which indicates a problem but so far I haven't had any major issues. Maybe I should be using the other mod_servletexec2.so? But I'll be looking at this shortly to make it go away as well. So far I have been really impressed with BD it runs really smoothly on this little Debian box and I am looking forward to experimenting with it. BTW I make no assertions to the reliability or security of this information. This is simply how I got it to work, no guarantees!!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date>2004-07-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bluedragon-on-debian</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>More accessible forms</title>
		<link>http://gregs.tcias.co.uk/2004/06/16/more-accessible-forms/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=105</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://webstandards.org/learn/tutorials/accessible-forms/01-accessible-forms.html" title="Accessible HTML/XHTML Forms">Here is a real in depth look</a> at how to build accessible forms. The article doesn't concern itself so much with layouts, but more with markup/tags and what to keep in mind/best practices for building these forms. It's nicely split into three levels of complexity and really neatly guides you through all the caveats, while presenting good working solutions and explaining clearly why these are good.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2004-06-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-accessible-forms</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>New ALAs</title>
		<link>http://gregs.tcias.co.uk/2004/06/16/new-alas/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=106</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have only read the first of the three, but as it's nearing the end of the day I thought I'd put these up quickly. <a href="http://www.alistapart.com/articles/dynatext/" title="Dynamic Text Replacement">Dynamic Text Replacement</a> article shows how you can create fantastically styled headers using images, PHP and JavaScript. I know a few designers who will love this technique. I used to bang on about keeping images down to a minimum and thinking of accessibility. While the designers used to lament the fact designs were lacking all of a sudden due to the lack of type face support and rich imagery. Well now you can have the best of both...</p>
<p>The other two articles can be found <a href="http://www.alistapart.com/articles/dynanav/" title="Dynamically Conjuring Drop-Down Navigation">here</a> and <a href="http://www.alistapart.com/articles/negativemargins/" title="Creating Liquid Layouts with Negative Margins">here</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date>2004-06-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-alas</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>What camera?</title>
		<link>http://gregs.tcias.co.uk/2004/06/18/what-camera/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=259</guid>
		<description></description>
		<content:encoded><![CDATA[I am in the market for a new Digital camera and I do quite like the idea of getting DLSR of some sorts. The current favourite it the <a href="http://www.dpreview.com/reviews/canoneos300d/" title="Canon EOS 300D / Digital Rebel / Kiss Digital Review">Canon eos 300d</a>. Mainly because of the guys around the office have been saying so, but also because a few comments on Slashdot and the firmware hacks that are out there. However there is so much new information to absorb and I was quite pleased to stumble across this series of articles: <a href="http://www.thetechlounge.com/article.php?directory=beyond_megapixels_part_1" title="Beyond Megapixels">Beyond Megapixels</a>, which had some useful information as to what to look out for. Again well worth a read.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2004-06-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-camera</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Making the case for Linux</title>
		<link>http://gregs.tcias.co.uk/2004/06/18/making-the-case-for-linux/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Another neat <a href="http://www.linuxdevcenter.com/pub/a/linux/2004/06/10/win4lin.html" title="Windows Compatibility for the Linux Desktop">little article</a> on running some of your old Windows programs under Linux. The author talks you through choosing the right emulator for your needs, reviews some of the solutions out there and then takes you through a step by step configuration of <a href="http://www.netraverse.com/products/" title="Products overview">win4lin</a> as this is the one that suited his needs.</p>
<p>The case is becoming more and more compelling, now I just need to make sure all of my hardware is supported.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2004-06-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>making-the-case-for-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Automating startup and shutdown</title>
		<link>http://gregs.tcias.co.uk/2004/07/11/automating-startup-and-shutdown/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=110</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One thing I forgot to mention was the configuration of automating the start and shutdown of BD. Again the instructions available are pretty good and I followed the solaris based instructions and here are the symbolic links that I created between my copies of the start and shutdown scripts to rcx.d folders (where x is a numeric value, eg. rc0.d, rc1.d, etc...). The first is the start up link, the rest are all used for shutdown.</p>

<p><em>host:/etc/init.d# ln -s /etc/init.d/StartBlueDragon.sh /etc/rc3.d/s95bluedragon<br />
host:/etc/init.d# ln -s /etc/init.d/StopBlueDragon.sh /etc/rc0.d/K95bluedragon<br />
host:/etc/init.d# ln -s /etc/init.d/StopBlueDragon.sh /etc/rc1.d/K95bluedragon<br />
host:/etc/init.d# ln -s /etc/init.d/StopBlueDragon.sh /etc/rc2.d/K95bluedragon<br />
host:/etc/init.d# ln -s /etc/init.d/StopBlueDragon.sh /etc/rc3.d/K95bluedragon</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date>2004-07-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>automating-startup-and-shutdown</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>More colour theory</title>
		<link>http://gregs.tcias.co.uk/2004/07/20/more-colour-theory/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=5</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Since this is one area of design that compete baffles me, I am always grateful when people care to share their knowledge and expertise and more so when they do it in a novel way. Stumbled across this informative <a href="http://www.mariaclaudiacortes.com/colors/Colors.html" title="Colors in motion">link on colour theory</a>, while looking at the equally interesting <a href="http://veerle.duoh.com/comments.php?id=208_0_2_10_C" title="Designing a CSS based template - part I">series of tutorials</a> by Veerle. The former provides a very playful approach to colours and what they represent. The latter coves some design techniques and approaches to building a CSS based template.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2004-07-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-colour-theory</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>StructKeyExists() vs isDefined()</title>
		<link>http://gregs.tcias.co.uk/2004/07/20/structkeyexists-vs-isdefined/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=6</guid>
		<description></description>
		<content:encoded><![CDATA[<p>There was a thread on CF-talk the other week titled the same as this little entry, where the the difference between these two functions was asked and what the benefits, performance considerations were when using either option. I was going to write up something about this thread, but Sean Corfield has already done it and superbly summarised it. <a href="http://www.corfield.org/blog/past/2004_07.html#000510" title="isDefined() vs structKeyExists()">Go check it out</a> as it really explains how these two functions work [i.e. how they determine whether or not that variable in question exists]. For a full discussion of the thread have a <a href="http://www.houseoffusion.com/cf_lists/messages.cfm/threadid=33841&forumid=4" title="StructKeyExists() vs IsDefined() - house of fusion thread">look here</a>.</p>
<p>The upshot? If you are using CFMX all vars are held as structures, so you'll get the best out of using StructKeyExists().</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2004-07-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>structkeyexists-vs-isdefined</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Setting the CFMX thread priority</title>
		<link>http://gregs.tcias.co.uk/2004/07/20/setting-the-cfmx-thread-priority/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Now this is pretty cool. Again from the CF-talk list, Joe Bernard has shown how to access the CFMS thread Priority information and how to increase/decrease it. As almost per usual now, you need to dig into the Java layer:</p>
<p><em>&lt;cfscript&gt;<br />
thread = createObject("java", "java.lang.Thread");<br />
// get current thread priority<br />
currp = thread.getPriority();<br />
// what's the max<br />
maxp = thread.getThreadGroup().getMaxPriority();<br />
// set the priority<br />
thread.setPriority(3);<br />
newrrp = thread.getPriority();<br />
<br />
writeOutput("Current: " & currp & "&lt;br /&gt;");<br />
writeOutput("Max: " & maxp & "&lt;br /&gt;");<br />
writeOutput("New: " & newrrp & "&lt;br /&gt;");<br />
&lt;/cfscript&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2004-07-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-the-cfmx-thread-priority</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>email links</title>
		<link>http://gregs.tcias.co.uk/2004/07/20/email-links/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here's a nifty trick for avoiding long links that can wrap in your e-mail body, simply wrap them between &lt; and &gt; and hey presto no more broken links in your mail body.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2004-07-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>email-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>getPageContext</title>
		<link>http://gregs.tcias.co.uk/2004/07/21/getpagecontext/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have been meaning to try this out for ages. Rather than hack a &lt;cflocation&gt; and &lt;cfinclude&gt; function together to use within &lt;cfscript&gt;, I decided to give getPageContext a go to carry out these tasks. I read about
this ages ago (I think it may have even been an article by Charlie Arehart over at <abbr title="ColdFusion Developer Journal">CFDJ</abbr>) and it struck me as a neat way to handle &lt;cflocation&gt; and &lt;cfinclude&gt;.</p>

<h5>Include</h5>
<p><em>&lt;cfscript&gt;<br />
	getPageContext().include("pathto/yourfile");<br />
&lt;/cfscript&gt;</em></p>

<p>The flipside, this literally includes the template, so say you have a text file that you wish to include, then this will be spat out to the screen at this point. And you can't save it in a variable so it can't act as a
&lt;cfsavecontent&gt; substitute. It acts exactly like a &lt;cfinclude&gt;.</p>

<h5>Re-direct</h5>
<p><em>&lt;cfscript&gt;<br />
	getPageContext().forward("/pathto/template");<br />
&lt;/cfscript&gt;</em></p>

<p>This acts as a server re-direct, which means that it requires one less trip to the browser. &lt;cflocation&gt; simply informs the browser that it needs to load another page, which the browse dutifully requests. However the <acronym title="Unified Resource Locator">URL</acronym>
doesn't change and I haven't managed to forward to a full qualified domain (i.e. no http://gregs.teacupinastorm.com/someFolder/).</p>

<p>If you do a &lt;cfdump var="#getPageContext()#" /&gt;, you can see all the other methods provided and delve deeper by exploring the other methods using for example: &lt;cfdump  var="#getPageContext().getServletContext().getServletNames()#" /&gt;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2004-07-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getpagecontext</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Peggy]]></wp:comment_author>
			<wp:comment_author_email>prkopecky@comcast.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.163.97.74</wp:comment_author_IP>
			<wp:comment_date>2007-10-12 00:28:54</wp:comment_date>
			<wp:comment_date_gmt>2007-10-11 13:28:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is an old posting, but it helped me today! Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.teacupinastorm.com/</wp:comment_author_url>
			<wp:comment_author_IP>61.68.52.57</wp:comment_author_IP>
			<wp:comment_date>2007-10-26 16:07:16</wp:comment_date>
			<wp:comment_date_gmt>2007-10-26 05:07:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad you found it useful. For a real in-depth look at getPageContext() have a look at <a href="http://www.bennadel.com/blog/758-ColdFusion-GetPageContext-Massive-Exploration.htm" rel="nofollow">this website</a>, just in case you didn't come across it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Dynamic gateway connection</title>
		<link>http://gregs.tcias.co.uk/2004/07/21/dynamic-gateway-connection/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=10</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I always found the documented method for connecting to the gateway is a little bit backward as it required you to hard code the URL to the gateway, e.g. http://yourDomain/flashservices/gateway.</p>

<p>Now obviously when you have different servers for say development and production this is less than ideal, unless we could always guarantee that the specified URL would be available, which in our case we couldn't. So here is the work around courtesy of Flash-remoting.com (you can <a href="http://www.flash-remoting.com/notablog/home.cfm?newsid=71" title="Overriding the gatewayUrl">view full article here</a> ). Basically this sets a variable on the template that holds your Flash movie that can be passed into your movie. In your movie you set a default value which is overridden if it (the var) is passed in. The only thing to note is that the example I believe makes a mistake: the variable name in the Flash movie should have been called <strong>gatewayUrl</strong> not <strong>myURL</strong> as is stated. Also be sure to use <strong>setDefaultGatewayUrl</strong> not <strong>setDefaultGatewayURL</strong>.</p>

<p>You can review errors caused by Flash Remoting in a log file in CFIDE/administrator called flash.log. I also just noticed that when you run CFMX from the command line (in my case using a JRun instance) you can trace all of the component method calls on screen.</p>

<p>And finally there was also <a href="http://www.flash-remoting.com/notablog/home.cfm?newsid=21" title="New updater for ColdFusion MX and Flash Remoting">a little pointer</a> to some Flash Remoting connection issues using web services.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2004-07-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dynamic-gateway-connection</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Testing your Flash remoting installation</title>
		<link>http://gregs.tcias.co.uk/2004/08/05/testing-your-flash-remoting-installation/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[On CF-talk someone was wondering where and how CFMX configures the Flash Remoting gateway. When you create your connection you usually do something like this:

[code]var gatewayUrl = "http://servname:port/flashservices/gateway";
NetServices.setDefaultGatewayUrl(gatewayUrl);[/code]

So the best way to test whether this is configured properly is to simply point your browser to that URL. If you get a blank page then everything is OK, if on the other hand you get a page not found then something is amiss. One of the causes I have encountered is specific to running CFMX as a J2EE application in which case JRun installs it's own Flash Remoting service which will clash with the CFMX one. Simply delete this ear from the admin console and you should be good to go.

If you try and locate this folder (/flashservices/gateway) in your CFMX installation you'll be out of luck as this is a servlet mapping configured in the instance specific WEB-INF/web.xml file, so that all request for that URL are re-directed to FlashGateway servlet. Here are the lines you need to look for:

[code]<servlet-mapping id="macromedia_mapping_1">
<servlet-name>FlashGateway</servlet-name>
<url-pattern>/flashservices/*</url-pattern>
</servlet-mapping>[/code]

You can find the servlet file in {Install Path}\JRun4\servers\{instance Name}\cfusion-ear\cfusion-war\WEB-INF\cfusion\lib\ and is called <strong>FlashGateway.jar</strong>. Note this path is based on a set up using cfmx instances, not stand alone edition, though you should be able to also find the <em>WEB-INF</em> folder in your install directory.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2004-08-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-your-flash-remoting-installation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JRun standalone server</title>
		<link>http://gregs.tcias.co.uk/2004/08/05/jrun-standalone-server/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=12</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Along similar lines to the Flas Remoting set up you can find information on the setup of the built-in webserver that is used by JRun here: {Install Path}\JRun4\servers\{instance Name}\SERVER-INF\jrun.xml. The section to look out for will look something like this:</p>

<p><em>&lt;!-- ========================================================= --&gt;<br />
&lt;!-- This is the built-in JRun Web Server                               --&gt;<br />
&lt;!-- ========================================================= --&gt;<br />
&lt;service class="jrun.servlet.http.WebService" name="WebService"&gt;<br />
	&lt;attribute name="activeHandlerThreads"&gt;25&lt;/attribute&gt;<br />
	&lt;attribute name="backlog"&gt;500&lt;/attribute&gt;<br />
	&lt;attribute name="interface"&gt;*&lt;/attribute&gt;<br />
	&lt;attribute name="keepAlive"&gt;false&lt;/attribute&gt;<br />
	&lt;attribute name="maxHandlerThreads"&gt;1000&lt;/attribute&gt;<br />
	&lt;attribute name="minHandlerThreads"&gt;1&lt;/attribute&gt;<br />
	&lt;attribute name="port"&gt;8101&lt;/attribute&gt;<br />
	&lt;attribute name="threadWaitTimeout"&gt;20&lt;/attribute&gt;<br />
	&lt;attribute name="timeout"&gt;300&lt;/attribute&gt;<br />
&lt;/service&gt;<br />
&lt;!-- Uncomment this service to use SSL with the JRun Web Server<br />
		 Note that you MUST create your own keystore before using this service<br />
&lt;service class="jrun.servlet.http.SSLService" name="SSLService"&gt;<br />
	&lt;attribute name="port"&gt;9100&lt;/attribute&gt;<br />
	&lt;attribute name="keyStore"&gt;{jrun.rootdir}/lib/keystore&lt;/attribute&gt;<br />
	&lt;attribute name="keyStorePassword"&gt;changeit&lt;/attribute&gt;<br />
	&lt;attribute name="trustStore"&gt;{jrun.rootdir}/lib/trustStore&lt;/attribute&gt;<br />
	&lt;attribute name="socketFactoryName"&gt;jrun.servlet.http.JRunSSLServerSocketFactory&lt;/attribute&gt;<br />
&lt;/service&gt;<br />
 --&gt;</em></p>

<p>Information on the external web server configuration can also be found in this file and looks something like this:</p>

<p><em>&lt;!-- ========================================================= --&gt;<br />
&lt;!-- This service is for communicating with a native (IIS, Apache, Netscape)   --&gt;<br />
&lt;!-- web server.                                                               --&gt;<br />
&lt;!-- To run this service in a secure mode via SSL, set the keyStore,           --&gt;<br />
&lt;!-- keyStorePassWord, trustStore and socketFactoryName attributes.            --&gt;<br />
&lt;!-- ========================================================= --&gt;<br />
&lt;service class="jrun.servlet.jrpp.JRunProxyService" name="ProxyService"&gt;<br />
	&lt;attribute name="activeHandlerThreads"&gt;25&lt;/attribute&gt;<br />
	&lt;attribute name="backlog"&gt;500&lt;/attribute&gt;<br />
	&lt;attribute name="deactivated"&gt;false&lt;/attribute&gt;<br />
	&lt;attribute name="interface"&gt;*&lt;/attribute&gt;<br />
	&lt;attribute name="maxHandlerThreads"&gt;1000&lt;/attribute&gt;<br />
	&lt;attribute name="minHandlerThreads"&gt;1&lt;/attribute&gt;<br />
	&lt;attribute name="port"&gt;51003&lt;/attribute&gt;<br />
	&lt;attribute name="threadWaitTimeout"&gt;20&lt;/attribute&gt;<br />
	&lt;attribute name="timeout"&gt;300&lt;/attribute&gt;<br />
	&lt;!--<br />
	&lt;attribute name="keyStore"&gt;{jrun.rootdir}/lib/keystore&lt;/attribute&gt;<br />
	&lt;attribute name="keyStorePassword"&gt;changeit&lt;/attribute&gt;<br />
	&lt;attribute name="trustStore"&gt;{jrun.rootdir}/lib/trustStore&lt;/attribute&gt;<br />
	&lt;attribute name="socketFactoryName"&gt;jrun.servlet.jrpp.JRunProxySSLServerSocketFactory&lt;/attribute&gt;<br />
	--&gt;<br />
	&lt;attribute name="mapCheck"&gt;0&lt;/attribute&gt;<br />
&lt;/service&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2004-08-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jrun-standalone-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>re-building morecpthosts</title>
		<link>http://gregs.tcias.co.uk/2004/08/09/re-building-morecpthosts/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=13</guid>
		<description></description>
		<content:encoded><![CDATA[A handy way to reload your <a href="http://www.qmail.org/" title="qmail: Second most popular MTA on the Internet">Qmail</a> control/morercpthosts is to use the "/var/qmail/bin/<a href="http://www.die.net/doc/linux/man/man8/qmail-newmrh.8.html" title="Linux Man page for qmail-newmrh">qmail-newmrh</a>" command. This command re-builds morercpthosts.cdb file without needing to re-cycle Qmail and hence stop your mail delivery service.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2004-08-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>re-building-morecpthosts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Getting CFMX to sleep</title>
		<link>http://gregs.tcias.co.uk/2004/08/09/getting-cfmx-to-sleep/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=14</guid>
		<description></description>
		<content:encoded><![CDATA[I thought this was quite neat and thanks to Ryan Duckworth for posting it (admittedly quite a while back now). I simple way to get CFMX to sleep for a few cycles (well 5 minutes in this example):

[code]<cfset createObject('java',
'java.lang.Thread').sleep(300000) />[/code]

He also stated that it's no inefficient a process, because:

"A java thread (which ColdFusion code is converted to) is doing a NOP (no operation) procedure during a java Sleep command which causes no inefficiency.  The multi-processing nature of the CPU handles this functionality for you and will use those CPU cycles with other requests during the sleep."]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2004-08-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-cfmx-to-sleep</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Domain and virtualhost aliases</title>
		<link>http://gregs.tcias.co.uk/2004/08/10/domain-and-virtualhost-aliases/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=15</guid>
		<description></description>
		<content:encoded><![CDATA[Learned two new things about apache today. The first was how to add a domain
alias to your virtual host configuration. Where you see a ServerName entry
just beneath it add:

[code]ServerName www.yourDomain.com
ServerAlias yourDomain.com[/code]

This example will allow http://yourDomain.com to resolve to that virtual host (www.yourDomain.com).

The other was how to add aliases for virtual hosts. This one is a no brainer really, simply add the same Alias directive you would to your httpd.conf for a global alias, but this time for the virtual host specific entry. For example:

[code]<virtualHost 111.22.33.55>
DocumentRoot /www/yourDomain
ServerName www.yourDomain.com
ServerAlias yourDomain.com
Alias someMapping/ /www/yourDomain/someFolderToMapTo
</virtualHost>[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2004-08-10 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>domain-and-virtualhost-aliases</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Expanding keywords</title>
		<link>http://gregs.tcias.co.uk/2004/07/22/expanding-keywords/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=24</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In my last work place we had this nifty stuff in place that updated the templates we were working on with version info, modification time and other bits and bobs, when the files were checked back into Visual Source Safe. I thought this was really handy to quickly review what had been happening to a template and that it would be a good idea to apply this in my new job as well. The first hurdle: enabling "it". Actually figuring out what "it", this technique, is called should have been my starting point. After some digging I finally stumbled across an article on MSDN and the answer: Enabling <strong>expanding keywords</strong>.</p>

<p>The info for enabling the keyword expansion can be <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/guides/html/vstskenable_keyword_expansion.asp" title="Enable Keyword Expansion">found here</a>. Essentially using this feature edits your ssafe.ini file and adds the following entry to it (note I work mainly with ColdFusion templates so that is why you see .cfm and .cfc file extensions):</p>

<p><em>Keyword_Masks = *.cfm,*.cfc</em></p>

<p>Close the SourceSafe Administrator and SourceSafe Explorer. Now you can re-start SourceSafe Explorer and the changes you made to your .ini file will have been read in and applied. Now all you need to do is add these keywords that are to be expanded to your development templates. <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/guides/html/vstskexpand_keywords.asp" title="Expand Keywords">A list can be seen here</a>. In the end I settled for these and stuck them between &lt;cfsetting&gt; tags to suppress the output of white space:</p>

<p><em>&lt;cfsetting enablecfoutputonly="yes" /&gt;<br />
&lt;!--- <br />
	$Archive:  $<br />
	$Author:  $<br />
	$Date:  $<br />
	$History:  $<br />
	$Logfile:  $<br />
 ---&gt;<br />
&lt;cfsetting enablecfoutputonly="no" /&gt;</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2004-07-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>expanding-keywords</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Tweaks</title>
		<link>http://gregs.tcias.co.uk/2004/07/22/tweaks/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=25</guid>
		<description></description>
		<content:encoded><![CDATA[<p>More tweaks to the look and feel of the site. I used a background pattern from <a href="http://www.squidfingers.com/patterns/" title="squidfingers/patterns">Squidfingers</a> for the backdrop and finally ditched the white background colour. I used a PNG with opacity, so if you are using IE you won't benefit from the transparency effect of the background.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2004-07-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tweaks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Optimising looping over lists</title>
		<link>http://gregs.tcias.co.uk/2004/07/26/optimising-looping-over-lists/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=26</guid>
		<description></description>
		<content:encoded><![CDATA[<p>There is a always lot of talk about optimisation, shaving off those precious milliseconds, in some cases manifesting itself as an almost a obsessive compulsive behaviour. I am not saying to that optimisation is not important or indeed relevant. It definitely has it's place, but I believe only, when things are going wrong, most commonly running slowly. So why did I decide to blog about optimising loops, well personally I wanted to document a little best practice, something to add to my tool set and use from the outset.</p>

<p>About a month ago, a question arose on the CF-talk list about looping over a list in cfscript, as in: </p>

<p><em>&lt;cfset theList = "apples, oranges, pears" /&gt;<br />
<br />
&lt;cfloop index = "theIndex" list = "#theList#" delimiters = ","&gt;<br />
	&lt;cfoutput&gt;#theIndex#&lt;/cfoutput&gt;&lt;br /&gt;<br />
&lt;/cfloop&gt;</em></p>

<p>One response suggested the following:</p>

<p><em>&lt;cfset list="apple,orange,pear" /&gt;<br />
<br />
&lt;cfscript&gt;<br />
for (i = 1; i lte listLen(list); i = i + 1) {<br />
 element = listGetAt(list, i);<br />
 writeOutput(element);<br />
}<br />
&lt;/cfscript&gt;</em></p>

<p>Which works, however there are one or two things that you could optimise here. The first is irrelevant if you are using CFMX, but in older versions by setting your list within the cfscript tag you can save yourself a call to the CFML parser. Also this code snippet evaluates (as was pointed out) for each iteration of the loop how long the list is. Since in this case the length does not change this is completely unnecessary. So you can save yourself some processing by moving the length evaluation outside the loop. Hence we now have:</p>

<p><em>&lt;cfscript&gt;<br />
list="apple,orange,pear";<br />
theLength = listLen(list);<br />
for (i = 1; i lte theLength; i = i + 1) {<br />
 writeOutput(listGetAt(list, i)&"&lt;br /&gt;");<br />
}<br />
&lt;/cfscript&gt;</em></p>

<p>And now the final small optimisation trick. Barney pointed out that Array access is much faster than list access. So converting your list to an Array can again help shave off a few cycles, by avoiding a call to ListGetAt() and of course benefiting from the faster access to arrays.</p>

<p><em>&lt;cfscript&gt;<br />
list="apple,orange,pear";<br />
myArray = ListToArray(list);<br />
theLength = arrayLen(myArray);<br />
for (i = 1; i lte theLength; i = i + 1) {<br />
 writeOutput(myArray[i]&"&lt;br /&gt;");<br />
}<br />
&lt;/cfscript&gt;</em></p>

<p>Now having said all this, consider the following: to really optimise your loops, consider if you really need to use them in the first place!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2004-07-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>optimising-looping-over-lists</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Cookies and structures</title>
		<link>http://gregs.tcias.co.uk/2004/08/04/cookies-and-structures/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was playing around with setting cookies in the Mach-ii framework and kept finding that even tough my cookie was showing up as set in the debug output when I did a <strong>StructKeyExists</strong> check it returned no. After some head scratching, I realised that, and this is not only specific to Mach-ii, I assumed that by setting a cookie with a value of <em>cookie.searchPref.pref1</em> I had created a nested structure searchPrefs with a key of <em>pref1</em>. In actual fact I had created a key in the cookie structure called <em>searchPref.pref1</em>. So the check should really have been:</p>

<p><em>StructKeyExists(cookie,"searchPrefs.pref1")</em></p>

<p>And bingo I was now reading the values stored in the cookie rather than from my application constants.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2004-08-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cookies-and-structures</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Finding out the current event</title>
		<link>http://gregs.tcias.co.uk/2004/08/04/finding-out-the-current-event/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=28</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Making my first foray into building a Mach-ii application. Here is a little discovery, if you need to find out what the current event is in your view, you can do a <em>event.getName()</em> to find out.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2004-08-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>finding-out-the-current-event</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Load testing</title>
		<link>http://gregs.tcias.co.uk/2004/07/28/load-testing/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=318</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Below are three useful load testing tools that were mentioned in a Mach-ii thread. I was only aware of one so far: <a href="http://www.microsoft.com/technet/archive/itsolutions/intranet/downloads/webstres.mspx" title="Download MS Web Application Stress Tool">MS Web Application Stress Tool</a>. Today I was made aware of two other options:</p>
<ol>
	<li><a href="http://jakarta.apache.org/jmeter/" title="Apache JMeter">Apache JMeter</a>, a java based desktop application that can not only load test your web applications, but also databases, ftp servers and java objects.</li>
	<li><a href="http://opensta.org/" title="OpenSTA">OpenSTA</a> an open source load testing solution, which runs on Win32 clients.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>318</wp:post_id>
		<wp:post_date>2004-07-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>load-testing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>On going tweaks</title>
		<link>http://gregs.tcias.co.uk/2004/07/28/on-going-tweaks/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=319</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just as I had settled for a background I visited to <a href="http://www.cameronmoll.com/" title="Authentic Boredom">Cameron Moll&#8217;s</a> blog and then I noticed it, I had chosen the same background as he had. Funny how the mind works, so I went back to <a href="http://www.squidfingers.com/patterns/" title="squidfingers/patterns">Squidfingers</a> and chose a new pattern and also chose a new color.</p>
<p>I also fixed an <a href="http://www.awstats.org/" title="Free real-time logfile analyzer to get advanced statistics">awstats</a> configuration problem. I was using a shell script to build both the index page and a set of static pages and when it came to building the static pages the process would abort with the following error message:</p>
<p><em>awstats.pl /usr/bin/perl: bad interpreter: Permission denied</em></p>
<p>The solution: the awstats.pl script did not have execute permissions at a group level.</p>
<p>As a result I have now been able to see who's been looking at my site and was pleased to see a nice spread of browsers and OSs. Which made me wonder how the site renders. I have to be honest I basically only use <a href="http://www.mozilla.org/products/firefox/start/" title="Mozilla: FireFox">FireFox</a> and occasionally look at it in IE 6.0 (and usually spot a few errors). So I was wondering if possibly some of you who look at this site could <script language="JavaScript1.2" type="text/javascript" src="/_common/_scripts/_email.js"></script> and send me a screen grab if you spot any display errors? Ta, in advance.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>319</wp:post_id>
		<wp:post_date>2004-07-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>on-going-tweaks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Chilled</title>
		<link>http://gregs.tcias.co.uk/2004/08/04/chilled/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=320</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Sorry about the lack of posts over the last few days, but I took off for the weekend and hit the <a href="http://www.bigchill.net/" title="Visit the Big Chill">Big Chill</a> festival. which was absolutely awesome. If you decide to go to a only one festival, this is the one!! Three days of sun, music, food, beer, croquet, relaxation and camping in the English country side!!!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>320</wp:post_id>
		<wp:post_date>2004-08-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>chilled</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>First Foray into Mach-ii</title>
		<link>http://gregs.tcias.co.uk/2004/08/04/first-foray-into-mach-ii/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=321</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have been tinkering with Mach-ii for a few weeks now. Principally to do UI prototyping. I figured this would be a nice way to get used to the event model and calling views. Now, however, the time has come to do a little more than just switch between UI views. I decided to figure out a very basic login/logout approach and to familiarise myself with how you deal with creating sessions in this framework. I based this stuff on Ben Edward's "Mach-ii How to... develop listeners" and Phil Cruz's excellent Mach-ii.info sample application. Please do note: this doesn't deal in the slightest with facades or transfer objects or any of the design patterns that have been hot topics in recent months. Also if anything is blantantly wrong or incorrect, please feel free to point out my mistakes (e-mail address is in the footer)</p>

<p>So what follows will be a discussion of how it works and how it all ties together. There aren't any code samples, but later on today I'll upload the code I used and also set up a small demo of the code, so you can see it in action.</p>

<p>As an application is fired up (and for every subsequent event) the <strong>applicationPlugin</strong> [plugins/ApplicationPlugin.cfc] is called and at the preEvent level a check is carried out to see whether my session object exists (in this case session.sUser). If not, then it is at this point that it is created. However it is left empty, i.e. it leaves the <strong>userID</strong> blank and sets the <strong>isLoggedIn</strong> key to "no".</p>

<p>Then the flow of the application continues by loading the default event, which in this case is <strong>showHome</strong>. This view [views/showHome.cfm] displays a greeting message and then checks whether you are logged in or not. A simple if/else <em>session.sUser.isLoggedIn</em> block is used to handle this.</p>

<p>At the first request this is false so the user is informed that he is not logged in. By clicking the link a new event is announced: <strong>attemptLogin</strong> and both the username and password are passed to the event as well. This in turn prompts the <strong>LoginListener</strong> [model/LoginListener.cfc] to be called. The method <strong>attemptLogin</strong> takes the entire event as an argument and from that the username and password are plucked (e.g. <em>arguments.event.getArg("username")</em>). Next a <strong>isLoginValid</strong> method is called, which will match the values passed in by the URL/event against two parameters set in the mach-ii.xml file for the <strong>LoginListener</strong>. For obvious reasons this will be replaced with something more secure in production, this is after all just something to test the theory.</p>

<p>If the the arguments passed in, match the parameters set then a method <strong>doLogin</strong> is called, which set the userID to a unique UUID and the <strong>isLoggedIn</strong> flag is set to yes. Control is handed back to the calling method and true is returned to the <strong>attemptLogin</strong> method. If on the other hand the values passed in didn't match the parameters, false is returned.</p>

<p>Depending on the outcome dicsussed previously (i.e. whether isLoginValid returned true or false) one of two events are announced: <strong>loginSucceeded</strong> and "<strong>oginFailed</strong>. Currently these events simply display the view <strong>showHome</strong>, but at a later date I may decide to do other things post successful login, so I kept my options open and decided to leave them in there.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>321</wp:post_id>
		<wp:post_date>2004-08-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>first-foray-into-mach-ii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Conditional directives</title>
		<link>http://gregs.tcias.co.uk/2004/08/10/conditional-directives/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=16</guid>
		<description></description>
		<content:encoded><![CDATA[Our sys admin has shown me how to create conditional statements in your httpd.cong config file. The <a title="&lt;IfModule&gt; directive">&lt;IfModule&gt; directive</a> carries out a test to see if a specified module is included in Apache. You can either do:

[code]<ifModule mod_jrun20.c>
JRunConfig Serverstore \
/u2/cfmx_61/jrun4/lib/wsconfig/1/jrunserver.store
JRunConfig Bootstrap 127.0.0.1:51020
</ifModule>[/code]

Which processes the directives if the module is loaded. Or you can also do:

[code]<ifModule !mod_jrun20.c>
LoadModule jrun_module "{Install path}JRun4/lib/wsconfig/1/mod_jrun20.so"
<ifModule mod_jrun20.c>
JRunConfig Verbose false
JRunConfig Apialloc false
JRunConfig Ssl false
JRunConfig Ignoresuffixmap false
JRunConfig Serverstore "{Install path}/JRun4/lib/wsconfig/1/jrunserver.store"
JRunConfig Bootstrap 127.0.0.1:51020
#JRunConfig Errorurl &lt;optionally redirect to this URL on errors&gt;
AddHandler jrun-handler .jsp .jws .cfm .cfml .cfc
</ifModule>
</ifModule>[/code]

Which results in the JRun module to be loaded if the module was not previously loaded. And you can see that you can also nest these conditional statements.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2004-08-10 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>conditional-directives</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Code View</title>
		<link>http://gregs.tcias.co.uk/2004/08/10/code-view/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=17</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.1976design.com/blog/" title="Dunstan's Blog">Dunstan Orchard</a> was detailing some of the code behind his blog's recent re-design and his approach/technique to <a href="http://www.1976design.com/blog/archive/2004/07/29/redesign-tag-transform/" title="Redesign explained: tag transformations">code display</a> (which is discussed about half way down) was I thought quite awesome [his site is equally awesome and his thoughts and comments are hilarious].

He opted to use CSS and a numbered list represent indented and line numbered code. It also displays single and multi line comments in a different colour(Ironically I forgot to include a check for CFML based comments &lt;!--- ---&gt;. I'll add this later). His wrote the script using PHP and with his permission I created a ColdFusion <acronym title="User Defined Function">UDF</acronym>. And the UDF is as follows:
[code]<cfscript>
/**
* This function reads in a file with code and displays and formats the code nicely.
* Modified/Adapted for ColdFusion by Greg Stewart
* Rewritten based on original PHP function by Dunstan Orchard (http://www.1976design.com/).
*
* @param fName 	 			The file to parse.
* @return output 			The formatted xHTML code view.
* @author Greg Stewart (gregs(at)tcias.co.uk)
* @version 1, August 5, 2004
*/
function codeTransform (fName) {
var output =  "<ol class='code'>";
var linecount = 0;
var tabCount = "";
var comnt = "";
var class = "";
var multiLineCmnt = 0;

fileReader = createObject("java", "java.io.FileReader");
fileReader = fileReader.init(fName);
lineReader = createObject("java","java.io.LineNumberReader");
lineReader = lineReader.init(fileReader);
// Read first line, if any into variable line
line = lineReader.readLine();

while (isDefined("line")) {
lineCount = lineCount + 1;
// convert tags to safe entitiies for display
line = HTMLEditFormat(line);
// find out how many tabs (based on FindOccurences() by Ray Camden from cflib.org)
tabCount = Len(line) - Len(Replace(line,"#chr(9)#","","ALL")) / len("#chr(9)#");
// set the style for tabs
if (tabCount gt 0) {
tabCount = "tab" & tabCount;
} else {
tabCount = "";
}
// now remove the tabs
line = Replace(line,"#chr(9)#","","ALL");

// let's deal with comments
slashSlashPos = REFind("^//",line, 1, "true");
slashStarPos = REFind("/\*",line, 1, "true");
starSlashPos = REFind("\*/",line, 1, "true");

if (multiLineCmnt neq 1) {
if (slashSlashPos.pos[1] neq 0) {
comnt = "cmnt";
multiLineCmnt = 0;
} else {
comnt = "";
multiLineCmnt = 0;
}

if (slashStarPos.pos[1] neq 0) {
comnt = "cmnt";
if (starSlashPos.pos[1] neq 0) {
multiLineCmnt = 0;
} else {
multiLineCmnt = 1;
}
}
}

if (starSlashPos.pos[1] neq 0) {
comnt = 'cmnt';
multiLineCmnt = 0;
}
// build up the class
if ((tabCount neq "") AND (comnt neq "")) {

// set the style for both tabs and comments
class = "tabCount" & & " comnt";
} else if ((tabCount neq "") OR (comnt neq "")) {
// or for just tabs or comments
class = "tabCount&amp;comnt&amp;"""";
}
// Process the variable line
if (line neq "") {
output = output & "<li class='code'> & line & "</li>";
} else {
output = output & "<li class='''></li>";
}
// Read the next line, if any
line = lineReader.readLine();
}
output = output &  "</ol>";
return output;
}
// call the function
writeOutput(codeTransform("/path/To/File/To/Display/file.name"));
[/code]

I'll start using this for my code display once I figure out how to integrate PHP and CFML.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2004-08-10 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>code-view</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>multiple instances update</title>
		<link>http://gregs.tcias.co.uk/2004/08/12/multiple-instances-update/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.bpurcell.org" title="Brnadon Purcell">Brandon Purcell</a> has updated his article on <a href="http://www.macromedia.com/devnet/mx/coldfusion/articles/multi_instances04.html" title="Installing and Configuring ColdFusion MX 6.1 Multiple Instances with IIS and Apache Virtual Hosts">Installing and Configuring ColdFusion MX 6.1 Multiple Instances with IIS and Apache Virtual Hosts</a>, to include a fix for Apache. If you followed the instructions prior to this update, you might have encountered the following error message in your Apache error log (on screen you would have seen a plain 500 Internal server error):

[code][Thu Jun 24 15:09:33 2004] [notice] jrApache[1635] JRun will not accept request. Check JRun web server configuration and JRun mappings on JRun server.[/code]

The fix is to set the <strong>Apialloc</strong> option for your VirtualHost to <em>false</em> (as shown below). <strong>Apialloc</strong> controls how the connector allocates memory. According to the updated article, setting that value to <em>false</em> will result in requests for memory coming from the Operating System instead of Apache (as is the default or more precisely <strong>Apialloc</strong> set to <em>true</em>).

[code]<virtualHost *>
ServerAdmin some@domain.com
DocumentRoot {install path}/path/to/web/site/
ServerName www.domain.com
ErrorLog logs/www.domain.com-error_log
CustomLog logs/www.domain.com-access_log common
JRunConfig Serverstore "{install path}/JRun4/lib/wsconfig/{instance server store}/jrunserver.store"
JRunConfig Bootstrap 127.0.0.1:51002
<strong>JRunConfig Apialloc false</strong>
</virtualHost>
[/code]

Now I cannot say that I have encountered this error so far when running multiple instances, but that could be because, as Brandon points out, I am still using Apache version 1.3.x. However since it's a recommendation, I have added to my process list.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2004-08-12 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>multiple-instances-update</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>UK CF bloggers</title>
		<link>http://gregs.tcias.co.uk/2004/08/12/uk-cf-bloggers/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=19</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.horwith.com/" title="Simon Horwith's Blog">Simon Horwith</a>, who has just recently started up his own blog, pointed out this useful UK MM blog aggregator: <a href="http://www.ukcfug.org/blogregator/index.cfm" title="UK MM News aggregator">Macromedia XML news Aggregator</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2004-08-12 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>uk-cf-bloggers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>announcing events</title>
		<link>http://gregs.tcias.co.uk/2004/08/13/announcing-events/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[There are two ways that you can announce events in the <a href="http://www.mach-ii.com/" title="Mach-ii">Mach-ii framework</a>. The first way is inside a <acronym title="ColdFusion Component">CFC</acronym> (typically I believe a Listener) and that is by calling the <strong>announceEvent()</strong> method and passing in the event name and any arguments that you wish to pass along as well. For example:

[code]<cfset announceEvent("someEvent",arguments.event.getArgs()) />[/code]

The other way is in the <em>mach-ii.xml</em> config file. Here you can make use of the following syntax to announce a new event

[code]<announce event="someEvent" />[/code]

Just make sure you have an event-handler set for "someEvent". And also do note that announcing events is not like re-directing to that event. This adds the event to the event queue.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2004-08-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>announcing-events</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>passing result sets to your views</title>
		<link>http://gregs.tcias.co.uk/2004/08/13/passing-result-sets-to-your-views/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=21</guid>
		<description></description>
		<content:encoded><![CDATA[So you have managed to execute a query, but how on earth do you get them to be passed through the framework to your view. The trick is to set a <strong>resultKey</strong> for the result to be stored in, as shown below:

[code]<event-handler event="someEvent" access="public">
<notify listener="myListener" method="getMyQueryResults" resultKey="request.myResults" />
<view-page name="myView" />
</event-handler>[/code]

In your view you can then reference the result doing something like this:

[code]
<cfloop query="request.myResults">
<!--- loop over your result set --->
</cfloop>
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2004-08-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>passing-result-sets-to-your-views</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>accessing your event arguments.</title>
		<link>http://gregs.tcias.co.uk/2004/08/13/accessing-your-event-arguments/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=22</guid>
		<description></description>
		<content:encoded><![CDATA[The <a href="http://www.mach-ii.com/" title="Mach-ii">Mach-ii framework</a> conveniently passes your form and url variables into the event for you and you can access these values from within <acronym title="ColdFusion Components">CFC</acronym> by passing them into your method using:

[code]<cfargument name="event" type="MachII.framework.Event" required="yes" displayname="Event" hint="I am the current event." />[/code]

Now if you wanted to access the value for a submitted form field called "myOption", you could access it using the following syntax:

[code]<cfset var mySetOption = arguments.event.getArg("myOption") />[/code]

And now this value can easily be used and passed into your queries or whatever you want to do with it within that method.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2004-08-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>accessing-your-event-arguments</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>BD IIS 6 install problems</title>
		<link>http://gregs.tcias.co.uk/2004/08/16/bd-iis-6-install-problems/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=23</guid>
		<description></description>
		<content:encoded><![CDATA[I have not seen anyone else post this yet, so here are some resources for working around a known issue with BlueDragon installs on Win2k3 (bugs <a href="http://www.newatlanta.com/c/auth/support/bluedragon/bugtracking/detail?bugId=1356" title="BD does not detect IIS on windows 2003">1356</a> and <a href="http://www.newatlanta.com/c/auth/support/bluedragon/bugtracking/detail?bugId=1357" title="BD does not offer IIS adapter in BD Administration Console">1357</a> [you'll need an account to view these]). What can happen is that either the installer or the admin console do not find the IIS installation.

If the installer cannot find the installation then in most cases you can configure the IIS connector by using the admin console option: web server adapter.

If the admin console cannot find the IIS installation then the root cause of this problem is there is no default site configured for IIS. Simply create one and attempt using the admin console to create the connection. Charlie Arehart posted the <a href="http://www.newatlanta.com/c/products/bluedragon/self_help/archiveSearch/detail?page=1&amp;messageId=71810" title="RE: [BlueDragon] IIS 2003 Web Adapter">following information</a> detailing what settings the installer/admin consoles attempts to configure.

Please note that these issues will be fixed in a soon to be released patch.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2004-08-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bd-iis-6-install-problems</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>File uploading via CFC</title>
		<link>http://gregs.tcias.co.uk/2004/08/16/file-uploading-via-cfc/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=29</guid>
		<description></description>
		<content:encoded><![CDATA[I have stumbled over this in the past as well and since there was a thread on this topic on CFCDev, I thought I'd detail the work around here. A good solution comes courtesy of Todd's site: rather than passing in the data stream you pass in a reference (a string like "form.fileField") to the form field that is doing the upload. By using the hash signs around the form field argument in the <em>fileField</em> attribute of &lt;cffile&gt; you force the tag to evaluate the reference to the form scope.

Todd has a detailed <a href="http://www.web-rat.com/index.cfm?mode=View&amp;entry=D1E6CAA2-D09C-B9C5-BA747868B7CE3DDE" title="CFFILE Upload in a CFC">explanation about what goes on and how to make it work</a>. However as a few people pointed out the &lt;cffile&gt; is still referencing the form scope directly, which then breaks encapsulation (again just a warning if encapsulation is important to your approach).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2004-08-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>file-uploading-via-cfc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Flashvars</title>
		<link>http://gregs.tcias.co.uk/2004/08/19/flashvars/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=30</guid>
		<description></description>
		<content:encoded><![CDATA[A while back posted some info on creating Dynamic gateway connection, by way of passing in a connection string to the Flash movie. This was achieved by way of passing in flashvars to the movie.

[code]
<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0" id="someName" height="420" width="760">
<param name="movie" value="flashMovie.swf"/>
<param name="quality" value="high"/>
<param name="flashvars" value="gatewayUrl=<cfoutput>#variables.gatewayUrl#</cfoutput>"/>
<embed flashvars="gatewayUrl=<cfoutput>#variables.gatewayUrl#</cfoutput>" quality="high" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" width="760" height="420" name="someName" swliveconnect="true"/>
</object>[/code]

I dug a <a href="http://www.macromedia.com/support/flash/ts/documents/flashvars.htm" title="Using FlashVars to pass variables to a SWF">little further</a> recently as I had to pass in more than one argument and it turns out that it's behaviour in that respect is very much like a URL query string. So to pass in multiple value pairs into your flash movie simply do this:

[code]
<param name="flashvars" value="gatewayUrl=<cfoutput>#variables.gatewayUrl#</cfoutput>&amp;someVar=someValue"/>[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2004-08-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flashvars</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>BlueDragon error logs</title>
		<link>http://gregs.tcias.co.uk/2004/08/19/bluedragon-error-logs/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[I was intrigued by a wee message that appears at the foot of every error message that gets displayed in your browser when BlueDragon encounters an error. Specifically where are these held and how can you view them. I initially assumed that there would be an option in the administrator to view error logs, but could only find the an option to view the log file. Now the first time I did this, I had re-started BD prior to looking at this section and after having encountered an error. The outcome no reference to my error. As I started posting this I decided to make doubly sure that there was nothing there and sure enough there was this time:

[code]17/08/04 19:18.08: Error: java.io.FileNotFoundException: /{pathToWebRoot}/post_comment.cfm (No such file or directory), displaying source code snippet for: /{pathToWebRoot}/post_comment.cfm
17/08/04 19:18.08: -] RunTimeError written to: [./work/temp/rtelogs/bderror46803.html][\code]

Which would have saved me some time stepping through the BD folders to locate: {installFolder}/NewAtlanta/BlueDragon_Server_61/work/temp/rtelogs/. There still is no obvious way to view them, so maybe in an upcoming release the admin could have a link from the generated error in view log file to the actual html template? Or even better an option to view all the errors in one go, like you can when using CFMX?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2004-08-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bluedragon-error-logs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Thinking outside of the box</title>
		<link>http://gregs.tcias.co.uk/2004/08/19/thinking-outside-of-the-box/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=51</guid>
		<description></description>
		<content:encoded><![CDATA[While reading through the Slashdot newsletter I stumbled on an entry about hacking the Linksys NSLU2, which was a two part article on <a href="http://www.tomsnetworking.com/Sections-article85.php" title="hacking the Linksys NSLU2 - Part 1">how to access a backdoor</a> on the network storage device and <a href="http://www.tomsnetworking.com/Sections-article86.php" title="hacking the Linksys NSLU2 - Part 2">modify it to support ssh, nfs and pretty much anything else you can think of</a> as it runs a Linux OS. A real interesting read and an insight into the approach taken to get around the security of this device. You can read up on even more information <a href="http://www.batbox.org/nslu2-linux.html" title="Linux on the NSLU2">here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2004-08-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thinking-outside-of-the-box</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Is that argument defined</title>
		<link>http://gregs.tcias.co.uk/2004/08/19/is-that-argument-defined/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=52</guid>
		<description></description>
		<content:encoded><![CDATA[I am getting closer and closer to completing my first Mach-ii application and I just thought I'd note down one other thing I figured out, namely how to check whether an argument exists or not. Initially I tried using <strong>StructKeyExists()</strong> function with no success. So I decided to just &lt;cfdump&gt; request.event to see what other methods where available (other than getArg()) and sure enough you can do a <strong>event.isArgDefined()</strong> to check for the existence of an argument.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date>2004-08-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>is-that-argument-defined</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Compiling the apache connector</title>
		<link>http://gregs.tcias.co.uk/2004/08/24/compiling-the-apache-connector/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=53</guid>
		<description></description>
		<content:encoded><![CDATA[A while back I blogged about my experiences in setting up BlueDragon on my Debian server and one of the outstanding issues was the following Apache error message:

<em>[Thu Jul 1 20:23:39 2004] [warn] Loaded DSO /usr/lib/apache/1.3/mod_servletexec.so uses plain Apache 1.3 API, this module might crash under EAPI! (please recompile it with -DEAPI)</em>

This wasn't a critical error and everything was running happily, so I was quite happy to ignore for a while. A few days back there was a small thread on CF-Talk about a connector problem with CFMX and it was exactly the same error message. Steven Erat pointed to an old tech note that directed the user to re-compile the Apache module. You can find <a href="http://www.talkingtree.com/blog/index.cfm?data=20031009#2334D010-45A6-2844-7%3Cbr%3E%3C/a%3E6B7406437B04BBF" title="Easy To Use Script To Build CFMX Apache Connector Module From Source">his instructions here</a> and he also pointed to <a href="http://www.cfdev.com/apache/apache2cfmx.cfm" title="Compiling and Installing the Apache module for CFMX from source code">this resource</a> which had some good instructions on re-compiling the module.

I'll keep you posted on how I get on.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date>2004-08-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>compiling-the-apache-connector</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Changing the instance path</title>
		<link>http://gregs.tcias.co.uk/2004/08/24/changing-the-instance-path/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=54</guid>
		<description></description>
		<content:encoded><![CDATA[Another item to add to the list of JRun/cfmx configuration tips. If you wish to change the default path for your CFMX instance, then you need to edit the jrun-web.xml in cfusion_ear\cfusion_war\WEB-INF folder. Look for the &lt;virtual-mapping&gt; and add something like the following that will reflect your instance's new root path.

[code]<virtual-mapping>
<resource-path>/</resource-path>
<system-path>c:/mynewrootdir</system-path>
</virtual-mapping>[/code]

Thanks <a href="http://www.horwith.com/blog" title="Simon Horwith's Blog - Diary of a (ColdFusion) Madman">Simon</a> for sharing this tip!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2004-08-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>changing-the-instance-path</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>More GetPageContext</title>
		<link>http://gregs.tcias.co.uk/2004/08/24/more-getpagecontext/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=55</guid>
		<description></description>
		<content:encoded><![CDATA[Barney Boisvert kindly shared this little snippet on CFCDev a while back. It shows how to use getPageContext to access the HTTP headers and display them.

[code]<cfset req = getPageContext().getRequest() />
<cfset headerlist = req.getHeaderNames() />
<cfoutput>
<table>
<cfloop condition="headerlist.hasMoreElements()">
<cfset header = headerlist.nextElement() />
<cfset vallist = req.getHeaders(header) />
<tr>
<td>#header#:</td>
<td>
<cfloop condition="vallist.hasMoreElements()">
#vallist.nextElement()#<br />
</cfloop>
</td>
</tr>
</cfloop>
</table>
</cfoutput>[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2004-08-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-getpagecontext</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>form component updated</title>
		<link>http://gregs.tcias.co.uk/2004/08/24/form-component-updated/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[I have finally found a second to update my form <acronym title="ColdFusion Component">CFC</acronym> and it now includes hidden input,textarea input and form validation integration with my JavaScript form validation script. I also had to change the way the form was initialised. <acronym title="ColdFusion MX">CFMX</acronym> was having intermittent issues with &lt;cfsavecontent&gt;. Instead I now simply set a variable. You can grab the <a href="http://gregs.tcias.co.uk/wp-content/uploads/2008/04/form.zip" title="Form.zip">latest version here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2004-08-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>form-component-updated</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>MySQL gotchas</title>
		<link>http://gregs.tcias.co.uk/2004/09/02/mysql-gotchas/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=57</guid>
		<description></description>
		<content:encoded><![CDATA[Quite a bit of a discussion about databases on CF-talk today and MySQL got a little bit of flack as a consideration for Enterprise, mission critical and data sensitive applications. A few people were actually very knowledgeable on the topic and provided a list and links to resources about things that you should know about when considering MySQL as an option.

Jochem Dietem provided <a href="http://sql-info.de/mysql/gotchas.html" title="MySQL gotchas">a link to a good resource</a> and Micha Chopman <a href="http://www.houseoffusion.com/cf_lists/index.cfm/method=message&amp;messageid=176879&amp;forumid=4" title="Access alternatives (WAS: Security gurus out there?)">expanded on this </a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2004-09-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-gotchas</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Clearing the event queue</title>
		<link>http://gregs.tcias.co.uk/2004/09/02/clearing-the-event-queue/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=58</guid>
		<description></description>
		<content:encoded><![CDATA[As I indicated in on of my previous posts, announcing an event does not behave like a re-direct, instead the event is simply added to the event queue and processed sequentially. In order to in effect abort the event you need to do the following call:

[code]arguments.eventContext.clearEventQueue()[/code]

If this needs to occur in a plugin remember to place this call in the pre-process section.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2004-09-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clearing-the-event-queue</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Organising your code</title>
		<link>http://gregs.tcias.co.uk/2004/09/02/organising-your-code/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=59</guid>
		<description></description>
		<content:encoded><![CDATA[A little snippet from <a href="http://www.corfield.org" title="An Architect's View">Sean Corfield's post</a> to the Mach-ii dev list and I think is extremely useful and simple way to organise your code, especially when applied to the mach-ii.xml configuration file.

<em>"we order events public first then private, alphabetically within those groups"</em>

Also Sean pointed out that if the number of lines should exceed 1500 lines (use your judgment here) one should consider breaking out the one application into, several smaller ones. Furthermore by using the same application name, the smaller applications could then still share sessions.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date>2004-09-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>organising-your-code</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>An alternative to loading JAR files</title>
		<link>http://gregs.tcias.co.uk/2004/09/03/an-alternative-to-loading-jar-files/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=32</guid>
		<description></description>
		<content:encoded><![CDATA[Here is an option to loading JAR files. Rather than placing them into the ClassPath of the server.

Phil Cruz posted to the BD mailing list about his experience trying to integrate Log4J with BD (and since he can't load it into the Classpath either I am assuming that he is using BD FREE as well). He came across <a href="http://www.spike.org.uk/blog/index.cfm?data=03/06/2004" title="Loading java class files from a relative path">a post</a> from Spike that shows how to load a java class from a relative path. However Phill encountered an error when using this method. The method relies on creating a Java array and adding a URL object to it. This URL object is the path to the Java file that should be loaded. In CFMX this technique works, but in BD it returns a "<strong>Argument is not an array</strong>" error. It has been logged as a bug.

Andrwe Wu provided a simple work around to this problem (while the bug is being fixed). Instead of using a Java Array simply use a cfml one. So the code for loading log4J would be like follows:

<em>&lt;cfset pathToLog4j = "C:\CFusionMX\lib\log4j.jar" /&gt;</em>

<em>&lt;!--- Create an instance of java.net.URL for passing to the URLClassLoader ---&gt;
&lt;cfset URLObject = createObject('java','java.net.URL') /&gt;
&lt;!--- Initialize the object with the jar file ---&gt;
&lt;cfset URLObject.init("file:" &amp; pathToLog4j) /&gt;</em>

<em>&lt;!--- Create an Array and add our URLObject to it ---&gt;
&lt;cfset arr[1] = urlobject /&gt;</em>

<em>&lt;!--- Create and the URLClassLoader and pass it the array containing our path ---&gt;
&lt;cfset loader = createObject('java','java.net.URLClassLoader') /&gt;
&lt;cfset loader.init(arr) /&gt;</em>

<em>&lt;!--- Use our new class loader to load the DOMConfigurator class ---&gt;
&lt;cfset configurator = loader.loadClass("org.apache.log4j.xml.DOMConfigurator").newInstance() /&gt;</em>

<em>&lt;cfdump var=#configurator# /&gt;</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2004-09-03 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>an-alternative-to-loading-jar-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Patching instances</title>
		<link>http://gregs.tcias.co.uk/2004/09/07/patching-instances/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[As most of you CFer's know now,the updater has been around for a few weeks now and I decided to patch my dev server before even thinking about patching our production servers.

As the installer was running I was wondering how it would know about the multiple instances I am running on my machine? True enough after firing up the default cfusion instance and comparing the version info to my regular dev instance there was a discrepancy between between the version numbers (updated: Version: 6,1,0,83762 &amp; 6.1 regular: Version: 6,1,0,63958). What is the best approach to patch the instances?

It's not elegant but after contemplating a few different things (bearing in mind that I don't want to hose my current settings) the only real solution that worked, came courtesy of Dave Watts, and that is to simply apply the patch using the installer to each instance individually. I.e. when you run the update, step 4 prompts you to specify the location of ColdFusion MX and it usually defaults to the cfusion instance. Simply point it to your other instance paths and you are done.

Should there be another updater, maybe there could be an option to specify the path to multiple instances of CFMX?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2004-09-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>patching-instances</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Coming up a new BD patch</title>
		<link>http://gregs.tcias.co.uk/2004/09/07/coming-up-a-new-bd-patch/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=34</guid>
		<description></description>
		<content:encoded><![CDATA[Some users on Unix based systems (Red Hat/OSX) where experiencing problems with their installation, i..e CFM pages weren't being served and the logs showed a stack trace error:

[code][Fri Sep 03 15:19:32 EDT 2004] getRealPath() exception:
java.lang.NegativeArraySizeException[/code]

New Atlanta will be releasing a fixed version of mod_servletexec2.so in a hotfix later this week, but for those on the interest mailing list it was released there over the weekend.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2004-09-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coming-up-a-new-bd-patch</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>free version and loading jar files</title>
		<link>http://gregs.tcias.co.uk/2004/09/07/free-version-and-loading-jar-files/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=35</guid>
		<description></description>
		<content:encoded><![CDATA[The free version of BlueDragon sadly has no option for loading additional jar files such as jTidy or log4J at startup or by adding them to server the classpath. However thanks to <a href="http://www.newatlanta.com/c/products/bluedragon/self_help/archiveSearch/detail?page=1&amp;messageId=74160" title="Re: [BlueDragon] Argument is not an array">Phil Cruz's post</a> to the NewAtlanta mailing list and Spike's <a href="http://www.spike.org.uk/blog/index.cfm?data=03/06/2004" title="Loading java class files from a relative path">post on his blog</a> there is way round this slight annoyance. Below is the code for loading jTidy from a relative path, which quite frankly pleases me no end!!

<em>&lt;cfscript&gt;
pathToTidy = "/your/Path/To/Tidy.jar";
// Create an instance of java.net.URL for passing to the URLClassLoader
URLObject = createObject('java','java.net.URL');
// Initialize the object with the jar file
URLObject.init("file:" &amp; pathToTidy);
// Create an Array and add our URLObject to it
arr[1] = urlobject;
// Create and the URLClassLoader and pass it the array containing our path
loader = createObject('java','java.net.URLClassLoader');
loader.init(arr);
// Use our new class loader to load the Tidy class
tidy = loader.loadClass("org.w3c.tidy.Tidy").newInstance();
&lt;/cfscript&gt;
&lt;cfdump var="#tidy#" /&gt;</em>

You can see it in action <a href="http://www.tcias.co.uk/projects/dev/loader.cfm" title="go see it in action">here</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2004-09-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>free-version-and-loading-jar-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>jTidy with no temp files</title>
		<link>http://gregs.tcias.co.uk/2004/09/08/jtidy-with-no-temp-files/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=36</guid>
		<description></description>
		<content:encoded><![CDATA[Well I had been hoping that someone would come up with a neater way of using jTidy and <a href="http://gregs.teacupinastorm.com/wp-admin/" title="Mark Woods">Mark Woods</a> did(check out <a href="http://www.speckcms.com/" title="speck CMS">his CMS</a> is you have a moment). He dropped me a line today outlining how he built a custom tag that calls a class. Based on his tag I modified my function to dispense with creating the temporary files and rather use a ByteArrayInputStream and a ByteArrayOutputStream.

All I needed to then do was find an example of using <a href="http://www.cfmentor.com/code/index.cfm?action=script&amp;id=137" title="xslTransformString">ByteArrayInputStream</a> and <a href="http://www.markme.com/cantrell/archives/004175.cfm" title="Byte Arrays and ColdFusion">ByteOutputStream</a> and the code was complete.
<h5>UPDATE</h5>
There was a slight problem with BlueDragon and the ByteArrayOutputBuffer. Andrew Wu from <a href="http://www.newatlanta.com/" title="New Atlanta Home">NewAtlanta</a> found the problem, apparently:

<quote>...outx is a ByteArrayOutputStream which BlueDragon doesn't automatically treat as a String.</quote>

So by simply adding <strong>outstr = outx.toString();</strong>, before stripping the output of it's HTML header, the problem was resolved. Thanks Andrew! The code has been update accordingly.

<em>&lt;cffunction name="makexHTMLValid" displayname="Tidy parser" hint="Takes a string as an argument and returns parsed and valid xHTML" output="true"&gt;
&lt;cfargument name="strToParse" required="true" type="string" default="" /&gt;
&lt;cfscript&gt;
/**
* This function reads in a string, checks and corrects any invalid HTML.
* By Greg Stewart
*
* @param strToParse 	 		The string to parse (will be written to file).

*													accessible from the web browser
* @return returnPart
* @author Greg Stewart (gregs(at)tcias.co.uk)
* @version 1, August 22, 2004 </em>

<em>		* @version 1.1, September 09, 2004
* with the help of Mark Woods this UDF no longer requires temp files and only accepts

* the string to parse
*/</em>

<em>		var returnPart = ""; // return variable

parseData = trim(arguments.strToParse);</em>

<em>		// jTidy part
// BD free version
pathToTidy = "/usr/local/NewAtlanta/BlueDragon_Server_61/lib/ext/Tidy.jar";
// Create an instance of java.net.URL for passing to the URLClassLoader
URLObject = createObject('java','java.net.URL');
// Initialize the object with the jar file
URLObject.init("file:" &amp; pathToTidy);
// Create an Array and add our URLObject to it
arr[1] = urlobject;
// Create and the URLClassLoader and pass it the array containing our path
loader = createObject('java','java.net.URLClassLoader');
loader.init(arr);
// Use our new class loader to load the DOMConfigurator class
jTidy = loader.loadClass("org.w3c.tidy.Tidy").newInstance();</em>

<em>		// CFMX/J2EE
// jTidy = createObject("java","org.w3c.tidy.Tidy");</em>

<em>		jTidy.setQuiet(false);
jTidy.setIndentContent(true);
jTidy.setSmartIndent(true);
jTidy.setIndentAttributes(true);
jTidy.setWraplen(1024);
jTidy.setXHTML(true);</em>

<em>		// create the in and out streams for jTidy
readBuffer = CreateObject("java","java.lang.String").init(parseData).getBytes();
inP = createobject("java","java.io.ByteArrayInputStream").init(readBuffer);
//ByteArrayOutputStream
outx = createObject("java", "java.io.ByteArrayOutputStream").init();</em>

<em>		// do the parsing

jTidy.parse(inP,outx);
// close the stream
// outx.close();
outstr = outx.toString();</em>

<em>		// ok now strip all the header/body stuff
startPos = REFind("&lt;body&gt;", outstr)+6;
endPos = REFind("&lt;/body&gt;", outstr);
returnPart = Mid(outstr, startPos, endPos-startPos);
&lt;/cfscript&gt;
&lt;cfreturn returnPart /&gt;
&lt;/cffunction&gt;</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2004-09-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jtidy-with-no-temp-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>styling the upload button</title>
		<link>http://gregs.tcias.co.uk/2004/09/16/styling-the-upload-button/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=37</guid>
		<description></description>
		<content:encoded><![CDATA[Ever wanted to know how you can style the browse button of a file upload field?? Well strictly speaking you can't but as with most things <a href="http://www.quirksmode.org/dom/inputfile.html" title="Styling an input type='file'">there are ways around it</a>, however it will only work with browsers that support Opacity and JavaScript will have to be enabled. Hat tip goes to <a href="http://www.shayna.com/blog" title="CF_Pretty Accessible Blog">Sandy Clark</a> for finding this work around.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2004-09-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>styling-the-upload-button</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Hamish</title>
		<link>http://gregs.tcias.co.uk/2004/09/17/hamish/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=38</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center"><a href="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/p1001635.jpg" title="Hamish // August 2003 - 16th September 2004"><img src="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/p1001635.jpg" alt="Hamish // August 2003 - 16th September 2004" /></a></p>
<p style="text-align: center">August 2003 - 16th September 2004</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2004-09-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hamish</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Easy deployment</title>
		<link>http://gregs.tcias.co.uk/2004/09/21/easy-deployment/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=39</guid>
		<description></description>
		<content:encoded><![CDATA[Hmm guilty. Sean has brought <a href="http://www.corfield.org/blog/index.cfm?mode=entry&amp;entry=1DE9864F-B867-9A6A-DFFEBB47160124B9" title="Context Root and Port - A Rant!">something really useful</a> to my attention and I am sure a number of other people too. Using the ever useful getPageContext() call, you can determine the server port and the context root, which when set as variables can be used to dynamically set environment variables that would normally require the editing of config files.

[code]<cfset name="requestObject" value="#getPageContext().getRequest()#" />
<cfset name="port" value="#requestObject.getServerPort()#" />
<cfset name="ctx" value="#requestObject.getContextPath()#" />[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2004-09-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>easy-deployment</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>BD running as root</title>
		<link>http://gregs.tcias.co.uk/2004/09/21/bd-running-as-root/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[David Epler and Jim Dew have posted two solutions to changing the default user account that BD uses to run on a *nix system (namely root!!). You can read up on their solutions <a href="http://www.newatlanta.com/c/products/bluedragon/self_help/archiveSearch/detail?page=1&amp;messageId=74977" title="Final post and full thred">here</a>. New Atlanta and the people on the mailing list are truly an amazing bunch.

When you have a moment why not check out David's presentation on an alternative to <a href="http://www.onlamp.com/pub/a/onlamp/2001/01/25/lamp.html" title="LAMP: The Open Source Web Platform">LAMP</a>: <a href="http://www.dcepler.net/presentations/" title="LAMBDA presentation">LAMBDA</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2004-09-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bd-running-as-root</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFMX 6.1 and JVM memory settings</title>
		<link>http://gregs.tcias.co.uk/2004/09/21/cfmx-61-and-jvm-memory-settings/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[In my development set up I run CFMX as multiple instances. Why? Well the first mirrors our staging environment and is the one I use primarily for development. The other two are used one to test Flex and secondly to test/implement external jar files (such as changing the SAX parser to name an example).

Since my machine has a 512 Meg of Ram and that is the default JVM setting for CFMX I felt I needed to change this to something reasonable for development as well as maintain a degree of flexibility, i.e. be able to assign different instances different JVM settings. The key to doing this is to modify your jvm.config file and create one for each instance in question.

What follows is a step by step guide to doing this and instructions on starting up your CFMX instances with their specific jvm.config files.
<ol>
<li class="numbered">locate your jvm.config file, it is usually located under {install Path}Jrun4/bin/</li>
<li class="numbered">create as many copies of this file as there are instance you want to associate a unique jvm.config to. Give that copy a name that reflects the name of your instance, I usually choose: jvm.config_instanceName</li>
<li class="numbered">open a copy and look for the following section:
<em># Arguments to VM
java.args=-server -Xmx<strong>512m</strong> -Dsun.io.useCanonCaches=false -Xbootclasspath/a:"{application.home}/servers/yourInstanceName/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib/webchartsJava2D.jar" -XX:MaxPermSize=128m -XX:+UseParallelGC -DJINTEGRA_NATIVE_MODE -DJINTEGRA_PREFETCH_ENUMS</em></li>
<li class="numbered">You can see that the default setting for the memory allocated is 512 Meg. I want to change this to be the same as the MaxPermSize (i.e. 128 Meg). This is what the modified line looks like:<em># Arguments to VM
java.args=-server -Xmx<strong>128m</strong> -Dsun.io.useCanonCaches=false -Xbootclasspath/a:"{application.home}/servers/yourInstanceName/cfusion-ear/cfusion-war/WEB-INF/cfusion/lib/webchartsJava2D.jar" -XX:MaxPermSize=128m -XX:+UseParallelGC -DJINTEGRA_NATIVE_MODE -DJINTEGRA_PREFETCH_ENUMS</em></li>
<li class="numbered">In order to start up this instance with it's own jvm.config file I use the command line. You can use the service window, but I found that it doesn't appear to remember my configuration, so I rely on batch files. Here is the command to start up the instance:<em>$ cd {install path}Jrun4/bin
$ jrun -start -config jvm.config_yourInstanceName yourInstanceName &amp;</em>
This tells JRun to start up the yourInstanceName instance using the config file: jvm.config_yourInstanceName. Once you see a message like the following: Server yourInstanceName ready (startup time: 31 seconds), you are ready to use your tailored CFMX instance.</li>
<li class="numbered">simply repeat for each and very instance you want to apply this to.</li>
</ol>
That's all there is to it really. There are a number of resources on the topic (simply do a Google search on: <strong>jvm+cfmx instances</strong>), including (shameless plug) <a href="http://www.sys-con.com/story/?storyid=43994&amp;DE=1" title="Using JRun Instances for CFMX Deployment">an article I wrote for CFDJ</a> on my experiences using instances.
<h5>UPDATE</h5>
Doug Knudsen posted a message to CF-Talk showing how you can enable the separate config if you are using the windows service. When configuring the service simply type this:

[code]jrunsvc -install yourInstanceName "your service instance name" "Some description" -config jvm.config_yourInstance name[/code]

Marvellous thanks Doug!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2004-09-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmx-61-and-jvm-memory-settings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>maxPermSize and HeapSize</title>
		<link>http://gregs.tcias.co.uk/2004/09/23/maxpermsize-and-heapsize/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=42</guid>
		<description></description>
		<content:encoded><![CDATA[Recommendations on the size of these two config options points to keeping them the same. I did wonder why and the answer is that by keeping them the same size the performance increases as the JVM no longer needs to re-size itself based on the resources used.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2004-09-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maxpermsize-and-heapsize</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Omid]]></wp:comment_author>
			<wp:comment_author_email>omid133@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>192.231.215.4</wp:comment_author_IP>
			<wp:comment_date>2007-09-13 07:33:31</wp:comment_date>
			<wp:comment_date_gmt>2007-09-12 20:33:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I'm wondering how I can upgrade memory from 1GB to 2GB for jrun running ColdFusion via jvm.config file. We used the below method to upgrade it to 1GB and it works but when I tried for 2 GB it didnâ€™t work and I got an error. Any help would be greatly appreciated. Server is running on Linux platform with multi instances and different jvm.config assign to the instances

From:

java.args=-server -Xms1024m -Xmx1024m -Dsun.io.useCanonCaches=false -XX:MaxPermSize=128m -XX:+UseParallelGC -Djava.awt.headless=true -Dcoldfusion.rootDir={application.home}/

To:
java.args=-server â€“Xms2048m â€“Xmx2048m -Dsun.io.useCanonCaches=false -XX:MaxPermSize=128m -XX:+UseParallelGC -Djava.awt.headless=true -Dcoldfusion.rootDir={application.home}/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.teacupinastorm.com/</wp:comment_author_url>
			<wp:comment_author_IP>217.150.107.146</wp:comment_author_IP>
			<wp:comment_date>2007-09-13 19:38:51</wp:comment_date>
			<wp:comment_date_gmt>2007-09-13 08:38:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think it's quite as straight forward as you think (JVM configuration is something of a dark art).

Have a look at this post: http://www.coldfusionmuse.com/index.cfm/2006/4/17/multiserver

It also contains a few links to more information on configuring the JVM. Specifically check our Robi Sen's site (http://www.robisen.com/index.cfm?mode=cat&catid=1). Hope this helps!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>onChange handlers</title>
		<link>http://gregs.tcias.co.uk/2004/09/23/onchange-handlers/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=43</guid>
		<description></description>
		<content:encoded><![CDATA[A slight annoyance, to me at least, is the way certain bits and bobs of functionality have changed since the upgrade from Flash MX to Flash MX2004. Being able to set an onChange event handler used to be a dodle really, but it took me a while to figure out how to do this with MX 2004. Despite finding the code that would do this, I somehow completely missed that I had to associate the action script with the combo box I wanted the event to be triggered from. Just to spell this out, click on the combo box and in the action window type:

[as]on (change) {
trace("here");
}[/as]

Simple when you know how. Now the alternative to the above is to create a listener. I placed mine in an init() function and when an onChange event occurred it calls a simple function called <em>whatValue()</em> which takes the comboBox as it's argument and in this example simply traces the selected items value. You can also display and the label (by changing selectedItem.data to <em>selectedItem.label</em>)

[as]function whatValue(obj):Void {
  trace(obj.target.selectedItem.data);
}
cb_myComboBox.addEventListener("change", whatValue);[/as]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2004-09-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>onchange-handlers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFMX and jTidy</title>
		<link>http://gregs.tcias.co.uk/2004/09/02/cfmx-and-jtidy/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=60</guid>
		<description></description>
		<content:encoded><![CDATA[While writing the comment code I was hoping to make use of <a href="http://sourceforge.net/projects/jtidy" title="Project: JTidy">jTidy</a> to parse the comment passed in and have it tidied up so that any HTML provided would be valid. It was also a test for integration into the CMS for this site and it passed with flying colours on CFMX but sadly with the FREE version of BD (which this site runs on) you can't deploy additional jar files [UPDATE: have a <a href="http://gregs.teacupinastorm.com/BlueDragon/free_version_and_loading_jar_files.php" title="Blue Dragon free version and loading jar files">read of this entry</a> and you'll find out how to load java files on the fly]. So you'll need to deploy <strong>Tidy.jar</strong> to your {installPath}WEB_INF/lib/ (CFMX) or {installPath}/BlueDragon_Server_61/lib/ (BD) folder and re-start your server.

The approach I adopted I find far from ideal, but maybe somebody out there with more experience in using jTidy and java can provide a few hints, but here's prinicipally how it works. I created a method (<strong>makexHTMLValid()</strong>) that expects three arguments: <em>strToParse</em>, <em>thisUrl</em>, <em>tmpPath</em>. The first is the string to be cleaned, the second the URL from which a while will be read in with the string to be cleaned is held and a finally a physical path where the aforementioned template is generated and held for the duration of the parsing.

It does seem very laborious and it is. To further clarify the string is written to a file that jTidy then reads in by making an http connection and reads the file in. jTidy itself then writes a while out with the cleaned string and the function finishes by reading in the file and cleaning up all the temp files before returning the cleaned String. The only implementation examples I could find dealt with reading in StringBuffers using the above outline. I'd be delighted to hear of examples on converting a String variable into a StringBuffer and then back again.

<em>pathToTempFile = "/relativePath/toYourFile";
cleanedString = makeXHTMLValid(yourStringToParse, "http://"&amp;cgi.SERVER_NAME&amp;"/"&amp;pathToTempFile, ExpandPath(pathToTempFile));</em>

The function is as follows

<em>&lt;cffunction name="makexHTMLValid" displayname="Tidy parser" hint="Takes a string and url as a arguments and returns parsed and valid xHTML" output="true"&gt;
&lt;cfargument name="strToParse" required="true" type="string" default="" /&gt;
&lt;cfargument name="thisUrl" required="true" type="string" default="" /&gt;
&lt;cfargument name="tmpPath" required="true" type="string" default="" /&gt;
&lt;cfscript&gt;
/**
* This function reads in a string, checks and corrects any invalid HTML. It creates two
* temporary files, because as far as I can tell jTidy relies on files for parsing
* By Greg Stewart
*
* @param strToParse 	 		The string to parse (will be written to file).
* @param thisUrl 					The Url to parse
* @param tmpPath					The location where the tmp files we be written to, must be
*													accessible from the web browser
* @return returnPart
* @author Greg Stewart (gregs(at)tcias.co.uk)
* @version 1, August 22, 2004
*/</em>

<em>		var fileReadIn = ""; // xHTML output
var returnPart = ""; // return variable
var pageIn = "tmpIn."&amp;CreateUUID()&amp;".html";
var pageOut = tmpPath&amp;"tmpOut."&amp;CreateUUID()&amp;".html";</em>

<em>		var filename = tmpPath&amp;pageIn;
var writeData = "";</em>

<em>		// create the file stream
jFile = createobject("java", "java.io.File");
jFile.init(filename);
// the file doesn't exist so use the file stream to create it
jFile.createNewFile();
//
// writeFile = filename;
writeData = toString(trim(arguments.strToParse));</em>

<em>		jStream = createobject("java","java.io.FileOutputStream").init(jFile);
// create the UTF-8 file writer and write the file contents
jWriter = createobject("java", "java.io.OutputStreamWriter");
jWriter.init(jStream);
jWriter.write(writeData);
// flush the output, clean up and close
jWriter.flush();
jWriter.close();
jStream.close();</em>

<em>		// jTidy part
jTidy = createObject("java","org.w3c.tidy.Tidy");
jTidy.setQuiet(false);
jTidy.setIndentContent(true);
jTidy.setSmartIndent(true);
jTidy.setIndentAttributes(true);
jTidy.setWraplen(1024);
jTidy.setXHTML(true);</em>

<em>		// build the Url to parse
theUrl = arguments.thisUrl &amp; pageIn;
// create the in and out streams for jTidy
u = createObject("java","java.net.URL").init(theUrl);
inP = createObject("java","java.io.BufferedInputStream").init(u.openStream());
outx = createObject("java","java.io.FileOutputStream").init(pageOut);
// do the parsing
jTidy.parse(inP,outx);
// close the stream
outx.close();</em>

<em>		// read in the validated file
if (fileExists(pageOut)) {
fileReader = createObject("java", "java.io.FileReader");
fileReader = fileReader.init(pageOut);</em>

<em>			if (isObject(fileReader)) {
lineCount = 0;
lineReader = createObject("java","java.io.LineNumberReader");
lineReader = lineReader.init(fileReader);
line = lineReader.readLine(); //Read first line, if any into variable line
while (isDefined("line")) {
lineCount = lineCount + 1;</em>

<em>					//Process the variable line
fileReadIn = fileReadIn &amp; line;
line = lineReader.readLine(); //Read the next line, if any
}
}
}
// close the connection
fileReader.close();</em>

<em>		// ok now strip all the header/body stuff
startPos = REFind("&lt;body&gt;", fileReadIn)+6;
endPos = REFind("&lt;/body&gt;", fileReadIn);
returnPart = Mid(fileReadIn, startPos, endPos-startPos);</em>

<em>		// delete the temp files
jFile.init(filename);
jFile.delete();</em>

<em>		jFile.init(pageOut);
jFile.delete();
&lt;/cfscript&gt;
&lt;cfreturn returnPart /&gt;
&lt;/cffunction&gt;</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2004-09-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmx-and-jtidy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>creating a new file using java</title>
		<link>http://gregs.tcias.co.uk/2004/09/02/creating-a-new-file-using-java/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=61</guid>
		<description></description>
		<content:encoded><![CDATA[A while back I wrote about creating a <a href="http://gregs.teacupinastorm.com/cold_fusion/cfmx_wrapper_for_java_file_reader.php" title="check out: CFMX wrapper for java file reader">CFMX wrapper for java file reader</a>, which I used to read files in from within &lt;cfscript&gt;. However I wondered how you'd go about creating a new file and by creating and <strong>java.io.File</strong> object and dumping I spotted a method called <strong>createNewFile()</strong>. Here is the snippet that creates the object and the new file:
[code]// create the file stream
filename = "/absolutePath/toYourFile";
jFile = createobject("java", "java.io.File");
jFile.init(filename);
// the file doesn't exist so use the file stream to create it
jFile.createNewFile();[/code]

This also works on BlueDragon.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date>2004-09-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-a-new-file-using-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>cfhtmlhead</title>
		<link>http://gregs.tcias.co.uk/2004/09/24/cfhtmlhead/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[This tag will place any text string into the head element of your template. So for example you could leave all your JS libraries in a custom template saved as a var and then using <a href="http://livedocs.macromedia.com/coldfusion/6.1/htmldocs/tags-p57.htm" title="Go to Macromedia Livedocs for cfhtmlhead">cfhtmlhead</a> used in your OnRequestEnd.cfm template. That way you make sure that the code is always included and also is placed where it belongs, i.e. in between your head elements rather than mixed in with your code. The same could be applied to style sheets, build up a keyword list dynamically based on content, etc...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2004-09-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfhtmlhead</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFMX updater woes</title>
		<link>http://gregs.tcias.co.uk/2004/09/27/cfmx-updater-woes/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=63</guid>
		<description></description>
		<content:encoded><![CDATA[We just applied the updater to our servers, everything appeared to be working very nicely, apart from when we logged into the Administrator we encountered the following error once the site nav had loaded:

[code]Unknown tag: admin:l10n.ColdFusion cannot determine how to process the tag admin:l10n because the tag is unknown and not in any imported tag libraries. The tag name might be misspelled. The specific sequence of files included or processed is: {install path}/jrun4/servers/{instance name}/cfusion-ear/cfusion-war/CFIDE/administrator/navserver.cfm[/code]

Somehow during the install the udpater decided to install part of the upgrade into the specified instance folder and some into the Apache htdocs where a copy of the CFIDE resided as well. Copying the files from the htdocs (i.e. the Apache CFIDE folder) into the instance one ({install path}/Jrun4/servers/{instance name}/cfusion-ear/cfusion-war/CFIDE/Administrator) resolved this problem. Now I am not if this is a Solaris problem only as when I applied the updater to my windows development machine I didn't encounter this problem. For more information have a read <a href="http://www.macromedia.com/cfusion/webforums/forum/messageview.cfm?catid=274&amp;threadid=880855" title="CFMX Administrator Error: Unknown Tag admin:l10n">here</a> and <a href="http://www.mail-archive.com/cf-talk@houseoffusion.com/msg190761.html" title="RE: Unknown tag: admin:l10n">here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2004-09-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmx-updater-woes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Datagrid headers</title>
		<link>http://gregs.tcias.co.uk/2004/09/27/datagrid-headers/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=111</guid>
		<description></description>
		<content:encoded><![CDATA[Still playing around with Flash Remoting and I stumbled a cross <a href="http://philflash.inway.fr/dgheader/index.html" title="DataGrid Column Header">an entry</a> that described how to change the header style of a data grid. After having applied that I looked into changing the column names. These were being passed back by my CFC and they relied on database columns, which weren't the nicest to read. For example I wanted to change companyName into company. The following little action script snippet allows you to achieve this:

[as]import mx.controls.gridclasses.DataGridColumn;
yourDataGridInstanceName.columnNames = ["contactName", "companyName", "contactPhone", "summary"];
//customize column headers
var contactCol:DataGridColumn = yourDataGridInstanceName.getColumnAt(0);
contactCol.headerText = "Contact";
//
var companyCol:DataGridColumn = yourDataGridInstanceName.getColumnAt(1);
companyCol.headerText = "Company";
//
var activityCol:DataGridColumn = yourDataGridInstanceName.getColumnAt(2);
phoneCol.headerText = "Phone";
//
var summaryCol:DataGridColumn = yourDataGridInstanceName.getColumnAt(3);
summaryCol.headerText = "Summary";[/as]

Then simply save this as an external ActionScript file and include it in frame 1 of your movie, hey presto customised headers.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>111</wp:post_id>
		<wp:post_date>2004-09-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>datagrid-headers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Web forms</title>
		<link>http://gregs.tcias.co.uk/2004/09/28/web-forms/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=164</guid>
		<description></description>
		<content:encoded><![CDATA[Dan Cederholm has published another <a href="http://www.devarticles.com/c/a/Web-Design-Standards/Web-Forms/" title="Web Forms ">great overview</a> of how to build accessible forms. He takes a form built using the "traditional" method, i.e. tables, and during the course of the article shows you how to re-create it using guidelines set out by web standards (interestingly he opted for definition lists, whereas I have only ever thought of using divs and spans). To cap it off he applies some neat little <acronym title="Cascading StyleSheets">css</acronym> to enhance the look and feel.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2004-09-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-forms</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Lists</title>
		<link>http://gregs.tcias.co.uk/2004/09/28/lists/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=165</guid>
		<description></description>
		<content:encoded><![CDATA[A really <a href="http://www.sumoc.com/blog/index.cfm?mode=entry&amp;entry=06024C8F-5004-2066-B735F6AE1CBD7811" title="Everything is a List in ColdFusion!">neat post from Cameron</a> about list functions in <acronym title="ColdFusion Markup Language">CFML</acronym> and their usage. I especially like the way he identifies lists (sentences, text lines, paragraphs, etc...) and uses the functions to perform coding tasks.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2004-09-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lists</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>vnc 2 swf</title>
		<link>http://gregs.tcias.co.uk/2004/10/04/vnc-2-swf/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=166</guid>
		<description></description>
		<content:encoded><![CDATA[Having set my dad up with <a href="http://www.ascotinlessables.com/" title="A Scot in Les Sables">a web site</a> and installed <acronym title="Moveable Type">MT</acronym> for him, it's been a slight source of frustration in showing my dad how to use MT. The source of frustration has not benn his inability to learn, but I have lacked the time to write something decent up for or to find the time to sit down with him and show him how to use MT (it's more fun to drink wine, chat and watch the footy with him).

So I thought that it would be neat if I was able to record my actions on screen! I tried Robo Demo, but it continuously failed to install properly, so it was back to square one and that's where it has stayed for the last couple of months. That was until I stumbled across <a href="http://www.rocketboots.com.au/blog/index.cfm?mode=entry&amp;entry=574264FC-E081-51EF-A7C1937AE775C0B4" title="Screen Recording Directly to a Flash Movie">this post</a>, which pointed me to: <a href="http://www.unixuser.org/~euske/vnc2swf/" title="vnc2swf - screen recorder">VNC 2 SWF</a>. Taking advantage of the VNC protocol you can use this little app to record your <acronym title="Virtual Network Computing">VNC</acronym> session and save it as a SWF file. Could this be the answer I was looking for?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2004-10-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vnc-2-swf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Rob Rohan interview</title>
		<link>http://gregs.tcias.co.uk/2004/10/04/rob-rohan-interview/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=168</guid>
		<description></description>
		<content:encoded><![CDATA[A neat <a href="http://cybersonic.blogspot.com/2004/09/rob-rohan-interview.html" title="Cybersonic:  Rob Rohan Interview">interview with Rob Rohan</a>, the man that started the CFEclipse project. Of note are his choice of plugins (other than CFEclipse of course). Tail Log Viewer is the one I love most so far, but there are other such as a CSS, JS, XML and db one.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2004-10-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rob-rohan-interview</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>mach-iied</title>
		<link>http://gregs.tcias.co.uk/2004/10/14/mach-iied/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=173</guid>
		<description></description>
		<content:encoded><![CDATA[It's done a few hours ago I switched my old PHP site over to <a href="http://www.mach-ii.com/" title="Go to the Mach-ii web site">Mach-II</a>/<acronym title="ColdFusion Markup Language">cfml</acronym> (<a href="http://www.newatlanta.com/products/bluedragon/" title="Go to the NewAtlanta web site to find out more about BlueDragon">BlueDragon</a>) driven site. It may not be obvious from looking at the URLs, but that's because I have plugin parsing the requests (which have been re-written with mod_rewrite and rules in the .htaccess file).
<ol>
	<li>7 listeners</li>
	<li>2 filters</li>
	<li>14 events</li>
	<li>2 plugins</li>
	<li>11 custom views, 7 shared views</li>
</ol>
All in all it's been a very enjoyable experience. Sure there was some head scratching at times (and more on that a little later), but overall I really enjoyed the fact that the framework made me think, sometimes hard, about how I designed and implemented my application. And yes, there were a few moments where things seemed to be the long way round, but when it came to extending and modifying the logic part of the code, the use of getters and setters really paid off.

And now for a little aside. The whole lot was coded using <a href="http://www.eclipse.com/" title="Go to the Eclipse website">Eclipse</a>, initially using <a href="http://www.richpalette.com/" title="He3: website">He3</a> and then <a href="http://cfeclipse.tigris.com/" title="CFEclipse project page">CFEclipse</a>. I started off with He3 because it had the Mach-ii plugin, which was pretty useful initially, but once I'd added a few plugins to my regular Eclipse (and they are as follows: CFEclipse, <a href="http://xmlbuddy.com/" title="Go to the XMLbuddy homepage">XMLBuddy</a>, <a href="http://quantum.sourceforge.net/" title="Quantum database SourceForge page">Quantum database</a>, <a href="http://brosinski.com/stephan/archives/000028.php" title="RegEx Tester">Brosinski's RegEx</a>, <a href="http://graysky.sourceforge.net/" title="Tail log viewer">Grayski LogWatcher</a>, <a href="http://sourceforge.net/projects/vssplugin/" title="VSS plugin SourceForge page">VSS plugin</a>), I kind of never looked back. The main appeal of He3 was the config file viewer, but with XMLbuddy I was able to gain an equally useful insight into my config file, which furthermore seemed more natural to me. Don't get me wrong, I'll be definetly check out the next beta release of He3, but for the time being it's CFEclipse all the way.

OK that's the details side of things covered, what follows now are a few notes that I jotted down on while coding my Mach-ii application on this BlueDragon/Debian server set up, as code that ran seamlessly on CFMX had a few issues. One thing that didn't help me were the error messages that BD was returning. So here's a list of errors and the workarounds that worked for me.

<strong>Unknown return type:</strong> One thing that got me initially was setting the return content type of your model CFCs. I had omitted the full path (say: main.content should have been model.main.content). Thanks to Phil's excellent mach-ii.info site I found the answer to that one.

<strong>Could not locate resource:</strong> Next casing got me. The files were properly cased, but the calls to the CFCs were mainly set to lower case. I worked through all of the CFCs and changed both the invoke path and return types to the proper casing just for consistency.

<strong>No such function exists - geteventmapping:</strong> this error had made me stumped for quite a while. The problem lay in the return type of my object. Again capitalisation was to blame as was setting the return type to the object and I had inadvertently set it to <strong>O</strong>bject instead of <strong>o</strong>bject.

I encountered the error above on another occasion, but this time I wasn't dealing with objects, so casing wasn't the problem. Instead there was a type error that CFMX somehow was letting slip past, but BD caught. For my search I was passing in a parameter out of the event into another object. The expected type was numeric, however an empty string was being passed in. What had happened was that I was simply setting a var using arguments.event.getArg("someVar"), without checking if it existed. If it doesn't then it returns an empty string instead of throwing an exception. Well that taught me once again not to be sloppy about checking for the existence of variables. The only annoyance was the obscure error message that this caused.

Finally I'd really appreciate any feedback on how it runs (especially the rdf feed using a feed reader [if you are reading this using one, hooray it works!]) or any errors that you may encounter.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2004-10-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mach-iied</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Back to PHP</title>
		<link>http://gregs.tcias.co.uk/2004/10/18/back-to-php/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=174</guid>
		<description></description>
		<content:encoded><![CDATA[Well the fanfare is over I have had to temporarily revert back to the PHP form of this site as BlueDragon was suffering from a few hick ups. Now I am not sure whether this is a Mach-ii, BlueDragon, my coding style, server configuration issue, but after a period of two or three hours the server would be become un-responsive and the process list listed an incredibly large number of BD threads. Normally the threads number 20 odd, but by the time the server stopped responding there were hundreds.

So I tried a few things like changing mod_servletexec.so to the EAPI version provided by NewAtlanta, but I experienced similar problems as discussed over <a href="http://www.newatlanta.com/c/products/bluedragon/self_help/archiveSearch/detail?messageId=76001" title="Re: [BlueDragon] Apache 1.3.31 on Linux Hangs with BlueDragon 6.1">here</a>, so in the end I reverted back to the current mod_servletexec.so and switched back to PHP while I figure out what is happening. Sorry about any disruptions, missing images and what not while I switched back.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2004-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>back-to-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>HtmlCellRenderer</title>
		<link>http://gregs.tcias.co.uk/2004/10/18/htmlcellrenderer/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=175</guid>
		<description></description>
		<content:encoded><![CDATA[I keep finding myself returning to PhilFlash's web site for some truly useful classes he has written that extend the dataGrids functionality. A few weeks back I stumbled across his site when I was trying to figure out how to modify the header style. This week I was trying to change the way the data in the columns was being displayed, i.e. I wanted the text to wrap if it was too long for the column. A simple notion you would have thought, but alas no!

sing Phil's HtmlCellRenderer class you can achieve this effect. It's use is pretty straightforward and his code is self explanatory. Including the AS file is done by way of inserting a new symbol on your time line. With the following properties:
<ul>
	<li>Name : HtmlCellRenderer</li>
	<li>Behavior : MovieClip : Checked</li>
	<li>Identifier: HtmlCellRenderer</li>
	<li>AS 2.0 Class : HtmlCellRenderer</li>
	<li>Export for Actionscript : Checked</li>
	<li>Export for in first frame : Checked</li>
</ul>
You can actually nicely include the script and formatting instructions in the special header AS file I discussed a few weeks back <a href="http://gregs.teacupinastorm.com/flash/datagrid_headers.php" title="DataGrid Headers">here</a> and <a href="http://gregs.teacupinastorm.com/flash/more_datagrid_header_styling.php" title="More DataGrid Header Styling">here</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2004-10-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>htmlcellrenderer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CSS optmisation</title>
		<link>http://gregs.tcias.co.uk/2004/10/19/css-optmisation/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=176</guid>
		<description></description>
		<content:encoded><![CDATA[A couple of articles on optimising your CSS, try <a href="http://www.orderedlist.com/articles/writing_lean_css" title="Writing Lean CSS">writing lean CSS</a> or use <a href="http://home.no.net/junjun/html/shorthand.html" title="Introduction to CSS shorthand properties">short hand</a> techniques. One small thing to be aware off as a comment indicates is to be careful with shorthand as some browsers are known to have a few problems displaying style declarations that use shorthand [the second article gives examples of those techniques and lists browser compatibility]. A good approach to take as a result of this is to start without optmisation techniques and then once you are done, optimise!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2004-10-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css-optmisation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>A few good reasons</title>
		<link>http://gregs.tcias.co.uk/2004/10/21/a-few-good-reasons/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=177</guid>
		<description></description>
		<content:encoded><![CDATA[Last week we had a <a href="http://www.webcredible.co.uk/" title="web usability, credibility, accessibility &amp; SEO">consultancy company</a> [these guys really deserve credit if anything for their almost boundless enthusiasm] come in to deliver their usability and accessibility report for our corporate site. Personally I have been a firm believer in following web standards and building accessible websites for a couple of years now and the problems with our site were obvious to me and a few of the other developers on our team, but there are always some people and/or departments who just don't get it. As a developer you can probably talk at great lengths about why web standards are a good thing (or a bad thing depending on your view point), leaner code, reduced costs, improved search engine ranking, cross device implementations, etc, etc...

The presentation these guys delivered was enlightening, this was the first time I got to play with <a href="http://www.freedomscientific.com/" title="Freedom Scientific Home Page">JAWS</a> (a screenreader). I can only urge, nay implore, anyone who builds websites and believes that accessibility and standards are good thing (and especially those who don't) to close their eyes and listen to how their site works through JAWS: I guarantee you'll be shocked. It's one thing to know about the benefits of standards and accessibility, but an entirely different one to experience them (or more appropriately the lack of them). And the look on the Marketing team's face was priceless.

There were a few things that emerged from this meeting that strengthened the case for standards based markup and accessibility that went beyond the usual arguments. So here in a nutshell are a few of the things that really stuck in my mind:
<ul>
	<li><strong>using lists for navigations:</strong> this is more than just a cool way to implement your site's navigation. As the screen reader worked it's way through our top and secondary level navigation it became immediately clear that as a user you had no idea how many items were in the nav and as a result you simply had to wait until it reached the end. This also amounts to bad usability. By using a list you get the following added benefits
<ol>
	<li>the reader tells you how many items to expect (e.g. 5 list items)</li>
	<li>gives you an indication of where you are within the listing (item 1: home, item 2: about us)</li>
</ol>
</li>
	<li><strong>treating your web page as a document:</strong> by using divs, headers and paragraphs properly, also breaks up the flow of the page accordingly. The consultants demonstrated how visually impaired users access the web, in their toolkit they have an application (sadly didn't catch it's name) that indexes the document and then provides shortcuts based on list information and document headers, thus allowing them to easily jump to the relevant section of the document quickly. Which is very much the same way say you and I read web sites. We scan the site for relevant information and zero in on it. All of sudden the structure nav, sub nav, content (content sections) were completely apparent. And you know what? It also made the document more enjoyable to read.</li>
	<li><strong>using the optgroup tag:</strong> I have used this tag in the past to group information logically together for form drop downs. This is a powerful visual aid for locating information rapidly. For screenreaders and the aforementioned tool, using this tag is a huge bonus, because it again allows users to zero in quickly on the information saught. Imagine a drop down with say 50 options, visually this is quite manageable as you can quick scan. With a screen reader you have to wait until the option you are after has been readout. And we all know that what we are usually looking for is the last option! Let me just add this dimension: for those who have played around with JAWS, you will know this alterego of Sam Recite It can be excruciating to listen to for long periods of time and no one should have to put up with that, so make those drop downs and lists more accessible.</li>
</ul>
Some more food for thought or simply yet another compelling set of reason to do it right. Oh and even though this site validates (mostly) it still leaves a little to be desired when accessed with JAWS.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>177</wp:post_id>
		<wp:post_date>2004-10-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-few-good-reasons</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Secure copy</title>
		<link>http://gregs.tcias.co.uk/2004/10/28/secure-copy/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=178</guid>
		<description></description>
		<content:encoded><![CDATA[Here's a superb way to securely transfer files between two hosts. If you have SSH up and running on two hosts you can use the following command to carry out the transfer.

[code]$ scp &lt;filename&gt; user@remoteHost:/path/to/copy/file/to[/code]

Once you hit return you'll be prompted to provide your password so that you can login and start the transfer.

I have also updated <a href="/linux/de-compressing_files_in_linux.php" title="de-compressing files in linux">de-compressing files in linux</a> demonstrating, how to Gunzip and un-tar in one step.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2004-10-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>secure-copy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>cfeclipse rocks</title>
		<link>http://gregs.tcias.co.uk/2004/10/28/cfeclipse-rocks/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=179</guid>
		<description></description>
		<content:encoded><![CDATA[The more I play with cfeclipse the more I like it. One of the things I was missing were keyboard shortcuts for common actions such as inserting paragraph tags or a &lt;cfquery&gt; tag block. <a href="http://coldflush.blogspot.com/" title="ColdFlush">Neil</a> put me onto snippets and though they are not strictly speaking the same, they are a pretty good substitute. <a href="http://www.spike.org.uk/cfeclipse/space/Snippets" title="Snippets">Spike</a> has put together some good instructions on setting them up. Now with the help of some trigger text and CTRL+j, I can quickly carry out common tasks.

What would be really nice though would the ability to highlight content and be able to surround it with your snippet. On the plus side you can configure them to prompt you to provide values for attributes.

The snippets themselves are held in folders under <em>{eclipse install}/plugins/snips/</em> and if like me you mistakenly create snip packages under the wrong folders or packages, use a file manager to access aforementioned folder and copy the xml files to appropriate location. You'll also need to edit the <em>keyCombos.properties</em>, so re point the trigger text to the right xml file location. For example I had mistakenly created a cfml package under the css one, after moving the folder to the top level of snips I made the following change:

[code]cffu=/css/coldfusion/cffunction.xml[/code]

To

[code]cffu=/coldfusion/cffunction.xml[/code]

The scribble pad is another just awesome feature, because the ability to quickly test some code is such a massive plus. It really is well worth configuring. Again refer to Spike's site for more information on <a href="http://www.spike.org.uk/cfeclipse/space/Scribble+pad" title="Scribble pad">configuring this feature</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2004-10-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfeclipse-rocks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Adding keys to pageant at start up</title>
		<link>http://gregs.tcias.co.uk/2004/11/04/adding-keys-to-pageant-at-start-up/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=180</guid>
		<description></description>
		<content:encoded><![CDATA[We use SSH a lot at work and to speed up the connection process and lessen the number of passwords and pass phrases we need to remember we use <a href="http://www.tartarus.org/~simon/puttydoc/Chapter9.html#C9" title="Chapter 9: Using Pageant for authentication">Pageant</a> as an authentication agent. One of the little niggles was that when re-booting our computers pageant would forget which keys had been added to it's configuration and hence had top be set up again.

But here's how you can fix this annoyance: Create a shortcut in your start up folder for your Pageant executable, save it and then select the shortcuts properties (i.e. right click on the short cut icon and select properties). You should see something like this:

[code]{install path}pageant.exe[/code]

Where install path is the full path to your Pageant executable. Simply amend the entry to include the full path to your public key and append it to end of the entry and put in quotation marks, like such:

[code]{install path}pageant.exe "{install path}id_rsa.ppk"[/code]

Now every single time you log in to your machine Pageant will fire up and prompt you to provide your pass phrase for that key.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2004-11-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adding-keys-to-pageant-at-start-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Tentatively back to BlueDragon</title>
		<link>http://gregs.tcias.co.uk/2004/11/04/tentatively-back-to-bluedragon/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=181</guid>
		<description></description>
		<content:encoded><![CDATA[I have reverted back to BlueDragon (and it's been ticking over for the last week or so), this time running the latest beta. Furthermore I compiled Apache 2 from source and I am glad to report that so far even though new threads are still being created, this time they do seem to get killed again.

The only problem I encountered when migrating the code base was with the ExpandPath() function. For some strange reason it didn't like variables so while this is being resolved I specified the full path to the mach-ii application config folder and removed the ExpandPath function.

UPDATE

After a little digging and with some help from people on the mailing list I ran the following test code:

[code]Request.apppath=<cfoutput>#request.appPath#</cfoutput>
ExpandPath("#request.appPath#")=<cfoutput>#ExpandPath("#request.appPath#")#</cfoutput>
ExpandPath("#request.appPath#config/mach-ii.xml")=<cfoutput>#ExpandPath("#request.appPath#config/mach-ii.xml")#</cfoutput>[/code]

Which returned:

[code]Request.apppath=../../webapps/gregs/
ExpandPath("#request.appPath#")=[per-dir %s] initial URL equal rewritten URL: %s [IGNORING REWRITE]/
ExpandPath("#request.appPath#config/mach-ii.xml")=ï¿½ï¿½ï¿½)aï¿½9%/mach-ii.xml[/code]

Looks like there are some mod_rewrite shenanigans going on. Once I know more I'll be sure to post it. Charlie Arehart <a href="http://www.newatlanta.com/c/products/bluedragon/self_help/archiveSearch/detail?page=1&amp;messageId=77253" title="RE: [BlueDragon] ExpandPath and Linux">did also confirm</a> that there was something curious going on here as he ran a number of test cases against both cfmx and BD (6.1 and 6.2).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date>2004-11-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tentatively-back-to-bluedragon</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>configuring modRewrite for apache on win32</title>
		<link>http://gregs.tcias.co.uk/2004/10/05/configuring-modrewrite-for-apache-on-win32/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=184</guid>
		<description></description>
		<content:encoded><![CDATA[Here's another one that has taken me a while to figure out. I had mod_rewrite working perfectly on this Linux box, but somehow never got it to work properly on Win32. To start off open up your httpd.conf file and un-comment:

[code]LoadModule rewrite_module modules/mod_rewrite.so[/code]

Then locate the following segment:

[code]#
# Each directory to which Apache has access can be configured with respect
# to which services and features are allowed and/or disabled in that
# directory (and its subdirectories).
#
# First, we configure the "default" to be a very restrictive set of
# features.
#
<directory>
Options FollowSymLinks
AllowOverride None
</directory>[/code]

After much tinkering and experimenting I stumbled across the following settings, which after saving and re-starting Apache results in mod_rewrite picking up the rules you set up in your .htaccess file.

[code]<directory>
Options All
AllowOverride FileInfo
</directory>[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date>2004-10-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configuring-modrewrite-for-apache-on-win32</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>More DataGrid header styling</title>
		<link>http://gregs.tcias.co.uk/2004/10/08/more-datagrid-header-styling/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=185</guid>
		<description></description>
		<content:encoded><![CDATA[Two things that I needed to add to my on-going play with my DataGrids, one was to hide a column and the other was to set the width. Hiding isn't so much hiding the column more like removing it. The method for doing this is: removeColumnAt() and the argument passed in is the column number. In the example below I remove the first one (numbering starts with 0).

[as]// Responder function for result
function myRemotingFunciton_Result (result_rs) {
  dg_myDataGridName.removeColumnAt(0) // hide the ID
  dg_myDataGridName.setDataProvider(result_rs);
}[/as]

The other type (setting the width) involves editing a file that I refered to in <a href="http://gregs.teacupinastorm.com/flash/datagrid_headers.php" title="Datagrid headers">a previous post</a>. So if you had the followig code for styling a column in your dataGrid:

[as]import mx.controls.gridclasses.DataGridColumn;
yourDataGridInstanceName.columnNames = ["contactName", "companyName", "contactPhone", "summary"];
//customize column headers
var contactCol:DataGridColumn = yourDataGridInstanceName.getColumnAt(0);
contactCol.headerText = "Contact";[/as]

You'd simply add this to set the width to 120 and then simply save your file:

[as]contactCol.width = 120;[/as]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>185</wp:post_id>
		<wp:post_date>2004-10-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-datagrid-header-styling</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>searching a tar</title>
		<link>http://gregs.tcias.co.uk/2004/10/08/searching-a-tar/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=186</guid>
		<description></description>
		<content:encoded><![CDATA[No not searching a sailor, but here is a nifty little trick. This command looks into an archive, searches for a string (in this case "cfusion-ear") and spits out the results to screen:

[code]gz cat cfmx_61_multiple_instances.tar.gz | tar tf - | grep cfusion-ear[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date>2004-10-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>searching-a-tar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Prompting when leaving the page</title>
		<link>http://gregs.tcias.co.uk/2004/10/08/prompting-when-leaving-the-page/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.4guysfromrolla.com/webtech/100604-1.shtml" title="Prompting a User to Save When Leaving a Page">Over at 4 Guys from Rolla</a> there is a really useful technique that takes advanatge of the  <em>onbeforeunload</em> javascript event to prompt a user that he is leaving a page. The author goes into even more detail on how to use this event to check if any changes were made and then prompt the user to save these or these will be lost. Very neat, though it's worth pointing out, it only works with the latest browser version (inlcusing FireFox 0.9 and higher).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date>2004-10-08 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>prompting-when-leaving-the-page</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>jrun configuration</title>
		<link>http://gregs.tcias.co.uk/2004/10/13/jrun-configuration/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=188</guid>
		<description></description>
		<content:encoded><![CDATA[I have just updated the <a href="/?p=243" title="JRun resources">jrun resources</a> page to include <a href="http://www.robisen.com/index.cfm?mode=entry&amp;entry=FD4BE2FC-55DC-F2B1-FED0717CC1C7E0AF" title="Hung Servers, Java.lang.OutOFMemory errors and Tuning CF JVM">this article by Robi Sen</a>, which discusses ways to overcome  Java.lang.OutOfMemory and Jrun Connection closed messages. In his experience many these messages/erros are down to the Scheduler Service being improperly configured in the jrun.xml file. He also briefly covers tuning the JVM with some good explanations.
<h4>Update</h4>
I have added a new section to the JRun resources page relating to JVM tuning as I realised that I had forgotten (thanks to the above article) to put up a few other links on that topic.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>188</wp:post_id>
		<wp:post_date>2004-10-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jrun-configuration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[Alexei]]></wp:comment_author>
			<wp:comment_author_email>alexei@superdownloads.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.superdownloads.com.br</wp:comment_author_url>
			<wp:comment_author_IP>201.83.19.131</wp:comment_author_IP>
			<wp:comment_date>2007-03-28 07:11:35</wp:comment_date>
			<wp:comment_date_gmt>2007-03-27 20:11:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[dude, the Resources page link is 404....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.teacupinastorm.com/</wp:comment_author_url>
			<wp:comment_author_IP>61.68.98.52</wp:comment_author_IP>
			<wp:comment_date>2007-03-28 10:32:51</wp:comment_date>
			<wp:comment_date_gmt>2007-03-27 23:32:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dude, it's been updated :-)

Thanks for letting me know!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Flushing db connections</title>
		<link>http://gregs.tcias.co.uk/2004/10/13/flushing-db-connections/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[In CF4.5 there used to be a useful function for terminating database connections (which I used most frequently in connection with MS Access databases): cfusion_dbconnections_flush()

However in CFMX 6 this (un-documented) function disappeared. Someone on the CFDJlist asked how you could now achieve the same result. Simon Horwith pointed to the service factory and it was Ray Thompson who kindly provided an example:

[code]
<cflock name="serviceFactory" type="exclusive" timeout="10">
<cfscript>
factory = CreateObject("java", "coldfusion.server.ServiceFactory");
ds_service = factory.datasourceservice;
dsources = ds_service.datasources;
dsources["yourDSN"]["disable"] = "Yes";
ds_service.restart();
</cfscript>
</cflock>
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2004-10-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flushing-db-connections</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[Jeremy]]></wp:comment_author>
			<wp:comment_author_email>jeremy@e-can.eu</wp:comment_author_email>
			<wp:comment_author_url>http://www.e-can.eu</wp:comment_author_url>
			<wp:comment_author_IP>81.246.56.186</wp:comment_author_IP>
			<wp:comment_date>2008-03-13 22:01:36</wp:comment_date>
			<wp:comment_date_gmt>2008-03-13 11:01:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Greg,
Indeed, it was a big problem for me. When wigrating to the MX, all previous code was to reviewed and specially this connection release.
Thanks for this great solution.
It solved all of my db connections.
J.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MySQL table corruption</title>
		<link>http://gregs.tcias.co.uk/2004/10/13/mysql-table-corruption/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=190</guid>
		<description></description>
		<content:encoded><![CDATA[A slight case of panic this morning, The table that provides the content for this site, somehow got corrupted. Thankfully a back up was on hand if the worst came to the worst, but before dropping, re-creating and re-populating I decided to see if there was an easier way to fix up the following error message:

[code]SQL desc `tableName` failed : Can't open file: 'tableName.MYD'. (errno: 145)[/code]

A little googling told me that the table was corrupt and as a result I should attempt to repair it. So I ssh'd in to my server and from the console logged into mysql:

[code]mysql -u dbUserName -p dbName;[/code]

Then simply ran the following instruction:

[code]repair table tableName;[/code]

And hey presto the table was fixed again and the site was up and running! Panic over!

Here are some background info links:
<ul>
	<li><a href="http://dev.mysql.com/doc/mysql/en/REPAIR_TABLE.html" title="REPAIR TABLE Syntax">REPAIR TABLE Syntax</a></li>
	<li><a href="http://dev.mysql.com/doc/mysql/en/Corrupted_MyISAM_tables.html" title="Corrupted MyISAM Tables">Corrupted MyISAM Tables</a></li>
	<li><a href="http://dev.mysql.com/doc/mysql/en/Repair.html" title="How to Repair Tables">How to Repair Tables</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date>2004-10-13 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-table-corruption</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Getting awstats to generate dynamically</title>
		<link>http://gregs.tcias.co.uk/2004/11/04/getting-awstats-to-generate-dynamically/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=191</guid>
		<description></description>
		<content:encoded><![CDATA[I have been using <a href="http://www.awstats.org/" title="Awstats - homepage">awstats</a> for a while now, but never got round to finish configuring awstats to generate charts on the fly. I always kept getting a:

[code]You don't have permission to access /awstats/awstats.pl on this server.[/code]

The problem lay with permissions. Most sources pointed to allowing read and execute for others and group on /usr/local/awstats/wwwroot, instead I discovered they needed to be set on /usr/local/awstats/ so that Apache could read and execute the file.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>191</wp:post_id>
		<wp:post_date>2004-11-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-awstats-to-generate-dynamically</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Using NT Authentication</title>
		<link>http://gregs.tcias.co.uk/2004/11/04/using-nt-authentication/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=192</guid>
		<description></description>
		<content:encoded><![CDATA[Someone asked the question about using jrun.security.NTAuth and how you would log them out. I have only ever used it as an authentication method, i.e. rather than checking against say a database, I would check against the domain controller to verify the user's credentials. So in the context of logging into an application I would check for the existence of a session variable, if not found validate the user submitted credentials against NTAuth and if true I created a session object and that indicated that the user was logged in. To log out simply let the session expire or clear the session structure, pretty simple.

Is this how you use it?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>192</wp:post_id>
		<wp:post_date>2004-11-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-nt-authentication</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Using SSH for tunneling</title>
		<link>http://gregs.tcias.co.uk/2004/11/04/using-ssh-for-tunneling/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=193</guid>
		<description></description>
		<content:encoded><![CDATA[Another question that popped up a few days ago: was about remotely administering a BlueDragon server using the web based console. Now for those who don't know, by default access to the admin console is restricted by only allowing connections to localhost. Which is ideal for people who can gain access to the server itself. Another option is to provide a list or permitted IPs. However there are many people who:
<ol>
	<li>don't have the benefit of having access to server console (directly or by way of say VNC)</li>
	<li>have IP addresses assigned dynamically so they can change from connection to connection and as a result adding them to the config is pointless.</li>
</ol>
A bit of a problem, if it weren't for SSH. If your server has an SSH daemon running (typically OSX/*nix have one by default) then this is the solution to many of your remote administration headaches and security concerns. The principle is simple create an SSH connection to your remote server and use that connection to piggy back on to reach local services securely. Surprisingly a few people have been missing this solution, which is presented in the BD install Guide (chapter 6.2). Do have a read and check out <a href="http://www.jfitz.com/tips/putty_config.html" title="Configuring PuTTY - A step-by-step guide">this resource</a>, which shows how to set up and <a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/" title="PuTTY Documentation Page">Putty (a ssh client)</a> and configure ssh tunnels.

The example provided is for accessing your e-mail but here are the connection details for using ssh tunnel to access your BD administrator. Open up Putty and set up your SSH connection as per the instruction mentioned above. Then click on Tunnels (Connection/SSH/Tunnels). Make sure the local radio button is selected. In the Source port form field enter 8080 and in the destination field add localhost:8080. Go back to your session option and save your settings. Fire up your connection and now all browser requests for http://localhost:8080/ will be directed through your SSH connection to your remote server.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date>2004-11-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-ssh-for-tunneling</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Another handy command</title>
		<link>http://gregs.tcias.co.uk/2004/12/05/another-handy-command/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=194</guid>
		<description></description>
		<content:encoded><![CDATA[Been doing heaps more *nix work recently, though a lot of it is still mistifying me, I can safely say: no regrets in doing the switch.

Anyway, here's how you can in one swoop create new directories and sub-directories:

[code]mkdir -p someFolder/someOtherFolder/andAnotherFolder[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date>2004-12-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>another-handy-command</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Why use graceful</title>
		<link>http://gregs.tcias.co.uk/2004/12/05/why-use-graceful/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=195</guid>
		<description></description>
		<content:encoded><![CDATA[If like me you have ever wondered why you should use:

[code]{Path to}/apachectl graceful[/code]

Instead of restart, then consider these simple but very good reasons to do so: graceful executes config test to see if any errors are present in your httpd.conf file. If there are the process is aborted (to be precise the parent process is aborted, but your child processes keep on running [until they finish serving their last request]) and you are notified of the problems. If everything is OK, then the server re-starts, but it's also very clever in that it tells child processes to finish serving requests before restarting (i.e. re-loading the config file) thus ensuring continuity of service for your end users.

So the best thing to do really is to:
<ul>
	<li>check your config file using {Path to}/httpd -t</li>
	<li>then use {PathTo}/apachectl graceful</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date>2004-12-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-use-graceful</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JRun start up scripts</title>
		<link>http://gregs.tcias.co.uk/2004/12/05/jrun-start-up-scripts/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=196</guid>
		<description></description>
		<content:encoded><![CDATA[To facilitate the start up of several of our instances I have, with [much] help of our Unix gurus, created a bash script that fires up several instances and loads seperate jvm.config files up for the instances in question. The start script looks like follows:

[code]
!/bin/sh
#
# set env (used for both start &amp; stop)
#
# Do not run as root
#
if [ `/usr/xpg4/bin/id -u` -eq 0 ]
then
echo "***************************************"
echo "** This script will not run as root. **"
echo "***************************************"
echo ""
echo "You probably want to try:"
echo "su fusionUser -c $0"
echo ""
exit 1
fi

cat /dev/null &gt; /tmp/jrun.out

if [ $# -eq 0 ]
then
servers='instance1 instance2 instance3 instance4'
else
servers=$@
fi

echo "Starting $servers..."

# loop over our array
for server in $servers; do
# if the jvm file exists set it
if [ -f $JRUN_HOME/bin/jvm.config_$server ]; then
JVM_CONFIG=$JRUN_HOME/bin/jvm.config_$server
else
# else set the default one
JVM_CONFIG=$JRUN_HOME/bin/jvm.config
fi
# start the instances
$JRUN_HOME/bin/jrun -start -config $JVM_CONFIG $server &gt;
/tmp/jrun-$server.out 2&gt;&amp;1 &amp;
echo "Sleeping for 10 seconds... time for BGT"
sleep 10
done
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>196</wp:post_id>
		<wp:post_date>2004-12-05 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jrun-start-up-scripts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Race conditions</title>
		<link>http://gregs.tcias.co.uk/2004/12/14/race-conditions/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/2004/12/14/race-conditions/</guid>
		<description></description>
		<content:encoded><![CDATA[Again an enlightening thread, this time on the BD mailing list discussing race conditions or put more simply when to lock. Spike put up an example of how a race condition might occur:

[code]
<cfparam name="application.initialised" type="boolean" default="false"/>
<cfif NOT StructKeyExists(application,"initialised")>
<!--- do some initialisation here --->
<cfset application.initialised="true"/>
</cfif>
[/code]

While on say the first request the &lt;cfset&gt; is taking place another request might come in checking if application.initialised is true before the set has completed thus leading the second request to believe that it's not initialised and hence needs to be. This is known as a race condition. To circumvent this you would &lt;cflock&gt; (with a type exclusive) the &lt;cfset&gt;, effectively locking access completely to application.initialised until it's completed the request.

[code]
<cfparam name="application.initialised" type="boolean" default="false"/>
<!--- Check if we are already initialised --->
<cfif NOT StructKeyExists(application,"initialised")>
<!--- Put an exclusive lock inside the first if block to ensure that
we only make the request single threaded if the application is not yet
initialised --->
<cflock type="exclusive" scope="application" timeout="10">
<!--- If a second request got past the initialisation check before
the first had finished initialising this will stop it from running the
initializing code again --->
<cfif NOT StructKeyExists(application,"initialised")>
<!--- do some initialisation here --->
<cfset application.initialised="true"/>
</cfif>
</cflock>
</cfif>[/code]

Thanks Spike!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>197</wp:post_id>
		<wp:post_date>2004-12-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>race-conditions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>cfml based design patterns a gogo</title>
		<link>http://gregs.tcias.co.uk/2004/12/15/cfml-based-design-patterns-a-gogo/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=198</guid>
		<description></description>
		<content:encoded><![CDATA[Scott and Joe have been busy posting a flurry of information on both Mach-ii and then more generally speaking Design Pattern, all of this of course in the context of ColdFusion.
<ul>
	<li><a href="http://www.mossyblog.com/archives/366.cfm\" title="My Mach-II survival guide">My Mach-II survival guide</a>, which is an overview of Mach-ii and some of Scott's coding practices.</li>
	<li><a href="http://www.mossyblog.com/archives/362.cfm" title="Do you know what a Bean is?">Do you know what a Bean is?</a> - as the title suggests an overview of Beans and an introduction to the Composite Bean pattern.</li>
	<li><a href="http://www.clearsoftware.net/client/index.cfm?mode=entry&amp;entry=B8923470-E081-2BAC-692C3F1E1F822A08" title="Pretty Practical Pattern Post">Pretty Practical Pattern Post </a>, Joe reviews an application/demo he recently built and discusses the patterns (<a href="http://www.clearsoftware.net/client/index.cfm?mode=entry&amp;entry=3D1115E7-E081-2BAC-6953DA4394855DDB" title="Be a DAO Disciple">DAO</a>, Gateway [these two fall under the data patterns], <a href="http://www.clearsoftware.net/client/index.cfm?mode=entry&amp;entry=89F69AD3-E081-2BAC-695BECE0066A7203" title="Learn to Love the Factory Method Pattern">Factory Method</a>, Abstract Factory Method [and these fall under the Creational Pattern category], Facade [a structural pattern], Beans and TOs) and their implementation.</li>
</ul>
<h4>UPDATE</h4>
And in the december issue of CFDJ Hal has written up an introduction to the <a href="http://www.sys-con.com/story/?storyid=47450&amp;DE=1" title="Designer Coffee and the Decorator Pattern">decorator pattern</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>198</wp:post_id>
		<wp:post_date>2004-12-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfml-based-design-patterns-a-gogo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Italicise your unread firefox tabs and other bits</title>
		<link>http://gregs.tcias.co.uk/2004/12/20/italicise-your-unread-firefox-tabs-and-other-bits/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=199</guid>
		<description></description>
		<content:encoded><![CDATA[Stumbled across this neat little entry (courtesy of a blog entry on <a href="http://www.javablogs.com/Welcome.action" title="Welcome to the java.blogs community!">javablogs.com</a>), which allows you to modify the userChrome.css file to have your unread tabs italicised (and/or colour). Simple and effective. The details can be found <a href="http://kb.mozillazine.org/index.phtml?title=Change_the_style_of_tab_markers" title="Change the style of tab markers">here</a>. The easiest way is to grab a copy of the <a href="https://addons.update.mozilla.org/extensions/moreinfo.php?application=firefox&amp;id=17&amp;vid=1028" tite="ChromEdit 0.1.1.1">ChromEdit  extension</a> and edit the userChrome.css file. Scroll to the end of the file and paste in the following code to italicise unread tabs:

[code]
/* Italicise the title of unread tabs */
#content tab {
font-style: italic !important;
}

/* Normalise the title of selected tab */
#content tab[selected="true"] {
font-style: normal !important;
}

/* Normalise the title of read unselected tabs */
#content tab[selected="false"] {
font-style: normal !important;
}[/code]

Note you'll need to re-start FireFox once to load the ChromEdit extension and another time to have the style sheet take effect.

And over at DevNulled there is a good post on <a href="http://devnulled.com/archives/2004/12/how_to_make_firefox_faster.php">how to speed up FireFox</a>. Be warned though: it really does increase the load of the server you are trying to connect to, which strictly speaking isn't very polite.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2004-12-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>italicise-your-unread-firefox-tabs-and-other-bits</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Cross-Column Pull-Outs</title>
		<link>http://gregs.tcias.co.uk/2004/12/22/cross-column-pull-outs/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=200</guid>
		<description></description>
		<content:encoded><![CDATA[Pretty cryptic sounding title but this ALA article shows <a href="http://www.alistapart.com/articles/crosscolumn/" title="Cross-Column Pull-Outs">how to create column layout</a>, that will wrap around say an image (something the print world heavily relies on). Pretty neat, though they are some issues, i.e. it does not work on a Mac (IE 5.2) and the technique requires additional markup elements that could put off developers who believe in semantic markup.
<h4>Plus</h4>
The folks over at Couloir <a href="http://www.couloir.org/js_slideshow/" title="Couloir.org: Resizing, Fading Slideshow Demo">have done it again</a>. Not satified with developing a fading image solution using JavaScript, they have released another JavaScript slide show with re-sizes based on the image's width and height. And the photos are amazing...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date>2004-12-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cross-column-pull-outs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>BlueDragon, Apache2 and Debian</title>
		<link>http://gregs.tcias.co.uk/2005/01/06/bluedragon-apache2-and-debian/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=201</guid>
		<description></description>
		<content:encoded><![CDATA[Here's an an update on how to configure Debian (sarge) with apache 2.0.52 (installed using apt-get). The symbolic links that need to be created differ a little from the ones that you needed to apply if you were using Woody with Apache 1.3.29 (<a href="http://gregs.teacupinastorm.com/wp-admin/?http://gregs.teacupinastorm.com/bluedragon/bluedragon_on_debian.cfm?" title="?BlueDragon">see my previous post</a>):

[code]
ugg:/etc# mkdir -p /usr/local/apache
ugg:/etc# ln -s /etc/apache2 /usr/local/apache/conf
ugg:/etc# ln -s /var/www/apache2-default/ /usr/local/apache/htdocs
ugg:/etc# ln -s /usr/lib/apache2/modules/ /usr/local/apache/libexec
ugg:/etc# ln -s /usr/lib/apache2/modules/ /usr/local/apache/modules
ugg:/etc# mkdir -p /usr/local/apache/bin
ugg:/etc# ln -s /usr/sbin/apache2 /usr/local/apache/bin/httpd
[/code]

Now you should be able to simply run the install script for BlueDragon, however I experienced a slight hiccup. When restarting Apache (using: using /usr/sbin/apache2 -k graceful), I received the following error message:

[code]
Invalid command 'ServletExecInstances', perhaps mis-spelled or defined by a module not included in the server configuration
[/code]

I realised I had forgotten to start to BlueDragon, but that wasn't the cause of that error. So I removed the web server adapter using BD admin, restarted apache gracefully to make sure everything was still OK. The re-installed the web server adapter and re-started apache once more, still one problem though:

[code]
Syntax error on line 6 of /etc/apache2/httpd.conf:
Cannot load /etc/apache2/modules/mod_servletexec2.so into server: /etc/apache2/modules/mod_servletexec2.so: cannot open shared object file: No such file or directory
[/code]

So simply copy over mod_servletexec2.so from {your BD install path}/NewAtlanta/BlueDragon_Server_62/bin/apache/ to your apache modules folder and since my installation of Apache was looking in /etc/apache2/modules I created another symbolic link:

[code]
ugg:/etc/apache2# ln -s /usr/lib/apache2/modules /etc/apache2/modules
[/code]

And after a quick graceful restart for Apache, it was all running smoothly!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date>2005-01-06 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bluedragon-apache2-and-debian</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>cfoop</title>
		<link>http://gregs.tcias.co.uk/2005/01/06/cfoop/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[New Year, first post and a new category added to this site

Well 2005 certainly has started with a bang in terms of CFOOP if the first few posts of the year are anything to go by. ColdFusion Object Oriented programming is on the rise and rightfully so and I am pleased to see the endorsements coming from so many good people. This has been blogged about before but for the sake of my sieve like memory here are the links again to a couple of excellent posts:
<ul>
	<li><a href="http://www.mattwoodward.com/blog/index.cfm?mode=entry&amp;entry=43C9FCF7-5070-3118-2D88DB4327650927" title="What's an object">What's an object</a> is Matt Woodward's gentle but thorough introduction to an object as it relates to CF (all the while also giving you knowledge of what an object is in OOP terms in a wider context)</li>
	<li>Joe's post "<a href="http://clearsoftware.net/client/index.cfm?mode=entry&amp;entry=4492E3A9-E081-2BAC-6969DBF6739A5A92" title="CFCs, Cohesion, and Where I've Gone Wrong">CFCs, Cohesion, and Where I've Gone Wrong</a>" takes a look at developing objects, common mistakes made when setting out on the OOP path and what he did to fix these.</li>
</ul>

Both authors deserve praise for two excellent posts.
Incidentally anyone know what has happened to <a href="http://www.cfoop.com/">cfoop.com</a>?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date>2005-01-06 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfoop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Looping over a structure using cfscript</title>
		<link>http://gregs.tcias.co.uk/2004/11/10/looping-over-a-structure-using-cfscript/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=209</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.informit.com/articles/article.asp?p=24125&amp;seqNum=4">Stumbled across this little bit of code</a>, that shows how to loop over a structure using &lt;cfscript&gt;.

[code]<cfscript>
// create the structure
strProducts = StructNew();</cfscript>

// populate the structure
strProducts.Name = "Core ColdFusion 5";
strProducts.Price = "44.95";
strProducts.ISBN = "0119299377";

// loop over it and output the key-value pair
for (idx in strProducts) {
WriteOutput("#idx# is #strProducts[idx]#");
}
</cfscript>[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>209</wp:post_id>
		<wp:post_date>2004-11-10 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>looping-over-a-structure-using-cfscript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>MySql heads up</title>
		<link>http://gregs.tcias.co.uk/2004/11/11/mysql-heads-up/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[Here are a few bits and pieces that I have gleaned over the last few months. To add foreign language character support to MySQL for CMFX or BD, you'll need to add the following to your DSN connection string:

[code]useUnicode=true&amp;characterEncoding=ISO8859_1[/code]

I have wondered but never bothered to find out what the differences were between MyISAM and InnoDB is. Well if you need transaction or foreign key support then InnoDB is the way to go. If not and speed is of the essence the MyISAM should be the way to go. You should know that InnoDB is by no means slow though.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2004-11-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-heads-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Default CSS</title>
		<link>http://gregs.tcias.co.uk/2004/11/11/default-css/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[Hat tip to the webreference news letter which pointed me to an article over at builder.com, which looks at default stylesheets. I did not realise that most browsers have an in-built default style sheet that helps control the default behaviour of html pages (such as hiding the head tag or by default all tags should be displayed as block elements [which if removed amusingly displays everything in-line]). It goes on to point to several sources (<a href="http://www.meyerweb.com/eric/thoughts/2004/09/" title="Really Undoing html.css">Eric Meyer</a>, <a href="http://tantek.com/log/2004/undohtml.css" title="undohtml.css">Tantek</a> and <a href="http://leftjustified.net/journal/2004/10/19/global-ws-reset/" title="Global White Space Reset">Andrew Krespanis</a>) who have looked more closely at the html.css default browser stylesheet (this is the default stylesheet for FireFox I believe) and carried various little experiments.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date>2004-11-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>default-css</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Query-columnList udpate</title>
		<link>http://gregs.tcias.co.uk/2004/11/11/query-columnlist-udpate/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=213</guid>
		<description></description>
		<content:encoded><![CDATA[A while back I blogged about query.columnList and how in CFMX the list is returned ordered alphabetically, which was a slight nuisance at the time. Just recently someone posted an SQL statement that fixed this problem (beware it is vendor dependant):

[code]SELECT t.column_name FROM all_tab_columns t WHERE t.table_name='TABLE_NAME'[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date>2004-11-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>query-columnlist-udpate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Trapping the enter key</title>
		<link>http://gregs.tcias.co.uk/2004/11/11/trapping-the-enter-key/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=214</guid>
		<description></description>
		<content:encoded><![CDATA[A requirement arose whereby I needed to trap the user hitting the enter key to submit a form. Courtesy of the <a href="http://www.flash-lists.com/" title="Flash Developer Mailing List archives">Flash List</a> here is the code in question, just remember to place it in your init() statement:

[as]// special listener to trap to enter key
myReturnKey = new Object();
myReturnKey.onKeyDown = function (){
  var _$key = Key.getCode();

  //   now check for when ENTER is pressed
  if (_$key == 13) {
    // enter key was pressed go do something
  }
}
Key.addListener(myReturnKey);[/as]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date>2004-11-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>trapping-the-enter-key</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>273</wp:comment_id>
			<wp:comment_author><![CDATA[kevin186]]></wp:comment_author>
			<wp:comment_author_email>kevin@webyxorp.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.webyxorp.info</wp:comment_author_url>
			<wp:comment_author_IP>71.239.240.255</wp:comment_author_IP>
			<wp:comment_date>2008-03-27 14:42:40</wp:comment_date>
			<wp:comment_date_gmt>2008-03-27 03:42:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thank you. i have been trying to figure this out for a while. my friend complained that he couldnt press enter to submit my flash form, so i had to fix it. he is my test subject who represents the "bitchy" internet users who expects every site to be perfect or else it doesnt deserve his attention. thanks again. bookmarked!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rendering text as HTML</title>
		<link>http://gregs.tcias.co.uk/2004/11/11/rendering-text-as-html/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=215</guid>
		<description></description>
		<content:encoded><![CDATA[When populating text fields (Text tool/Dynamic text/instanceName) based on the results from a query you normally

[as]_root.instanceName.text = yourResult;[/as]

However one recent scenario asked for the field to be a mailto link and here's how you set the field in question to display as HTML rather than straight text.

[as]_root.instanceName.html = true;
_root.instanceName.htmlText = '<a href="mailto:%20%27+yourResult+%27">' + yourResult + '</a>';[/as]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>215</wp:post_id>
		<wp:post_date>2004-11-11 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rendering-text-as-html</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Alert box</title>
		<link>http://gregs.tcias.co.uk/2004/11/15/alert-box/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=216</guid>
		<description></description>
		<content:encoded><![CDATA[There are a few things when building UI's in Flash MX 2004 that simply make me scratch my head in wonder. Take the neat little Alert box as an example, here is the code I use to invoke it:

[as]var myAlert = mx.controls.Alert;
// Set the button labels up
myAlert.yesLabel = "OK";
// set the alert display
myAlert.show("Sorry no results were found. Please try again.", "Warning", Alert.YES,null, dmcClicklHandler,Alert.YES);[/as]

This as far as I understand it should create a small alert box and display my warning message. But no, instead it errors until I drag one of the alert components onto my screen and re-compile the movie. Of course compiling the little movie will display this new alert box and my action script based one. So back I go, delete the dragged on component, re-compile and hey presto creating one now with ActionScript is a breeze. Go figure, why you need to drag one onto your screen and then delete it before you can create them using ActionScript.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date>2004-11-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>alert-box</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>274</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan L]]></wp:comment_author>
			<wp:comment_author_email>djrhino@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.90.249.205</wp:comment_author_IP>
			<wp:comment_date>2007-09-19 00:07:03</wp:comment_date>
			<wp:comment_date_gmt>2007-09-18 13:07:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can't use the alert component until it is your flash project's library. Dragging the component onto the stage adds it to your library. You could simply drag the alert component from the components window to the library window to avoid a step too.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Apache tuning</title>
		<link>http://gregs.tcias.co.uk/2004/11/30/apache-tuning/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=217</guid>
		<description></description>
		<content:encoded><![CDATA[Courtesy of <a href="http://devnulled.com/archives/2004/11/apache_http_server_tuning_techniques.php" title="Apache HTTP Server Tuning Techniques">Dev Nulled</a> a handy link to the O'Reilly site about <a href="http://www.onlamp.com/pub/a/onlamp/2004/02/05/lamp_tuning.html" title="Introducing LAMP Tuning Techniques">Apache fine tuning (well Lamp [Linux/Apache/MySQL and PHP] tuning)</a> but it really looks closely at ways to improve your Apache settings and discusses some of the reasons behind the memory and CPU usage you can see when monitoring your web server.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>217</wp:post_id>
		<wp:post_date>2004-11-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apache-tuning</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Alert box styling</title>
		<link>http://gregs.tcias.co.uk/2004/11/30/alert-box-styling/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=218</guid>
		<description></description>
		<content:encoded><![CDATA[Since the component inherits properties and methods from both UIObject and UIComponent. A quick scan of the available options shows that you can control a wide variety of options. My goal was to change the default height and width of the actual alert box and the size of the buttons to accommodate some of the display text. To set the size of the alert box you use a method from UIObject like such:

[code]yourAlertInstance.setSize(width, height);[/code]

Now for the buttons. Here you don't need to access any inherited methods instead you can use the buttonHeight and buttonWidth properties, like such:

[code]yourAlertInstance.buttonWidth = 150;
yourAlertInstance.buttonWidth = 30;[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2004-11-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>alert-box-styling</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>JavaScript image slides</title>
		<link>http://gregs.tcias.co.uk/2004/11/30/javascript-image-slides/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=219</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.couloir.org/" title="(2004) Biking on Molas Pass - Mountain Photos at Couloir.org">Couloir</a> presents an image slide show with opaque/fade image loading, the coup, no Flash. And <a href="http://clagnut.com/sandbox/imagefades/" title="Onload image fades without Flash">Clagnut shows us how it's done</a>! Very neat! Hat tip to <a href="http://www.zeldman.com/daily/1104b.shtml" title="Jeffrey Zeldman Presents The Daily Report">Zeldman</a>!

And while we are on the topic of CSS, why not have a look at <a href="http://www.quirksmode.org/" title="QuircksMode.org">QuircksMode.org</a>, which has an awesome collection of CSS bugs, examples and workarounds (again with examples). Peter-Paul Koch has compiled over 150 pages of tips and tricks.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2004-11-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-image-slides</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Googed</title>
		<link>http://gregs.tcias.co.uk/2004/11/30/googed/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=220</guid>
		<description></description>
		<content:encoded><![CDATA[A few days back I got a message from <a href="http://blog.daemon.com.au/" title="Daemonite: the MX Technology blog of TeamDaemon">Geoff Bowers</a> letting me know that I have been added to <a href="http://www.fullasagoog.com/" title="fullasagoog: Rich Internet Application Goodness">FullAsAGoog</a>. If you haven't been here before, welcome!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date>2004-11-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>googed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Ooh Skype</title>
		<link>http://gregs.tcias.co.uk/2005/01/17/ooh-skype/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[I just re-installed everything on my home workstation and tried to install Apache 2.052 on it and the install kept failing while trying to install the service with the following message:

[code](OS 10048)Only one usage of each socket address (protocol/network address/port) is normally permitted. : make_sock: could not bind to address 0.0.0.0:80
no listening sockets available, shutting down
Unable to open logs
Note the errors or messages above, and press the <esc> key to exit. 10...</esc>[/code]

Checked the list of services running, no sign of an httpd daemon, no sign of IIS. After a few botched attempts at un-installing and re-installing I remembered the netstat command and with the help of the following command:

[code]netstat -ab[/code]

I got a list of all ports that were in use and their associated applications. It turns out that Skype had bound to that address. I stopped <a href="http://www.skype.com/" title="Free Internet telephony that just works">Skype</a> (if you haven't heard of it, go check it out it's a nifty Internet telephony ap) and installed the service again using:

[code]apache -k install -n "Apache 2"[/code]

Using the apache monitor I was able to start apache and it's all working like a treat.

BTW Skype by default listens on port 80 for "alternative incoming connections" you can uncheck this option quite safely as it should use the user defined port (which is apparently randomly selected at install time).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2005-01-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ooh-skype</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Wearing an IA hat</title>
		<link>http://gregs.tcias.co.uk/2005/03/30/wearing-an-ia-hat/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=113</guid>
		<description></description>
		<content:encoded><![CDATA[I have just found myself in the position where I have to wear an IA hat for a couple of days and it's one that I haven't worn in many years. But in the recesses of my brain I remembered there were a whole bunch of Visio stencils out there that could really help put your thoughts to paper (so to speak). Since I never blogged about them before here goes:
<ol>
	<li>Jesse James Garrett's "<a href="http://www.jjg.net/ia/visvocab/" title="A visual vocabulary for describing information architecture and interaction design">A visual vocabulary for describing information architecture and interaction design</a>".</li>
	<li>Michael Angeles' <a href="http://urlgreyhot.com/resources/visio_wireframe_stencil.php" title="Visio Wireframe Stencil">Visio Wireframe Stencil</a></li>
	<li>From the <a title="Information Architecture for Designers: Structuring Websites for Business Success">Information Architecture for Designers: Structuring Websites for Business Success</a> book, another <a href="http://iabook.com/template.htm" title="Information Architecture Deliverables">set of stencils</a> for wireframes and an isometric site map.</li>
	<li>Nick Finck provides another set of <a href="http://www.nickfinck.com/stencils.html" title="Visio Stencils for Information Architects">wireframe, sitemap and process flow stencils</a></li>
	<li>this set of stencils is extremely useful for <a href="http://www.guuui.com/issues/02_03_02.php" title="Visio - the interaction designer's nail gun">user interface prototyping</a>.</li>
</ol>
Also if you want more information on using Visio for IA work I can seriously recommend reading up on Dan Brown's series of articles on <a href="http://www.boxesandarrows.com/archives/opening_pandoras_box_special_deliverable_1.php" title="Special Deliverable">Special Deliverable</a> (Boxes and Arrows in general is a pretty useful resource for all things IA as is <a href="http://iainstitute.org/" title="The Information Architecture Institute">The Information Architecture Institute</a>).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date>2005-03-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wearing-an-ia-hat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Silence is golden</title>
		<link>http://gregs.tcias.co.uk/2005/05/26/silence-is-golden/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=114</guid>
		<description></description>
		<content:encoded><![CDATA[Apologies for the long long pause in posting any updates to this site, but between some pretty heavy project work, planning our move back to Australia, leaving my current job, finding some short term contract work, re-building the CMS for this site (&amp; v2 is nearly ready as a matter of fact this post was submitted using it), investing way too many hours in playing <a href="http://www.worldofwarcraft.com/" title="World of Warcraft">Wow</a>, dealing with a compromised server and enjoying the first signs of summer here in the UK, I just haven't found a moment to post. It doesn't mean that I haven't figured out anything new or haven't stumbled across interesting posts and sites, as a matter of fact I have... tons of them... so hopefully there should be a deluge of posts coming real soon, starting right now!

Oh and did I mentioned we are moving back to Australia?? :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date>2005-05-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>silence-is-golden</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>man pages - quickly locating switches</title>
		<link>http://gregs.tcias.co.uk/2005/05/27/man-pages-quickly-locating-switches/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=115</guid>
		<description></description>
		<content:encoded><![CDATA[Man pages are just a great way to find out information about the commands and their various switches on *nix based systems. One thing that has always slightly bothered me though was when you had really long man pages and were looking for a specific switch and it's associated information you needed to page through all of the information. But as I just found out, you don't have to. While reading the man page simply type: /-Z (where -Z is the switch you want to look up) and you'll jump straight to the information you were looking for.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date>2005-05-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>man-pages-quickly-locating-switches</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>find is your friend - dos2unix</title>
		<link>http://gregs.tcias.co.uk/2005/05/27/find-is-your-friend-dos2unix/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=116</guid>
		<description></description>
		<content:encoded><![CDATA[Here a few ways to remove those pesky windows carriage return characters from your scripts that you run into when migrating from a windows environment to a *nix. From the command line to recursively carry out this task you can type:

<code>[code]find -type f <your> | xargs dos2unix[/code]</your></code>

Where dos2unix is the utility that actually carries out the conversion. If you are using vi to edit a file then you can achieve this conversion as well by escaping and typing the following (note the square brackets and their contents represent keyboard strokes):

<code>[code]:%s/[ctrl+v][return]//g[return][/code]</code>

This is a regexp type command that tells vi to select the entire file (%) and search (s/) for carriage returns ([ctrl+v][return]) and do a global replace (/g) with non windows return code ([return]).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date>2005-05-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>find-is-your-friend-dos2unix</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Starting up my dev environment</title>
		<link>http://gregs.tcias.co.uk/2005/05/27/starting-up-my-dev-environment/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=117</guid>
		<description></description>
		<content:encoded><![CDATA[I got a bit tired of starting apache, BlueDragon and Eclipse from the command line every morning so I wrote a quick and dirty bash script that I could leave running while I went off to grab a cup of coffee. Maybe someone else will find this useful as well (requires <a href="http://www.cygwin.com/" title="Cygwin Home">cygwin</a>):

<code>[code]echo "Changing to usb flash drive"
cd /cygdrive/e/
echo "Starting apache"
./Apache\ Group/Apache2/bin/apache &amp;
sleep 5
echo "Starting BlueDragon"
./BlueDragon_Server_JX_62/bin/StartBlueDragon.bat &amp;
sleep 5
echo "Starting eclipse"
./eclipse/eclipse &amp;[/code]</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2005-05-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>starting-up-my-dev-environment</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Eclipse start up options</title>
		<link>http://gregs.tcias.co.uk/2005/05/27/eclipse-start-up-options/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=118</guid>
		<description></description>
		<content:encoded><![CDATA[Atfer playing around a little with my USB drive I somehow managed to stuff up Eclipse and every time I attempted to start it, it would crash with an out of memory error. Eventually <a href="http://help.eclipse.org/help21/index.jsp?topic=/org.eclipse.platform.doc.user/tasks/running_eclipse.htm" title="Running Eclipse">I read that you can use the "-refresh" option</a> if you start eclipse from the command line to perform a global refresh of your workspace. The first time I tried this it had no effect, only after I deleted the contents of .metadata folder was the problem fixed by using this start up option.

Another issue I stumbled across was that not all of the plugins I had installed were showing up. Starting up eclipse with "-clean" forced eclipse to reload the plugins and XML buddy which was missing was now available again.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>118</wp:post_id>
		<wp:post_date>2005-05-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eclipse-start-up-options</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Big pause</title>
		<link>http://gregs.tcias.co.uk/2005/01/17/big-pause/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=124</guid>
		<description></description>
		<content:encoded><![CDATA[There'll be a long pause for the next month or so. By the time you read this I'll be sat in plane on my way to Oz for a whirlwind tour taking in Brisbane, the Gold Coast, Melbourne, Wollongong and Perth, a couple of weddings and catching up with friends and family whom I haven't seen for two years now. Needless to say I am very excited!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date>2005-01-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>big-pause</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>ifModule</title>
		<link>http://gregs.tcias.co.uk/2005/02/23/ifmodule/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=125</guid>
		<description></description>
		<content:encoded><![CDATA[Been meaning to post this for quite a while and a recent post on the BlueDragon mailing list reminded me to do so. Using the IfModule statement in your httpd.conf, you can check whether modules have been loaded and then carry out further configuration. Below is a sample of my httpd.conf for use with BlueDragon.

[code]
<ifmodule>
ServletExecInstances default 127.0.0.1:9999
ServletExecAliases default /servlet servlet .jsp .cfc .cfm .cfml
<location>
SetHandler servlet-exec
</location>
AddHandler servlet-exec jsp
AddHandler servlet-exec cfc
AddHandler servlet-exec cfm
AddHandler servlet-exec cfml
</ifmodule>
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date>2005-02-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ifmodule</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFMX7</title>
		<link>http://gregs.tcias.co.uk/2005/02/23/cfmx7/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=127</guid>
		<description></description>
		<content:encoded><![CDATA[Well I just got my hands on a copy of CFMX7 and like most CFML'ers eagerly proceeded to install the latest addition to the ColdFusion server family onto my windows development machine. This, sadly, turned out to be more painful than it really ought to be. Like many others, I encountered the "Please select another location to install to" after launching the installer. The root cause apparently a corrupted download. Hmm so much for first impressions. A couple more attempts at downloading the installer and still the same problem.

Since I already had JRun 4 running on my dev machine I decided to try deploying cfmx 7 as a J2EE application and proceeded to download the jar file of CFMX7. This approach proved to be far more successful. One note to the unwary make sure the folder names where your JRun install may reside do not have spaces in them. The JMC may run fine but you instances won't start up.

Once downloaded simply double click on the downloaded jar file to start the process, which should start the installer. All this really does is create a CFMX folder with instructions on deploying CFMX 7 and the cfusion.ear file (if you chose the ear option when you ran the installer). Please note: I am not making use of RDS so these instructions don't include hints for deploying RDS, the ReadMe generated by the installer covers this. All the instructions below can also be found in ReadMe I just mentioned.
<ol>
	<li>Go to the command line, and go to your directory that contains the EAR file you just created with the installer and make a new directory named cfusion-ear</li>
	<li>Change to the cfusion-ear directory and expand the cfusion.ear file with the jar command: "{path to Java home}/bin/jar -xvf ../cfusion.ear". This expands the cfusion.ear file into cfusion-ear</li>
	<li>In cfusion-ear, make a new directory named cfusion-war and change to it, now expand the cfusion.war file using the jar command again: {path to Java home}/bin/jar -xvf ../cfusion.war</li>
	<li>Go back to your cfusion-ear folder, and delete the cfusion.war file</li>
	<li>Open the cfusion-ear/META-INF/application.xml file in a text editor and change the web-uri element from cfusion.war to cfusion-war. Save your changes.</li>
</ol>
Now you have a fully configured cfmx ear, which you can easily deploy on your J2EE server of choice. The process is the same as with creating CFMX 6.1 instances, i.e. (and I assume you are using JRun)
<ol>
	<li>Create a new server instance using the JMC</li>
	<li>Start the instance and then un-deploy the Flash Remoting EAR.</li>
	<li>Stop the instance again and navigate to the instance folder {path to Jrun}\JRun4\servers\{instance name}</li>
	<li>Delete default-ear and copy over your cfusion-ear</li>
	<li>Now restart your newly created instance and CFMX will be deployed.</li>
</ol>
Now all that you need to do is configure your instance to talk to your web server and you are done. As I said in the beginning, it's not as smooth as it could be. The corrupted downloads really are a nuisance and really dampen an otherwise exciting prospect.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>127</wp:post_id>
		<wp:post_date>2005-02-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmx7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Normal service is resuming</title>
		<link>http://gregs.tcias.co.uk/2005/02/23/normal-service-is-resuming/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=128</guid>
		<description></description>
		<content:encoded><![CDATA[Four weeks after departing the cool shores of the UK for the warm climes of Australia we are back. Greeted by snow on our first day back at work. After the warmth, all I can say is too harsh...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date>2005-02-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>normal-service-is-resuming</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Dynamic text with action script</title>
		<link>http://gregs.tcias.co.uk/2005/02/23/dynamic-text-with-action-script/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=129</guid>
		<description></description>
		<content:encoded><![CDATA[Here's how you can quickly create one or more text fields using ActionScript for you flash applications. I start off by defining the style (lines 2-6 in the code at the end of this post), which will be applied to the text fields. On line 8 a new text field is defined. The arguments for this method are follows:

[as]movieClip.createTextField(instanceName, depth, x, y, width, height)[/as]

Of note is the depth argument, because if you want to add more than one text field you need to increment that value by one, else every additional field will overwrite the current one. Thankfully there is a method: getNextHighestDepth() that will return the next possible value for you. The arguments that follow the depth one, set the display position and the width and height of your text field. The next three lines allow me to a) use HTML for my text, b) set the text to display (a link in this case) and finally apply the previously defined style. And this is then repeated for the second text field to be displayed (lines 13-16), making sure that the display position doesn't overlap.

<code>
// now create the dynamic text buttons
fmtEmphasis = new TextFormat();
fmtEmphasis.bold = false;
fmtEmphasis.size = 12;
fmtEmphasis.color = "0x69889A";
fmtEmphasis.font = "Verdana";</code>

this.createTextField("tfNewfield1",this.getNextHighestDepth(),0,0,150,20);
tfNewfield1.html = true;
tfNewfield1.htmlText = "<a href="http://www.someurl.com/" target="_blank">[ Link 1 ]</a>";
tfNewfield1.setTextFormat(fmtEmphasis);

// now create the dynamic text buttons
this.createTextField("tfNewfield2",this.getNextHighestDepth(),170,0,150,20);
tfNewfield2.html = true;
tfNewfield2.htmlText = "<a href="http://www.someotherurl.com/" target="_blank">[ Link 2 ]</a>";
tfNewfield2.setTextFormat(fmtEmphasis);]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2005-02-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dynamic-text-with-action-script</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>configuring your network card</title>
		<link>http://gregs.tcias.co.uk/2005/02/28/configuring-your-network-card/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=130</guid>
		<description></description>
		<content:encoded><![CDATA[I just got a test machine at work running Debian. It was set up to use dhcp and for development purposes I needed a static IP address, so in order to change that I needed to do the following:
<ol>
	<li>kill the dhcpclient to preserve the DNS settings kept in resolv.conf</li>
	<li>type: <strong>ifconfig eth0 &lt;your static IP address&gt; netmask 255.255.0.0</strong></li>
	<li>followed by: <strong>route add default gw &lt;gateway ip address&gt;</strong></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>130</wp:post_id>
		<wp:post_date>2005-02-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configuring-your-network-card</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Ajax</title>
		<link>http://gregs.tcias.co.uk/2005/02/28/ajax/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=131</guid>
		<description></description>
		<content:encoded><![CDATA[Garrett has published <a href="http://www.adaptivepath.com/publications/essays/archives/000385.php" title="Ajax: A New Approach to Web Applications">a little essay</a> over at Adaptive Path discussing a new approach to building be applications: Ajax (Asynchronous JavaScript + XML). By his own admission this is not such an entirely new approach as anybody who has been using Gmail can attest too. It's nice to see that it has gone mainstream now and is getting more attention.

So for those keen on a little more information (courtesy of <a href="http://www.veen.com/jeff/archives/000689.html" title="Scrubbing Innovation into Interaction: Ajax">Jeff Veen's blog</a>):
<ul>
	<li><a href="http://developer.apple.com/internet/webcontent/xmlhttpreq.html" title="Dynamic HTML and XML: The XMLHttpRequest Object">Dynamic HTML and XML: The XMLHttpRequest Object</a></li>
	<li><a href="http://www.xml.com/lpt/a/2005/02/09/xml-http-request.html" title="Very Dynamic Web Interfaces">Very Dynamic Web Interfaces</a></li>
	<li><a href="http://developer.apple.com/internet/webcontent/iframe.html" title="Remote Scripting with IFRAME">Remote Scripting with IFRAME</a></li>
	<li><a href="http://www.oreillynet.com/lpt/a/1557" title="Remote Scripting with IFRAME">Remote Scripting with IFRAME</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date>2005-02-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ajax</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Missing Remoting components</title>
		<link>http://gregs.tcias.co.uk/2005/02/28/missing-remoting-components/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=132</guid>
		<description></description>
		<content:encoded><![CDATA[The joys of re-building your development machine. Though this was quite possibly the fastest re-build I ever went through, I did come slightly unstuck when trying start working with Flash MX Professional and the remoting components: when I tried to compile a previously working movie I was told NetServices.as, DataGlue.as and NetDebug.as were all missing.

A quick search of my hard rive confirmed this. A quick look at Google didn't give me any indication of why they would be missing apart from a link to download the AS2 flash remoting components (http://www.macromedia.com/software/flashremoting/downloads/components/#flr_as2). 16 meg later I launch the installer and complete the installation, start up Flash MX pro again, re-compile the movie, and bang still no DataGlue.as, etc... Hmm search the disk again... Nothing... So I jump onto a colleagues machine do a search for the files, zip up both "{install path}/en/First Run/Classes" and "{install path}/en/First Run/Includes" and extract them onto my machine and bingo it all works.

Now why would the installer not be able to install those components? The only thing I can think of is that I installed my software into a folder called "C:/Dev Tools/" rather than the "Program Files" and if it's really down to this, then this is really quite a silly bug to have in your installer.
<h4>UPDATE</h4>
<a href="http://www.leifwells.com/" title="Leif's Development Blog">Leif Wells</a> has kinly pointed the error of my ways. There was indeed a change in the way MX Pro with the release of the V2 Components, as they were packaged inside components. You know need to drag them onto your stage from Window &gt; Other Panels &gt; Common Libraries &gt; Remoting panel in order to successfully compile the movie. So I have deleted the old files as outlined above and gotten in the habot of dragging them onto the stage and saved myself some typing as well.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date>2005-02-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>missing-remoting-components</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Tips for cleaning a compromised server</title>
		<link>http://gregs.tcias.co.uk/2005/03/30/tips-for-cleaning-a-compromised-server/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[I stumbled across <a href="http://security.linux.com/security/05/03/23/2239205.shtml?tid=35" title="Tips for when hackers strike">this interesting post</a> on how a system administrator investigated and secured one of his compromised servers. He talks you through his investigative process, methods for cleaning up the compromised server and points to plenty of resources and tools for locking down your server.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2005-03-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips-for-cleaning-a-compromised-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[al]]></wp:comment_author>
			<wp:comment_author_email>al@alo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.142.23.108</wp:comment_author_IP>
			<wp:comment_date>2008-01-14 15:24:25</wp:comment_date>
			<wp:comment_date_gmt>2008-01-14 04:24:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good tips!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The web is a small place</title>
		<link>http://gregs.tcias.co.uk/2005/01/12/the-web-is-a-small-place/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=182</guid>
		<description></description>
		<content:encoded><![CDATA[I have been reading <a href="http://www.pepysdiary.com/" title="The Diary of Samuel Pepys">Pepy's diaries</a> (on and off admittedly and between bouts of reading Stephenson's <a href="http://www.amazon.co.uk/exec/obidos/ASIN/0434008176/teacupinastor-21" title="Read Quicksilver">Baroque</a> <a href="http://www.amazon.co.uk/exec/obidos/ASIN/0099410699/teacupinastor-21" title="Read the Confusion">Cycle</a> <a href="http://www.amazon.co.uk/exec/obidos/ASIN/0434011770/teacupinastor-21" title="read The System of the World">trilogy</a>) since I stumbled across it one bored afternoon at work in Sydney for nearly two years now and today I happened to be looking at <a href="http://www,sparklytrainers.com/blog/" title="Sparkly Trainers | The travels of Mary Loosemore">friend's blog</a> (who now works with me in London), following a few links to other sites and to my absolute surprise it turns out that the man behind Pepy's diaries is none other than her <a href="http://www.gyford.com/" title="Phil Gyford">boyfriend</a>. The world is such a small place sometimes.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date>2005-01-12 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-web-is-a-small-place</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Applying directory security</title>
		<link>http://gregs.tcias.co.uk/2005/01/07/applying-directory-security/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=203</guid>
		<description></description>
		<content:encoded><![CDATA[My dad wanted to have basic Authentication applied to his blog, so here are the directives you'd need to add to a Virtualhost configuration:

[code]
<virtualhost>
ServerAdmin info@somdomain.com
DocumentRoot /home/user/public_html
.....
<directory>
AuthType Basic
AuthName "By Invitation Only"
AuthUserFile {path to password file}/passwd/passwords
Require user yourUsername
</directory>
</virtualhost>
[/code]

In order for this to fully function you'll need to create a password file. The <a href="http://httpd.apache.org/docs/howto/auth.html#basic" title="Basic authentication">instructions can be found here</a>. Of note if you are using Debian with the default Apache install (v. 1.3.x) is that htpasswd is located in <strong>/usr/bin</strong> and since it's a non standard install chances are you'll need to specify a different location for your password file than the one indicated in the above link. Since I have BD running I had created a whole bunch of directories and symbolic links to make BD believe that Apache was installed as per normal, so I just had to create a <strong>passwd</strong> folder in <strong>/usr/local/apache</strong>, but you may have to do more.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date>2005-01-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>applying-directory-security</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>BD no longer running as root</title>
		<link>http://gregs.tcias.co.uk/2005/01/07/bd-no-longer-running-as-root/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=222</guid>
		<description></description>
		<content:encoded><![CDATA[A while back I blogged about instructions for changing the default user for BD, which is root, and finally got round to giving it a go. The links previously posted held all the information I needed, but since they were pretty elaborate, here in condensed form is what I did:

[code]
ugg:/home/gvs# useradd -d "/usr/local/NewAtlanta/BlueDragon_Server_62/" -c "BlueDragon CFML Server" -s /bin/sh -m bdragon
ugg:/home/gvs# passwd -l bdragon
ugg:/home/gvs# addgroup bdragon
ugg:/home/gvs# chown -R bdragon:bdragon /usr/local/NewAtlanta/
ugg:/home/gvs# su bdragon
ugg:/home/gvs$ /usr/local/NewAtlanta/BlueDragon_Server_62/bin/StartBlueDragon.sh
[/code]

And that should do the trick.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>222</wp:post_id>
		<wp:post_date>2005-01-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bd-no-longer-running-as-root</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>getting started with UML</title>
		<link>http://gregs.tcias.co.uk/2005/01/12/getting-started-with-uml/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=223</guid>
		<description></description>
		<content:encoded><![CDATA[Again another series of useful links and articles provided by some of our top <acronym title="ColdFusion Developers">cfers</acronym> out there. Dough Hughes has dipped his toes into the <acronym title="Unified Modeling Language">UML</acronym> and will be sharing his experiences. I for one look forward to reading his <acronym title="Unified Modeling Language">UML</acronym> digests. <a href="http://www.doughughes.net/index.cfm/page-blogLink/entryId-68" title="Learning UML">He kicks off the process</a> with his reasons for learning UML and what he intends to achieve and continues with an overview of <a href="http://www.doughughes.net/index.cfm/page-blogLink/entryId-71" title="What Is UML?">what UML is all about</a>.

Sean Corfield supplements these two posts with <a href="http://www-106.ibm.com/developerworks/rational/library/769.html" title="UML basics: An introduction to the Unified Modeling Language">a couple</a> <a href="http://pigseye.kennesaw.edu/~dbraun/csis4650/A&amp;D/index.htm" title="Object Oriented Analysis and Design Team">of links</a> that he was made aware of by Jared Rypka-Hauer.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>223</wp:post_id>
		<wp:post_date>2005-01-12 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-uml</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>CFML on a stick</title>
		<link>http://gregs.tcias.co.uk/2005/05/27/cfml-on-a-stick/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=119</guid>
		<description></description>
		<content:encoded><![CDATA[In the last couple of posts I made passing references to using a USB Flash drive for development. My dad just got back from a trip to the US and brought me back a little present: <a href="http://www.transcendusa.com/products/ModDetail.asp?ModNo=45" title="Transcend - JetFlash 2A">a 1 Gig usb drive</a>. It is absolutely awesome, as soon as I got home I loaded Eclipse onto it and fired it up and it just worked (no surprises there as quite a few others had already achieved that feat). Next I put my current development files on there and I just pointed Eclipse to the new work space and after a restart - mobile development here we come!!

Then I wanted to see how far I could take this: so I downloaded <a href="http://www.apachefriends.org/en/xampp.html" title="XAMPP">XAMPP</a> (XAMPP is based on the popular LAMP [Linux, Apache, Mysql and PHP] and includes a bunch of other tools) and extracted the contents of the package to my USB drive. Switching to the command prompt I navigated to XAMPP folder and started Apache using the included apache_start.bat file, opened a browser and went to http://localhost/ and there you go Apache and PHP working of the USB key (note: make sure you don't have any other Apache instances running).

But could I get CFMX or BlueDragon to run off of this configuration as well?

First off I selected <a href="http://www.caucho.com/index.xtp" title="Caucho Technology - Resin... faster">Resin</a> as my application server and proceeded to set up resin to talk to Apache. I ran the setup.exe file and specified the path to my Apache folder, i.e. E:\xampp\apache and restarted Apache. But that failed, for some reason resin assumed that I was running apache-1.3.x so I edited Apache's httpd.conf file to this:

[code]LoadModule caucho_module "E:/resin-3.0.12/win32/apache-2.0/mod_caucho.dll"
#AddModule mod_caucho.c
...
<ifmodule>
ResinConfigServer localhost 6802
CauchoStatus yes
AddHandler caucho-request jsp
</ifmodule>[/code]

Once done I restarted Apache and it started up no problem. Now to test the connection between Apache and resin, simply locate resin.conf (in my case I found it at E:\resin-3.0.12\conf\) and right at the end you should see an entry like the following one:

[code]<!-- configures the default host, matching any host name -->
<host root-directory=".">
<!--
- configures an explicit root web-app matching the
- webapp's ROOT
-->
<web-app id="/" document-directory="webapps/ROOT">
</web-app></host>[/code]

Change it to this, which tells resin to use Apache's default document directory.

[code]<!-- configures the default host, matching any host name -->
<host root-directory=".">
<!--
- configures an explicit root web-app matching the
- webapp's ROOT
-->
<web-app id="/" document-directory="E:/xampp/htdocs">
</web-app></host>[/code]

All this information can be <a href="http://www.caucho.com/resin-3.0/install/cse-apache-win.xtp" title="Resin with Apache on Windows">found here</a>, including steps to test your set up by creating a test.jsp file. Then I started resin using (where "E" is the drive letter of my usb drive):

[code]E:\resin-3.0.12\httpd[/code]

And browsed as per the instructions to http://localhost/test.jsp and it worked just like that.

Since I was on a roll, I decided to try out  BlueDragon, so I downloaded the J2EE version and extracted the files and copied the BlueDragon62.war file to E:\resin-3.0.12\webapps and restarted resin so that BlueDragon could be deployed. A little bit of patience is required here as it starting the Application server can take a wee while (this becomes the norm regardless of whether BlueDragon has been deployed, obviously this is a limitation of running it off the USB stick). Here is that output from the server start up:

[code]E:\resin-3.0.12&gt;httpd
Resin-3.0.12 (built Wed, 23 Feb 2005 10:29:38 PST)
Copyright(c) 1998-2004 Caucho Technology.  All rights reserved.

Using Resin(R) Open Source under the GNU Public License (GPL).

See http://www.caucho.com for information on Resin Professional,
including caching, clustering, JNI acceleration, and OpenSSL integration.

Starting Resin on Wed, 13 Apr 2005 14:57:38 +0100 (BST)

[14:57:54.562] http listening to *:8080
[14:57:54.562] ServletServer[] starting
[14:57:57.625] Host[] starting
[14:58:17.484] In-place class redefinition (HotSwap) is not available.  In-place
class reloading during development requires a compatible JDK and -Xdebug.
[14:58:24.343] Application[http://localhost:8080/BlueDragon62] starting
[14:58:44.921] cfmServlet: init
[15:02:06.984] cfcServlet: init
[15:06:42.312] Application[http://localhost:8080/resin-doc] starting
[15:06:51.562] Application[http://localhost:8080] starting
[15:06:56.125] hmux listening to 127.0.0.1:6802[/code]

You know that everything is running once you see <strong>hmux listening to 127.0.0.1:6802</strong>. You can now test your deployment by browsing to: http://localhost/BlueDragon62/, which should display the BlueDragon CFML test page. If you want to locate the admin section of BD browse here: http://localhost/BlueDragon62/bluedragon/admin/index.cfm]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>119</wp:post_id>
		<wp:post_date>2005-05-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfml-on-a-stick</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Quantum bookmarks</title>
		<link>http://gregs.tcias.co.uk/2005/06/14/quantum-bookmarks/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[Now that I have my mobile development environment set up I thought I'd take a few moments to make a note on how you create bookmarks to your databases when using the <a href="http://www.eclipse.org/" title="eclipse.org Main Page">Eclipse</a> plugin <a href="http://quantum.sourceforge.net/" title="QuantumDB Eclipse Plugin">Quantum</a>. First off make sure you are in the Quantum perspective (Window &gt; Open Perspective &gt; Other &gt; Quantum). In the Database Bookmark pane right click and select New Bookmark.

For MySQL I decided to use the driver provided by the people behind MySQL (you can download it <a href="http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-3.1.8.zip/from/pick" title="Select a mirror">here</a>) since this is the one I use in conjunction with BlueDragon. If this is the first time you are setting up a bookmark/connection for a MySQL database you'll need to add the driver first (Add Driver &gt; Add External Jar &gt; Select a class name [com.mysql.jdbc.Driver] &gt; Type = MySQL &gt; Finish). Next make sure the MySQL driver is selected and click Next.

Simply specify the normal details you would when say creating a datasource (username, password, hostname, port and database name) and once you click on Finish you are done!

For Oracle databases though I initially struggled a little, because I had opted to use the driver included with JRun/CFMX. By using the ones that came with BlueDragon the problems went away. So as with MySQL add a new driver and use the BD one (class name: oracle.jdbc.driver.OracleDriver) and after clicking next simply provide the information you are prompted for as per the MySQL instructions.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2005-06-14 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quantum-bookmarks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Flash URL trimming</title>
		<link>http://gregs.tcias.co.uk/2005/06/15/flash-url-trimming/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=122</guid>
		<description></description>
		<content:encoded><![CDATA[This was slightly annoying: I was finishing up an Oracle portal application that was making use of a little flash client to pull data from a few sources. If the data was not comprehensive enough we also provided a Single Sign On links to the applications in question so that user could dig deeper. For one reason or another the URLs for the Portal server had been changed which meant I had to go round and re-compile the various flash movies with the updated URLs. So we went from "http://short:7777/pls/portal/" to "http://yourreallylong.domainname.com/pls/portal/". This is turn meant that the SSO query strings became even longer after the server side re-direct, see below:

<code>[code]http://yourreallylong.domainname.com/pls/orasso/ORASSO.wwsso_app_admin.fapp_process_login?p_app_id=A9EA58560B278E1CE1C3B5CD64C6D9E[/code]</code>

And all of a sudden the SSO links no longer worked. What was happening was that "p_app_id" was being trimmed by 2 characters (so instead of passing 129 chars to the browser only 127 were) by the Flash client. Thankfully we didn't need the fully qualified domain name so as a quick work around I could simply drop "domainname.com" and it all worked again. After this I did a quick google search and <a href="http://www.macromedia.com/cfusion/knowledgebase/index.cfm?id=tn_15598" title="URL links limited to 127 characters">here is the Technote on the topic</a> and a suggested work around.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>122</wp:post_id>
		<wp:post_date>2005-06-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-url-trimming</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Koders</title>
		<link>http://gregs.tcias.co.uk/2005/06/15/koders/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=123</guid>
		<description></description>
		<content:encoded><![CDATA[I was just reading through this mornings <a href="http://www.sdtimes.com">SD times</a> newsletter and there was an interesting link to a new (-ish, it was released in May) search engine called <a href="http://koders.com/" title="Source Code Search Engine">Koders</a>, which returns results from open source projects. It even has a little <a href="http://koders.com/info.aspx?c=tools" title="Tools and downloads">Mozilla and Eclipse search plugin</a>. Now there is even less of a reason to re-invent the wheel.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>123</wp:post_id>
		<wp:post_date>2005-06-15 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>koders</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Cycling through your history</title>
		<link>http://gregs.tcias.co.uk/2005/06/30/cycling-through-your-history/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[I quite often find myself cycling through the history of commands I have typed in the console window and there can be quite a few commands stored there. John, part time philosopher and all round good bloke and extraordinary at all things computing related, stopped me from monkeying around on the keyboard and showed me the following command that stopped me from having kittens when it came to finding that all important and elusive command:

<code>[code]history | grep "pattern"[/code]</code>

For example while re-building qmail I was looking for the last make statement:

<code>[code]host:/tmp/qmail/maildrop-1.6.3# history | grep "make"
511  make man &amp;&amp; make setup check
514  make man &amp;&amp; make setup check
517  make cert
520  make &amp;&amp; make setup check
528  make &amp;&amp; make install
536  make &amp;&amp; make install-strip
541  make &amp;&amp; make install-strip &amp;&amp; make install-man
547  history | grep "make"[/code]</code>

Then you can do <strong>!541</strong> ("!" is pronounced bang) and this will execute: "make &amp;&amp; make install-strip &amp;&amp; make install-man". Sometimes working with *nix systems is just so handy and it's another feather in my cap!

Oh and John see I managed to get kittens, monkeys and hats into a post!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date>2005-06-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cycling-through-your-history</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>tail &#124; grep</title>
		<link>http://gregs.tcias.co.uk/2005/06/30/tail-grep/</link>
		<pubDate>Thu, 30 Jun 2005 04:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[After reading a quote on a mailing list last week about the concept behind unix tools and their focus on doing one task well and the OS allowing you to pipe several commands in one go, it dawned on me that I could do the following on log files:

<code>[code]tail -f /var/log/syslog | grep "named"[/code]</code>

So as the log fills up only items where the pattern "named" is found are displayed. Very neat!

<strong>UPDATE</strong>

Thanks to some of the comments, here's a way to colour code the output (hopefully this will render better than the comment output)

<code>[code]tail -f /var/log/syslog | grep "named" --color[/code]</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2005-06-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>2005-06-30 04:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tail-grep</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Martijn]]></wp:comment_author>
			<wp:comment_author_email>thinksmall@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.thinksmall.nl/</wp:comment_author_url>
			<wp:comment_author_IP>213.31.172.5</wp:comment_author_IP>
			<wp:comment_date>2007-06-29 02:55:09</wp:comment_date>
			<wp:comment_date_gmt>2007-06-28 15:55:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Oh, I just found this through Google. It was exactly what I was looking for, but I never thought it'd be *this* simple. Heehee.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2776</wp:comment_id>
			<wp:comment_author><![CDATA[Liam Griffiths]]></wp:comment_author>
			<wp:comment_author_email>asdf@asdf.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.89.154.30</wp:comment_author_IP>
			<wp:comment_date>2008-07-16 19:29:20</wp:comment_date>
			<wp:comment_date_gmt>2008-07-16 23:29:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Even better use "tail -f /var/log/logfile | grep pattern --color" to highlight the individual matched pattern]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9436</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>203.217.61.78</wp:comment_author_IP>
			<wp:comment_date>2008-07-30 01:10:53</wp:comment_date>
			<wp:comment_date_gmt>2008-07-30 05:10:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The colour coding ability is a great addition, thanks Liam!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64747</wp:comment_id>
			<wp:comment_author><![CDATA[julienl]]></wp:comment_author>
			<wp:comment_author_email>julienlfr@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.julienl.fr</wp:comment_author_url>
			<wp:comment_author_IP>83.156.97.114</wp:comment_author_IP>
			<wp:comment_date>2009-07-29 16:01:29</wp:comment_date>
			<wp:comment_date_gmt>2009-07-29 20:01:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice man it's what I looking for ;),]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>150652</wp:comment_id>
			<wp:comment_author><![CDATA[mitch]]></wp:comment_author>
			<wp:comment_author_email>someone@somewhere.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.223.114.3</wp:comment_author_IP>
			<wp:comment_date>2011-06-21 12:47:12</wp:comment_date>
			<wp:comment_date_gmt>2011-06-21 16:47:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Exactly what I was looking for thank you!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308693833.4918";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308674832.9795";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>213913</wp:comment_id>
			<wp:comment_author><![CDATA[Ashish]]></wp:comment_author>
			<wp:comment_author_email>aashish81us@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.111.223.43</wp:comment_author_IP>
			<wp:comment_date>2012-10-31 05:14:33</wp:comment_date>
			<wp:comment_date_gmt>2012-10-31 05:14:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi this is really useful Salute to Greg !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1352297104.4956";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1351660473.0361";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CSS organisation</title>
		<link>http://gregs.tcias.co.uk/2005/06/30/css-organisation/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=139</guid>
		<description></description>
		<content:encoded><![CDATA[A few week old now, but Doug over at Stop Design has come up with <a href="http://www.stopdesign.com/log/2005/05/03/css-tip-flags.html" title="CSS Organization Tip 1: Flags">yet another invaluable little trick</a>: when working with large style sheets it can be quite a lot of work to scroll through it in order to locate a certain declaration. His tip, label your sections and prefix the label with "=" like such:

<code>[css]/* MISC: =Lists
----------------------------------------------- */[/css]</code>

Since "=" is not used in CSS, doing a search for =List will quickly get you to where you need to be.

And while you are over at his site, why not read up on his latest collaborative project with <a href="http://www.happycog.com/work/cg/" title="Cap Gemini">Happy Cog</a> and <a href="http://www.zeldman.com/" title="Jeffrey Zeldman presents the daily report">Jeffrey Zeldman</a>: <a hef="http://www.capgemini.com/" title="collaborative business experience">Cap Gemini</a> a glorious CSS/xHTML redesign!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2005-06-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css-organisation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Conditional compilation</title>
		<link>http://gregs.tcias.co.uk/2005/08/23/conditional-compilation/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=144</guid>
		<description></description>
		<content:encoded><![CDATA[What with the buzz going on around xmlHttpRequest, I decided to have a little play with the technology (yes I know very me too of me). One tutorial/example site I stumbled across "<a href="http://www.webpasties.com/xmlHttpRequest/" title="Guide to Using XMLHttpRequest (with Baby Steps)">Guide to Using XMLHttpRequest (with Baby Steps)</a>" used some interesting JavaScript: <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/script56/html/js56jsconconditionalcompilation.asp" title="Conditional Compilation">Conditional Compilation</a>. Here is an example:

[js]
/*@cc_on @*/
/*@if (@_jscript_version &gt;= 4)
alert("JScript version 4 or better");
@else @*/
alert("You need a more recent script engine.");
/*@end @*/
[/js]

From the looks of it, it's an IE only thing, but I wonder what the advantages are of using this code over a regular browser check? Is this a more reliable way than using <em>window.ActiveXObject</em> and, if you are specifically playing around with xmlHttpRequest, based on that condition making the correct create object call?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date>2005-08-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>conditional-compilation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="browser"><![CDATA[browser]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>maxEvents</title>
		<link>http://gregs.tcias.co.uk/2005/06/30/maxevents/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[maxEvents is used in the mach-ii framework primarily to help you not get into an infinite loop. Of course limiting the number of events can also land you in trouble as some request may require more events than currently set. Determining this number is something that you will need to figure out yourself. Ben Edwards suggests that 50 or more events is fine, however he did recommend against disabling it.

For the record you can disable the maxEvents by assigning it a negative number.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2005-06-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maxevents</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Busy</title>
		<link>http://gregs.tcias.co.uk/2005/08/23/busy/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=146</guid>
		<description></description>
		<content:encoded><![CDATA[Apologies again for the lack of posts, but I have been real busy at work completing another mach-ii app. So I thought I'd share a few details about this application that went live today. You won't be able to publicly view it, so below is a screen shot (click on the image to view a larger one) for your viewing pleasure.

<a href="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/bigcma.png" title="CMA screenshot"><img src="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/bigcma.png" alt="CMA screenshot" /></a>

So what is it? It's an application that allows a user to search for comparable properties within a given postcode, district, town, etc... The properties are retrieved from our databases and overlayed on a multimap image of the requested area using SVG. You can then select a series of properties (by either selecting them by clicking on them via the map or from a list). Selecting allows you to view the property?s details or you can add them to a list that you wish to examine more closely. This list can then be exported as Excel or rendered as a PDF document.

The UI makes use of SVG for the rendering of the map and placement of the properties, as well as some serious dHTML for displaying the different views. All the data that drives the application is delivered using the AJAX delivery mechanism. From an implementation/developer point of view it was a whole heap of fun getting a chance to develop an "RIA" using AJAX and dHTML. Despite the debugging hell, it's no more difficult than working with Flash Remoting and I suspect that as more work is done with AJAX the better the debugging solutions will become.

The back end is all driven by CF and the framework we used, like all of our B2B apps, is Mach-ii (our <a href="http://www.hometrack.co.uk/" title="Hometrack">consumer site</a> uses FuseBox). The UI makes remoting calls to our app which retrieves the requested data. The data is returned in the form of XML, where after being decompressed (we compress it server side to speed up things), XSL style sheets are applied to render the output.

Much of the credit for the implementation must go to Zac (where's your blog mate?), and it's been great working him on this project. More so because he is fellow developer who digs Mach-ii. To date this probably my most OO based app yet, but having had a few days to look back on it now, there are still a number of areas that we could improve upon. For the next point release we are looking at quite a few enhancements in terms of the back end and taking a serious look at Tartan to help us manage our Service Layer.

It's been a while since I have had so much fun developing a web app again and have had a chance to work with so many different technologies in one go. And of course CF sits at the heart of it all.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>146</wp:post_id>
		<wp:post_date>2005-08-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>busy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>SOUNDEX</title>
		<link>http://gregs.tcias.co.uk/2005/08/23/soundex/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[Ever wondered how Google does it's little "did you mean this..." when you carry out a search? Well we just put together something similar (though I am sure not quite as clever as the folks over at Google). From some of my previous posts you may have gleaned that I am currently working for company that deals with postcodes, local authorities and properties. The mach-ii application I mentioned in my previous post makes use of this feature as quite frequently users mistype the information. So in order to help them we use two functions to guide them along their way.

[sql]
SELECT DISTINCT StreetName,CONVERT(INT, ourdB.dbo.LEVENSHTEIN(StreetName, 'the road you are looking for'))
FROM ourPropertyTable
WHERE soundex(StreetName) = soundex('the road you are looking for')
GROUP BY StreetName
ORDER BY 2
[/sql]

SOUNDEX is a built in MS SQL function that allows you to do sound matching for strings, which returns a list of similar sounding words to the one you were looking for. LEVENSHTEIN is an third party function that further enhances this search giving the returned set a numeric weighting to determine the accuracy of the match. With these two functions and this query you can in the event of a no results found make some suggestions as to what the end user may have been looking for.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2005-08-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>soundex</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Nick Tong]]></wp:comment_author>
			<wp:comment_author_email>n.tong@talkwebsolutions.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://succor.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>83.104.48.224</wp:comment_author_IP>
			<wp:comment_date>2007-07-15 02:12:48</wp:comment_date>
			<wp:comment_date_gmt>2007-07-14 15:12:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Greg, where can you get the LEVENSHTEIN plugin from? I've done a google on it but not had much success.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.teacupinastorm.com/</wp:comment_author_url>
			<wp:comment_author_IP>61.68.30.218</wp:comment_author_IP>
			<wp:comment_date>2007-07-16 10:58:19</wp:comment_date>
			<wp:comment_date_gmt>2007-07-15 23:58:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Here's where I grabbed the Levenshtein function from:

http://www.planet-source-code.com/vb/scripts/ShowCode.asp?txtCodeId=502&lngWId=5]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>XSLT conditional statements</title>
		<link>http://gregs.tcias.co.uk/2005/08/23/xslt-conditional-statements/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=148</guid>
		<description></description>
		<content:encoded><![CDATA[One of the other completely new aspects of my job has been working with xmlHTTPRequest and XML/XSL transformation. And here are a few things that I learned during my last project: you can use conditional statements. <a href="http://www.w3schools.com/xsl/xsl_if.asp" title="XSLT - The &lt;xsl:if&gt; Element">W3schools</a> proved very helpful in getting to grips with this.

You can do <strong>if</strong> like statements:

[xml]
<xsl:if test="expression">
Do something
</xsl:if>[/xml]

And <strong>if/else</strong> statements:

[xml]
<xsl:choose>
<xsl:when test="expression">
Do something
</xsl:when>
<xsl:otherwise>
Do something else
</xsl:otherwise>
</xsl:choose>
[/xml]

The test expressions can be made up of: "=", "and", "&lt;", "&amp; amp;gt;" and probably a whole lot more, but I haven't come across any other ones yet.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date>2005-08-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xslt-conditional-statements</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>du</title>
		<link>http://gregs.tcias.co.uk/2005/08/23/du/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=149</guid>
		<description></description>
		<content:encoded><![CDATA[I stumbled across the following command while reading <a href="http://www-128.ibm.com/developerworks/linux/library/wi-wiisp.html?ca=dgr-lnxw01BuildISP" title="Linux scripts make wireless management a snap">this article</a>:

<code>du --max-depth=1 --human-readable --total</code>

This gives you an estimated indication of your file space usage by folder. Here is some sample output:

<code>12K     ./lost+found
2.5M    ./bin
84K     ./dev
3.3M    ./etc
187M    ./home
7.6M    ./lib
1.0K    ./mnt
1.0K    ./opt
65M     ./proc
65K     ./root
2.3M    ./sbin
3.0K    ./tmp</code>

There are plenty of other useful scripts and tidbits in <a href="http://www-128.ibm.com/developerworks/linux/library/wi-wiisp.html?ca=dgr-lnxw01BuildISP" title="Linux scripts make wireless management a snap">the article</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date>2005-08-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>du</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Getting the QueryString using JavaScript</title>
		<link>http://gregs.tcias.co.uk/2005/08/23/getting-the-querystring-using-javascript/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/2005/08/23/getting-the-querystring-using-javascript/</guid>
		<description></description>
		<content:encoded><![CDATA[Here is a little script that parses the query strings of your URL so that you can use them in your JavaScript code:

[js]// gvs - 19/7/2005 - retrieve values from URL to be appended to the link
var hasQueryString = document.URL.indexOf('?');
var additionalQueryString = "";
var targetUrl = "http://www.someURL.com/?with=queryString";
if (hasQueryString != -1) {
// Create variable from ? in the url to the end of the string
additionalQueryString = document.URL.substring(hasQueryString+1, document.URL.length);
targetUrl = targetUrl + "&amp;" + additionalQueryString;
}[/js]

In case you are wondering what I used this for: to help debug some our AJAX UIs. Every single time a request is sent to the server, we use JavaScript to create a clickable link for us that mimics the remoting call that we can use to view the XML that is sent back to the browser (or any other problems that might occur).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2005-08-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-the-querystring-using-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>stopping a page refresh</title>
		<link>http://gregs.tcias.co.uk/2005/10/21/stopping-a-page-refresh/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=151</guid>
		<description></description>
		<content:encoded><![CDATA[I found myself having to trap a user attempting to refresh a page for one of our web apps. After a little bit of digging I stumbled across <a href="http://webreference.com/dhtml/diner/beforeunload/bunload4.html" title="The IE onBeforeUnload Event Handler">this solution</a>:

[code]
<script type="text/javascript"> 
<!-- 
window.onbeforeunload = unloadMess; 
function unloadMess()
{
 	mess = "You are about to refresh the screen and will loose all of your changes.nAre you sure you want to do so?" 	return mess; 
} 
//--> 
</script>[/code]

To use it simply embed or include it into your template

Eventhough the article says this is a IE specific event/feature it also works in FireFox. You should be aware that whenever the user leaves the page, they will be prompted about their impeding data loss, which can get a little tedious while developing.

Again this became a handy feature for our AJAX apps as most of the processing is done in the background without the page reload, a user could accidentally hit the back button and loose where they were at.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2005-10-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stopping-a-page-refresh</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="browser"><![CDATA[browser]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LIKE and Oracle</title>
		<link>http://gregs.tcias.co.uk/2005/10/21/like-and-oracle/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[I never spotted this before but the LIKE operator is case sensitive! Which was skewing my search results quite severely. The work around is to put everything into upper case, both the values in the column you are performing the search against as well as the value of the varibale you are searching for.

[code]SELECT col1, col2, col3
FROM table
WHERE UPPER(col4) LIKE '%UPPER(yourValue)%'[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2005-10-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>like-and-oracle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[database]]></category>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Checking your free memory</title>
		<link>http://gregs.tcias.co.uk/2005/10/21/checking-your-free-memory/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=153</guid>
		<description></description>
		<content:encoded><![CDATA[Here is a handy little script that I stumbled across a while back (probably on a mailing list), sorry I can't remember who posted it, but for posterity here it is:

[code]
<cfscript>
rt = createObject("Java", "java.lang.Runtime");
freemem=rt.getruntime().freeMemory();
maxmem=rt.getruntime().maxMemory();
usepercent=freemem/maxmem;
</cfscript>
<cfoutput> </cfoutput>
<table>
<tr>
<td>Free memory</td>
<td align="right">#numberformat(freemem)#</td>
</tr>
<tr>
<td>Max memory</td>
<td align="right">#numberformat(maxmem)#</td>
</tr>
</table>
Percent use: #numberformat(usepercent * 100)#
[/code]

<h4>UPDATE</h4>
It was from <a href="http://www.petefreitag.com/item/115.cfm" title="ColdFusion Memory Usage Stats">Pete Freitag's site</a> that I gleaned this tid bit of information and Niklas over at Primsix was kind enough to also point out that he put together <a href="http://www.prismix.com/blog/archives/2005/08/coldfusion_memo.cfm" title="ColdFusion Memory Usage Stats (Revisited)">a graphical version</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2005-10-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>checking-your-free-memory</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cfeclipse - local history saves the day</title>
		<link>http://gregs.tcias.co.uk/2005/10/21/cfeclipse-local-history-saves-the-day/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=154</guid>
		<description></description>
		<content:encoded><![CDATA[I remember reading about this somewhere, but for the life of me I could not find the link for it again (I did find a <a href="http://coldfusion.sys-con.com/read/48235.htm" title="CFEclipse: The Developer's IDE, Eclipse For ColdFusion">reference to it here</a>). So once again for my own sanity (and saving me a few minutes of fumbling around): here is how you can recover from changes made to your templates, when your undo history doesn't quite stretch far enough back.
<ul>
	<li>In your navigator view, right click on the file in question.</li>
	<li>From the context menu select <strong>Compare with</strong> &gt; <strong>Local history</strong></li>
	<li>The pop up that you are now presented with now displays you current state in the bottom left pane and in the right hand bottom pane you can see a historical view of the file in question.</li>
	<li>The top pane displays the known history of the file, so simply step through the history until you find that line of elusive code you had accidentally "lost"</li>
</ul>
You can also increase the number of days (defaults to 7 [or 50 entries per file]) to keep in history from Window &gt; Preferences &gt; General &gt; Workspace &gt; Local History.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2005-10-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfeclipse-local-history-saves-the-day</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="eclipse"><![CDATA[eclipse]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Clearing sessions on closing the browser</title>
		<link>http://gregs.tcias.co.uk/2005/07/18/clearing-sessions-on-closing-the-browser/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=212</guid>
		<description></description>
		<content:encoded><![CDATA[I keep seeing this question pop up so for google's sake here is how you can kill sessions when the user closes his or her browser.

[html]<!--- set session coookies --->
<cfif>
<cfcookie name="cfid" value="#cookie.cfid#">
<cfcookie name="cftoken" value="#cookie.cftoken#">
</cfcookie>
[/html]</cfcookie></cfif>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>212</wp:post_id>
		<wp:post_date>2005-07-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clearing-sessions-on-closing-the-browser</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>Populating a drop down box from a comma delimited field</title>
		<link>http://gregs.tcias.co.uk/2005/06/01/populating-a-drop-down-box-from-a-comma-delimited-field/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=295</guid>
		<description></description>
		<content:encoded><![CDATA[Occasionally you'll come across database fields that contains a list of keywords that are comma delimited. One instance would be for storing the style of a certain product. Take shoe as an example, you can have a trainer, walking, formal or work style for said shoe. These different styles in our case were stored in one field in database. However when it came to building the front end of the shopping cart we needed to allow the user to choose a specific style for said shoe. In the following I'll be explaining how populate a drop down box from a comma list of items stored in a database.Step 1, get the items of interest. Here we right a basic query that retrieves the contents of the field we wish to display, in our case the style of a shoe. The code below shows you how to do this:

[code]<!--- Now select the style for an item (shoe) --->
<cfquery name="qGetStyle" datasource="#application.dsname#">
select table.style
from table
where item = 'shoe'
</cfquery>[/code]

Here we select the content of a field called <strong>style</strong> in a table called <strong>table</strong> where the item value is equal to '<em>shoe</em>'. Next we define a variable and store the results of aforementioned query in that variable.

[code]<!--- define and set variable --->
<cfparam name="keywords">
<cfset keywords="qGetItems.style">[/code]</cfset></cfparam>

As result of this the variable <em>keywords</em> contains the following information (based on the above example: <em>trainer, walking, formal, work</em>. Now we need to extract that information and put into a drop down menu. To this end we will have to loop over that variable and display each and every item in an  field. Thankfully <em><cfloop></cfloop></em> allows you to specify a delimiter and in our case it would be a ','. So the entire Cold Fusion code would look something like this:

[code]
<!--- loop over the variable and populate drop down box --->
<select name="style">
    <option>Select style</option>
    <cfoutput query="qGetStyle">
      <option value="#i#">#i#</option>
    </cfouptut>
</select>[/code]

And there you go, you know have broken down a comma delimited field into a drop down menu based on the content of a field in your database.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>295</wp:post_id>
		<wp:post_date>2005-06-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>populating-a-drop-down-box-from-a-comma-delimited-field</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
	</item>
	<item>
		<title>LogParser</title>
		<link>http://gregs.tcias.co.uk/2006/11/23/logparser/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=140</guid>
		<description></description>
		<content:encoded><![CDATA[Charlie Arehart has a handy little article published in this months CFDJ on using <a title="Download Details: Log Parser 2.2" href="http://www.microsoft.com/downloads/details.aspx?FamilyID=890cd06b-abf8-4c25-91b2-f8d975cf8c07&amp;displaylang=en">Microsoft's Log Parser tool</a>, which allows you to write SQL like statements against your CFMX log files. Couldn't find a publicly accessible link, but if you keep an eye on his <a title="Articles by Charlie Arehart" href="http://carehart.org/articles.cfm">articles page</a>, I am sure he'll update it as soon as it is available.
<h4>Update</h4>
Charlie dropped me a note last week to let me know that the article can be found <a title="Monitoring Your ColdFusion Environment With the Free Log Parser Toolkit" href="http://coldfusion.sys-con.com/read/296223.htm">on-line here</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>140</wp:post_id>
		<wp:post_date>2006-11-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>logparser</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="log"><![CDATA[log]]></category>
		<category domain="category" nicename="ms-sql"><![CDATA[MS SQL]]></category>
		<category domain="category" nicename="parse"><![CDATA[parse]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Refreshing web service stubs</title>
		<link>http://gregs.tcias.co.uk/2006/09/22/refreshing-web-service-stubs/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[I have been spending a few days building a bunch of web services for a client, however whenever I made a change to the web service itself the only way I could get that change to be reflected was by either waiting or re-starting cfmx. I did remember a post a while back that showed a better way. Finally I had enough today and  went looking for <a title="Refreshing Web Service Stubs in ColdFusion MX" href="http://www.bpurcell.org/blog/index.cfm?mode=entry&amp;entry=965">the solution</a>.

For my own benefit here is the code required to refresh the stub:

[code]

[/code]

Big thanks once again to <a title="burcell.org " href="http://www.bpurcell.org/">Brandon Purcell</a> for sharing this with us
<h4>Update</h4>
Or I could have just looked in the CF Administrator (if you are using 7.0.1) under Data &amp; Services and looked at the registered web services and refreshed them there...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date>2006-09-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>refreshing-web-service-stubs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[Anuj Gakhar]]></wp:comment_author>
			<wp:comment_author_email>info@anujgakhar.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.anujgakhar.com</wp:comment_author_url>
			<wp:comment_author_IP>81.6.193.242</wp:comment_author_IP>
			<wp:comment_date>2007-11-28 01:38:04</wp:comment_date>
			<wp:comment_date_gmt>2007-11-27 14:38:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[now you can do it in CF8 via the inbuilt attribute "refreshwebservice" ....i love this little new feature of CF8...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.teacupinastorm.com/</wp:comment_author_url>
			<wp:comment_author_IP>59.101.56.231</wp:comment_author_IP>
			<wp:comment_date>2007-11-28 09:32:08</wp:comment_date>
			<wp:comment_date_gmt>2007-11-27 22:32:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the tip Anuj!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Mysterious IIS crashes</title>
		<link>http://gregs.tcias.co.uk/2005/12/16/mysterious-iis-crashes/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[We recently started experiencing a few site crashes but there were no obvious errors, but after some investigating one of my colleagues (nicknamed the Wolf) stumbled across this error message:

[code]DCOM got error "Overlapped I/O operation is in progress. " and was unable to logon .\IWAM_BOB in order to run the server:
{3D14228D-FBE1-11D0-995D-00C04FD919C1}[/code]

He dug a little further and found <a href="http://www.codecomments.com/ASP/message334521.html" title="DCom got error Overlapped I/O operation is in progress.....">the solution to the problem</a> (look for the post by yakhunter). For posterity here is <a href="http://support.microsoft.com/default.aspx?scid=kb;en-us;297989" title="PRB: Configured Identity Is Incorrect for IWAM Account">the resolution</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date>2005-12-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysterious-iis-crashes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="iis"><![CDATA[iis]]></category>
		<category domain="category" nicename="web-server"><![CDATA[web server]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Comments are broken</title>
		<link>http://gregs.tcias.co.uk/2006/11/09/comments-are-broken/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=143</guid>
		<description></description>
		<content:encoded><![CDATA[Apologies, my comments are broken. When I get a moment I'll fix them, though I wouldn't hold my breath right now.

If there's anything you'd like to add about any of my posts, drop me a note by e-mail (link is in the footer) and I'll update the post.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date>2006-11-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>comments-are-broken</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rl"><![CDATA[RL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>locate</title>
		<link>http://gregs.tcias.co.uk/2005/10/27/locate/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=155</guid>
		<description></description>
		<content:encoded><![CDATA[I used to rely on whereis and find to locate programs and files on my debian box, but these weren't being very helpful when I tried to find a file I new existed on the system. I stumbled across the utility <a href="http://www.redhat.com/docs/manuals/linux/RHL-8.0-Manual/getting-started-guide/s1-managing-locating.html" title="Locating Files and Directories">locate</a> after a quick google search. And it did locate that elusive file for me. But only once I had updated it's database (which it kindly informed was 8 days out of date). To update the <strong>locate</strong> database, simply log on as root and type:

[code]udpatedb[/code]

<h4>UPDATE</h4>
If you are trying to do something similar on your Mac, the command can be found here (so you might to use the full path):

[code]/usr/libexec/locate.updatedb[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2005-10-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>locate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CFMX - MSDE connection refused error</title>
		<link>http://gregs.tcias.co.uk/2005/12/16/cfmx-msde-connection-refused-error/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=156</guid>
		<description></description>
		<content:encoded><![CDATA[I just started using MSDE for local development again and after creating my first DSN through the ColdFusion administrator I encountered the following problem:

[code]# Connection verification failed for data source: SMS
java.sql.SQLException: [Macromedia][SQLServer JDBC Driver]Error establishing socket. Connection refused: connect
The root cause was that: java.sql.SQLException: [Macromedia][SQLServer JDBC Driver]Error establishing socket. Connection refused: connect[/code]

First thing I checked (well second after making sure I had provided the right connection details) was to see if anything was listening port on port 1433 by using the handy "netstats -a" command. And there wasn't, so a quick Google search turned up<a href="http://www.robisen.com/index.cfm?mode=entry&amp;entry=BE1AB594-55DC-F2B1-F392552E0A41542A"> this gem from Robi Sen</a>. Sadly this tool didn't help me as apparently my version didn't need it, but a comment did point me to <a href="http://support.microsoft.com/kb/841251/" title="How to enable SQL Server connectivity on Windows XP Service Pack 2">a another link</a>. But sadly it didn't help me either, but the comment did give me an idea. When I went to check my network set up for MS SQL server, sure enough TCP/IP was not listed... What followed was a moment of banging my head sharply on the table.

Right changes applied, restarted the server, verify connection and...

[code]Connection verification failed for data source: SMS
java.sql.SQLException: [Macromedia][SQLServer JDBC Driver][SQLServer]Login failed for user 'hermes'. Reason: Not associated with a trusted SQL Server connection.
The root cause was that: java.sql.SQLException: [Macromedia][SQLServer JDBC Driver][SQLServer]Login failed for user 'yourUsername'. Reason: Not associated with a trusted SQL Server connection.[/code]

Well this one only took a few seconds to fix: <a href="http://www.banmanpro.com/support/sql2k.asp" title="Login Failed for User 'BanManProSQL', Not Associated with a trusted SQL Server Connection.">Windows Authentication only was enabled</a>! Simply open the properties of your server once more, check the security tab and you should see that the option for Windows Authentication is selected. Just change that to SQL server and Windows and you are ready to go...

I guess this is very much a case of damned if you do and damned if you don't for Microsoft as they seemed to have tightened up the security for MS SQL server (I won't even go into the nuisance of trying to install MSDE and being prompted to set an SA password before starting with no indication how to do so), but surely we should be given the option at install time to set these things? Or maybe it's just the MSDE?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>156</wp:post_id>
		<wp:post_date>2005-12-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmx-msde-connection-refused-error</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="category" nicename="ms-sql"><![CDATA[MS SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Beyond SQL injection attacks</title>
		<link>http://gregs.tcias.co.uk/2006/11/23/beyond-sql-injection-attacks/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=157</guid>
		<description></description>
		<content:encoded><![CDATA[Courtesy of Slashdot a reminder that you should also worry about <a title="Malicious Code Injection: It's Not Just for SQL Anymore" href="http://www.site-reference.com/articles/Website-Development/Malicious-Code-Injection-It-s-Not-Just-for-SQL-Anymore.html">other types of injection attacks</a>. Don't you just wish that everybody would play nice?

UPDATE

In a similar vein, Nadav Samet <a title="Prepare for Attack!â€”Making Your Web Applications More Secure" href="http://www.thesamet.com/blog/2007/01/16/prepare-for-attack%e2%80%94making-your-web-applications-more-secure/">covers off in more detail</a> Cross Site Scripting attacks, how they work and what you can do to protect your site.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date>2006-11-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>beyond-sql-injection-attacks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ms-sql"><![CDATA[MS SQL]]></category>
		<category domain="category" nicename="mysql"><![CDATA[MySQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Swapping out Batik</title>
		<link>http://gregs.tcias.co.uk/2006/11/09/swapping-out-batik/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=158</guid>
		<description></description>
		<content:encoded><![CDATA[A while back I was tinkering with converting SVG output to PNG using Batik, but I was not having much luck with it as it seemed that the Batik jar files that come with CFMX were out of date or plain missing some methods. I gave up, but a colleague of mine, Zac, picked up the baton and has come up with a solution. Now before you dive in and follow these steps, bare in mind that this is just our first day of using this, so even though Flash forms still appear to be working there may well be cases that we haven't stumbled across yet, where our changes have broken CF (and for the record we don't use Flash Forms, Charts or anything flex related). So in other words use this 'tip' with caution!!

Still reading? Awesome, so here's what we came up with, first off the Batik version that ships with CFMX 7 is 1.5.1, so head over to the <a title="Apache Archive" href="http://archive.apache.org/dist/xml/batik/">Apache Archive</a> and download the 1.5.1 version from the archive. In essence we'll be replacing like for like. Once downloaded locate the the <em>cfforms\jars</em> folder in your CFMX installation (on windows standard you'll find it under C:\CFusionMX7\wwwroot\WEB-INF\cfform\jars).

Before continuing make sure you back up all of the batik files located there (i.e. batik-awt-util.jar, batik-css.jar, batik-ext.jar, batik-transcoder.jar and batik-util.jar) and move them out of the CFMX install folder. Once done, just extract the lib and extensions folder as well as the batik-*.jar files into <em>cfform\jars</em> folder. Once done all you need to do is restart CFMX and the updated JAR files will load (you may want to consider to launch CFMX in debug mode to make sure nothing bad is happening).
<h4>Update</h4>
Barney Boisvert got in touch to let me know that he is done something similar, but used a newer version of Batik. <a title="Barney Blog" href="http://barneyb.com/barneyblog/index.php?s=batik&amp;searchsubmit=Go">Follow the link</a> to see his posts on the topic.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2006-11-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swapping-out-batik</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CFMX and the PowerBookPro</title>
		<link>http://gregs.tcias.co.uk/2006/07/04/cfmx-and-the-powerbookpro/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[A wee while back the Mac PowerBookPros received a JVM update. This brings it up to  version 1.5.06, which is fabulous, but of course stops you from being able to run ColdFusion. Thankfully the JVM upgrade leaves the old versions on your system. The simple trick to get your CFMX installation to wok again after the upgrade is to run the start up script from the console with the path to the old JVM like such:

[code]sudo /System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Commands/java -jar /Applications/JRun4/lib/jrun.jar -start cfusion &amp;[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2006-07-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cfmx-and-the-powerbookpro</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>encodeURIComponent()</title>
		<link>http://gregs.tcias.co.uk/2006/06/30/encodeuricomponent/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=160</guid>
		<description></description>
		<content:encoded><![CDATA[I just stumbled across <a title="Update to Spelling Integration" href="http://labs.redbd.net/blog/index.cfm/2006/6/22/Update-to-Spelling-Integration">this post</a> from the <a title="RedBalloon Days - Gift Ideas - Certificates &amp; Experience Vouchers - Australia" href="http://www.redballoondays.com.au/">Red Balloon</a> guys, which reminded me that I wanted to blog about this great little resource about <a title="Comparing escape(), encodeURI(), and encodeURIComponent()" href="http://xkr.us/articles/javascript/encode-compare/">the subtle differences of URL encoding and JavaScript</a>.

The bottom line of this article is that 9 times out of 10 you'll want to be using <em>encodeURIComponent()</em> to encode vars that are to be passed as part of a URL instead of the <em>escape()</em> method.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>160</wp:post_id>
		<wp:post_date>2006-06-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>encodeuricomponent</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VI pattern matching</title>
		<link>http://gregs.tcias.co.uk/2006/06/29/vi-pattern-matching/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[Editing documents using vi is something of pain, especially when they are long and you know the bit you are after is buried somewhere in the middle. There is a similar to way to the Find command in GUI editors that allows you to jump to that section:

[code]
/yourPattern[/code]

Simply substitute '<em>yourPattern</em>' for the string you are looking for and after hitting return, the cursor will jump to the first found match. If you wish to see the next one, then simply type '/' (without the quotation marks) and hit return again.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2006-06-29 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vi-pattern-matching</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AUTO INCREMENT</title>
		<link>http://gregs.tcias.co.uk/2006/06/29/auto-increment/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=162</guid>
		<description></description>
		<content:encoded><![CDATA[Since the MySQL Query Browser on my Mac refused to let me set a field as auto increment through the GUI, here's how you can using SQL change an existing column to use auto_increment:

[sql]
ALTER TABLE `aggregatedWeekly` CHANGE `Id` `Id` INT( 6 ) UNSIGNED NOT NULL AUTO_INCREMENT
[/sql]
<h4>UPDATE</h4>
I have also recently found out that the following works just as well:

<code>[sql]ALTER TABLE `aggregatedWeekly` AUTO_INCREMENT=1[/sql]</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2006-06-29 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>auto-increment</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[MySQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FireBug</title>
		<link>http://gregs.tcias.co.uk/2006/02/23/firebug/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=163</guid>
		<description></description>
		<content:encoded><![CDATA[Now I can't remember where I stumbled across this little gem of a plug in for FireFox: <a href="https://addons.mozilla.org/extensions/moreinfo.php?id=1843&amp;application=firefox">FireBug</a>, but yesterday it completely surprised me.

I originally had installed it because it was meant to be far better at debugging <acronym title="JavaScript">JS</acronym>, than the new version of the JavaScript Console that was shipped with FireFox 1.5 and that it was. So I have been using it for a while now, but yesterday I stumbled across a feature that makes it utterly invaluable now. I do a lot of <acronym title="Asynchronous JavaScript + XML">Ajax</acronym> based development these days and sometimes trying to figure out what is going on under the hood is a little problematic. However if you open it up and look at the options, you'll see an option to show XmlHttpRequests disabled. Enable it and make a remoting call.

Along with the usual <acronym title="JavaScript">JS</acronym>/<acronym title="Cascading Style Sheets">CSS</acronym> debug you should now see something like this:

<a href="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug1.png" title="Firebug screenshot 1"><img src="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug1.png" alt="Firebug screenshot 1" /></a>

If you click on the Response Tab you can see what has been returned to the browser.

<a href="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug2.png" title="Firebug screenshot 2"><img src="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug2.png" alt="Firebug screenshot 2" /></a>

And if you click on the <acronym title="JavaScript">JS</acronym> tab you can inspect the whole response object.

<a href="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug3.png" title="Firebug screenshot 3"><img src="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/firebug3.png" alt="Firebug screenshot 3" /></a>

Awesome!

And since it's been so long between posts here a couple of other useful <acronym title="Asynchronous JavaScript + XML">Ajax</acronym>/prototype links:
<ul>
	<li>It's all over the Internet but getting started can be tricky: <a href="http://www.sitepoint.com/article/painless-javascript-prototype" title="Painless JavaScript Using Prototype">Painless JavaScript Using Prototype</a></li>
	<li><a href="http://www.prototypedoc.com/" title="Prototype Documentation&lt;br&gt;&lt;/a&gt;">More prototype</a> documentation</li>
	<li><a href="http://bennolan.com/behaviour/" title="Behaviour : Using CSS selectors to apply Javascript behaviours">Behaviour</a> the perfect way to write unobtrusive JavaScript</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2006-02-23 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>firebug</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Generic Form validation part ii</title>
		<link>http://gregs.tcias.co.uk/2005/10/31/generic-form-validation-part-ii/</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[A few weeks back someone on the CFDJ list enquired about JavaScript form validation and pointed them in the direction of my script, however I only just realised that the script itself was no longer working. Oops... so apologies, but I have fixed up the problems and done made it sure it works for the following browsers.
<ul>
	<li>Win XP / Netscape 4.7x</li>
	<li>Win XP / IE 6</li>
	<li>Win XP / Mozilla 1.4</li>
	<li>Win 2K / IE 6</li>
	<li>Win 2K / Mozilla 1.5</li>
	<li>Win XP / Firefox 0.8</li>
</ul>
If you have access to ones not on the list, I'd be grateful for any feedback. The revised version with sample file can be found <a href="http://gregs.tcias.co.uk/wp-content/uploads/2007/02/validate.zip" title="Validate zip file">here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>357</wp:post_id>
		<wp:post_date>2005-10-31 00:00:00</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>generic-form-validation-part-ii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Back!!</title>
		<link>http://gregs.tcias.co.uk/2007/03/06/back/</link>
		<pubDate>Tue, 06 Mar 2007 07:55:30 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=446</guid>
		<description></description>
		<content:encoded><![CDATA[After nearly three weeks of downtime, the site is back up. The move from my own little blogging tool to <a title="WordPress" href="http://wordpress.org/">WordPress</a> has been relatively painless... There was a small performance issue with 2.1 (which was rather drastic on my 64 meg VM), but the latest patch to 2.1.2 seems to have addressed this, as well as a <a title="WordPress 2.1.1 dangerous, Upgrade to 2.1.2" href="http://wordpress.org/development/2007/03/upgrade-212/">security exploit</a>.

One of the interesting side effects of this migration (well to me anyway), was the realisation that I have published 409 tidbits since October 2001.  Some of the writing is really quite amusing and in hindsight wrong. The spelling and grammar equally so... but hey you got to start somewhere.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>441</wp:post_id>
		<wp:post_date>2007-03-06 18:55:30</wp:post_date>
		<wp:post_date_gmt>2007-03-06 07:55:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>back</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>757</wp:comment_id>
			<wp:comment_author><![CDATA[Nick Tong]]></wp:comment_author>
			<wp:comment_author_email>n.tong@talkwebsolutions.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://succor.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>83.104.48.224</wp:comment_author_IP>
			<wp:comment_date>2007-03-06 19:05:22</wp:comment_date>
			<wp:comment_date_gmt>2007-03-06 08:05:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good to see you back Greg.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>758</wp:comment_id>
			<wp:comment_author><![CDATA[Zac]]></wp:comment_author>
			<wp:comment_author_email>zacbarton@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.206.16.166</wp:comment_author_IP>
			<wp:comment_date>2007-03-07 11:24:56</wp:comment_date>
			<wp:comment_date_gmt>2007-03-07 00:24:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yep good to see your back mate]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>&quot;We have a policy that we are not being hacked.&quot;</title>
		<link>http://gregs.tcias.co.uk/2007/03/06/we-have-a-policy-that-we-are-not-being-hacked/</link>
		<pubDate>Tue, 06 Mar 2007 08:01:24 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=447</guid>
		<description></description>
		<content:encoded><![CDATA[Probably an old hat for most, but I just stumbled across <a title="I have a policy that this will be the best weblog post ever" href="http://www.kottke.org/04/07/my-new-policy">this post from Kottke</a>. Classic!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>442</wp:post_id>
		<wp:post_date>2007-03-06 19:01:24</wp:post_date>
		<wp:post_date_gmt>2007-03-06 08:01:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>we-have-a-policy-that-we-are-not-being-hacked</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Embedded image</title>
		<link>http://gregs.tcias.co.uk/2007/03/13/embedded-image/</link>
		<pubDate>Tue, 13 Mar 2007 04:26:37 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=448</guid>
		<description></description>
		<content:encoded><![CDATA[A client recently decided to start storing all of their images in a database and usually we would point the image source to a cfm page, where we'd do something like this:

[code]

request.uploadedPic = application.staffManager.getStaffImage(session.user.getId());
context = getPageContext();
context.setFlushOutput(false);
response = context.getResponse().getResponse();
out = response.getOutputStream();
response.setContentType("image/jpeg");
response.setContentLength(arrayLen(request.uploadedPic['staffPhoto'][1]));
out.write(request.uploadedPic['staffPhoto'][1]);
out.flush();
response.reset();
out.close();

[/code]

Which worked nicely until I read about some <a title="CFDocument performance" href="http://www.webapper.net/index.cfm/2007/2/18/CFDocument-performance">performance issues</a> with http calls and the cfdocument tag. Zac (yes his name pops up a lot in this blog), put me onto directly embedding the image into the source, like such:

[code]<img src="data:image/jpeg;base64,&lt;cfoutput&gt;#BinaryEncode(request.uploadedPic['staffPhoto'][1],'Base64')#&lt;/cfoutput&gt;" alt="Embedded Image" />[/code]

No need to make a http call to display the image anymore.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>443</wp:post_id>
		<wp:post_date>2007-03-13 15:26:37</wp:post_date>
		<wp:post_date_gmt>2007-03-13 04:26:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>embedded-image</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1088</wp:comment_id>
			<wp:comment_author><![CDATA[gregs &raquo; Blog Archive &raquo; Embedded images an IE work around]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk/2008/05/18/embedded-images-an-ie-work-around/</wp:comment_author_url>
			<wp:comment_author_IP>70.85.129.121</wp:comment_author_IP>
			<wp:comment_date>2008-05-18 22:13:06</wp:comment_date>
			<wp:comment_date_gmt>2008-05-19 02:13:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] while back I posted about using the data:image/jpeg;base64 to directly embed the image in to the source attribute of an [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>765</wp:comment_id>
			<wp:comment_author><![CDATA[Ben Nadel]]></wp:comment_author>
			<wp:comment_author_email>ben@bennadel.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.bennadel.com</wp:comment_author_url>
			<wp:comment_author_IP>72.229.149.126</wp:comment_author_IP>
			<wp:comment_date>2007-03-15 13:14:03</wp:comment_date>
			<wp:comment_date_gmt>2007-03-15 02:14:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Does that embedded data thing work on all the modern browsers? That is totally awesome.

Also, all that stuff you are doing in the first example was all required pre MX7 (getting the underlying byte stream and all). If you are on MX7, you can use the CFContent / variable attribute to stream binary data to the client:]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>766</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan]]></wp:comment_author>
			<wp:comment_author_email>ryan@cfwebtools.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.stillnetstudios.com</wp:comment_author_url>
			<wp:comment_author_IP>66.37.232.194</wp:comment_author_IP>
			<wp:comment_date>2007-03-16 00:40:27</wp:comment_date>
			<wp:comment_date_gmt>2007-03-15 13:40:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I thought this method only worked in FireFox?

You should embed a test image in this post, then we can all try it out.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>767</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.teacupinastorm.com/</wp:comment_author_url>
			<wp:comment_author_IP>59.101.20.184</wp:comment_author_IP>
			<wp:comment_date>2007-03-16 09:41:52</wp:comment_date>
			<wp:comment_date_gmt>2007-03-15 22:41:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It works for both FireFox and Safari. Just had a quick go using IE7 and sadly this trick doesn't work.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>223385</wp:comment_id>
			<wp:comment_author><![CDATA[Giancarlo Gomez]]></wp:comment_author>
			<wp:comment_author_email>jc@fusedevelopments.com</wp:comment_author_email>
			<wp:comment_author_url>http://FuseDevelopments,Inc</wp:comment_author_url>
			<wp:comment_author_IP>107.203.194.250</wp:comment_author_IP>
			<wp:comment_date>2012-11-25 22:54:22</wp:comment_date>
			<wp:comment_date_gmt>2012-11-25 22:54:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you tested this lately on CF10? I am trying to embed images which I know are being created properly since I can render in a browser but when trying to embed on cfdocument it fails.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1353884062.291";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1353920897.7405";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>223516</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>87.86.104.109</wp:comment_author_IP>
			<wp:comment_date>2012-11-26 09:09:04</wp:comment_date>
			<wp:comment_date_gmt>2012-11-26 09:09:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am afraid I haven't. It's been a while since I have played with any CF related.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>223385</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1353920944.7923";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Announcing project: Stubbie</title>
		<link>http://gregs.tcias.co.uk/2007/04/24/announcing-project-stubbie/</link>
		<pubDate>Tue, 24 Apr 2007 02:12:39 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=449</guid>
		<description></description>
		<content:encoded><![CDATA[Just a quick note to let folks know that I have created a small project on <a href="http://www.riaforge.org/">RIA Forge</a> called <a href="http://stubbie.riaforge.org/">Stubbie</a>. Inspired by a feature in Rails, Stubbie basically creates a set of test stubs for your apps CFCs. I have set up specific blog for it over at RIA forge to keep everything in one place, but will post updates here as well.

Also there's no code yet, still one or two things I need to sort out before I'll make the first 0.1 release.
I'd just like to thank a few people who helped get this project of the ground:

Special thanks must go to Stephen (Spike) Milligan for allowing me to use his CFCDoc code which allowed me to quickly build the project without having to worry about the File System and CFC parsing.

Seth Petry-Johnson also deserves a special mention for allowing me to use his VarScopeChecker.cfc as part of the project so that we can all benefit from a var scope unit test.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>444</wp:post_id>
		<wp:post_date>2007-04-24 13:12:39</wp:post_date>
		<wp:post_date_gmt>2007-04-24 02:12:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>announcing-project-stubbie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Kudos Linode</title>
		<link>http://gregs.tcias.co.uk/2007/04/27/kudos-linode/</link>
		<pubDate>Fri, 27 Apr 2007 00:56:34 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=450</guid>
		<description></description>
		<content:encoded><![CDATA[A big thank you to <a href="http://www.linode.com/">Linode</a> for once again up-ing theÂ  resources for my hosting plan. This <a href="http://en.wikipedia.org/wiki/User-mode_Linux">UML</a> instance now has 256Meg of Ram and 8 Gig of storage space as well as 100Gig transfer cap. Combine that with an awesome service and you have a winner. Thanks again Linode!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>445</wp:post_id>
		<wp:post_date>2007-04-27 11:56:34</wp:post_date>
		<wp:post_date_gmt>2007-04-27 00:56:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>kudos-linode</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linode"><![CDATA[linode]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>804</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Greb]]></wp:comment_author>
			<wp:comment_author_email>michael@thegrebs.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.171.186.226</wp:comment_author_IP>
			<wp:comment_date>2007-04-29 03:05:24</wp:comment_date>
			<wp:comment_date_gmt>2007-04-28 16:05:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No problem, enjoy your new resources.  Don't forget, you can have your blog added to Planet Linode, http://www.linode.com/planet/, if you'd like.  A quick and easy way to increase traffic and page rank ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>805</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.teacupinastorm.com/</wp:comment_author_url>
			<wp:comment_author_IP>61.68.17.254</wp:comment_author_IP>
			<wp:comment_date>2007-05-24 11:01:42</wp:comment_date>
			<wp:comment_date_gmt>2007-05-24 00:01:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@James

I used to run BD6.x on a Debian Linode but with the upgrade to 7 the free version required more resources than were available at the time. Now that my Linode was upgraded it's on my todo list.

In the meantime, probably the best place to ask questions like that would be the BlueDragon Mailing list (you can subscribe here: http://www.newatlanta.com/support/bluedragon/self_help/archive_search/index.jsp)

Cheers
Greg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>806</wp:comment_id>
			<wp:comment_author><![CDATA[James Munch]]></wp:comment_author>
			<wp:comment_author_email>james.munch@cox.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.munchsoft.com</wp:comment_author_url>
			<wp:comment_author_IP>68.102.58.24</wp:comment_author_IP>
			<wp:comment_date>2007-05-24 10:07:20</wp:comment_date>
			<wp:comment_date_gmt>2007-05-23 23:07:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Are you running BlueDragon on Debian Sarge on a linode?  I am using a vpslink Debian server and I'm having trouble getting BlueDragon running.  I tried using your instructions and have yet to get the server running.  It's acting like it can't find java in the BD directory when I try to fire it up.  Do you know of any other resources I can use to get this server up and running?

Thanks,

James]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Welcome to Stubbie project blog</title>
		<link>http://gregs.tcias.co.uk/2007/04/23/welcome-to-stubbie-project-blog/</link>
		<pubDate>Tue, 24 Apr 2007 00:38:24 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=527</guid>
		<description></description>
		<content:encoded><![CDATA[I hope that people will find this project useful in their day to day development.

So what is Stubbie? The short and sweet is: it creates a set of test stub objects to be used in your unit tests based on your projects CFCs.

Slightly more protracted: Stubbie was inspired by a feature in Rails that creates stub test objects based on objects found in your application.

You can run Stubbie standalone or as a plugin (there is a Mach-ii plugin available) and on execution it will recursively examine your projects code for CFCs and generate generic test objects for you, as well as a Test Suite. No more excuses to not use Unit Testing.

It currently supports both CFUnit and CFCUnit.

It's all a bit slap dash right now, but I hope to tidy things up in the near future (and actually upload some code for you to download). Of course feedback, critiques and suggestions are always welcome.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>527</wp:post_id>
		<wp:post_date>2007-04-23 20:38:24</wp:post_date>
		<wp:post_date_gmt>2007-04-24 00:38:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>welcome-to-stubbie-project-blog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IE , the dom and long numbers</title>
		<link>http://gregs.tcias.co.uk/2007/04/27/ie-the-dom-and-long-numbers/</link>
		<pubDate>Fri, 27 Apr 2007 02:47:39 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=451</guid>
		<description></description>
		<content:encoded><![CDATA[I just spent the best part of 45 minutes trying to figure out a weird issue with a value I was pulling out of a select box (using $F(element)).  The value in question was a long number: 1000002229651626, which IE converted at the time of writing the value to the page (this was an AJAX call) to: 1.00000222965163e+15.

IE decided to convert my number when I was using the new Option() method to populate the drop down, making the debug process even harder. I personally can't wait until we get a firebug like extension for IE, right now I'd just settle for an option to view the rendered source.

Rant over, the solution is to convert the number to a string:

[js]
selectBox[x] = new Option('Some text',new String(1000002229651626),false);
[/js]

On the plus side I came across a neat way to debug values in a form field using the address the browser address bar:

[code]
javascript:alert(document.all.myfield.value); void(0)
[/code]

And to see what IE had actually written to the page:

[code]

javascript:alert(document.all.myfield.innerHTML ); void(0)

[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>446</wp:post_id>
		<wp:post_date>2007-04-27 13:47:39</wp:post_date>
		<wp:post_date_gmt>2007-04-27 02:47:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ie-the-dom-and-long-numbers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>813</wp:comment_id>
			<wp:comment_author><![CDATA[John Morgan]]></wp:comment_author>
			<wp:comment_author_email>jmorgan@gameczar.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>199.46.245.232</wp:comment_author_IP>
			<wp:comment_date>2007-07-20 08:22:03</wp:comment_date>
			<wp:comment_date_gmt>2007-07-19 21:22:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You should check out the "IE Developer Toolbar." It has many of the things you wish IE had.

http://www.microsoft.com/downloads/details.aspx?familyid=e59c3964-672d-4511-bb3e-2d5e1db91038&amp;displaylang=en

Given this code...





	Untitled




Testing

	h1Test.style.color = "red";
	h1Test.innerHTML = "Post Test";






I can view "Element Source" for "h1Test" and see this code...






	Post Test




Pretty sweet!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>814</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.teacupinastorm.com/</wp:comment_author_url>
			<wp:comment_author_IP>59.101.44.27</wp:comment_author_IP>
			<wp:comment_date>2007-07-25 09:37:41</wp:comment_date>
			<wp:comment_date_gmt>2007-07-24 22:37:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks John I'll be sure to check this out.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Stubbie 0.1 available for download</title>
		<link>http://gregs.tcias.co.uk/2007/05/04/stubbie-01-available-for-download/</link>
		<pubDate>Fri, 04 May 2007 01:48:30 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=452</guid>
		<description></description>
		<content:encoded><![CDATA[Just wanted to let folks know, and with trepidation, that the 0.1 release of Stubbie is available for download from <a title="Stubbie project page" href="http://stubbie.riaforge.org/">the project page</a>. I have also added a few blog posts to the project:
<ul>
	<li><a title="Basic install instructions" href="http://stubbie.riaforge.org/blog/index.cfm/2007/5/3/Installing-and-using-Stubbie">Basic install instructions</a></li>
	<li><a title="Download Stubbie" href="http://stubbie.riaforge.org/blog/index.cfm/2007/5/3/Download-Stubbie">Links for feedback, issues and suggestions</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date>2007-05-04 12:48:30</wp:post_date>
		<wp:post_date_gmt>2007-05-04 01:48:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stubbie-01-available-for-download</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Google Maps links</title>
		<link>http://gregs.tcias.co.uk/2007/06/26/google-map-links/</link>
		<pubDate>Tue, 26 Jun 2007 01:01:52 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=453</guid>
		<description></description>
		<content:encoded><![CDATA[A bit late to the game, but to save me looking these up again, here are a couple of links with some great explanations on how to use the <a title="Google Maps API" href="http://www.google.com/apis/maps/">Google Maps API </a> and the Geocoding functionality:
<ul>
	<li> <a title="Google Maps API Tutorial" href="http://www.econym.demon.co.uk/googlemaps/">Google Maps API Tutorial</a></li>
	<li><a rel="bookmark" href="http://earthcode.com/blog/2006/04/rails_geocoding_and_google_map.html">Rails, Geocoding, and Google Maps</a></li>
	<li><a title="Google Maps Mania" href="http://googlemapsmania.blogspot.com/">Google maps mania</a></li>
</ul>
UPDATE

Nick Tong sent through this link by email, which is specific to UK based Geocoding, however it also contains a wealth of additional information:
<a href="http://googlemapsapi.blogspot.com/2007/07/uk-geocoding-now-available-in-maps-api.html">UK Geocoding Now Available in the Maps API</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>448</wp:post_id>
		<wp:post_date>2007-06-26 12:01:52</wp:post_date>
		<wp:post_date_gmt>2007-06-26 01:01:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>google-map-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="google"><![CDATA[google]]></category>
		<category domain="category" nicename="maps"><![CDATA[maps]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>827</wp:comment_id>
			<wp:comment_author><![CDATA[Nick Tong]]></wp:comment_author>
			<wp:comment_author_email>n.tong@talkwebsolutions.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://succor.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>83.104.48.224</wp:comment_author_IP>
			<wp:comment_date>2007-07-08 18:11:30</wp:comment_date>
			<wp:comment_date_gmt>2007-07-08 07:11:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Another good link for demos etc is: http://www.econym.demon.co.uk/googlemaps/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>828</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.teacupinastorm.com/</wp:comment_author_url>
			<wp:comment_author_IP>59.101.41.209</wp:comment_author_IP>
			<wp:comment_date>2007-07-09 11:10:42</wp:comment_date>
			<wp:comment_date_gmt>2007-07-09 00:10:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Nick, but that was the first link :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14692</wp:comment_id>
			<wp:comment_author><![CDATA[wessite]]></wp:comment_author>
			<wp:comment_author_email>luytenwesley@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.bmxaction.net</wp:comment_author_url>
			<wp:comment_author_IP>81.245.198.235</wp:comment_author_IP>
			<wp:comment_date>2008-08-10 17:52:09</wp:comment_date>
			<wp:comment_date_gmt>2008-08-10 21:52:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the links, very useful. I made a bmx map with the help of the tutorial. Check it out here: <a href="http://www.bmxaction.net/blog/bmxspots" title="bmx tracks" rel="nofollow">BMX Tracks Map</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>SQL to XML</title>
		<link>http://gregs.tcias.co.uk/2007/08/29/sql-to-xml/</link>
		<pubDate>Wed, 29 Aug 2007 05:12:45 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=455</guid>
		<description></description>
		<content:encoded><![CDATA[Just came across this neat trick that uses SQL to generate XML on the fly:

[code]
DECLARE @x xml
SET @x=(select geoAreaCode
, geoLevelCode
, geoLevelId
, geoAreaId
from tbl_geoLevel
where uuid =
for xml raw('geoArea'), root('geoAreas'), type)
SELECT @x AS geoAreaInfo
[/code]

The above will create an XML structure that has a root value of geoAreas and child elements of geoArea for each row found.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>450</wp:post_id>
		<wp:post_date>2007-08-29 16:12:45</wp:post_date>
		<wp:post_date_gmt>2007-08-29 05:12:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-to-xml</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ms-sql"><![CDATA[MS SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>More *nix command line fun</title>
		<link>http://gregs.tcias.co.uk/2007/09/11/more-nix-command-line-fun/</link>
		<pubDate>Tue, 11 Sep 2007 08:38:26 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=456</guid>
		<description></description>
		<content:encoded><![CDATA[I don't know how often I have tried to start up a process and forgotten that it runs as root, forcing me to type the command in again prefixing it with sudo. That was until today, if you suffer from the same level of  forgetfulness then <strong>sudo!!</strong> is for you.

[code]
my-computer:~ user$ /usr/local/apache2/bin/apachectl start
(13)Permission denied: make_sock: could not bind to address [::]:80
no listening sockets available, shutting down
Unable to open logs
my-computer:~ user$ sudo !!
sudo /usr/local/apache2/bin/apachectl start
my-computer:~ user$
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>451</wp:post_id>
		<wp:post_date>2007-09-11 19:38:26</wp:post_date>
		<wp:post_date_gmt>2007-09-11 08:38:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-nix-command-line-fun</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Grids</title>
		<link>http://gregs.tcias.co.uk/2007/10/26/grids/</link>
		<pubDate>Fri, 26 Oct 2007 05:21:44 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=457</guid>
		<description></description>
		<content:encoded><![CDATA[A new project is looming large and it's another UI rework, giving me the perfect excuse to look into a framework for CSS that I read about a while back. <a href="http://code.google.com/p/blueprintcss/">BluePrint</a> is a grid based CSS framework.

Initially I wasn't too sure how you would translate grids to web pages, but <a href="http://subtraction.com/archives/2007/0318_oh_yeeaahh.php">this blog post</a> and presentation, certainly helped in letting the penny drop. The presentation goes into a lot of depth about grid based design and takes you through calculating your grid to applying a design.

There's also a healthy discussion going on around the web about the pros and cons of the framework which has the <a title="The myth of content and presentation separation" href="http://www2.jeffcroft.com/blog/2007/aug/09/myth-content-and-presentation-separation/">Standardista's up in arms</a>, but gets a lot of backing from folks who just want to get the job done.

My initial impression is very favourable. For those who want to read more here's a bunch of additional links:
<ul>
	<li><a href="http://kematzy.com/blueprint-generator/">Blueprint Grid CSS Generator</a></li>
	<li><a href="http://gamemakker.co.uk/2007/08/05/blueprint-a-css-framework/">Blueprint: A CSS Framework (Updated to 0.5)</a></li>
	<li><a href="http://bjorkoy.com/">Raging Thunderbolt</a></li>
	<li><a href="http://www.blueflavor.com/blog/design/blueprintcss_101.php">BlueprintCSS 101</a></li>
	<li><a href="http://www.stonemind.net/blog/2007/08/25/first-impressions-of-the-blueprint-css-framework/">First Impressions of the Blueprint CSS Framework</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>452</wp:post_id>
		<wp:post_date>2007-10-26 16:21:44</wp:post_date>
		<wp:post_date_gmt>2007-10-26 05:21:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>grids</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Only in Russia</title>
		<link>http://gregs.tcias.co.uk/2007/12/05/only-in-russia/</link>
		<pubDate>Wed, 05 Dec 2007 06:27:40 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=458</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="center"><img title="Communal juice glass, Moscow, 1990" src="http://davidhlynsky.com/windowshoppages/windowshopimages/food/communalcup.jpg" alt="Communal juice glass, Moscow, 1990" width="432" height="432" /></p>
<p align="center"></p>
<p align="left">Entitled  "<a title="Communal juice glass, Moscow, 1990" href="http://davidhlynsky.com/windowshoppages/fo_communalcup.html">Communal juice glass, Moscow, 1990</a>". Brings back memories of my time spent studying and working in Russia, many, many moons ago. <a title="shop : Communist era store windows" href="http://davidhlynsky.com/WindowShopMain.html">The site</a> has a great collection of shop front photos from the communist era.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>453</wp:post_id>
		<wp:post_date>2007-12-05 17:27:40</wp:post_date>
		<wp:post_date_gmt>2007-12-05 06:27:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>only-in-russia</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[photos]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Software engineering explained</title>
		<link>http://gregs.tcias.co.uk/2007/12/12/software-engineering-explained/</link>
		<pubDate>Wed, 12 Dec 2007 09:05:43 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=459</guid>
		<description></description>
		<content:encoded><![CDATA[Great image courtesy of  <a title="On Software 'Engineering'" href="http://www.codinghorror.com/blog/archives/000230.html">Coding Horror</a>:
<p align="center"><img title="Software Engineering Explained" src="http://codinghorror.typepad.com/.a/6a0120a85dcdae970b0128776faf6b970c-pi" alt="Software Engineering Explained" width="640" height="480" /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date>2007-12-12 20:05:43</wp:post_date>
		<wp:post_date_gmt>2007-12-12 09:05:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>software-engineering-explained</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Happy New Year...</title>
		<link>http://gregs.tcias.co.uk/2008/01/04/happy-new-year/</link>
		<pubDate>Fri, 04 Jan 2008 03:46:44 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/2008/01/04/happy-new-year/</guid>
		<description></description>
		<content:encoded><![CDATA[... to one and all.

New year, new look, search engine friendly URLs, fresh apache 2 install, ditto for MySQL. Add to that an additional 20% of RAM (thank you <a title="Linode.com" href="http://www.linode.com/">Linode</a>!!), all in all a good start to the new year, promises to be a good one. :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>460</wp:post_id>
		<wp:post_date>2008-01-04 14:46:44</wp:post_date>
		<wp:post_date_gmt>2008-01-04 03:46:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>happy-new-year</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linode"><![CDATA[linode]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>837</wp:comment_id>
			<wp:comment_author><![CDATA[caker]]></wp:comment_author>
			<wp:comment_author_email>caker@linode.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.linode.com</wp:comment_author_url>
			<wp:comment_author_IP>71.59.102.47</wp:comment_author_IP>
			<wp:comment_date>2008-01-16 14:16:00</wp:comment_date>
			<wp:comment_date_gmt>2008-01-16 03:16:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Enjoy the extra RAM and have a great year :)

-Chris]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Bad Network Solutions, bad</title>
		<link>http://gregs.tcias.co.uk/2008/01/09/bad-network-solutions-bad/</link>
		<pubDate>Wed, 09 Jan 2008 07:26:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/2008/01/09/bad-network-solutions-bad/</guid>
		<description></description>
		<content:encoded><![CDATA[Courtesy of <a title="NSI Registers Every Domain Checked" href="http://slashdot.org/article.pl?sid=08/01/08/1920215">Slashdot</a>, news that Network Solutions are front running domain names. I don't care much for <a title="Network Solutions Responds to Front Running Accusations" href="http://www.circleid.com/posts/81082_network_solutions_front_running/">their response</a> that this is to protect us, the customer, from evil do-ers. Especially when they charge a <a title="Domain Pricing Chart" href="http://www.networksolutions.com/domain-name-registration/pricing-chart.jsp">premium</a> ($34.99) for their domain names, whereas services like <a href="http://www.godaddy.com/gdshop/default.asp">Go Daddy</a> offer them for $9.99. Way to go Network Solutions!!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>462</wp:post_id>
		<wp:post_date>2008-01-09 18:26:00</wp:post_date>
		<wp:post_date_gmt>2008-01-09 07:26:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bad-network-solutions-bad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Restricting FTP passive ports</title>
		<link>http://gregs.tcias.co.uk/2008/01/10/restricting-ftp-passive-ports/</link>
		<pubDate>Thu, 10 Jan 2008 07:18:16 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/2008/01/10/restricting-ftp-passive-ports/</guid>
		<description></description>
		<content:encoded><![CDATA[After a full day of messages going backwards and forwards between myself and our firewall admins, here's a <a title="Configuring Windows 2003 Firewall and IIS 6 for pasv ftp port range" href="http://clintm.esria.com/2006/11/20/configuring-windows-2003-firewall-and-iis-6-for-pasv-ftp-port-range/">gem of a post</a> with a script to restrict the port range used by passive FTP on Windows 2003 server (as well as telling Windows Firewall to leave those ports open). Who would have thought securing FTP would be so involved...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>463</wp:post_id>
		<wp:post_date>2008-01-10 18:18:16</wp:post_date>
		<wp:post_date_gmt>2008-01-10 07:18:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>restricting-ftp-passive-ports</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>48420</wp:comment_id>
			<wp:comment_author><![CDATA[Simon]]></wp:comment_author>
			<wp:comment_author_email>simon@kysi2.com</wp:comment_author_email>
			<wp:comment_author_url>http://simonashley.me.uk</wp:comment_author_url>
			<wp:comment_author_IP>90.197.167.65</wp:comment_author_IP>
			<wp:comment_date>2009-04-07 19:36:54</wp:comment_date>
			<wp:comment_date_gmt>2009-04-07 23:36:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yep this is great. Found this a while back too. But the question is, how do we do this on Windows 2008 server with the new fandangled WFAS. When I know, I'll drop you a line or if you find out, please post :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48422</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>124.183.93.233</wp:comment_author_IP>
			<wp:comment_date>2009-04-07 19:45:14</wp:comment_date>
			<wp:comment_date_gmt>2009-04-07 23:45:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Please do. No windows 2008 servers in our organisation yet, but I am sure it'll happen... I did a quick Google search and came across this: http://technet.microsoft.com/en-us/library/dd421710.aspx. Maybe this will help?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Embedded images an IE work around</title>
		<link>http://gregs.tcias.co.uk/2008/05/18/embedded-images-an-ie-work-around/</link>
		<pubDate>Mon, 19 May 2008 02:13:04 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=466</guid>
		<description></description>
		<content:encoded><![CDATA[A while back <a title="Embedded image" href="http://gregs.tcias.co.uk/2007/03/13/embedded-image/">I posted</a> about using the <em>data:image/jpeg;base64</em> to directly embed the image in to the source attribute of an image tag, however this did not work with IE. Today <a title="jsimgs: embedded images in web pages - php encoder" href="http://ddzoom.net/jsimages/out.htm">I stumbled across</a> this JavasScript solution. Certainly an option, though in my case it was overkill, however I thought others might find it useful.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>466</wp:post_id>
		<wp:post_date>2008-05-18 22:13:04</wp:post_date>
		<wp:post_date_gmt>2008-05-19 02:13:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>embedded-images-an-ie-work-around</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IIS virtualhosts and SSL</title>
		<link>http://gregs.tcias.co.uk/2008/05/21/iis-virtualhosts-and-ssl/</link>
		<pubDate>Wed, 21 May 2008 05:09:04 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=467</guid>
		<description></description>
		<content:encoded><![CDATA[For posterity, if you are configuring several websites, that use the same IP/port combination for SSL and you are using host headers to identify them, then you'll need to<a title="Configuring SSL Host Headers (IIS 6.0)" href="http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/596b9108-b1a7-494d-885d-f8941b07554c.mspx?mfr=true"> follow these steps</a>, particularly <a title="Configuring Server Bindings for SSL Host Headers (IIS 6.0)" href="http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/596b9108-b1a7-494d-885d-f8941b07554c.mspx?mfr=true">this one here</a>. Always strikes me as odd that when you basically have everything in a GUI, for the final step you have to crak open the command line. Especially when you consider that you don't need to do anything for multiple hosts on port 80.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>467</wp:post_id>
		<wp:post_date>2008-05-21 01:09:04</wp:post_date>
		<wp:post_date_gmt>2008-05-21 05:09:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iis-virtualhosts-and-ssl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="iis"><![CDATA[iis]]></category>
		<category domain="category" nicename="web-server"><![CDATA[web server]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Download Stubbie</title>
		<link>http://gregs.tcias.co.uk/2007/05/03/download-stubbie/</link>
		<pubDate>Fri, 04 May 2007 00:12:41 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=530</guid>
		<description></description>
		<content:encoded><![CDATA[Version 0.1 is available <a title="Get Stubbie" href="http://stubbie.riaforge.org/index.cfm?event=action.download">for download</a>. I'd like to call this the "I am working release, but it's all a little messy" release. There are a ton of improvements to be made and still a few features I'd like to add, but it's working and figured this was a good time to put the code out there and get some feedback.

Feel free to report any <a title="Add issue" href="http://stubbie.riaforge.org/index.cfm?event=page.addissue">issues</a>, <a title="0.1 feedback thread" href="http://stubbie.riaforge.org/forums/messages.cfm?threadid=54AB7DB6-DE60-06CB-DAA811AF9A535046">feedback </a>and <a title="Feature requests" href="http://stubbie.riaforge.org/forums/threads.cfm?forumid=244FF9F6-F25C-24DC-3B99A4FF28E52B60">suggestions</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>530</wp:post_id>
		<wp:post_date>2007-05-03 20:12:41</wp:post_date>
		<wp:post_date_gmt>2007-05-04 00:12:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>download-stubbie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="download"><![CDATA[download]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Installing and using Stubbie</title>
		<link>http://gregs.tcias.co.uk/2007/05/03/installing-and-using-stubbie/</link>
		<pubDate>Fri, 04 May 2007 00:22:36 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=536</guid>
		<description></description>
		<content:encoded><![CDATA[I thought it would also be useful if I post the installation and usage instructions here.

<h3>Installation</h3>
The simplest way to install stubbie is to just place it in your webroot, alternatively you can just create a mapping called /stubbie and point it to your install folder.

<h3>Usage</h3>
Using stubbie requires 2 steps the first is editing config.xml and the second is calling the component.

Step 1
Open up the config.xml file and edit it the following settings

[code]
<stubbie>

	<config>
		<appName value="myAppName" /><!-- the name of your app, e.g. the folder name under which the app resides, used to suffix the root path of your app -->
		<appPath value="/Full/Path/To/Root/Of/Your/App" /><!-- full path to the app, minus the app folder name -->
		<packageRoot value="com.myDomain" /><!-- if you have a mapping for your app's cfcs, e.g. com.mydomain, specify it here -->
		<saveTestFilesTo value="" /><!-- Not implemented yet, optional storage location for the test stubs -->
		<unitTestFramework value="cfcUnit"/><!-- cfcUnit and cfUnit are allowed options here -->
	</config>
	
</stubbie>
[/code]

Step 2

Place the following code anywhere you wish to invoke stubbie from:

[code]
<cfset configFilePath = ExpandPath("./config.xml")/>

<cfset stubbie = CreateObject("component","Stubbie").init(configFilePath)/>
<cfset stubbie.build()/>
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>536</wp:post_id>
		<wp:post_date>2007-05-03 20:22:36</wp:post_date>
		<wp:post_date_gmt>2007-05-04 00:22:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>installing-and-using-stubbie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="post_tag" nicename="install"><![CDATA[install]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Subversion repository is available</title>
		<link>http://gregs.tcias.co.uk/2007/05/10/subversion-repository-is-available/</link>
		<pubDate>Thu, 10 May 2007 05:16:09 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=541</guid>
		<description></description>
		<content:encoded><![CDATA[I finally got round to setting up the Subversion (SVN) repository today. So if you feel like living dangerously you can grab the source from <a href="http://svn.riaforge.org/stubbie/trunk" title="Subversion Trunk folder">SVN trunk</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>541</wp:post_id>
		<wp:post_date>2007-05-10 01:16:09</wp:post_date>
		<wp:post_date_gmt>2007-05-10 05:16:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>subversion-repository-is-available</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>For those 11 folks...</title>
		<link>http://gregs.tcias.co.uk/2007/05/10/for-those-11-folks/</link>
		<pubDate>Thu, 10 May 2007 05:21:27 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=543</guid>
		<description></description>
		<content:encoded><![CDATA[...who so far downloaded the code. I'd be pleased to hear from you, if you have had a chance to install it and run it. I am especially interested in the experience so far, any issues, such as unclear install instructions, config problems, calling the CFC and of course any bugs.

Feel free to comment here, use the <a href="http://stubbie.riaforge.org/forums/forums.cfm?conferenceid=244FF9F0-C349-4B5E-BBD4027EF42E3B62"  title="Stubbie forums">forums</a> or even log an issue with the <a href="http://stubbie.riaforge.org/index.cfm?event=page.issues"  title="Issue tracker">tracker</a>!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>543</wp:post_id>
		<wp:post_date>2007-05-10 01:21:27</wp:post_date>
		<wp:post_date_gmt>2007-05-10 05:21:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>for-those-11-folks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>More unit testing generator projects</title>
		<link>http://gregs.tcias.co.uk/2007/05/28/more-unit-testing-generator-projects/</link>
		<pubDate>Mon, 28 May 2007 15:03:59 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=546</guid>
		<description></description>
		<content:encoded><![CDATA[Finally managed to catch up on a few blog posts this week after another project deadline has passed and I came across two more projects that have started to generate unit tests for you:

<ul>
 <li><a href="http://www.numtopia.com/terry/blog/archives/2007/05/squidhead_and_cfunit.cfm" title="Squidhead and CFUnit">Squidhead and CFUnit</a></li>
 <li><a href-"http://www.briankotek.com/blog/index.cfm/2007/5/16/Stub-Generator-for-CFCs-Unit-Tests-and-More" title="Stub Generator for CFCs, Unit Tests, and More">Stub Generator for CFCs, Unit Tests, and More</a></li>
</ul>

Both projects do a hell of a lot more than just create test objects though. Definitely worth checking out.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>546</wp:post_id>
		<wp:post_date>2007-05-28 11:03:59</wp:post_date>
		<wp:post_date_gmt>2007-05-28 15:03:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>more-unit-testing-generator-projects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wikipedia&#039;s TDD entry</title>
		<link>http://gregs.tcias.co.uk/2007/05/28/wikipedias-tdd-entry/</link>
		<pubDate>Mon, 28 May 2007 15:05:01 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=548</guid>
		<description></description>
		<content:encoded><![CDATA[Wikipedia's page on <a href="http://en.wikipedia.org/wiki/Test-driven_development" title="Test-driven development">Test-Driven development</a> (TDD), provides an excellent overview of the purpose of TDD, it's advantages and shortcomings.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>548</wp:post_id>
		<wp:post_date>2007-05-28 11:05:01</wp:post_date>
		<wp:post_date_gmt>2007-05-28 15:05:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wikipedias-tdd-entry</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Project update</title>
		<link>http://gregs.tcias.co.uk/2007/10/08/project-update/</link>
		<pubDate>Mon, 08 Oct 2007 15:32:06 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=550</guid>
		<description></description>
		<content:encoded><![CDATA[It's been for ever and a day, since I have done any commits to this project, but prompted by Janet's comments I have made a handful of commits to the repository.

<ol>
<li>cfUnit is now supported</li>
<li>A fix for cfmx 6.1 and recursive directory lookups</li>
<li>The code can now handle missing tearDown methods in existing test cfcs.</li>
</ol>

I have also tried to simplify the config.xml file a little and here's what the default looks like:

[code]
<stubbie>

	<config>
		<appName value="myMapping" /><!-- the name of your app, can be the mapping name as set up in cfadmin -->
		<appPath value="/my/full/path/to/the code/" /><!--full path to the app -->
		<packageRoot value="" /><!-- if you have a mapping for your app's cfcs, e.g. com.mydomain, specify it here (if you have specified an app name the result will be com.mydomain.myapp) -->
		<saveTestFilesTo value="" /><!-- Not implemented yet, optional storage location for the test stubs -->
		<unitTestFramework value="cfcUnit"/><!-- cfcUnit/cfUnit -->
		<coldSpring use="false" path="config/cs.xml"/><!-- (working on it) whether or not to use CS and if so where is the cs config file in relation to the app path -->
	</config>
	
</stubbie>

[/code]

A concrete example usually works best, so:

[code]
<stubbie>
	<config>
		<appName value="art" /><!-- the name of your app, can be the mapping name as set up in cfadmin -->
		<appPath value="/Users/gregstewart/Sites/Client X sites/Fusebox/ART2/" /><!--full path to the app -->
		<packageRoot value="" /><!-- if you have a mapping for your app's cfcs, e.g. com.mydomain, specify it here (if you have specified an app name the result will be com.mydomain.myapp) -->
		<saveTestFilesTo value="" /><!-- Not implemented yet, optional storage location for the test stubs -->
		<unitTestFramework value="cfcUnit"/><!-- cfcUnit/cfUnit -->
		<coldSpring use="false" path="config/cs.xml"/><!-- (working on it) whether or not to use CS and if so where is the cs config file in relation to the app path -->
	</config>
</stubbie>
[/code]

<em>appName</em> : This now refers to a cf mapping in the administrator for my project, in this case art, however if you are using a package approach (with say a value of "com.domain"), then this value would simply be appended to the packageRoot (e.g. com.domain.art)

<em>appPath</em> : This is now the full path to the application, e.g. on my local machine /Users/gregstewart/Sites/Client X sites/Fusebox/ART2/

<em>packageRoot</em> : Hasn't changed

<em>saveTestFilesTo</em> : Hasn't changed

<em>unitTestFramework</em> : Now supports cfUnit.

<em>coldSpring</em> : Something working on, i.e. use ColdSpring to generate mock objects. Could be ages before it sees the light of day, if my past track record is anything to go by.

Thoughts and suggestions are still most welcome!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>550</wp:post_id>
		<wp:post_date>2007-10-08 11:32:06</wp:post_date>
		<wp:post_date_gmt>2007-10-08 15:32:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>project-update</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AJAX calls and expired sessions</title>
		<link>http://gregs.tcias.co.uk/2008/06/19/ajax-calls-and-expired-sessions/</link>
		<pubDate>Thu, 19 Jun 2008 08:12:44 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.teacupinastorm.com/?p=477</guid>
		<description></description>
		<content:encoded><![CDATA[I have been updating a bunch of code recently to make use of the new features in <a href="http://prototypejs.org/">Prototype 1.6</a> and one of the great additions in this release was the introduction of <a href="http://prototypejs.org/api/ajax/request">Automatic JavaScript response evaluation</a>. This allowed me to improve on my session checking code without having to fuff around with the response information sent back to the client. The problem was with XHR requests: i.e. if the user initiated such a request when his session had expired, then usually the response would fail or worse just hang.

The snippet below shows my new session checking code.

[javascript]
<script type="text/javascript"><!--
function myAjaxCall() {
 	url = "index.cfm";
 	pars="?fuseaction.someFuseaction&par1=1&par2=2";
	new Ajax.Updater(\\'div_to_populate\\',
 		url, {
 		method: \\'post\\',
 		postBody: pars,
 		onLoading: function()
 		{
 			//code to run while making the request
 		},
 		onComplete : function(transport,json)
 		{
 			if(json && json[\\'session\\'])
 			{
 				setSessionExpired();
 			} else {
            			//Code to run when the request has completed
 		  }
 	   },
 	   onFailure: function ()
 	   {
 		  alert(\\'something went wrong\\');
 	   },
	   evalScripts:true
 	});
 }

function setSessionExpired()
{
 	alert(\\'Your session has timed out\\');
 	window.location=\\'http://<cfoutput>#cgi.HTTP_HOST#</cfoutput>/?fuseaction=home.home\\';
}
// --></script>[/javascript]

The trick is to intercept the call when you do your session checking at the back end. Let's say you have a fuseaction called login.login (see below and yes this is fusebox 3 :S) where you display the login form when a user is not logged in, this is where I inserted the check for an XHR request, by looking at the http headers sent along with the request. The key here is a new header attribute passed in with Prototype "X-Requested-With". If this attribute exists then I know it's an XHR request and I can create a custom JSON header with an error struct that holds a key called session with a value of timeout. All I then need to do is encode the struct as JSON and pass that encoded struct back to the browser.

[code]
<cfcase value="login">
		<!--- gvs 1Feb08 - handles XHR requests that session timeout --->
		<cfset attributes.request = GetHttpRequestData()/>
		<cfif StructKeyExists(attributes.request.headers,"X-Requested-With")>
			<cfsetting showdebugoutput="false">
			<cfparam name="attributes.jsonObj" default="#CreateObject('component','com.jehiah.json')#"/>
			<cfparam name="error" default="#StructNew()#"/>
			<cfset error['session']='timeout'/>
			<cfif StructKeyExists(attributes,"jsonObj")>
				<cfheader name="X-JSON" value="#trim(attributes.jsonObj.encode(error))#" /><cfabort>
			</cfif>
		</cfif>

        <cfif StructKeyExists(session,'login')>
            <cfset attributes.login = session.login/>
        <cfelse>
            <cfparam name="attributes.login" default=""/>
        </cfif>

		<cfscript>
			xfa.submitform='index.cfm?fuseaction=login.processlogin';
		</cfscript>
		<cfinclude template="#affiliate('dsp_login.cfm')#"/>
</cfcase>
[/code]

Now let's jump back to the JavaScript code and take a look at the onComplete function again:

[javascript]
onComplete : function(transport,json)
{
        if(json &amp;&amp; json['session'])
        {
                setSessionExpired();
        } else {
                //Code to run when the request has completed
        }
}
[/javascript]

If there's a JSON object and it has a key of session then I call my setSessionExpired function which redirects the users. Now the json session key only exists in these situations since the call normally just passes back the result of the call.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>254</wp:post_id>
		<wp:post_date>2008-06-19 04:12:44</wp:post_date>
		<wp:post_date_gmt>2008-06-19 08:12:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ajax-calls-and-expired-sessions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reflow</title>
		<link>http://gregs.tcias.co.uk/2008/05/30/reflow/</link>
		<pubDate>Fri, 30 May 2008 04:27:42 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=468</guid>
		<description></description>
		<content:encoded><![CDATA[Or more appropriately <a title="What is reflow" href="http://dougt.wordpress.com/2008/05/24/what-is-a-reflow/">what is it</a>? Fascinating...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>468</wp:post_id>
		<wp:post_date>2008-05-30 00:27:42</wp:post_date>
		<wp:post_date_gmt>2008-05-30 04:27:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reflow</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="browser"><![CDATA[browser]]></category>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="category" nicename="rendering"><![CDATA[rendering]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Goosh</title>
		<link>http://gregs.tcias.co.uk/2008/06/03/goosh/</link>
		<pubDate>Wed, 04 Jun 2008 01:43:15 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=469</guid>
		<description></description>
		<content:encoded><![CDATA[<a title="The unofficial Google shell" href="http://goosh.org/">The unofficial Google Shell</a>... I like it!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>469</wp:post_id>
		<wp:post_date>2008-06-03 21:43:15</wp:post_date>
		<wp:post_date_gmt>2008-06-04 01:43:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>goosh</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="browser"><![CDATA[browser]]></category>
		<category domain="category" nicename="google"><![CDATA[google]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VMWare and keyboard input</title>
		<link>http://gregs.tcias.co.uk/2008/07/09/vmware-and-keyboard-input/</link>
		<pubDate>Thu, 10 Jul 2008 01:07:03 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=470</guid>
		<description></description>
		<content:encoded><![CDATA[This morning I fired my Windows XP VM on my mac and my keyboard input simply stopped working. After a couple of VM reboots, which had no effect, I did some googling. <a title="keyboard stops working... system beeps" href="http://communities.vmware.com/message/617423">The first result</a> suggested typing a few commands to determine what had disabled it:

[code]
$ ioreg -l -w 0 | grep SecureInput
|   "IOConsoleUsers" = ({"kCGSSessionSecureInputPID"=177,"kCGSSessionLoginwindowSafeLogin"=No,"kCGSSessionAuditIDKey"=0,"kCGSessionLoginDoneKey"=Yes,"kCGSSessionSystemSafeBoot"=No,"kCGSSessionOnConsoleKey"=Yes,"kCGSSessionUserIDKey"=501,"kSCSecuritySessionID"=11622192,"kCGSSessionUserNameKey"="gregstewart","kCGSSessionGroupIDKey"=20,"kCGSSessionConsoleSetKey"=0,"kCGSSessionIDKey"=256,"kCGSessionLongUserNameKey"="User"})
$ ps auxwwww | grep 177
user 177   7.8  9.2   652520 192788   ??  S    10:51pm  59:09.22 /Applications/Firefox.app/Contents/MacOS/firefox-bin -psn_0_110619
user 1155   0.0  0.0   599820    464 s001  S+   10:44am   0:00.00 grep 177
[/code]

According to the post the application that was blocking it was FireFox. "kCGSSessionSecureInputPID"=177 is the info you need to look for, where in my case 177 was the number I needed to use in the next command. Incredulous as I was, I closed FireFox and hey presto keyboard input was working again.

Hopefully this post will help others.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>470</wp:post_id>
		<wp:post_date>2008-07-09 21:07:03</wp:post_date>
		<wp:post_date_gmt>2008-07-10 01:07:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vmware-and-keyboard-input</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<category domain="category" nicename="os-x"><![CDATA[os x]]></category>
		<category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2494</wp:comment_id>
			<wp:comment_author><![CDATA[Nolan Erck]]></wp:comment_author>
			<wp:comment_author_email>nolan.erck@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.southofshasta.com/blog</wp:comment_author_url>
			<wp:comment_author_IP>12.146.25.240</wp:comment_author_IP>
			<wp:comment_date>2008-07-10 16:39:11</wp:comment_date>
			<wp:comment_date_gmt>2008-07-10 20:39:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The scary thing is, I had this *exact* same problem this morning as well!  Thanks for the post! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>I took it</title>
		<link>http://gregs.tcias.co.uk/2008/07/30/i-took-it/</link>
		<pubDate>Wed, 30 Jul 2008 05:07:40 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=471</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://alistapart.com/articles/survey2008"><img title="i-took-the-2008-survey" src="http://gregs.tcias.co.uk/wp-content/uploads/2008/07/i-took-the-2008-survey.gif" alt="I took the 2008 survey" width="180" height="46" /></a>

Now you should too!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>471</wp:post_id>
		<wp:post_date>2008-07-30 01:07:40</wp:post_date>
		<wp:post_date_gmt>2008-07-30 05:07:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-took-it</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Up on the 74</title>
		<link>http://gregs.tcias.co.uk/2009/03/06/up-on-the-74/</link>
		<pubDate>Sat, 07 Mar 2009 02:10:20 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=473</guid>
		<description></description>
		<content:encoded><![CDATA[<script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAjI5rpu8x3SD8x9ipsmQTjBSzj1kb_K59scNMOoJGEyn_HPcSgxQbvaOcwSB9HazyyuDWWR_We6-tEQ" type="text/javascript"></script><script type="text/javascript">//<![CDATA[
    function googleMapsLoad() {
      if (GBrowserIsCompatible()) {
        var map = new GMap2(document.getElementById('map'));
        map.setMapType(G_SATELLITE_MAP);
        map.setCenter(new GLatLng(33.649243,-116.400661), 17);
      }
    }//]]]]><![CDATA[></script>

<div id="map" style="width: 500px; height: 300px"></div>

[gallery=8]	
<script>
	googleMapsLoad();
</script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>473</wp:post_id>
		<wp:post_date>2009-03-06 22:10:20</wp:post_date>
		<wp:post_date_gmt>2009-03-07 02:10:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>up-on-the-74</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cat to clipboard</title>
		<link>http://gregs.tcias.co.uk/2009/03/07/cat-to-clipboard/</link>
		<pubDate>Sat, 07 Mar 2009 19:54:27 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=475</guid>
		<description></description>
		<content:encoded><![CDATA[Neat!

[code]
cat id_rsa.pub | pbcopy
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>475</wp:post_id>
		<wp:post_date>2009-03-07 15:54:27</wp:post_date>
		<wp:post_date_gmt>2009-03-07 19:54:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cat-to-clipboard</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Joshua Tree National Park</title>
		<link>http://gregs.tcias.co.uk/2009/03/07/joshua-national-park/</link>
		<pubDate>Sun, 08 Mar 2009 03:42:39 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=476</guid>
		<description></description>
		<content:encoded><![CDATA[<script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAjI5rpu8x3SD8x9ipsmQTjBSzj1kb_K59scNMOoJGEyn_HPcSgxQbvaOcwSB9HazyyuDWWR_We6-tEQ" type="text/javascript"></script><script type="text/javascript">//<![CDATA[
    function googleMapsLoad() {
      if (GBrowserIsCompatible()) {
        var map = new GMap2(document.getElementById('map'));
        map.setMapType(G_SATELLITE_MAP);
        map.setCenter(new GLatLng(33.927124,-116.187115), 17);
      }
    }//]]]]><![CDATA[></script>

<div id="map" style="width: 500px; height: 300px"></div>

[gallery=10]	
<script>
	googleMapsLoad();
</script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>476</wp:post_id>
		<wp:post_date>2009-03-07 23:42:39</wp:post_date>
		<wp:post_date_gmt>2009-03-08 03:42:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>joshua-national-park</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>42616</wp:comment_id>
			<wp:comment_author><![CDATA[a friend]]></wp:comment_author>
			<wp:comment_author_email>shy@domain.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.180.75.148</wp:comment_author_IP>
			<wp:comment_date>2009-03-10 00:20:11</wp:comment_date>
			<wp:comment_date_gmt>2009-03-10 04:20:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I believe it is Joshua TREE National Park. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42617</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>98.149.247.28</wp:comment_author_IP>
			<wp:comment_date>2009-03-10 00:35:08</wp:comment_date>
			<wp:comment_date_gmt>2009-03-10 04:35:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are right :) Fixed!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>gnumake: *** No rule to make target `all&#039;</title>
		<link>http://gregs.tcias.co.uk/2009/04/06/gnumake-no-rule-to-make-target-all/</link>
		<pubDate>Tue, 07 Apr 2009 01:29:58 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=479</guid>
		<description></description>
		<content:encoded><![CDATA[I was using <a href="http://www.macports.org/install.php">MacPorts</a> to install ICU and Jam. After running the installer for the first time I got the following error message:

[code]sudo port install icu jam
Error: Target org.macports.build returned: shell command " cd "/opt/local/var/macports/build/_opt_local_var_macports_sources_rsync.macports.org_release_ports_devel_icu/work/icu/source" && gnumake all " returned error 127
Command output: sh: gnumake: command not found
[/code]

Oops forgot to install XCode (you always forget to install something on a new machine :)). Quickly ran the XCode installer, however when I ran the command again I got a new error:

[code]sudo port install icu jam
--->  Building icu
Error: Target org.macports.build returned: shell command " cd "/opt/local/var/macports/build/_opt_local_var_macports_sources_rsync.macports.org_release_ports_devel_icu/work/icu/source" && gnumake all " returned error 2
Command output: gnumake: *** No rule to make target `all'.  Stop.
[/code]

<a href="https://trac.macports.org/ticket/17384">Turns out you need to do a cleanup</a> before attempting to run the command again:

[code]sudo port clean --work icu
--->  Cleaning icu
sudo port clean --work jam
--->  Cleaning jam
sudo port install icu jam
--->  Fetching icu
--->  Verifying checksum(s) for icu
--->  Extracting icu
--->  Configuring icu
--->  Building icu
--->  Staging icu into destroot
--->  Installing icu @4.0_0
--->  Activating icu @4.0_0
--->  Cleaning icu
--->  Fetching jam
--->  Attempting to fetch jam-2.5.tar from http://distfiles.macports.org/jam/2.5
--->  Verifying checksum(s) for jam
--->  Extracting jam
--->  Applying patches to jam
--->  Configuring jam
--->  Building jam
--->  Staging jam into destroot
--->  Installing jam @2.5_1
--->  Activating jam @2.5_1
--->  Cleaning jam
[/code]

Time to continue the <a href="http://www.mapnik.org/">Mapnik</a> install.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>479</wp:post_id>
		<wp:post_date>2009-04-06 21:29:58</wp:post_date>
		<wp:post_date_gmt>2009-04-07 01:29:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gnumake-no-rule-to-make-target-all</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<category domain="category" nicename="os-x"><![CDATA[os x]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>50571</wp:comment_id>
			<wp:comment_author><![CDATA[mott]]></wp:comment_author>
			<wp:comment_author_email>chris_mott@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.80.230.64</wp:comment_author_IP>
			<wp:comment_date>2009-04-18 11:26:27</wp:comment_date>
			<wp:comment_date_gmt>2009-04-18 15:26:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks! i got stuck with the same problem]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59628</wp:comment_id>
			<wp:comment_author><![CDATA[YOD and WSM]]></wp:comment_author>
			<wp:comment_author_email>ian@ascotinlessables.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.220.246.58</wp:comment_author_IP>
			<wp:comment_date>2009-06-04 15:26:21</wp:comment_date>
			<wp:comment_date_gmt>2009-06-04 19:26:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[.....and you call me a blabbermouth!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>SVN : authentication with a windows domain</title>
		<link>http://gregs.tcias.co.uk/2010/03/08/svn-authentication-with-a-windows-domain/</link>
		<pubDate>Tue, 09 Mar 2010 03:58:13 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=480</guid>
		<description></description>
		<content:encoded><![CDATA[Finally got round to implementing this for work. As a starting point I followed <a title="Apache Based Server" href="http://tortoisesvn.net/docs/release/TortoiseSVN_en/tsvn-serversetup-apache.html#tsvn-serversetup-apache-5">the instructions found here</a>.

The config looked fine, but after restarting the service, I still wasn't getting prompted for a log in. After re-jigging the order to what you see below and restarting the apache service (we are using 2.0.59), it all worked. Maybe this will help someone else along the way.

[code]
<Location /svn>
DAV svn
# any "/svn/foo" URL will map to a repository /usr/local/svn/foo
SVNParentPath {drive letter}:/path/to/SVN/epositories/

AuthName "SVN"
AuthType SSPI
SSPIAuth On
SSPIAuthoritative On
SSPIOfferBasic On
SSPIOmitDomain on
SSPIDomain &lt;domain controller&gt;
SSPIBasicPreferred On
Require valid-user
</Location>
[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>480</wp:post_id>
		<wp:post_date>2010-03-08 23:58:13</wp:post_date>
		<wp:post_date_gmt>2010-03-09 03:58:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>svn-authentication-with-a-windows-domain</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="apache"><![CDATA[apache]]></category>
		<category domain="category" nicename="svn"><![CDATA[svn]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Upgrading to Lenny</title>
		<link>http://gregs.tcias.co.uk/2010/03/09/upgrading-to-lenny/</link>
		<pubDate>Tue, 09 Mar 2010 06:52:56 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=481</guid>
		<description></description>
		<content:encoded><![CDATA[It's been  while since I attended to my VPS, I decided to spend some time last night upgrading my distribution from Etch to Lenny. This is normally a moment where your heart sinks as quite a few things do tend to go belly up, but I am happy to report that I only came across some minor issues and these were resolved in minutes as opposed to hours.
<ol>
	<li>MySQL : failed to start, complaining about:[code]/etc/init.d/mysql: ERROR: Using expire_logs_days without log_bin crashes
the server. See README.Debian.gz[/code]

Commenting out the expire_logs_days in the my.cnf file allowed me to restart MySQL.</li>
	<li>After the upgrade of Apache, my virtual hosts weren't working. A quick search via Google <a href="http://www.pc-freak.net/blog/solution-to-a-problem-with-virtualhosts-on-debian-lenny-default-virtualhost-opening-by-default-overwritting-the-rest-of-the-configured-virtualhosts/">pointed me to this post</a> - a quick edit of all of my host files and it was all working again.</li>
	<li>the php-mysql connector somehow hadn't been upgraded/installed so a quick[code]apt-get install php5-mysql[/code]fixed that problem.</li>
	<li>OpenBD : the only thing that remains broken was my tomcat5.5 Open BD install. Tomcat was working fine but Open BD refused to start up complaining about :[code]javax.servlet.ServletException: Open BlueDragon Engine Failed to initialise tags: java.awt.Color[/code]Since I am not really using it, it's not that important, but at some stage I'd like to get it working again. If you have any suggestions, please leave a comment.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>481</wp:post_id>
		<wp:post_date>2010-03-09 02:52:56</wp:post_date>
		<wp:post_date_gmt>2010-03-09 06:52:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upgrading-to-lenny</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="apache"><![CDATA[apache]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<category domain="category" nicename="linode"><![CDATA[linode]]></category>
		<category domain="category" nicename="mysql"><![CDATA[MySQL]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IOGraph</title>
		<link>http://gregs.tcias.co.uk/2010/03/14/iograph/</link>
		<pubDate>Mon, 15 Mar 2010 03:58:06 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=482</guid>
		<description></description>
		<content:encoded><![CDATA[Stumbled across this little app today <a title="IOGraphica MousePath's  new home" href="http://iographica.com/">IOgraph</a> and the tag line "Do your  business, Do art" tickled my fancy, so I decided to give it a whirl this  afternoon.

<a href="http://gregs.tcias.co.uk/wp-content/uploads/2010/03/IOGraphica-7.1-hours-from-9-31-to-17-00.png"><img class="alignnone size-medium wp-image-483" title="IOGraphica - 7.1 hours (from 9-31 to 17-00)" src="http://gregs.tcias.co.uk/wp-content/uploads/2010/03/IOGraphica-7.1-hours-from-9-31-to-17-00-300x187.png" alt="" width="300" height="187" /></a>

being creative while writing code... ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>482</wp:post_id>
		<wp:post_date>2010-03-14 23:58:06</wp:post_date>
		<wp:post_date_gmt>2010-03-15 03:58:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iograph</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="creative"><![CDATA[creative]]></category>
		<category domain="category" nicename="design"><![CDATA[design]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Apache/SSL configuration (on debian)</title>
		<link>http://gregs.tcias.co.uk/2010/03/16/apachessl-configuration-on-debian/</link>
		<pubDate>Wed, 17 Mar 2010 02:50:06 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=486</guid>
		<description></description>
		<content:encoded><![CDATA[More for posterity, this was the last step that was eluding me. I had found numerous resources to get me started on the path to setting up Apache and SSL, but when it came to having a working config and server, when I went to browse my Debian test server, I would get this message:

[code](Error code: ssl_error_rx_record_too_long)[/code]

When you google for the solution I found a number of dead ends, but <a href="http://mentaljetsam.wordpress.com/2009/03/11/firefox-https-error-ssl_error_rx_record_too_long/#comment-803">in the comments for one of them there was a helpful pointer</a>.

When you do an 'ls -la' on sites-enabled (inside /etc/apache2), you will see a symbolic link to the sites-available folder and typically just for the default site (000-default -&gt; default). However in sites-available there's also a default-ssl config file. Creating a symbolic link to this file and reloading apache fixed my problem and now I have apache serving up http over SSL .]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>486</wp:post_id>
		<wp:post_date>2010-03-16 22:50:06</wp:post_date>
		<wp:post_date_gmt>2010-03-17 02:50:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apachessl-configuration-on-debian</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="apache"><![CDATA[apache]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<category domain="category" nicename="ssl"><![CDATA[ssl]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Deploying grails app to Jetty</title>
		<link>http://gregs.tcias.co.uk/2010/03/20/deploying-grails-app-to-jetty/</link>
		<pubDate>Sat, 20 Mar 2010 13:35:59 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=489</guid>
		<description></description>
		<content:encoded><![CDATA[Short and sweet, step by step guide for creating a grails war and deploying it to your Jetty server (includes apache2 proxy steps)
<ol>
	<li>grails war (your app), in this case epic.war</li>
	<li>Copy to server [code]scp epic.war user@server:/location[/code]</li>
	<li>On Debian the location for jetty webapps is: /var/lib/jetty/webapps</li>
	<li>Copy from upload location to the above folder (I used sudo)</li>
	<li>Change permissions: [code]sudo chown jetty:adm epic-0-0.1.war[/code]</li>
	<li>created a *.xml context file in /etc/jetty/contexts, with something like this [note case is important!!]:
[code]
<?xml version="1.0"  encoding="ISO-8859-1"?>
<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">
<Configure class="org.mortbay.jetty.webapp.WebAppContext">
  <Set name="contextPath">/epic</Set>
  <Set name="war"><SystemProperty name="jetty.home" default="."/>/webapps/epic-0-0.1.war</Set>
</Configure>
[/code]</li>
	<li>restart jetty : [code]sudo /etc/init.d/jetty restart[/code] (try stop/start as well)</li>
	<li>test with : [code]lynx http://localhost:8080/epic/[/code]</li>
	<li>Nice but I'd like http://localhost/epic/ so enable mod_proxy in apache if you haven't already : [code]a2enmod proxy[/code]</li>
	<li>edit /etc/apache2/mods-enabled/proxy.load and if not present add at end: [code]LoadModule proxy_http_module /usr/lib/apache2/modules/mod_proxy_http.so[/code]</li>
	<li>edit your virtualhost conf file I am using 000-default and add:[code]ProxyRequests Off
<Proxy *>
	Order deny,allow
     Allow from all
</Proxy>
ProxyPass        /epic http://localhost:8080/epic
ProxyPassReverse /epic http://localhost:8080/epic
ProxyPreserveHost On[/code]</li>
	<li>restart apache :  [code]sudo /etc/init.d/apache2 restart[/code]</li>
	<li>now you can [code]lynx http://localhost/epic/[/code]</li>
</ol>

<strong>Update: </strong> I had omitted the <code>ProxyPreserveHost On</code>  from the Apache configuration, which resulted in css, images and external javascripts not loading. It also caused an issue with accessing controllers.

Sources:
<ul>
	<li><a href="http://docs.codehaus.org/display/JETTY/Configuring+mod_proxy">Configuring mod_proxy</a></li>
	<li><a href="http://www.enavigo.com/2008/08/29/deploying-a-web-application-to-jetty/">Deploying a web application to Jetty</a></li>
</ul>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>489</wp:post_id>
		<wp:post_date>2010-03-20 09:35:59</wp:post_date>
		<wp:post_date_gmt>2010-03-20 13:35:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>deploying-grails-app-to-jetty</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="apache"><![CDATA[apache]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<category domain="category" nicename="grails"><![CDATA[grails]]></category>
		<category domain="category" nicename="jetty"><![CDATA[jetty]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Recursive delete</title>
		<link>http://gregs.tcias.co.uk/2010/03/22/recursive-delete/</link>
		<pubDate>Mon, 22 Mar 2010 05:30:52 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=496</guid>
		<description></description>
		<content:encoded><![CDATA[I new it was possible, just never took the time to <a title="[SVN] Recursively delete .svn folders" href="http://blog.snakehit.be/2007/08/29/svn-recursively-delete-svn-folders/">look it up</a>.

[code]rm -rf `find . -type d -name .svn`[/code]

As with all types of deletes, recursive or not, use with caution.

For windows use:

[code]del /S .svn[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>496</wp:post_id>
		<wp:post_date>2010-03-22 01:30:52</wp:post_date>
		<wp:post_date_gmt>2010-03-22 05:30:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>recursive-delete</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<category domain="category" nicename="os-x"><![CDATA[os x]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Deploying grails webapp to Jetty - resolving a few issues...</title>
		<link>http://gregs.tcias.co.uk/2010/03/23/deploying-grails-webapp-to-jetty-resolving-a-few-issues/</link>
		<pubDate>Tue, 23 Mar 2010 13:39:03 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=506</guid>
		<description></description>
		<content:encoded><![CDATA[So you have deployed your app and can access the start page of your grails app. If you are like me deploying your app to a Debian\Jetty type of configuration you might come across the following error:

[code]java.lang.NoClassDefFoundError: javax/servlet/jsp/jstl/core/Config [/code]

When trying to access a controller from the default start page. I traced this to <a href="http://n4.nabble.com/Grails-1-2-0-JSTL-lib-from-war-td1355918.html#a1355918">a missing dependency in grails</a> (I use SpringSource Tool Suite for development so that maybe the root cause). By opening and editing your /project/grails-app/conf/(default package)/BuildConfig.groovy, add the following under grails.project.dependency.resolution. 

[code]grails.project.dependency.resolution = {
	...
	dependencies {
        // specify dependencies here under either 'build', 'compile', 'runtime', 'test' or 'provided' scopes eg.
	runtime "javax.servlet:jstl:1.1.2"
        // runtime 'mysql:mysql-connector-java:5.1.5'
	}
}[/code]

Build your war and re-deploy. Still getting an error?? I was. For jetty there was still an issue with calling the controller. After spending some time exploring, it looks like Jetty support was removed from Grails 1.2. I stumbled across a post mentioning installing the <a href="http://www.grails.org/plugin/jetty">grails Jetty plugin</a> with:

 [code]. grails install-plugin jetty[/code]

After running this, and re-building my war file and re-deploying it one final time, bingo it all worked.


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>506</wp:post_id>
		<wp:post_date>2010-03-23 09:39:03</wp:post_date>
		<wp:post_date_gmt>2010-03-23 13:39:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>deploying-grails-webapp-to-jetty-resolving-a-few-issues</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="grails"><![CDATA[grails]]></category>
		<category domain="category" nicename="jetty"><![CDATA[jetty]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Configuring Jetty&#039;s memory usage</title>
		<link>http://gregs.tcias.co.uk/2010/04/20/configuring-jettys-memory-usage/</link>
		<pubDate>Wed, 21 Apr 2010 01:20:59 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=512</guid>
		<description></description>
		<content:encoded><![CDATA[Debian specific, but if you need to edit jvm configuration details for Jetty, look for this file:

[code]/etc/default/jetty[/code]

And locate the lines below to start fine tuning Jetty's memory usage: 
[code]
# Extra options to pass to the JVM         
JAVA_OPTIONS="-Xmx256m -Djava.awt.headless=true"
[/code]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>512</wp:post_id>
		<wp:post_date>2010-04-20 21:20:59</wp:post_date>
		<wp:post_date_gmt>2010-04-21 01:20:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>configuring-jettys-memory-usage</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<category domain="category" nicename="jetty"><![CDATA[jetty]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Once again Kudos Linode</title>
		<link>http://gregs.tcias.co.uk/2010/06/12/once-again-kudos-linode/</link>
		<pubDate>Sun, 13 Jun 2010 02:16:20 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=516</guid>
		<description></description>
		<content:encoded><![CDATA[I recently had to re-build my VPS and with the help of the documents over <a href="http://library.linode.com/">Linode's Library</a> I was up and running again within a couple of hours. A great concise, informative and accurate resource for configuring Linux based servers. Thanks again to the folks at Linode!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>516</wp:post_id>
		<wp:post_date>2010-06-12 22:16:20</wp:post_date>
		<wp:post_date_gmt>2010-06-13 02:16:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>once-again-kudos-linode</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<category domain="category" nicename="linode"><![CDATA[linode]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>It&#039;s been years...</title>
		<link>http://gregs.tcias.co.uk/2010/06/23/its-been-years/</link>
		<pubDate>Wed, 23 Jun 2010 15:33:05 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=552</guid>
		<description></description>
		<content:encoded><![CDATA[...between updates. But based of a short conversation with Jon Farrar, I got round to adding mxunit support. 

I also tidied up a few things in the code for rendering the CFCs and fixed an issue with the VarScopeChecker not being picked up by MXUnit.

As always feedback is most welcome!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>552</wp:post_id>
		<wp:post_date>2010-06-23 11:33:05</wp:post_date>
		<wp:post_date_gmt>2010-06-23 15:33:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>its-been-years</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Clearing ruby/rails sessions</title>
		<link>http://gregs.tcias.co.uk/2010/08/17/clearing-rubyrails-sessions/</link>
		<pubDate>Tue, 17 Aug 2010 10:06:17 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=580</guid>
		<description></description>
		<content:encoded><![CDATA[Using ruby 1.2.6 and rails 2.x, if sessions are stored in the database and you want to clear/reload session objects, open up a terminal window, navigate to your rails application folder and simply type: 

[code]rake db:sessions:clear[/code]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>580</wp:post_id>
		<wp:post_date>2010-08-17 06:06:17</wp:post_date>
		<wp:post_date_gmt>2010-08-17 10:06:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clearing-rubyrails-sessions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rake"><![CDATA[rake]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Struggling for commit messages</title>
		<link>http://gregs.tcias.co.uk/2010/09/05/struggling-for-commit-messages/</link>
		<pubDate>Sun, 05 Sep 2010 08:43:48 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2010/09/05/struggling-for-commit-messages/</guid>
		<description></description>
		<content:encoded><![CDATA[Check out http://whatthecommit.com/ - my favourite:

(\ /)
(O.o)
(> <) Bunny approves these changes.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>519</wp:post_id>
		<wp:post_date>2010-09-05 04:43:48</wp:post_date>
		<wp:post_date_gmt>2010-09-05 08:43:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>struggling-for-commit-messages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="svn"><![CDATA[svn]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Project Stubbie has moved</title>
		<link>http://gregs.tcias.co.uk/2010/11/10/project-stubbie-has-moved/</link>
		<pubDate>Wed, 10 Nov 2010 14:05:42 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=556</guid>
		<description></description>
		<content:encoded><![CDATA[Yesterday I decided to move <a href="https://github.com/gregstewart/stubbie">Stubbie</a> away from <ahref="http://riaforge.com/">RIAforge</a>. It has nothing to do with RIAForge, I just decided to use Git and as a result move it to <a href="https://github.com/">Github</a>. Since Github basically provides all the tools, there was no need to keep anything on RIAForge. I moved the blog posts over to this blog and you can find them under the <ahref="http://gregs.tcias.co.uk/category/comps/tdd/stubbie/">stubbie category</a>. Over the coming days I aim to add some content to the <a href="https://github.com/gregstewart/stubbie/wiki">Wiki</a>.

I also added a few new features:
<ul>
<li>a mach-ii plugin - so that stubs are recreated if needed on each request</li>
<li>ColdSpring integration for autowiring the objects in your test stubs (which can also make use of the Mach-ii ColdSpring plugin to that end)</li>
<li>Due to the Mach-ii CS integration I added a remote Facade for use with MXUnit (in order to access the application scope)</li>
</ul>

It's all a little experimental at this stage and I'd be interested in your experience with the code, feedback, etc... Feel free to drop me a note or <a href="https://github.com/gregstewart/stubbie/issues">raise tickets</a> over @ Github with your feedback or bugs or suggestions. Alternatively, just leave a comment here. ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>556</wp:post_id>
		<wp:post_date>2010-11-10 10:05:42</wp:post_date>
		<wp:post_date_gmt>2010-11-10 14:05:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>project-stubbie-has-moved</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="category" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubbie"><![CDATA[stubbie]]></category>
		<category domain="post_tag" nicename="stubs"><![CDATA[stubs]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gem install issues</title>
		<link>http://gregs.tcias.co.uk/2010/12/28/gem-install-issues/</link>
		<pubDate>Tue, 28 Dec 2010 09:14:05 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=564</guid>
		<description></description>
		<content:encoded><![CDATA[[code]Installing nokogiri (1.4.3.1) with native extensions /Users/username/.rvm/rubies/ruby-1.9.2-p0/lib/ruby/1.9.1/rubygems/installer.rb:483:in `rescue in block in build_extensions': ERROR: Failed to build gem native extension. (Gem::Installer::ExtensionBuildError)[/code]

Installing the nokogiri gem was throwing the above exception, but the clue to the problem lay at the end of the stack trace where the process was complaining about:

[code]ld: in /opt/local/lib/libz.1.dylib, file was built for i386 which is not the architecture being linked (x86_64)[/code]

the fix courtesy of : http://www.refresherate.com/2010/01/08/fixing-ld-warning-in-usrlocalliblibz-dylib-file-is-not-of-required-architecture/

[code]sudo mv /opt/local/lib/libz.dylib /opt/local/lib/libz.dylib.original
sudo /Developer/SDKs/MacOSX10.6.sdk/usr/lib/libz.dylib /opt/local/lib/
sudo mv /opt/local/lib/libz.1.dylib /opt/local/lib/libz.1.dylib.original
sudo cp /Developer/SDKs/MacOSX10.6.sdk/usr/lib/libz.1.dylib /opt/local/lib/[/code]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>564</wp:post_id>
		<wp:post_date>2010-12-28 05:14:05</wp:post_date>
		<wp:post_date_gmt>2010-12-28 09:14:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gem-install-issues</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gems"><![CDATA[gems]]></category>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<category domain="category" nicename="os-x"><![CDATA[os x]]></category>
		<category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Find duplicates</title>
		<link>http://gregs.tcias.co.uk/2010/09/21/find-duplicates/</link>
		<pubDate>Tue, 21 Sep 2010 09:47:50 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=570</guid>
		<description></description>
		<content:encoded><![CDATA[Because I have to keep running this script and thus look it up, keeping it here for handy and quick reference

[code]select count(id)
from database.dbo.tablename
group by id
having count(id) > 1[/code]

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>570</wp:post_id>
		<wp:post_date>2010-09-21 05:47:50</wp:post_date>
		<wp:post_date_gmt>2010-09-21 09:47:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>find-duplicates</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[database]]></category>
		<category domain="post_tag" nicename="find-duplicates"><![CDATA[find duplicates]]></category>
		<category domain="category" nicename="ms-sql"><![CDATA[MS SQL]]></category>
		<category domain="post_tag" nicename="mssql"><![CDATA[mssql]]></category>
		<category domain="post_tag" nicename="sql"><![CDATA[sql]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Some ruby conventions</title>
		<link>http://gregs.tcias.co.uk/2010/08/29/some-ruby-conventions/</link>
		<pubDate>Sun, 29 Aug 2010 09:58:44 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=573</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Variable names</strong>

Local variables, method paramaters and method names: start with a lower case letter and don't follow the camel case convention instead, eg. my_var, my_method_name(withMyParameter). Also method names can end in ?,! and =

Global variables start with a $, eg. $my_global_variable

Instance variables start with an @, eg. @instance_variable. Whereas previous variables "could" follow camel case convention, instance variables do not. So you would not see @instanceVariable.

Class variables start with a @@, eg. @@my_class_variable

With regards to @ and @@,  normally pretty much any character can follow @, with the exception of digits.

Class names, module names and constants should start with an upper case letter, eg. MySuperDuperClassName (I prefer constants to be all UPPER CASE)

<strong>Arrays and Hashes</strong>

Arrays are accessed by a numeric key (and use [...]), hashes support an object as accessor as well (and use {...}).

They grow dynamically. Array elements are more efficient, but hashes are more flexible. To access a hash index you still use [], eg. hash[key]

Accessing a hash by a missing key (or you can say indexed by a missing key) returns nil.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>573</wp:post_id>
		<wp:post_date>2010-08-29 05:58:44</wp:post_date>
		<wp:post_date_gmt>2010-08-29 09:58:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>some-ruby-conventions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>performance monitoring/profiling</title>
		<link>http://gregs.tcias.co.uk/2010/08/28/performance-monitoringprofiling/</link>
		<pubDate>Sat, 28 Aug 2010 10:00:03 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=577</guid>
		<description></description>
		<content:encoded><![CDATA[At a higher level you can call: 

[code]ruby script/performance/benchmarker 'User.encrypted_password("secret", "salt")'[/code]

Which returns a high level execution plan. 

[code]            user     system      total        real
#1      0.000000   0.000000   0.000000 (  0.000028)[/code]

If there's a problem here you can then review the details using the profiler: 

[code]ruby script/performance/profiler 'User.encrypted_password("secret", "salt")'[/code]

this translates to "Call the object.method using script/performance/profiler" . The above call spits out: 

[code]Loading Rails...
Using the standard Ruby profiler.
  %   cumulative   self              self     total
 time   seconds   seconds    calls  ms/call  ms/call  name
 60.00     0.06      0.06        2    30.00    30.00  Hash#each
 20.00     0.08      0.02       31     0.65     0.97  Array#each
 10.00     0.09      0.01        7     1.43     1.43  Symbol#to_proc
 10.00     0.10      0.01        4     2.50     2.50  Array#select
  0.00     0.10      0.00        4     0.00     0.00  Array#<<
  0.00     0.10      0.00        3     0.00     0.00  ActiveRecord::Validations::ClassMethods.write_inheritable_set
  0.00     0.10      0.00        1     0.00     0.00  Dependencies.mechanism
  0.00     0.10      0.00        1     0.00     0.00  Array#compact
  0.00     0.10      0.00        1     0.00     0.00  Digest::Instance.digest
  0.00     0.10      0.00        1     0.00     0.00  Kernel.require
  0.00     0.10      0.00       15     0.00     2.00  Array#collect
  0.00     0.10      0.00        1     0.00     0.00  Inflector.underscore
  0.00     0.10      0.00        9     0.00     0.00  Object#method_added
  0.00     0.10      0.00       10     0.00     0.00  String#==
  0.00     0.10      0.00       14     0.00     0.00  Kernel.hash
  0.00     0.10      0.00        8     0.00     7.50  Enumerable.inject
  0.00     0.10      0.00        5     0.00     0.00  Kernel.equal?
  0.00     0.10      0.00       11     0.00     0.00  Class#inheritable_attributes
  0.00     0.10      0.00        2     0.00     0.00  Array#pop
  0.00     0.10      0.00        5     0.00     2.00  Dependencies.log_call
  0.00     0.10      0.00        1     0.00   100.00  Dependencies.load_file
  0.00     0.10      0.00       17     0.00     0.00  Hash#[]=
  0.00     0.10      0.00        8     0.00     0.00  Object#initialize
  0.00     0.10      0.00        2     0.00     0.00  Array#delete_if
  0.00     0.10      0.00        2     0.00     0.00  Kernel.inspect
  0.00     0.10      0.00        1     0.00     0.00  Dependencies.search_for_file
  0.00     0.10      0.00        5     0.00     0.00  Symbol#===
  0.00     0.10      0.00        5     0.00     0.00  String#inspect
  0.00     0.10      0.00       20     0.00     0.00  Module#constants
  0.00     0.10      0.00        1     0.00    20.00  Object#require
  0.00     0.10      0.00        1     0.00     0.00  Observable.notify_observers
  0.00     0.10      0.00        3     0.00     0.00  String#blank?
  0.00     0.10      0.00        1     0.00     0.00  Kernel.==
  0.00     0.10      0.00        1     0.00     0.00  Digest::Class#hexdigest
  0.00     0.10      0.00        3     0.00     0.00  Kernel.send
  0.00     0.10      0.00        4     0.00     0.00  String#+
  0.00     0.10      0.00        2     0.00    30.00  ActiveSupport::CoreExtensions::Hash::Keys.symbolize_keys
  0.00     0.10      0.00        4     0.00     7.50  Module#local_constants
  0.00     0.10      0.00        1     0.00     0.00  Dependencies.qualified_name_for
  0.00     0.10      0.00        5     0.00     0.00  String#to_s
  0.00     0.10      0.00        1     0.00     0.00  Dependencies.load_once_paths
  0.00     0.10      0.00        4     0.00     0.00  ActiveSupport::CoreExtensions::String::Inflections.constantize
  0.00     0.10      0.00        1     0.00     0.00  Kernel.gem_original_require
  0.00     0.10      0.00       14     0.00     0.00  Kernel.is_a?
  0.00     0.10      0.00        1     0.00     0.00  Digest::Class#digest
  0.00     0.10      0.00        1     0.00   100.00  Dependencies.load_missing_constant
  0.00     0.10      0.00        2     0.00     0.00  Kernel.singleton_method_added
  0.00     0.10      0.00        1     0.00    10.00  ActiveRecord::Validations::ClassMethods.validates_uniqueness_of
  0.00     0.10      0.00       30     0.00     0.00  Module#==
  0.00     0.10      0.00        1     0.00     0.00  Class#new
  0.00     0.10      0.00       14     0.00     0.00  File#expand_path
  0.00     0.10      0.00        4     0.00     0.00  Module#ancestors
  0.00     0.10      0.00        1     0.00     0.00  ActiveSupport::CoreExtensions::String::Inflections.underscore
  0.00     0.10      0.00        2     0.00     0.00  Hash#include?
  0.00     0.10      0.00        1     0.00     0.00  User#encrypted_password
  0.00     0.10      0.00        1     0.00     0.00  Enumerable.any?
  0.00     0.10      0.00        3     0.00     0.00  Dependencies.loaded
  0.00     0.10      0.00        1     0.00     0.00  String#tr
  0.00     0.10      0.00        3     0.00     0.00  Kernel.block_given?
  0.00     0.10      0.00        1     0.00     0.00  ActiveRecord::Validations::ClassMethods.validates_presence_of
  0.00     0.10      0.00        2     0.00     0.00  String#size
  0.00     0.10      0.00        2     0.00     0.00  Hash#default
  0.00     0.10      0.00        1     0.00     0.00  NilClass#nil?
  0.00     0.10      0.00       10     0.00     0.00  Fixnum#==
  0.00     0.10      0.00        6     0.00     0.00  String#split
  0.00     0.10      0.00        1     0.00     0.00  Dependencies.load?
  0.00     0.10      0.00        1     0.00    50.00  ActiveRecord::Validations::ClassMethods.validates_confirmation_of
  0.00     0.10      0.00        2     0.00     0.00  Array#-
  0.00     0.10      0.00        9     0.00     0.00  Module#blank_slate_method_added
  0.00     0.10      0.00        2     0.00    30.00  ActiveRecord::Validations::ClassMethods.validates_each
  0.00     0.10      0.00        1     0.00     0.00  Module#private
  0.00     0.10      0.00      849     0.00     0.00  Hash#key?
  0.00     0.10      0.00        2     0.00     0.00  Kernel.respond_to?
  0.00     0.10      0.00        2     0.00     0.00  Module#attr_accessor
  0.00     0.10      0.00       12     0.00     0.00  Array#shift
  0.00     0.10      0.00        1     0.00   100.00  Dependencies.require_or_load
  0.00     0.10      0.00        9     0.00     0.00  Dependencies.log_activity
  0.00     0.10      0.00        5     0.00     0.00  Array#last
  0.00     0.10      0.00        4     0.00     0.00  Inflector.constantize
  0.00     0.10      0.00        1     0.00     0.00  Array#uniq
  0.00     0.10      0.00       18     0.00     0.00  Kernel.object_id
  0.00     0.10      0.00        3     0.00     0.00  Class#read_inheritable_attribute
  0.00     0.10      0.00        2     0.00     0.00  Symbol#inspect
  0.00     0.10      0.00        1     0.00   100.00  Module#const_missing
  0.00     0.10      0.00        1     0.00     0.00  ActiveRecord::Base#inherited
  0.00     0.10      0.00        3     0.00     0.00  Array#|
  0.00     0.10      0.00       11     0.00     0.00  Regexp#escape
  0.00     0.10      0.00        1     0.00     0.00  Dependencies.load_once_path?
  0.00     0.10      0.00        5     0.00     0.00  Kernel.caller
  0.00     0.10      0.00        3     0.00     0.00  Module#===
  0.00     0.10      0.00        8     0.00     0.00  Module#const_defined?
  0.00     0.10      0.00        4     0.00     0.00  File#file?
  0.00     0.10      0.00        1     0.00     0.00  String#downcase
  0.00     0.10      0.00       11     0.00     0.00  Array#first
  0.00     0.10      0.00        1     0.00     0.00  Dependencies.warnings_on_first_load
  0.00     0.10      0.00        1     0.00     0.00  Digest::Base#update
  0.00     0.10      0.00        2     0.00     0.00  Digest::Base#reset
  0.00     0.10      0.00        2     0.00     0.00  Class#inherited
  0.00     0.10      0.00        2     0.00     0.00  Set#include?
  0.00     0.10      0.00        2     0.00    60.00  Dependencies.new_constants_in
  0.00     0.10      0.00        2     0.00     0.00  Dependencies.load_paths
  0.00     0.10      0.00       12     0.00     0.00  Kernel.__send__
  0.00     0.10      0.00        1     0.00     0.00  Fixnum#-@
  0.00     0.10      0.00        1     0.00     0.00  ActiveSupport::CoreExtensions::String::StartsEndsWith.ends_with?
  0.00     0.10      0.00        4     0.00     0.00  Module#module_eval
  0.00     0.10      0.00       15     0.00     0.00  Hash#[]
  0.00     0.10      0.00        6     0.00     0.00  Dependencies.qualified_const_defined?
  0.00     0.10      0.00        6     0.00     0.00  Module#name
  0.00     0.10      0.00        1     0.00     0.00  NilClass#inspect
  0.00     0.10      0.00        1     0.00     0.00  Dependencies.loadable_constants_for_path
  0.00     0.10      0.00        1     0.00     0.00  NameError#initialize
  0.00     0.10      0.00        2     0.00     0.00  String#length
  0.00     0.10      0.00        2     0.00     0.00  Module#to_s
  0.00     0.10      0.00        1     0.00     0.00  Digest::Base#finish
  0.00     0.10      0.00        4     0.00     0.00  Symbol#to_sym
  0.00     0.10      0.00        5     0.00     0.00  Array#flatten
  0.00     0.10      0.00        7     0.00     0.00  Proc#new
  0.00     0.10      0.00        6     0.00     0.00  Array#concat
  0.00     0.10      0.00        2     0.00     0.00  ActiveSupport::CoreExtensions::String::Inflections.camelize
  0.00     0.10      0.00        1     0.00     0.00  Array#map
  0.00     0.10      0.00        3     0.00     0.00  ActiveRecord::Validations::ClassMethods.validate
  0.00     0.10      0.00        1     0.00     0.00  Exception#initialize
  0.00     0.10      0.00        3     0.00     0.00  Class#write_inheritable_attribute
  0.00     0.10      0.00        1     0.00     0.00  Array#inspect
  0.00     0.10      0.00        3     0.00     0.00  ActiveRecord::Errors#default_error_messages
  0.00     0.10      0.00        2     0.00     0.00  Dependencies.autoloaded_constants
  0.00     0.10      0.00        1     0.00    80.00  Kernel.load_without_new_constant_marking
  0.00     0.10      0.00        4     0.00     0.00  File#join
  0.00     0.10      0.00        3     0.00     0.00  Symbol#to_s
  0.00     0.10      0.00        1     0.00     0.00  Dependencies.history
  0.00     0.10      0.00       13     0.00     0.00  String#empty?
  0.00     0.10      0.00        2     0.00     0.00  Set#<<
  0.00     0.10      0.00        7     0.00     0.00  String#gsub
  0.00     0.10      0.00        1     0.00   100.00  Object#profile_me
  0.00     0.10      0.00        1     0.00   100.00  Class#const_missing
  0.00     0.10      0.00        1     0.00     0.00  Array#uniq!
  0.00     0.10      0.00        3     0.00     0.00  String#strip
  0.00     0.10      0.00        6     0.00     0.00  Dependencies.constant_watch_stack
  0.00     0.10      0.00        3     0.00     0.00  Array#empty?
  0.00     0.10      0.00        1     0.00     0.00  Observable.changed
  0.00     0.10      0.00        2     0.00     0.00  Kernel.instance_variable_set
  0.00     0.10      0.00        2     0.00     0.00  Inflector.camelize
  0.00     0.10      0.00        7     0.00     0.00  Array#include?
  0.00     0.10      0.00        3     0.00     0.00  ActiveRecord::Validations::ClassMethods.validation_method
  0.00     0.10      0.00        9     0.00     0.00  Dependencies.log
  0.00     0.10      0.00        1     0.00     0.00  Dependencies.to_constant_name
  0.00     0.10      0.00        3     0.00     0.00  String#upcase
  0.00     0.10      0.00        1     0.00     0.00  ActiveRecord::Observing::ClassMethods.inherited
  0.00     0.10      0.00        8     0.00     0.00  Array#*
  0.00     0.10      0.00        7     0.00     0.00  String#[]
  0.00     0.10      0.00       17     0.00     0.00  Module#const_get
  0.00     0.10      0.00        1     0.00   100.00  #toplevel[/code]

A detailed break down of the object.method call - great for tracing problems down. 

All of this ties in nicely with the ability to run performance based unit tests.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>577</wp:post_id>
		<wp:post_date>2010-08-28 06:00:03</wp:post_date>
		<wp:post_date_gmt>2010-08-28 10:00:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>performance-monitoringprofiling</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Another Jamie&#039;s 30 minute meal...</title>
		<link>http://gregs.tcias.co.uk/2011/01/27/another-jamies-30-minute-meal/</link>
		<pubDate>Thu, 27 Jan 2011 19:36:38 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/01/27/another-jamies-30-minute-meal/</guid>
		<description></description>
		<content:encoded><![CDATA[Another Jamie's 30 minute meal success <a href="http://plixi.com/p/72862174" rel="nofollow">http://plixi.com/p/72862174</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>613</wp:post_id>
		<wp:post_date>2011-01-27 15:36:38</wp:post_date>
		<wp:post_date_gmt>2011-01-27 19:36:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>another-jamies-30-minute-meal</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[30710795159470080]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ruby, Rails, Git and Heroku</title>
		<link>http://gregs.tcias.co.uk/2011/02/17/ruby-rails-git-and-heroku/</link>
		<pubDate>Thu, 17 Feb 2011 17:26:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=614</guid>
		<description></description>
		<content:encoded><![CDATA[Over Christmas and last month, I decided to resurrect <a href="http://www.tcias.co.uk/">www.tcias.co.uk</a>. Initially it was just a static html site, but I decided to re-build it using Ruby and Rails. While it's very much like using a sledgehammer to tap in a small protruding nail, I figured it was a simple enough project to explore building a Rails app. I had a few goals in mind:
<ul>
	<li>Use <a href="http://git-scm.com/">Git</a></li>
	<li>Build it using tests (<a href="http://rspec.info/">Rspec</a>)</li>
	<li>and conversely take a look at BBD</li>
	<li>Refactor common elements using partials</li>
	<li>Have fun</li>
</ul>
<a href="http://heroku.com/">Heroku</a> came along after the initial build because my server seemed to struggle serving the app using a combination of Apache and Passenger Phusion (looks like I need more RAM...). Overall the experience has simply put been great. Building an app using the Ruby and Rails toolset is just a pleasure. <a href="http://rvm.beginrescueend.com/">RVM</a> for ruby version management, Bundler for Gem management, <a href="https://github.com/grosser/autotest">autotest</a> for <a href="http://ph7spot.com/musings/getting-started-with-autotest">continuous background tests</a>, easy deployment with <a href="http://git-scm.com/">Git</a> integration. Compared to the CF world I am in [big caveat this might not be true for you], the rails ecosystm is incredibly rich, well documented, functional and fun.

I started off by following the Rails guide over at <a href="http://ruby.railstutorial.org/chapters/">Rails Tutorial</a> and borrowed the set up to get started. After creating my project, the first thing I got to grips with was getting <a href="http://git-scm.com/">Git</a> set up. I use both a local repository and a remote one over at <a href="https://github.com/gregstewart/Teacup-In-A-Storm">Github</a>, Knowing that your code is versioned in two places is quite a comfort and I have since started using it for absolutely everything locally and have pushed a few other projects (terribly old projects that I am a little embarrassed about, but being the sentimental individual didn't want to loose) on to <a href="https://github.com/">Github</a>. 

Then came setting up <a href="https://github.com/grosser/autotest">autotest</a>, having this run in the background with Growl integration gives you instant notification that your tests are passing or failing whenever you save a file. This is so incredibly useful and responsive. I really love the continuous testing nature of this setup.

Given the nature of the site, the coding part was easy-ish and I am sure there are a plenty of things I have done like a noob.

Where all this really comes to shine is during deployment time. I opted for <a href="http://heroku.com/">Heroku</a>, it wasn't so much a choice as a case of I'd be stupid not to. The documentation for signing up and getting started is first class (as it is with <a href="https://github.com/">Github</a> by the way). Once you have your account, created your app and linked it to your git repository, deploying your code is a simple case of typing:

[code]git push heroku master[/code]

From then on in, you just watch the code being checked out, gem dependency being resolved and your app launching. Knowing that your site is Ok thanks to your tests, the one line deployment command is pure joy.

To give you an indication of how great this setup is, consider that I decided to switch from <a href="http://www.ruby-doc.org/stdlib/libdoc/erb/rdoc/">erb</a> files to <a href="http://haml-lang.com/">Haml</a>. I spent a few hours reading up and converting my erb files over, while having autotest running showing me where things were breaking (due to my lack of knowledge of the new syntax) or working. Then pushing changes into Git. I confess I had also cast my eye over the resulting output (old habits die hard ;)) and finally running a one line deployment to Heroku. Job done and once again a pleasure and full of confidence about the result.

Where there any downsides? Well not downsides, but hiccups, wrapping my head around RVM and gem management was a bit bewildering especially when some gems were being used unexpectedly, the problem lay with what's between the chair and the keyboard. Some of the RSpec view testing tripped me up. When you decide to test the content of views, eg:

[code]response.should have_selector("title", :content => "Something")[/code]

Don't forget to include render_views after your describe statement for the controller, or else your tests will fail and you will be be scratching your head as to why that is the case. :S

There's a lot to take in and it is a little overwhelming when things do not work as intended, but the information to resolve these is out there and with a careful reading of the error messages it does not take very long to figure out.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>614</wp:post_id>
		<wp:post_date>2011-02-17 13:26:00</wp:post_date>
		<wp:post_date_gmt>2011-02-17 17:26:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-rails-git-and-heroku</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="autotest"><![CDATA[autotest]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rspec"><![CDATA[rspec]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Angus</title>
		<link>http://gregs.tcias.co.uk/2011/02/24/angus/</link>
		<pubDate>Thu, 24 Feb 2011 10:02:18 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=620</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center;"><a href="http://gregs.tcias.co.uk/wp-content/uploads/2011/02/6645g9e_20.jpeg"><img class="aligncenter size-full wp-image-629" title="Angus (August 2003 - 21/February 2011)" src="http://gregs.tcias.co.uk/wp-content/uploads/2011/02/6645g9e_20.jpeg" alt="" width="480" height="320" /></a></p>
Goodbye my beloved cat, I will never forget how much joy you brought us.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>620</wp:post_id>
		<wp:post_date>2011-02-24 06:02:18</wp:post_date>
		<wp:post_date_gmt>2011-02-24 10:02:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>angus</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Calling a web API</title>
		<link>http://gregs.tcias.co.uk/2011/03/11/calling-a-web-api/</link>
		<pubDate>Fri, 11 Mar 2011 14:12:32 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=631</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Monaco} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Monaco; min-height: 16.0px} p.p3 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Arial; color: #333233; min-height: 14.0px} p.p4 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Arial; color: #333233} span.s1 {text-decoration: underline ; color: #002fee} span.s2 {font: 12.0px Arial; color: #333233} -->A few weeks back I stumbled across <a href="http://blog.phono.com/2011/02/17/how-to-build-a-voip-based-baby-monitor/?utm_source=javascriptweekly&amp;utm_medium=email">a post showing how to create a baby monitor type application</a> using <a href="http://www.tropo.com/">Tropo</a> and <a href="http://www.phono.com/">Phono</a> courtesy of the JavaScript weekly newsletter. This got me thinking about our applications and I thought it would be kind of cool to use a Voice based interface to hit our API to retrieve an valuation from our system.

Over the course of a few evening I knocked up a working demo using Rails and Tropo, that can dial our AVM using Skype. If you'd like to give it a whirl dial this number using Skype: +990009369991484011, select option 1 and then enter 8633100 followed by the hash (#) key. The resulting text to speech is a little rough, but pretty cool none the less I thought.

If I can I'll post the sample code up to github in the near future.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>631</wp:post_id>
		<wp:post_date>2011-03-11 10:12:32</wp:post_date>
		<wp:post_date_gmt>2011-03-11 14:12:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>calling-a-web-api</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="heroku"><![CDATA[heroku]]></category>
		<category domain="category" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="tropo"><![CDATA[tropo]]></category>
		<category domain="post_tag" nicename="tropo"><![CDATA[tropo]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Merging PDFs</title>
		<link>http://gregs.tcias.co.uk/2011/03/11/merging-pdfs/</link>
		<pubDate>Fri, 11 Mar 2011 15:50:49 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=636</guid>
		<description></description>
		<content:encoded><![CDATA[I have just posted two small utility functions to merge PDF documents together for those working in CF. You can view them <a href="https://gist.github.com/866034">here</a> . Or inline below.

The first function takes an array of PDF documents and merges them into one. This was handy when different pages for a report had different styling requirements (such a full background colouring bleeding across the margins)

<script src="https://gist.github.com/866034.js?file=gistfile1.cfm"></script>

The second function stamps a pdf document over another pdf document at certain position. I needed this for a document that had a table dynamically generated that spanned multiple pages and I wanted the footer to not overlap the table content (I could not figure out how to use a css based solution because of the margins).

<script src="https://gist.github.com/866034.js?file=gistfile2.cfm"></script>

Anyway maybe somebody else will find these handy.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>636</wp:post_id>
		<wp:post_date>2011-03-11 11:50:49</wp:post_date>
		<wp:post_date_gmt>2011-03-11 15:50:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>merging-pdfs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="coldfusion"><![CDATA[ColdFusion]]></category>
		<category domain="post_tag" nicename="coldfusion-2"><![CDATA[coldfusion]]></category>
		<category domain="post_tag" nicename="itext"><![CDATA[itext]]></category>
		<category domain="post_tag" nicename="merge"><![CDATA[merge]]></category>
		<category domain="post_tag" nicename="pdf"><![CDATA[pdf]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>This site is now powered by Nginx</title>
		<link>http://gregs.tcias.co.uk/2011/03/22/this-site-is-now-powered-by-nginx/</link>
		<pubDate>Tue, 22 Mar 2011 16:58:35 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=644</guid>
		<description></description>
		<content:encoded><![CDATA[I took the plunge this afternoon and switched from Apache 2 to NGinx. For the most part I followed the instructions <a href="http://library.linode.com/web-servers/nginx/php-fastcgi/debian-5-lenny">posted here</a>. Since I am now running Debian Squeeze there were a few things to note:

<ol>
	<li>spawn-fcgi: there's a package for it so I just used that : [code]sudo apt-get install spawn-fcgi[/code]</li>
	<li>the stop/start script complained when adding it to the boot/shutdown cycle, but one posted in the comments worked:
[code]
#!/bin/bash
### BEGIN INIT INFO
# Provides: php-fastcgi
# Required-Start: $all
# Required-Stop: $all
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: starts the php-fastcgi process
# Description: starts php-fastcgi using start-stop-daemon
### END INIT INFO
PHP_SCRIPT=/usr/bin/php-fastcgi
FASTCGI_USER=www-data
RETVAL=0
case "$1" in
start)
su - $FASTCGI_USER -c $PHP_SCRIPT
RETVAL=$?
;;
stop)
killall -9 php5-cgi
RETVAL=$?
;;
restart)
killall -9 php5-cgi
su - $FASTCGI_USER -c $PHP_SCRIPT
RETVAL=$?
;;
*)
echo "Usage: php-fastcgi {start|stop|restart}"
exit 1
;;
esac 
exit $RETVAL
[/code]</li>
	<li>Next to stop Apache from starting up run: [code]sudo update-rc.d -f apache2 remove[/code]</li>
	<li>On the rewrite front, I needed to <a href="http://michaelshadle.com/2009/03/19/finally-using-nginxs-try-files-directive">add the following</a> to my virtual host configuration to have those seo friendly urls up and running again: [code]try_files $uri $uri/ /index.php;[/code]
</ol>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>644</wp:post_id>
		<wp:post_date>2011-03-22 12:58:35</wp:post_date>
		<wp:post_date_gmt>2011-03-22 16:58:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>this-site-is-now-powered-by-nginx</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="apache"><![CDATA[apache]]></category>
		<category domain="post_tag" nicename="apache2"><![CDATA[apache2]]></category>
		<category domain="category" nicename="comps"><![CDATA[comps]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<category domain="post_tag" nicename="debian"><![CDATA[debian]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
		<category domain="post_tag" nicename="squeeze"><![CDATA[squeeze]]></category>
		<category domain="category" nicename="web-server"><![CDATA[web server]]></category>
		<category domain="post_tag" nicename="web-server"><![CDATA[web server]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>167220</wp:comment_id>
			<wp:comment_author><![CDATA[sonnb]]></wp:comment_author>
			<wp:comment_author_email>sonnb@facebook.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>171.229.78.72</wp:comment_author_IP>
			<wp:comment_date>2011-10-13 10:24:30</wp:comment_date>
			<wp:comment_date_gmt>2011-10-13 09:24:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are advised to fix this from NGinx: http://gregs.tcias.co.uk/wp-content/themes/twentyeleven/images/headers/hanoi.jpg/index.php]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1318497870.9742";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1318538407.5288";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>167248</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>80.45.18.122</wp:comment_author_IP>
			<wp:comment_date>2011-10-13 21:40:49</wp:comment_date>
			<wp:comment_date_gmt>2011-10-13 20:40:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the tip, found the solution here: http://wiki.nginx.org/Pitfalls#Pass_Non-PHP_Requests_to_PHP.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>167220</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1318538449.0141";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Folder disk usage</title>
		<link>http://gregs.tcias.co.uk/2011/04/01/folder-disk-usage/</link>
		<pubDate>Fri, 01 Apr 2011 13:50:39 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=653</guid>
		<description></description>
		<content:encoded><![CDATA[Today my server ran out of disk space. :( With the help of my friend Ed I was able to pin point the exact location. If you run this command from the root of your server:

[code]du -sh *[/code]

You will get something like the following:

[code]5.1M	bin
4.0K	boot
8.0K	dev
5.3M	etc
795M	home
11M	lib
0	lib64
16K	lost+found
4.0K	media
4.0K	mnt
4.0K	opt
0	proc
26M	root
3.8M	sbin
4.0K	selinux
4.0K	srv
0	sys
0	tmp
1.3G	usr
2.4G	var[/code]

Then you can start drilling down the folders until you find the exact culprit. In my case a log file had grown to 8 Gig in size.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>653</wp:post_id>
		<wp:post_date>2011-04-01 09:50:39</wp:post_date>
		<wp:post_date_gmt>2011-04-01 13:50:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>folder-disk-usage</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="comps"><![CDATA[comps]]></category>
		<category domain="category" nicename="debian"><![CDATA[debian]]></category>
		<category domain="post_tag" nicename="debian"><![CDATA[debian]]></category>
		<category domain="post_tag" nicename="disk"><![CDATA[disk]]></category>
		<category domain="post_tag" nicename="space"><![CDATA[space]]></category>
		<category domain="post_tag" nicename="unix"><![CDATA[unix]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>node.js chat server</title>
		<link>http://gregs.tcias.co.uk/2011/04/05/node-js-chat-server/</link>
		<pubDate>Tue, 05 Apr 2011 14:28:55 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=656</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">Since I have a bit of time on my hands right now, I took a look at node.js and socket.io. The outcome, a really simple chat client/server written in JavaScript. Source is up over at <a href="https://github.com/gregstewart/chat.io">Github</a>, with some instructions on getting started.</p>
<p style="text-align: center;"><a href="http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-05-at-3.25.59-PM.png"><img class="size-full wp-image-659" title="Screen shot 2011-04-05 at 3.25.59 PM" src="http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-05-at-3.25.59-PM.png" alt="" width="463" height="500" /></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>656</wp:post_id>
		<wp:post_date>2011-04-05 10:28:55</wp:post_date>
		<wp:post_date_gmt>2011-04-05 14:28:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>node-js-chat-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="category" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="socket-io"><![CDATA[socket.io]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>149350</wp:comment_id>
			<wp:comment_author><![CDATA[rupa]]></wp:comment_author>
			<wp:comment_author_email>rupadhoot@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.investorfloor.net</wp:comment_author_url>
			<wp:comment_author_IP>121.245.136.125</wp:comment_author_IP>
			<wp:comment_date>2011-06-12 08:37:58</wp:comment_date>
			<wp:comment_date_gmt>2011-06-12 12:37:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am having problem where I cannot proceed further after entering the text / user at the Submit button on Handle....  Please advice]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307882278.4476";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>149386</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>94.174.4.121</wp:comment_author_IP>
			<wp:comment_date>2011-06-12 11:58:43</wp:comment_date>
			<wp:comment_date_gmt>2011-06-12 15:58:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there,

Can you raise a ticket here: https://github.com/gregstewart/chat.io/issues?sort=created&direction=desc&_pjax=true&state=open stating what browser and os (and versions) you are using. 

Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>149350</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307894323.9987";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>iPhone tracking</title>
		<link>http://gregs.tcias.co.uk/2011/04/21/iphone-tracking/</link>
		<pubDate>Thu, 21 Apr 2011 08:51:29 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=667</guid>
		<description></description>
		<content:encoded><![CDATA[So apparently Apple has been a tad naughty and <a href="http://arstechnica.com/apple/news/2011/04/how-apple-tracks-your-location-without-your-consent-and-why-it-matters.ars?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=rss">been tracking</a> where us iPhone and iPad 3G users roam. Two researchers <a href="http://radar.oreilly.com/2011/04/apple-location-tracking.html">have published these findings</a> along with <a href="http://petewarden.github.com/iPhoneTracker/">an app</a> that overlays the data on an OpenStreetMap map. So this is me:
<p style="text-align: center;"><a href="http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-21-at-9.33.07-AM.jpg"><img class="aligncenter size-full wp-image-668" title="Greg's Iphone tracking" src="http://gregs.tcias.co.uk/wp-content/uploads/2011/04/Screen-shot-2011-04-21-at-9.33.07-AM.jpg" alt="Greg's Iphone tracking" width="601" height="445" /></a></p>
I am disappointed that this is turned on by default, not so much for myself as I find the information interesting, but it's always best to ask first, right? I know plenty of people who are very sensitive about this type of information. And apparently I don't venture to far north of the river either.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>667</wp:post_id>
		<wp:post_date>2011-04-21 04:51:29</wp:post_date>
		<wp:post_date_gmt>2011-04-21 08:51:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iphone-tracking</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="geo"><![CDATA[geo]]></category>
		<category domain="post_tag" nicename="gis"><![CDATA[gis]]></category>
		<category domain="category" nicename="iphone"><![CDATA[iphone]]></category>
		<category domain="post_tag" nicename="iphone"><![CDATA[iphone]]></category>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<category domain="post_tag" nicename="mapping"><![CDATA[mapping]]></category>
		<category domain="post_tag" nicename="tracking"><![CDATA[tracking]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>141431</wp:comment_id>
			<wp:comment_author><![CDATA[Fred Clouse]]></wp:comment_author>
			<wp:comment_author_email>clouseonline@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.180.64.43</wp:comment_author_IP>
			<wp:comment_date>2011-04-25 09:52:03</wp:comment_date>
			<wp:comment_date_gmt>2011-04-25 13:52:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's like Mobile Spy, which tracks GPS locations and more in the event your iPhone is lost or stolen... http://www.mobile-spy.com/iphone.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303739523.5337";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303810069.6533";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>154921</wp:comment_id>
			<wp:comment_author><![CDATA[Digital Ethics &laquo; Paul Martin&#039;s Blog]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://paulmmartinblog.wordpress.com/2011/03/25/digital-ethics/</wp:comment_author_url>
			<wp:comment_author_IP>72.233.69.25</wp:comment_author_IP>
			<wp:comment_date>2011-07-16 11:55:01</wp:comment_date>
			<wp:comment_date_gmt>2011-07-16 15:55:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 14. http://gregs.tcias.co.uk/2011/04/21/iphone-tracking/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1310831701.0335";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>141127</wp:comment_id>
			<wp:comment_author><![CDATA[iMacker]]></wp:comment_author>
			<wp:comment_author_email>mr_pimp247@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://surreystore.com</wp:comment_author_url>
			<wp:comment_author_IP>207.6.157.153</wp:comment_author_IP>
			<wp:comment_date>2011-04-23 03:35:36</wp:comment_date>
			<wp:comment_date_gmt>2011-04-23 07:35:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you are trying to figure out how to find out how to use this iPhone Tracker Application to find where your iPhone has been then just following this tutorial located here 
http://surreystore.com/cms/apple/47-iphone-tracker-app.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303544136.3565";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>140865</wp:comment_id>
			<wp:comment_author><![CDATA[WilGeno]]></wp:comment_author>
			<wp:comment_author_email>juggler@trunkful.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.trunkful.com</wp:comment_author_url>
			<wp:comment_author_IP>63.228.60.201</wp:comment_author_IP>
			<wp:comment_date>2011-04-21 16:40:34</wp:comment_date>
			<wp:comment_date_gmt>2011-04-21 20:40:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm disappointed that so many people are upset that location services is a feature. Go ahead, turn it off. The see how many apps work.  This was change in how the data was stored was made public by Apple last year. The only new thing is this lame app.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303418434.9309";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>142975</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>94.174.4.121</wp:comment_author_IP>
			<wp:comment_date>2011-05-04 05:08:12</wp:comment_date>
			<wp:comment_date_gmt>2011-05-04 09:08:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@WilGeno - I think you are missing the point slightly as to why people are upset. It's not that the location services are enabled, but rather that they are a) being logged and captured for such a long time and b) that they readily accessible. I don't have a problem with it, but I can understand why many people are upset.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>140865</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1304500092.0776";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>141537</wp:comment_id>
			<wp:comment_author><![CDATA[Digital Ethics &laquo; Paul Martin&#039;s Blog]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://paulmmartinblog.wordpress.com/2011/04/26/digital-ethics/</wp:comment_author_url>
			<wp:comment_author_IP>74.200.247.247</wp:comment_author_IP>
			<wp:comment_date>2011-04-26 04:49:59</wp:comment_date>
			<wp:comment_date_gmt>2011-04-26 08:49:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 9. http://gregs.tcias.co.uk/2011/04/21/iphone-tracking/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303807799.7919";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303810070.9053";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>My iPhone knows where I have b...</title>
		<link>http://gregs.tcias.co.uk/2011/04/21/my-iphone-knows-where-i-have-b/</link>
		<pubDate>Thu, 21 Apr 2011 08:55:41 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/04/21/my-iphone-knows-where-i-have-b/</guid>
		<description></description>
		<content:encoded><![CDATA[My iPhone knows where I have been! <a href="http://tinyurl.com/4ydxwss" rel="nofollow">http://tinyurl.com/4ydxwss</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>673</wp:post_id>
		<wp:post_date>2011-04-21 04:55:41</wp:post_date>
		<wp:post_date_gmt>2011-04-21 08:55:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-iphone-knows-where-i-have-b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[60990073876905984]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A Tiny Apartment in Hong Kong ...</title>
		<link>http://gregs.tcias.co.uk/2011/05/11/a-tiny-apartment-in-hong-kong/</link>
		<pubDate>Wed, 11 May 2011 07:30:23 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/05/11/a-tiny-apartment-in-hong-kong/</guid>
		<description></description>
		<content:encoded><![CDATA[A Tiny Apartment in Hong Kong Transforms into 24 Rooms <a href="http://t.co/ZFzAqkG" rel="nofollow">http://t.co/ZFzAqkG</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>675</wp:post_id>
		<wp:post_date>2011-05-11 03:30:23</wp:post_date>
		<wp:post_date_gmt>2011-05-11 07:30:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-tiny-apartment-in-hong-kong</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[68216365680570368]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>For old times sake. Come on St...</title>
		<link>http://gregs.tcias.co.uk/2011/05/14/for-old-times-sake-come-on-st/</link>
		<pubDate>Sat, 14 May 2011 11:18:51 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/05/14/for-old-times-sake-come-on-st/</guid>
		<description></description>
		<content:encoded><![CDATA[For old times sake. Come on Stoke city! #<a href="http://search.twitter.com/search?q=%23facup" class="aktt_hashtag">facup</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>679</wp:post_id>
		<wp:post_date>2011-05-14 07:18:51</wp:post_date>
		<wp:post_date_gmt>2011-05-14 11:18:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>for-old-times-sake-come-on-st</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[69361024674955264]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Just got my #BETA invite to @I...</title>
		<link>http://gregs.tcias.co.uk/2011/05/16/just-got-my-beta-invite-to-i/</link>
		<pubDate>Mon, 16 May 2011 08:07:07 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/05/16/just-got-my-beta-invite-to-i/</guid>
		<description></description>
		<content:encoded><![CDATA[Just got my #<a href="http://search.twitter.com/search?q=%23BETA" class="aktt_hashtag">BETA</a> invite to @<a href="http://twitter.com/InVisionApp" class="aktt_username">InVisionApp</a> -- A whole new way to create beautiful interactive #<a href="http://search.twitter.com/search?q=%23UX" class="aktt_hashtag">UX</a> #prototypes [VIDEO]: <a href="http://bit.ly/l2A7RK" rel="nofollow">http://bit.ly/l2A7RK</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>680</wp:post_id>
		<wp:post_date>2011-05-16 04:07:07</wp:post_date>
		<wp:post_date_gmt>2011-05-16 08:07:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>just-got-my-beta-invite-to-i</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[70037550714208256]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The rise of filter bubbles: ht...</title>
		<link>http://gregs.tcias.co.uk/2011/05/17/the-rise-of-filter-bubbles-ht/</link>
		<pubDate>Tue, 17 May 2011 08:12:18 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/05/17/the-rise-of-filter-bubbles-ht/</guid>
		<description></description>
		<content:encoded><![CDATA[The rise of filter bubbles: <a href="http://youtu.be/B8ofWFx525s" rel="nofollow">http://youtu.be/B8ofWFx525s</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>682</wp:post_id>
		<wp:post_date>2011-05-17 04:12:18</wp:post_date>
		<wp:post_date_gmt>2011-05-17 08:12:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-rise-of-filter-bubbles-ht</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[70401241267699712]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>RT @extralife: Jim Henson died...</title>
		<link>http://gregs.tcias.co.uk/2011/05/17/rt-extralife-jim-henson-died/</link>
		<pubDate>Tue, 17 May 2011 08:19:08 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/05/17/rt-extralife-jim-henson-died/</guid>
		<description></description>
		<content:encoded><![CDATA[RT @<a href="http://twitter.com/extralife" class="aktt_username">extralife</a>: Jim Henson died 21 years ago. The world is less great with out him.  <a href="http://www.youtube.com/watch?v=olHV1o9TE-8" rel="nofollow">http://www.youtube.com/watch?v=olHV1o9TE-8</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date>2011-05-17 04:19:08</wp:post_date>
		<wp:post_date_gmt>2011-05-17 08:19:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rt-extralife-jim-henson-died</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[70402960995258369]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Oh My Zsh</title>
		<link>http://gregs.tcias.co.uk/2011/05/20/oh-my-zsh/</link>
		<pubDate>Fri, 20 May 2011 15:36:11 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=683</guid>
		<description></description>
		<content:encoded><![CDATA[Stumbled across a <a href="http://thechangelog.com/post/5452652236/hooray-oh-my-zsh-has-been-updated">post</a> on <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank">Oh My Zsh</a> this morning and on a pure whim decided to give it a whirl. After 8 hours or so of use, I am really, really liking it. It's the small things.

<a href="http://gregs.tcias.co.uk/wp-content/uploads/2011/05/Screen-shot-2011-05-20-at-4.23.36-PM.png"><img class="aligncenter size-full wp-image-684" title="Oh My Zsh" src="http://gregs.tcias.co.uk/wp-content/uploads/2011/05/Screen-shot-2011-05-20-at-4.23.36-PM.png" alt="" width="533" height="156" /></a>

The git integration shown in the above screenshot is just is the icing on the cake, seriously worth spending some time on this if you spend any length of time at the Terminal.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>683</wp:post_id>
		<wp:post_date>2011-05-20 11:36:11</wp:post_date>
		<wp:post_date_gmt>2011-05-20 15:36:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oh-my-zsh</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nix"><![CDATA[*nix]]></category>
		<category domain="category" nicename="comps"><![CDATA[comps]]></category>
		<category domain="category" nicename="mac"><![CDATA[mac]]></category>
		<category domain="category" nicename="os-x"><![CDATA[os x]]></category>
		<category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
		<category domain="post_tag" nicename="shell"><![CDATA[shell]]></category>
		<category domain="post_tag" nicename="unix"><![CDATA[unix]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>146337</wp:comment_id>
			<wp:comment_author><![CDATA[Adam Stacoviak]]></wp:comment_author>
			<wp:comment_author_email>adam@thechangelog.com</wp:comment_author_email>
			<wp:comment_author_url>http://thechangelog.com/</wp:comment_author_url>
			<wp:comment_author_IP>98.196.26.254</wp:comment_author_IP>
			<wp:comment_date>2011-05-24 16:18:57</wp:comment_date>
			<wp:comment_date_gmt>2011-05-24 20:18:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yup, it is the little things that make us happy :) Thanks for linking back and for also finding that quick hit post on Oh My Zsh helpful.

BTW, 0.6.1 will feature Robby Russell for a nice chat about Zsh and Oh My Zsh.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306268337.9044";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306311635.1306";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>146416</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>94.174.4.121</wp:comment_author_IP>
			<wp:comment_date>2011-05-25 04:23:07</wp:comment_date>
			<wp:comment_date_gmt>2011-05-25 08:23:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My pleasure :)

Look forward to the episode. By the way, love the show, always looking forward to finding a new episode downloaded and ready to listen to.

Cheers]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306311787.6203";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>http://on.ted.com/9GHg - now ...</title>
		<link>http://gregs.tcias.co.uk/2011/05/22/httpon-ted-com9ghg-now/</link>
		<pubDate>Sun, 22 May 2011 11:29:49 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/05/22/httpon-ted-com9ghg-now/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://on.ted.com/9GHg" rel="nofollow">http://on.ted.com/9GHg</a> - now you know why Jodie! #<a href="http://search.twitter.com/search?q=%23tieyourshowlaces" class="aktt_hashtag">tieyourshowlaces</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>690</wp:post_id>
		<wp:post_date>2011-05-22 07:29:49</wp:post_date>
		<wp:post_date_gmt>2011-05-22 11:29:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>httpon-ted-com9ghg-now</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[72262888563281920]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>a re-introduction to the chrom...</title>
		<link>http://gregs.tcias.co.uk/2011/05/31/a-re-introduction-to-the-chrom/</link>
		<pubDate>Tue, 31 May 2011 10:45:57 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/05/31/a-re-introduction-to-the-chrom/</guid>
		<description></description>
		<content:encoded><![CDATA[a re-introduction to the chrome developer tools <a href="http://tinyurl.com/3rqhx58" rel="nofollow">http://tinyurl.com/3rqhx58</a> - plenty of terribly useful gems!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>691</wp:post_id>
		<wp:post_date>2011-05-31 06:45:57</wp:post_date>
		<wp:post_date_gmt>2011-05-31 10:45:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-re-introduction-to-the-chrom</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[75513336841764864]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Last day @ Hometrack</title>
		<link>http://gregs.tcias.co.uk/2011/06/03/last-day-hometrack/</link>
		<pubDate>Fri, 03 Jun 2011 10:02:59 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=693</guid>
		<description></description>
		<content:encoded><![CDATA[Today is my last day at <a href="http://www.hometrack.co.uk/">Hometrack</a>. What started as a short term contract, turned into one of those rare great work experiences that lasted 6 years and spanned 2 hemispheres. Last days are always a bit peculiar, a little nostalgic, and there are a bunch of people I will miss interacting with on a day to day basis. Looking forward though, there's a month off and many new and exciting challenges ahead.

It also marks the end of my affiliation with ColdFusion, but not the Adobe toolset. Starting in July, I am moving full time into the UX field, as a Senior UI developer/consultant for <a href="http://www.thoughtworks.com/">ThoughtWorks</a> and I am truly excited at the  prospect of joining them and working with a bunch of extremely smart, dedicated and passionate people.

As a final note to this post, my good friend Zac put together a little clip of my commits to one of the projects we worked on together, which I wanted to share, as it uses a <a href="http://code.google.com/p/gource/">neat version control visualisation tool</a>:

<iframe width="425" height="349" src="http://www.youtube.com/embed/XLyfPfJ_AAw" frameborder="0" allowfullscreen></iframe>

As the saying goes: "So long, and thanks for all the fish"]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>693</wp:post_id>
		<wp:post_date>2011-06-03 06:02:59</wp:post_date>
		<wp:post_date_gmt>2011-06-03 10:02:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>last-day-hometrack</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coldfusion-2"><![CDATA[coldfusion]]></category>
		<category domain="post_tag" nicename="gource"><![CDATA[gource]]></category>
		<category domain="post_tag" nicename="hometrack"><![CDATA[hometrack]]></category>
		<category domain="post_tag" nicename="thoughtworks"><![CDATA[thoughtworks]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pure gold http://youtu.be/1L3e...</title>
		<link>http://gregs.tcias.co.uk/2011/06/14/pure-gold-httpyoutu-be1l3e/</link>
		<pubDate>Tue, 14 Jun 2011 09:27:56 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/14/pure-gold-httpyoutu-be1l3e/</guid>
		<description></description>
		<content:encoded><![CDATA[Pure gold <a href="http://youtu.be/1L3eeC2lJZs" rel="nofollow">http://youtu.be/1L3eeC2lJZs</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>698</wp:post_id>
		<wp:post_date>2011-06-14 05:27:56</wp:post_date>
		<wp:post_date_gmt>2011-06-14 09:27:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pure-gold-httpyoutu-be1l3e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[80567135763562496]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Just arrived! http://t.co/qE5d...</title>
		<link>http://gregs.tcias.co.uk/2011/06/14/just-arrived-httpt-coqe5d/</link>
		<pubDate>Tue, 14 Jun 2011 10:07:09 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/14/just-arrived-httpt-coqe5d/</guid>
		<description></description>
		<content:encoded><![CDATA[Just arrived! <a href="http://t.co/qE5dHaT" rel="nofollow">http://t.co/qE5dHaT</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>699</wp:post_id>
		<wp:post_date>2011-06-14 06:07:09</wp:post_date>
		<wp:post_date_gmt>2011-06-14 10:07:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>just-arrived-httpt-coqe5d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[80577004033937408]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I *do* intensely dislike print...</title>
		<link>http://gregs.tcias.co.uk/2011/06/20/i-do-intensely-dislike-print/</link>
		<pubDate>Mon, 20 Jun 2011 13:49:51 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/20/i-do-intensely-dislike-print/</guid>
		<description></description>
		<content:encoded><![CDATA[I *do* intensely dislike printers!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>700</wp:post_id>
		<wp:post_date>2011-06-20 09:49:51</wp:post_date>
		<wp:post_date_gmt>2011-06-20 13:49:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-do-intensely-dislike-print</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[82807376738136064]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>150530</wp:comment_id>
			<wp:comment_author><![CDATA[YOD]]></wp:comment_author>
			<wp:comment_author_email>ian@ascotinlessables.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.177.177.156</wp:comment_author_IP>
			<wp:comment_date>2011-06-20 16:21:24</wp:comment_date>
			<wp:comment_date_gmt>2011-06-20 20:21:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You complain? You have a perfectly competent backup.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308608591.2771";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308601284.9441";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>150548</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>94.174.4.121</wp:comment_author_IP>
			<wp:comment_date>2011-06-20 18:24:45</wp:comment_date>
			<wp:comment_date_gmt>2011-06-20 22:24:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And I am grateful!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>150530</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308608685.3766";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>150688</wp:comment_id>
			<wp:comment_author><![CDATA[YOD]]></wp:comment_author>
			<wp:comment_author_email>ian@ascotinlessables.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.181.86.121</wp:comment_author_IP>
			<wp:comment_date>2011-06-21 17:14:22</wp:comment_date>
			<wp:comment_date_gmt>2011-06-21 21:14:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[and then you didn't need it!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308690862.9675";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>7 days of father and son time ...</title>
		<link>http://gregs.tcias.co.uk/2011/06/23/7-days-of-father-and-son-time/</link>
		<pubDate>Thu, 23 Jun 2011 15:36:36 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/23/7-days-of-father-and-son-time/</guid>
		<description></description>
		<content:encoded><![CDATA[7 days of father and son time starts now! I don't know who is more terrified...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>701</wp:post_id>
		<wp:post_date>2011-06-23 11:36:36</wp:post_date>
		<wp:post_date_gmt>2011-06-23 15:36:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>7-days-of-father-and-son-time</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[83921403237240832]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>150954</wp:comment_id>
			<wp:comment_author><![CDATA[YOD]]></wp:comment_author>
			<wp:comment_author_email>ian@ascotinlessables.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.176.182.198</wp:comment_author_IP>
			<wp:comment_date>2011-06-23 13:11:25</wp:comment_date>
			<wp:comment_date_gmt>2011-06-23 17:11:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The grandparents!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308849085.6932";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>We appear to both have survive...</title>
		<link>http://gregs.tcias.co.uk/2011/06/24/we-appear-to-both-have-survive/</link>
		<pubDate>Fri, 24 Jun 2011 10:12:41 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/24/we-appear-to-both-have-survive/</guid>
		<description></description>
		<content:encoded><![CDATA[We appear to both have survived day one <a href="http://lockerz.com/s/113619685" rel="nofollow">http://lockerz.com/s/113619685</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>702</wp:post_id>
		<wp:post_date>2011-06-24 06:12:41</wp:post_date>
		<wp:post_date_gmt>2011-06-24 10:12:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>we-appear-to-both-have-survive</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[84202273768620032]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>In the paddling pool  http://l...</title>
		<link>http://gregs.tcias.co.uk/2011/06/24/in-the-paddling-pool-httpl/</link>
		<pubDate>Fri, 24 Jun 2011 14:13:39 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/24/in-the-paddling-pool-httpl/</guid>
		<description></description>
		<content:encoded><![CDATA[In the paddling pool  <a href="http://lockerz.com/s/113665516" rel="nofollow">http://lockerz.com/s/113665516</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>703</wp:post_id>
		<wp:post_date>2011-06-24 10:13:39</wp:post_date>
		<wp:post_date_gmt>2011-06-24 14:13:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>in-the-paddling-pool-httpl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[84262916441899008]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Beans!!! http://lockerz.com/s/...</title>
		<link>http://gregs.tcias.co.uk/2011/06/25/beans-httplockerz-coms/</link>
		<pubDate>Sat, 25 Jun 2011 16:35:50 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/25/beans-httplockerz-coms/</guid>
		<description></description>
		<content:encoded><![CDATA[Beans!!! <a href="http://lockerz.com/s/114044632" rel="nofollow">http://lockerz.com/s/114044632</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>704</wp:post_id>
		<wp:post_date>2011-06-25 12:35:50</wp:post_date>
		<wp:post_date_gmt>2011-06-25 16:35:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>beans-httplockerz-coms</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[84661086862848000]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tough day, but we have a winne...</title>
		<link>http://gregs.tcias.co.uk/2011/06/26/tough-day-but-we-have-a-winne/</link>
		<pubDate>Sun, 26 Jun 2011 16:45:35 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/26/tough-day-but-we-have-a-winne/</guid>
		<description></description>
		<content:encoded><![CDATA[Tough day, but we have a winner and he is all smiles  <a href="http://t.co/jzQDLVD" rel="nofollow">http://t.co/jzQDLVD</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>705</wp:post_id>
		<wp:post_date>2011-06-26 12:45:35</wp:post_date>
		<wp:post_date_gmt>2011-06-26 16:45:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tough-day-but-we-have-a-winne</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[85025929063170048]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>151370</wp:comment_id>
			<wp:comment_author><![CDATA[YOD]]></wp:comment_author>
			<wp:comment_author_email>ian@ascotinlessables.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.181.87.94</wp:comment_author_IP>
			<wp:comment_date>2011-06-26 16:48:36</wp:comment_date>
			<wp:comment_date_gmt>2011-06-26 20:48:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Beautiful!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1309121316.5961";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>It&#039; too hot! http://t.co/QQuoT...</title>
		<link>http://gregs.tcias.co.uk/2011/06/27/it-too-hot-httpt-coqquot/</link>
		<pubDate>Mon, 27 Jun 2011 13:33:36 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/27/it-too-hot-httpt-coqquot/</guid>
		<description></description>
		<content:encoded><![CDATA[It' too hot! <a href="http://t.co/QQuoTVZ" rel="nofollow">http://t.co/QQuoTVZ</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>706</wp:post_id>
		<wp:post_date>2011-06-27 09:33:36</wp:post_date>
		<wp:post_date_gmt>2011-06-27 13:33:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>it-too-hot-httpt-coqquot</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[85340001604354048]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The difference between a fail ...</title>
		<link>http://gregs.tcias.co.uk/2011/06/27/the-difference-between-a-fail/</link>
		<pubDate>Mon, 27 Jun 2011 16:38:05 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/27/the-difference-between-a-fail/</guid>
		<description></description>
		<content:encoded><![CDATA[The difference between a fail dinner and beans <a href="http://t.co/yVHPX4b" rel="nofollow">http://t.co/yVHPX4b</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>707</wp:post_id>
		<wp:post_date>2011-06-27 12:38:05</wp:post_date>
		<wp:post_date_gmt>2011-06-27 16:38:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-difference-between-a-fail</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[85386428711845888]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Achievement unlocked - high fi...</title>
		<link>http://gregs.tcias.co.uk/2011/06/28/achievement-unlocked-high-fi/</link>
		<pubDate>Tue, 28 Jun 2011 15:54:20 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/28/achievement-unlocked-high-fi/</guid>
		<description></description>
		<content:encoded><![CDATA[Achievement unlocked - high five!!!  <a href="http://t.co/ff2Up6A" rel="nofollow">http://t.co/ff2Up6A</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>708</wp:post_id>
		<wp:post_date>2011-06-28 11:54:20</wp:post_date>
		<wp:post_date_gmt>2011-06-28 15:54:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>achievement-unlocked-high-fi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[85737805036257281]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>And we are back in Blightey an...</title>
		<link>http://gregs.tcias.co.uk/2011/06/30/and-we-are-back-in-blightey-an/</link>
		<pubDate>Thu, 30 Jun 2011 13:11:13 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/06/30/and-we-are-back-in-blightey-an/</guid>
		<description></description>
		<content:encoded><![CDATA[And we are back in Blightey and very sleepy <a href="http://t.co/ROrvuzA" rel="nofollow">http://t.co/ROrvuzA</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>709</wp:post_id>
		<wp:post_date>2011-06-30 09:11:13</wp:post_date>
		<wp:post_date_gmt>2011-06-30 13:11:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>and-we-are-back-in-blightey-an</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[86421533513359360]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Holiday over :( new job starts...</title>
		<link>http://gregs.tcias.co.uk/2011/07/03/holiday-over-new-job-starts/</link>
		<pubDate>Sun, 03 Jul 2011 23:16:18 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/07/03/holiday-over-new-job-starts/</guid>
		<description></description>
		<content:encoded><![CDATA[Holiday over :( new job starts today!!! :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>710</wp:post_id>
		<wp:post_date>2011-07-03 19:16:18</wp:post_date>
		<wp:post_date_gmt>2011-07-03 23:16:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>holiday-over-new-job-starts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[87660971740495872]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>152478</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>chris@bongo.co.nz</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.150.107.146</wp:comment_author_IP>
			<wp:comment_date>2011-07-04 04:06:16</wp:comment_date>
			<wp:comment_date_gmt>2011-07-04 08:06:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good luck for the first day Greg!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1309779233.6231";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1309766776.7508";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Overheard in an Indian restaur...</title>
		<link>http://gregs.tcias.co.uk/2011/07/08/overheard-in-an-indian-restaur/</link>
		<pubDate>Fri, 08 Jul 2011 19:49:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/07/08/overheard-in-an-indian-restaur/</guid>
		<description></description>
		<content:encoded><![CDATA[Overheard in an Indian restaurant : " the problem with curries is...." to the waiter and porridge mentioned in the same sentence]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>711</wp:post_id>
		<wp:post_date>2011-07-08 15:49:00</wp:post_date>
		<wp:post_date_gmt>2011-07-08 19:49:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>overheard-in-an-indian-restaur</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[89420738708246528]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>First steps with Jasmine</title>
		<link>http://gregs.tcias.co.uk/2011/07/12/first-steps-with-jasmine/</link>
		<pubDate>Tue, 12 Jul 2011 16:27:08 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=712</guid>
		<description></description>
		<content:encoded><![CDATA[<p>New job and opportunities. One of the core approaches to developing here, is the use TDD. Now in a JS/UI kind of role this is really novel approach (well at least for me). I don't know how many times in the past I have lamented the fact that I needed to click through way too many steps to get to the issue at hand and then rinse and repeat to debug/fix. Even once I had wrapped my head round Chrome's debugger this approach still took way too long. I had dabbled a little in TDD and BDD on personal ruby projects, but never from a UI perspective and when faced with a monumental UI code base I just didn't have the stomach to tackle the problem retro fit tests. Also to be honest the JavaScript testing frameworks just didn't click with me, until Node.js and Jasmine that is. With Node.js installed grab the following modules using npm</p>

<ul>
<li>coffee-script</li>
<li>jasmine-node </li>
</ul>

<p>Easiest way to get tests running type 'node ./spec.js ' at the command line, which is pointing to ./spec/ folder. In my BlogSpec.js file let's start with some basic tests</p>

<pre><code>describe('blog creation', function() { 
   it('should have a title attribute', function(){ 
      expect(testBlog.title).toBeDefined(); 
   }); 
   it('should have a title', function() { 
      expect(testBlog.title).not.toBeNull(); 
   }); 
});
</code></pre>

<p>When you run the spec with : 'node-blog git:(master) ✗ node spec.js' the test should fail</p>

<pre><code>Started FF Spec blog creation it should have a title attribute Error: ReferenceError: testBlog is not defined at new &lt;anonymous&gt;
 (/Users/gregstewart/Projects/node-blog/node\_modules/jasmine-node/lib/jasmine-node/jasmine-1.0.1.js:94:50) at [object Object].fail
 (/Users/gregstewart/Projects/node-blog/node\_modules/jasmine-node/lib/jasmine-node/jasmine-1.0.1.js:1963:27) at [object Object].execute
 (/Users/gregstewart/Projects/node-blog/node\_modules/jasmine-node/lib/jasmine-node/jasmine-1.0.1.js:970:15) at [object Object].next\_
 (/Users/gregstewart/Projects/node-blog/node\_modules/jasmine-node/lib/jasmine-node/jasmine-1.0.1.js:1739:31) at [object Object].start
 (/Users/gregstewart/Projects/node-blog/node\_modules/jasmine-node/lib/jasmine-node/jasmine-1.0.1.js:1692:8) at [object Object].execute
 (/Users/gregstewart/Projects/node-blog/node\_modules/jasmine-node/lib/jasmine-node/jasmine-1.0.1.js:2018:14) at [object Object].next\_
 (/Users/gregstewart/Projects/node-blog/node_modules/jasmine-node/lib/jasmine-node/jasmin%
</code></pre>

<p>So everything is as expected at this stage, let's start work on getting the basic tests to pass. First off let's create out Blog object</p>

<pre><code>Blog = function(title) { 
    this.title = title; 
} 
Blog.prototype.getTitle = function() { 
    return this.title; 
}; 
exports.Blog = Blog;
</code></pre>

<p>And not let's bring the Blog object into our test and initialise it:</p>

<pre><code>var Blog = require('../Blog').Blog; 
describe('blog creation', function() { 
    var testBlog; beforeEach(function() { 
        testBlog = new Blog(); 
    }); 
    it('should have a title attribute', function(){ 
        expect(testBlog.title).toBeDefined(); 
    });
    it('should have a title', function() { 
        expect(testBlog.title).not.toBeNull(); 
    }); 
});
</code></pre>

<p>Now let's get the first test to pass, by editing our Blog.js file</p>

<pre><code>Blog = function(title) { 
    this.title = typeof title !== 'undefined' ? title : null; 
} 
Blog.prototype.getTitle = function() { 
    return this.title; 
}; 
exports.Blog = Blog;
</code></pre>

<p>Nearly there, only problem is that our second test is failing because we require a title to not be null.</p>

<pre><code>var Blog = require('../Blog').Blog; 
describe('blog creation', function() { 
    var testBlog; 
    beforeEach(function() { 
        testBlog = new Blog('test'); 
    }); 
    it('should have a title attribute', function(){ 
        expect(testBlog.title).toBeDefined(); 
    }); 
    it('should have a title value', function() { 
        expect(testBlog.title).not.toBeNull();
    }); 
});
</code></pre>

<p>Let's see what the output looks like:</p>

<pre><code>➜  node-blog git:(master) ✗ node spec.js Started .. Spec blog creation Finished in 0.001 seconds 1 test, 2 assertions, 0 failures
</code></pre>

<p>And just because I can, let's rewrite the Blog.js in Coffee Script:</p>

<pre><code>class Blog 
    constructor:(@title) -&gt; 
    getTitle: -&gt; @title 
exports.Blog = Blog;
</code></pre>

<p>How much terser is that?</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>712</wp:post_id>
		<wp:post_date>2011-07-12 12:27:08</wp:post_date>
		<wp:post_date_gmt>2011-07-12 16:27:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>first-steps-with-jasmine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="category" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregation_log</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:1365163591;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1365165882;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1365168606;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1365172212;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1365179497;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1365194672;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1365223600;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1365267553;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1365354029;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1365526854;O:8:"stdClass":1:{s:6:"manual";b:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_notify</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregated_ids</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:0:{}s:8:"facebook";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>157059</wp:comment_id>
			<wp:comment_author><![CDATA[Ed Goward]]></wp:comment_author>
			<wp:comment_author_email>ed@goward.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.150.107.146</wp:comment_author_IP>
			<wp:comment_date>2011-07-26 10:25:24</wp:comment_date>
			<wp:comment_date_gmt>2011-07-26 14:25:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["expect(testBlog.title).not.toBeNull();"

Who ate the unary not operator (!)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311690324.7268";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311704073.4948";s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>157094</wp:comment_id>
			<wp:comment_author><![CDATA[gregs]]></wp:comment_author>
			<wp:comment_author_email>gregs@tcias.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://gregs.tcias.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>62.50.199.254</wp:comment_author_IP>
			<wp:comment_date>2011-07-26 14:15:45</wp:comment_date>
			<wp:comment_date_gmt>2011-07-26 18:15:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'd like to know as well! Surely not the dog??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>157059</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311704145.9674";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>280639</wp:comment_id>
			<wp:comment_author><![CDATA[arvn]]></wp:comment_author>
			<wp:comment_author_email>rajeshvaran.appasamy@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>106.51.153.145</wp:comment_author_IP>
			<wp:comment_date>2013-02-05 18:05:45</wp:comment_date>
			<wp:comment_date_gmt>2013-02-05 18:05:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks it is really usefull]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362248314.414246082305908203125;s:7:"message";s:44:"gregs changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"gregs";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1360087545.85781002044677734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Dragonforce</title>
		<link>http://gregs.tcias.co.uk/2011/07/15/dragonforce/</link>
		<pubDate>Fri, 15 Jul 2011 23:13:05 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=718</guid>
		<description></description>
		<content:encoded><![CDATA[I can't remember the last time I just listened to music. You know, sit at home, head set on, drown out everything else, the music on loud, not just ten, but eleven. Tonight, a chance encounter prompted me to just sit on an uncomfortable desk chair and let some dulcet tones wash over me.

It's been a couple of hours and I can't even recall what made me stumble over <a href="http://www.dragonforce.com/" title="DragonForce - Official Site">Dragonforce</a>. It doesn't really matter, what matters to me is that I have found my new Keepers. From a tender age, I have loved metal, introduced to the genre by Bon Jovi (cough), I quickly graduated to <a href="http://en.wikipedia.org/wiki/Somewhere_in_Time_(album)" title="Somewhere in Time (album)">Iron Maiden</a>, <a href="http://en.wikipedia.org/wiki/Master_of_puppets" title="Master of Puppets">Metallica</a>, <a href="http://en.wikipedia.org/wiki/The_Legacy_(album)" title="The Legacy (album)">Testament</a> and beyond. If my musical progression is anything to go by, then beware of entry drugs to more hardcore stuff (so kids be careful). I digress though. Sometime in 1987 I was introduced to <a href="http://en.wikipedia.org/wiki/Keeper_of_the_Seven_Keys,_Pt._1" title="Keeper of the Seven Keys, Pt. 1">Keepers of the Seven Keys Part 1</a> by <a href="http://en.wikipedia.org/wiki/Helloween" title="Helloween">Helloween</a>. Though rough around the edges, the speed and melody struck an instant chord (boom boom), which was only driven to new levels when <a href="http://en.wikipedia.org/wiki/Keeper_of_the_Seven_Keys,_Pt._2" title="Keeper of the Seven Keys, Pt. 2">Part 2</a> released. Helloween had achieved some kind of musical Nirvana for me. Sadly, there were never to come back from that apogee. Now I'd be lying if I hadn't found solace in other music over these many years, from Student days Indy music, grunge, to dance music in the early 2000's and more recently a return to form with bands like <a href="http://en.wikipedia.org/wiki/Mastodon_(band)" title="Mastodon (band)">Mastodon</a>, <a href="http://en.wikipedia.org/wiki/Isis_(band)" title="Isis (band)">Isis </a>and <a href="http://en.wikipedia.org/wiki/Baroness_(band)" title="Baroness (band)">Baroness</a>. The last three are true favourites, but there was something missing. For one not enough melody and well singers regurgitating has never been my thing, but the riffs and driving rhythm/guitars/music were good, nay excellent (in particular Baroness...)

Today, though, I feel taken back to that euphoric sensation of late 1987/88/89, when Helloween were the kings of my music world. Truth be told I could not care less about the lyrics, the singer and his voice were just a layer, and well they still are, sorry lyricists. So let's make that 'are a layer' on top of the orchestra of arpeggio/shredding guitars, driving rhythm sections of drum and bass, the singer could be singing about pink bubbles going ape (oh wait...) for all I care. I am 300 odd words in (thanks Wordpress word count) and have only mentioned the renaissance in passing. Thank you Dragonforce, I thought melodic speed metal (or is that Power Metal...) had died in 1988 and that no one would step up to Michael Kiske's and Kai Hansens' legacy (no disrespect to the others in the band). Truly stand out and yes I am late to the party, one day I'll be good enough to complete Guitar Hero. ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>718</wp:post_id>
		<wp:post_date>2011-07-15 19:13:05</wp:post_date>
		<wp:post_date_gmt>2011-07-15 23:13:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dragonforce</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>154851</wp:comment_id>
			<wp:comment_author><![CDATA[YOD]]></wp:comment_author>
			<wp:comment_author_email>ian@ascotinlessables.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>2.0.27.171</wp:comment_author_IP>
			<wp:comment_date>2011-07-16 08:24:37</wp:comment_date>
			<wp:comment_date_gmt>2011-07-16 12:24:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not my really my idea of music (what happened to Mozart?) but incredibly dramatic nonetheless. Exhilarating but repetitive, I guess it depends on your mood at the time. However, my son, I really cannot say I don't like it!
In fact, truth be-told, I do. How about that then?
YOD]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1310819077.5723";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Small update to my jasmine BDD post</title>
		<link>http://gregs.tcias.co.uk/2011/09/25/small-update-to-my-jasmine-bdd-post/</link>
		<pubDate>Sun, 25 Sep 2011 19:55:31 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=720</guid>
		<description></description>
		<content:encoded><![CDATA[Following on from my post way back in July, I have created a <a href="https://github.com/gregstewart/node-blog" title="Node-blog github repository">repository</a> over at the github, with some updated examples surrounding validation, adding comments to posts and some refactoring. 

I am currently looking into DI for javascript objects, as well as <a href="http://www.phantomjs.org/" title="PhantomJS: Headless WebKit with JavaScript API">phantom.js</a> and <a href="https://github.com/velesin/jasmine-jquery" title="Jasmine-jquery github repository">jasmine-jquery</a> to start putting together some examples for user journey testing and easier testing of jquery widgets and fixture loading.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>720</wp:post_id>
		<wp:post_date>2011-09-25 15:55:31</wp:post_date>
		<wp:post_date_gmt>2011-09-25 19:55:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>small-update-to-my-jasmine-bdd-post</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="category" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for September 15th through September 16th</title>
		<link>http://gregs.tcias.co.uk/2011/09/16/bookmarks-for-september-15th-through-september-16th/</link>
		<pubDate>Fri, 16 Sep 2011 09:11:14 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=723</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for September 15th through September 16th:</p>
<ul>
<li><a href="http://blogs.msdn.com/b/davrous/archive/2011/09/08/html5-platformer-the-complete-port-of-the-xna-game-to-lt-canvas-gt-with-easeljs.aspx?utm_source=html5weekly&amp;utm_medium=email">HTML5 Platformer: the complete port of the XNA game to &lt;canvas&gt; with EaselJS - David Rousset - Site Home - MSDN Blogs</a> - </li>
<li><a href="http://feeds.delicious.com/v2/rss/WildCard1999">500 Internal Server Error</a> - 500 Internal Server Error</li>
<li><a href="http://mercurial.selenic.com/wiki/CACertificates#Mac_OS_X_10.6_and_higher">CACertificates - Mercurial</a> - </li>
<li><a href="http://css-tricks.com/13465-persistent-headers/">Persistent Headers | CSS-Tricks</a> - </li>
<li><a href="http://adapt.960.gs/">Adapt.js - Adaptive CSS</a> - </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>723</wp:post_id>
		<wp:post_date>2011-09-16 05:11:14</wp:post_date>
		<wp:post_date_gmt>2011-09-16 09:11:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-september-15th-through-september-16th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="easeljs"><![CDATA[easeljs]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="gamedev"><![CDATA[gamedev]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for September 16th from 06:00 to 08:47</title>
		<link>http://gregs.tcias.co.uk/2011/09/16/bookmarks-for-september-16th-from-0600-to-0847/</link>
		<pubDate>Fri, 16 Sep 2011 13:00:21 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=728</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for September 16th from 06:00 to 08:47:</p>
<ul>
<li><a href="http://ripple.tinyhippos.com/?utm_source=html5weekly&amp;utm_medium=email">Ripple Emulator Community</a> - </li>
<li><a href="http://mobilehtml5.org/?utm_source=html5weekly&amp;utm_medium=email">Mobile HTML5 - compatibility tables for iPhone, Android, BlackBerry, Symbian, iPad and other mobile devices</a> - </li>
<li><a href="http://www.catswhocode.com/blog/mastering-html5-prefetching?utm_source=html5weekly&amp;utm_medium=email">Mastering HTML5 Prefetching | CatsWhoCode.com</a> - </li>
<li><a href="http://css-tricks.com/14001-tabs-with-round-out-borders/?utm_source=html5weekly&amp;utm_medium=email">Tabs with Round Out Borders | CSS-Tricks</a> - </li>
<li><a href="http://projects.joshy.org/presentations/HTML/CanvasDeepDive/presentation.html?utm_source=html5weekly&amp;utm_medium=email">HTML 5 Canvas Deep Dive</a> - </li>
<li><a href="http://www.splashnology.com/article/how-to-make-your-own-video-player-on-html5-video/2654/?utm_source=html5weekly&amp;utm_medium=email">How to Make Your Own Video Player On HTML5 Video | Splashnology</a> - </li>
<li><a href="http://feeds.delicious.com/v2/rss/WildCard1999">500 Internal Server Error</a> - 500 Internal Server Error</li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>728</wp:post_id>
		<wp:post_date>2011-09-16 09:00:21</wp:post_date>
		<wp:post_date_gmt>2011-09-16 13:00:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-september-16th-from-0600-to-0847</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="browser"><![CDATA[browser]]></category>
		<category domain="post_tag" nicename="canvas"><![CDATA[canvas]]></category>
		<category domain="post_tag" nicename="charts"><![CDATA[charts]]></category>
		<category domain="post_tag" nicename="compatibility"><![CDATA[compatibility]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="out"><![CDATA[out]]></category>
		<category domain="post_tag" nicename="prefetch"><![CDATA[prefetch]]></category>
		<category domain="post_tag" nicename="prefetching"><![CDATA[prefetching]]></category>
		<category domain="post_tag" nicename="ripple"><![CDATA[ripple]]></category>
		<category domain="post_tag" nicename="round"><![CDATA[round]]></category>
		<category domain="post_tag" nicename="rounded"><![CDATA[rounded]]></category>
		<category domain="post_tag" nicename="tabs"><![CDATA[tabs]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="video"><![CDATA[video]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for September 16th through September 18th</title>
		<link>http://gregs.tcias.co.uk/2011/09/18/bookmarks-for-september-16th-through-september-18th/</link>
		<pubDate>Sun, 18 Sep 2011 17:00:55 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=731</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for September 16th through September 18th:</p>
<ul>
<li><a href="http://uglyjs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Ugly JS</a> - </li>
<li><a href="https://github.com/swlkr/Coffee-Pot?utm_source=javascriptweekly&amp;utm_medium=email">swlkr/Coffee-Pot - GitHub</a> - </li>
<li><a href="http://learnboost.github.com/stylus/?utm_source=javascriptweekly&amp;utm_medium=email">Stylus</a> - </li>
<li><a href="http://js2coffee.org/?utm_source=javascriptweekly&amp;utm_medium=email">Js2coffee: convert JavaScript code to CoffeeScript</a> - </li>
<li><a href="http://tympanus.net/Development/Slicebox/index.html?utm_source=html5weekly&amp;utm_medium=email">Slicebox - 3D Image Slider</a> - </li>
<li><a href="http://mediaelementjs.com/?utm_source=html5weekly&amp;utm_medium=email">MediaElement.js - HTML5 video player and audio player with Flash and Silverlight shims</a> - </li>
<li><a href="http://labs.doat.com/?utm_source=html5weekly&amp;utm_medium=email">DoAT Labs - Touchy Boilerplate</a> - </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>731</wp:post_id>
		<wp:post_date>2011-09-18 13:00:55</wp:post_date>
		<wp:post_date_gmt>2011-09-18 17:00:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-september-16th-through-september-18th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="post_tag" nicename="app"><![CDATA[app]]></category>
		<category domain="post_tag" nicename="audio"><![CDATA[audio]]></category>
		<category domain="post_tag" nicename="bad"><![CDATA[bad]]></category>
		<category domain="post_tag" nicename="boilerplate"><![CDATA[boilerplate]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="convert"><![CDATA[convert]]></category>
		<category domain="post_tag" nicename="crossbrowser"><![CDATA[crossbrowser]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="image"><![CDATA[image]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="js2coffee"><![CDATA[js2coffee]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[mongodb]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="photo"><![CDATA[photo]]></category>
		<category domain="post_tag" nicename="sass"><![CDATA[sass]]></category>
		<category domain="post_tag" nicename="stylus"><![CDATA[stylus]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="uglyjs"><![CDATA[uglyjs]]></category>
		<category domain="post_tag" nicename="video"><![CDATA[video]]></category>
		<category domain="post_tag" nicename="viewer"><![CDATA[viewer]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for September 19th through September 20th</title>
		<link>http://gregs.tcias.co.uk/2011/09/20/bookmarks-for-september-19th-through-september-20th/</link>
		<pubDate>Tue, 20 Sep 2011 09:00:46 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=734</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for September 19th through September 20th:</p>
<ul>
<li><a href="http://rubysource.com/getting-to-grips-with-blocks/?utm_source=rubyweekly&amp;utm_medium=email">Getting to Grips with Blocks &raquo; RubySource</a> - </li>
<li><a href="https://github.com/bbatsov/ruby-style-guide?utm_source=rubyweekly&amp;utm_medium=email">bbatsov/ruby-style-guide - GitHub</a> - </li>
<li><a href="https://github.com/stympy/faker">stympy/faker - GitHub</a> - </li>
<li><a href="https://github.com/stubbornella/oocss/wiki">Object Oriented CSS - GitHub</a> - </li>
<li><a href="http://www.stubbornella.org/content/category/general/geek/">Stubbornella &raquo; Geek</a> - </li>
<li><a href="http://37signals.com/svn/posts/3003-css-taking-control-of-the-cascade">CSS: Taking control of the cascade - (37signals)</a> - </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>734</wp:post_id>
		<wp:post_date>2011-09-20 05:00:46</wp:post_date>
		<wp:post_date_gmt>2011-09-20 09:00:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-september-19th-through-september-20th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="block"><![CDATA[block]]></category>
		<category domain="post_tag" nicename="blog"><![CDATA[blog]]></category>
		<category domain="post_tag" nicename="coding"><![CDATA[coding]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="data"><![CDATA[data]]></category>
		<category domain="post_tag" nicename="explained"><![CDATA[explained]]></category>
		<category domain="post_tag" nicename="faker"><![CDATA[faker]]></category>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="post_tag" nicename="guide"><![CDATA[guide]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="object"><![CDATA[object]]></category>
		<category domain="post_tag" nicename="oocss"><![CDATA[oocss]]></category>
		<category domain="post_tag" nicename="oriented"><![CDATA[oriented]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="sass"><![CDATA[sass]]></category>
		<category domain="post_tag" nicename="scss"><![CDATA[scss]]></category>
		<category domain="post_tag" nicename="style"><![CDATA[style]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for September 20th through September 22nd</title>
		<link>http://gregs.tcias.co.uk/2011/09/22/bookmarks-for-september-20th-through-september-22nd/</link>
		<pubDate>Thu, 22 Sep 2011 09:00:26 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=736</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for September 20th through September 22nd:</p>
<ul>
<li><a href="http://necolas.github.com/normalize.css/">Normalize.css: Make browsers render all elements more consistently.</a> - </li>
<li><a href="http://www.modernizr.com/">Modernizr</a> - </li>
<li><a href="http://mothereffingtextshadow.com/">MOTHER EFFING TEXT-SHADOW</a> - </li>
<li><a href="http://css3please.com/">CSS3 Please! The Cross-Browser CSS3 Rule Generator</a> - </li>
<li><a href="https://github.com/joshbuddy/ghostbuster">joshbuddy/ghostbuster - GitHub</a> - </li>
<li><a href="http://mattkersley.com/responsive/">Responsive Design Testing</a> - </li>
<li><a href="http://www.melonjs.org/?utm_source=html5weekly&amp;utm_medium=email">melonJS</a> - </li>
<li><a href="http://www.mapeditor.org/">Tiled Map Editor</a> - </li>
<li><a href="http://www.red-team-design.com/slick-login-form-with-html5-css3?utm_source=html5weekly&amp;utm_medium=email">Slick login form with HTML5 &amp; CSS3 &ndash; Red Team Design</a> - </li>
<li><a href="http://teagueduino.org/">Teagueduino</a> - </li>
<li><a href="http://vimeo.com/28781718">Video Game in a Box on Vimeo</a> - </li>
<li><a href="https://github.com/codebrew/backbone-rails?utm_source=rubyweekly&amp;utm_medium=email">codebrew/backbone-rails - GitHub</a> - </li>
<li><a href="http://java.dzone.com/news/couchdb-jquery-plugin?utm_source=NoSQL+Weekly+List&amp;utm_campaign=2b5132e1f2-NoSQL_Weekly_Issue_42_September_15_2011&amp;utm_medium=email">CouchDB jQuery Plugin Reference | Javalobby</a> - </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>736</wp:post_id>
		<wp:post_date>2011-09-22 05:00:26</wp:post_date>
		<wp:post_date_gmt>2011-09-22 09:00:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-september-20th-through-september-22nd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="arduino"><![CDATA[arduino]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="box"><![CDATA[box]]></category>
		<category domain="post_tag" nicename="couchdb"><![CDATA[couchdb]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="demos"><![CDATA[demos]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="editing"><![CDATA[editing]]></category>
		<category domain="post_tag" nicename="editor"><![CDATA[editor]]></category>
		<category domain="post_tag" nicename="engine"><![CDATA[engine]]></category>
		<category domain="post_tag" nicename="form"><![CDATA[form]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="ghostbuster"><![CDATA[ghostbuster]]></category>
		<category domain="post_tag" nicename="headless"><![CDATA[headless]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="live"><![CDATA[live]]></category>
		<category domain="post_tag" nicename="map"><![CDATA[map]]></category>
		<category domain="post_tag" nicename="modernizr"><![CDATA[modernizr]]></category>
		<category domain="post_tag" nicename="normalize-css"><![CDATA[normalize.css]]></category>
		<category domain="post_tag" nicename="phantom-js"><![CDATA[phantom.js]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="post_tag" nicename="polyfill"><![CDATA[polyfill]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="reset"><![CDATA[reset]]></category>
		<category domain="post_tag" nicename="responsive"><![CDATA[responsive]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="shadow"><![CDATA[shadow]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="teaguedino"><![CDATA[teaguedino]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="text"><![CDATA[text]]></category>
		<category domain="post_tag" nicename="tiled"><![CDATA[tiled]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="video"><![CDATA[video]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for September 22nd through September 24th</title>
		<link>http://gregs.tcias.co.uk/2011/09/24/bookmarks-for-september-22nd-through-september-24th/</link>
		<pubDate>Sat, 24 Sep 2011 10:00:06 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=739</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for September 22nd through September 24th:</p>
<ul>
<li><a href="http://mbostock.github.com/d3/talk/20110921/#0">D3.js</a> - </li>
<li><a href="http://creativejs.com/2011/09/box2d-javascript-tutorial-series-by-seth-ladd/?utm_source=javascriptweekly&amp;utm_medium=email">Box2D &amp; JavaScript tutorials by Seth Ladd | CreativeJS</a> - </li>
<li><a href="http://addyosmani.com/blog/essential-js-namespacing/?utm_source=javascriptweekly&amp;utm_medium=email">Essential JavaScript Namespacing Patterns</a> - </li>
<li><a href="http://www.shopify.com/technology/4080092-how-batman-can-help-you-build-apps?utm_source=javascriptweekly&amp;utm_medium=email">How Batman can Help you Build Apps - Shopify</a> - </li>
<li><a href="http://toura.github.com/mulberry/?utm_source=javascriptweekly&amp;utm_medium=email">Mulberry</a> - </li>
<li><a href="http://feeds.delicious.com/v2/rss/WildCard1999">500 Internal Server Error</a> - 500 Internal Server Error</li>
<li><a href="http://www.xhtml-lab.com/css/create-reflection-effect-using-css3">Create reflection effect using CSS3 | XHTML-Lab</a> - </li>
<li><a href="http://webdesignerwall.com/tutorials/css3-image-styles">CSS3 Image Styles</a> - </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>739</wp:post_id>
		<wp:post_date>2011-09-24 06:00:06</wp:post_date>
		<wp:post_date_gmt>2011-09-24 10:00:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-september-22nd-through-september-24th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="batman-js"><![CDATA[batman.js]]></category>
		<category domain="post_tag" nicename="box2d"><![CDATA[box2d]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="d3-js"><![CDATA[d3.js]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="document"><![CDATA[document]]></category>
		<category domain="post_tag" nicename="driven"><![CDATA[driven]]></category>
		<category domain="post_tag" nicename="engine"><![CDATA[engine]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="image"><![CDATA[image]]></category>
		<category domain="post_tag" nicename="javascrip"><![CDATA[javascrip]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="mulberry"><![CDATA[mulberry]]></category>
		<category domain="post_tag" nicename="namespace"><![CDATA[namespace]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="phonegap"><![CDATA[phonegap]]></category>
		<category domain="post_tag" nicename="physics"><![CDATA[physics]]></category>
		<category domain="post_tag" nicename="reflection"><![CDATA[reflection]]></category>
		<category domain="post_tag" nicename="style"><![CDATA[style]]></category>
		<category domain="post_tag" nicename="styling"><![CDATA[styling]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>go on, doodle http://t.co/XsHu...</title>
		<link>http://gregs.tcias.co.uk/2011/09/22/go-on-doodle-httpt-coxshu/</link>
		<pubDate>Thu, 22 Sep 2011 15:46:37 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/09/22/go-on-doodle-httpt-coxshu/</guid>
		<description></description>
		<content:encoded><![CDATA[go on, doodle <a href="http://t.co/XsHuqK7k" rel="nofollow">http://t.co/XsHuqK7k</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>740</wp:post_id>
		<wp:post_date>2011-09-22 11:46:37</wp:post_date>
		<wp:post_date_gmt>2011-09-22 15:46:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>go-on-doodle-httpt-coxshu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[116901220781801473]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rick and lou are gone :( great...</title>
		<link>http://gregs.tcias.co.uk/2011/09/15/rick-and-lou-are-gone-great/</link>
		<pubDate>Thu, 15 Sep 2011 05:05:30 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/09/15/rick-and-lou-are-gone-great/</guid>
		<description></description>
		<content:encoded><![CDATA[Rick and lou are gone :( great to see two again, safe trip to Rome!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>741</wp:post_id>
		<wp:post_date>2011-09-15 01:05:30</wp:post_date>
		<wp:post_date_gmt>2011-09-15 05:05:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rick-and-lou-are-gone-great</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[114203164974133248]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Funny and informative CoffeeSc...</title>
		<link>http://gregs.tcias.co.uk/2011/09/13/funny-and-informative-coffeesc/</link>
		<pubDate>Tue, 13 Sep 2011 13:10:26 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/09/13/funny-and-informative-coffeesc/</guid>
		<description></description>
		<content:encoded><![CDATA[Funny and informative CoffeeScript presentation <a href="http://t.co/BRDYf1p" rel="nofollow">http://t.co/BRDYf1p</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>742</wp:post_id>
		<wp:post_date>2011-09-13 09:10:26</wp:post_date>
		<wp:post_date_gmt>2011-09-13 13:10:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>funny-and-informative-coffeesc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[113600425017622528]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Home sweet quiet home</title>
		<link>http://gregs.tcias.co.uk/2011/09/02/home-sweet-quiet-home/</link>
		<pubDate>Fri, 02 Sep 2011 18:33:02 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/09/02/home-sweet-quiet-home/</guid>
		<description></description>
		<content:encoded><![CDATA[Home sweet quiet home]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>743</wp:post_id>
		<wp:post_date>2011-09-02 14:33:02</wp:post_date>
		<wp:post_date_gmt>2011-09-02 18:33:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>home-sweet-quiet-home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[109695341149945856]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Anyone looking for a new job? ...</title>
		<link>http://gregs.tcias.co.uk/2011/09/02/anyone-looking-for-a-new-job/</link>
		<pubDate>Fri, 02 Sep 2011 15:31:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/09/02/anyone-looking-for-a-new-job/</guid>
		<description></description>
		<content:encoded><![CDATA[Anyone looking for a new job? <a href="http://t.co/m7kNPas" rel="nofollow">http://t.co/m7kNPas</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>744</wp:post_id>
		<wp:post_date>2011-09-02 11:31:00</wp:post_date>
		<wp:post_date_gmt>2011-09-02 15:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>anyone-looking-for-a-new-job</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[109649534711373824]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pure awesome http://t.co/CnIMR...</title>
		<link>http://gregs.tcias.co.uk/2011/09/02/pure-awesome-httpt-cocnimr/</link>
		<pubDate>Fri, 02 Sep 2011 08:24:57 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/09/02/pure-awesome-httpt-cocnimr/</guid>
		<description></description>
		<content:encoded><![CDATA[Pure awesome <a href="http://t.co/CnIMRsl" rel="nofollow">http://t.co/CnIMRsl</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>745</wp:post_id>
		<wp:post_date>2011-09-02 04:24:57</wp:post_date>
		<wp:post_date_gmt>2011-09-02 08:24:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pure-awesome-httpt-cocnimr</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[109542315860824064]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>http://t.co/tZDtcfN</title>
		<link>http://gregs.tcias.co.uk/2011/08/29/httpt-cotzdtcfn/</link>
		<pubDate>Mon, 29 Aug 2011 20:31:06 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/08/29/httpt-cotzdtcfn/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://t.co/tZDtcfN" rel="nofollow">http://t.co/tZDtcfN</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>746</wp:post_id>
		<wp:post_date>2011-08-29 16:31:06</wp:post_date>
		<wp:post_date_gmt>2011-08-29 20:31:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>httpt-cotzdtcfn</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[108275505488338945]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bye bye London, hello Peterbor...</title>
		<link>http://gregs.tcias.co.uk/2011/07/26/bye-bye-london-hello-peterbor-2/</link>
		<pubDate>Tue, 26 Jul 2011 06:32:40 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/07/26/bye-bye-london-hello-peterbor-2/</guid>
		<description></description>
		<content:encoded><![CDATA[Bye bye London, hello Peterborough]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>748</wp:post_id>
		<wp:post_date>2011-07-26 02:32:40</wp:post_date>
		<wp:post_date_gmt>2011-07-26 06:32:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bye-bye-london-hello-peterbor-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[95743319111507968]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What does your Web look like? ...</title>
		<link>http://gregs.tcias.co.uk/2011/09/24/what-does-your-web-look-like/</link>
		<pubDate>Sat, 24 Sep 2011 09:59:31 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/09/24/what-does-your-web-look-like/</guid>
		<description></description>
		<content:encoded><![CDATA[What does your Web look like? See my Webify Me collage and create your own <a href="http://t.co/kMdrYn5r" rel="nofollow">http://t.co/kMdrYn5r</a> via @<a href="http://twitter.com/firefox" class="aktt_username">firefox</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>752</wp:post_id>
		<wp:post_date>2011-09-24 05:59:31</wp:post_date>
		<wp:post_date_gmt>2011-09-24 09:59:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-does-your-web-look-like</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[117538645061279744]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for September 24th from 09:26 to 10:15</title>
		<link>http://gregs.tcias.co.uk/2011/09/24/bookmarks-for-september-24th-from-0926-to-1015/</link>
		<pubDate>Sat, 24 Sep 2011 15:00:49 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=753</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for September 24th from 09:26 to 10:15:</p>
<ul>
<li><a href="http://square.github.com/cube/?utm_source=NoSQL+Weekly+List&amp;utm_campaign=df19215ab8-NoSQL_Weekly_Issue_43_September_22_2011&amp;utm_medium=email">Cube</a> - </li>
<li><a href="http://howtonode.org/bogart-couchdb?utm_source=NoSQL+Weekly+List&amp;utm_campaign=df19215ab8-NoSQL_Weekly_Issue_43_September_22_2011&amp;utm_medium=email">A Simple Blog with CouchDB, Bogart, and Node.js - How To Node - NodeJS</a> - </li>
<li><a href="https://github.com/nathanmarz/storm?utm_source=NoSQL+Weekly+List&amp;utm_campaign=df19215ab8-NoSQL_Weekly_Issue_43_September_22_2011&amp;utm_medium=email">nathanmarz/storm - GitHub</a> - </li>
<li><a href="http://jewelrybox.unfiniti.com/">JewelryBox - The Official RVM GUI</a> - </li>
<li><a href="https://github.com/seejohnrun/google_plus?utm_source=rubyweekly&amp;utm_medium=email">seejohnrun/google_plus - GitHub</a> - </li>
<li><a href="http://ariejan.net/2011/09/14/lighting-fast-zero-downtime-deployments-with-git-capistrano-nginx-and-unicorn?utm_source=rubyweekly&amp;utm_medium=email">Lighting fast, zero-downtime deployments with git, capistrano, nginx and Unicorn - Ariejan.net</a> - </li>
<li><a href="http://blog.rubybestpractices.com/posts/gregory/055-issue-23-solid-design.html?utm_source=rubyweekly&amp;utm_medium=email">Practicing Ruby - Issue #23: SOLID Design Principles</a> - </li>
<li><a href="http://kidsruby.com/about?utm_source=rubyweekly&amp;utm_medium=email">Kidsruby.com</a> - </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>753</wp:post_id>
		<wp:post_date>2011-09-24 11:00:49</wp:post_date>
		<wp:post_date_gmt>2011-09-24 15:00:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-september-24th-from-0926-to-1015</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bogart"><![CDATA[bogart]]></category>
		<category domain="post_tag" nicename="capistrano"><![CDATA[capistrano]]></category>
		<category domain="post_tag" nicename="cd"><![CDATA[cd]]></category>
		<category domain="post_tag" nicename="ci"><![CDATA[ci]]></category>
		<category domain="post_tag" nicename="code"><![CDATA[code]]></category>
		<category domain="post_tag" nicename="continuous"><![CDATA[continuous]]></category>
		<category domain="post_tag" nicename="couchdb"><![CDATA[couchdb]]></category>
		<category domain="post_tag" nicename="cube"><![CDATA[cube]]></category>
		<category domain="post_tag" nicename="data"><![CDATA[data]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="post_tag" nicename="google-2"><![CDATA[google+]]></category>
		<category domain="post_tag" nicename="gui"><![CDATA[gui]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="kids"><![CDATA[kids]]></category>
		<category domain="post_tag" nicename="learning"><![CDATA[learning]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[mongodb]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[nosql]]></category>
		<category domain="post_tag" nicename="oo"><![CDATA[OO]]></category>
		<category domain="post_tag" nicename="principles"><![CDATA[principles]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="rvm"><![CDATA[rvm]]></category>
		<category domain="post_tag" nicename="solid"><![CDATA[SOLID]]></category>
		<category domain="post_tag" nicename="storm"><![CDATA[storm]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<category domain="post_tag" nicename="unicorn"><![CDATA[unicorn]]></category>
		<category domain="post_tag" nicename="visualization"><![CDATA[visualization]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for September 24th through October 1st</title>
		<link>http://gregs.tcias.co.uk/2011/10/01/bookmarks-for-september-24th-through-october-1st/</link>
		<pubDate>Sat, 01 Oct 2011 14:00:58 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=755</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for September 24th through October 1st:</p>
<ul>
<li><a href="http://smashinghub.com/jquery-visual-effects-tutorials.htm?utm_source=twitterfeed&amp;utm_medium=twitter">13 jQuery Visual Effects Tutorials That Can Help You More Effectively</a> </li>
<li><a href="http://www.zurb.com/playground/reveal-modal-plugin?utm_source=javascriptweekly&amp;utm_medium=email">Reveal: jQuery Modal Plugin from ZURB - ZURB Playground - ZURB.com</a> </li>
<li><a href="http://visualsort.appspot.com/?utm_source=javascriptweekly&amp;utm_medium=email">Sorting Visualizer</a> </li>
<li><a href="http://countdownjs.org/?utm_source=javascriptweekly&amp;utm_medium=email">Countdown.js</a> </li>
<li><a href="http://www.youtube.com/watch?v=4mf_yNLlgic&amp;feature=youtube_gdata">Become a Javascript Console Power-User - YouTube</a> </li>
<li><a href="http://blog.brianbeck.com/post/10667967423/node-js-require-in-the-browser?utm_source=javascriptweekly&amp;utm_medium=email">So, you want to use require() in the browser&hellip;</a> </li>
<li><a href="http://darcyclarke.me/development/live-vs-static-node-lists/?utm_source=javascriptweekly&amp;utm_medium=email">Live vs. Static Node Lists</a> </li>
<li><a href="http://code.google.com/p/google-js-test/">google-js-test - Lightweight JS unit testing using the V8 engine - Google Project Hosting</a> </li>
<li><a href="http://cssprefixer.appspot.com/">CSSPrefixer</a> </li>
<li><a href="http://www.sencha.com/blog/headless-testing-for-continuous-integration-with-git-and-jasmine/">Headless Testing for Continuous Integration with Git and Jasmine | Blog | Sencha</a> </li>
<li><a href="http://zombie.labnotes.org/">Insanely fast, headless full-stack testing using Node.js</a> </li>
<li><a href="http://square.github.com/cube/?utm_source=NoSQL+Weekly+List&amp;utm_campaign=df19215ab8-NoSQL_Weekly_Issue_43_September_22_2011&amp;utm_medium=email">Cube</a> - </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>755</wp:post_id>
		<wp:post_date>2011-10-01 15:00:58</wp:post_date>
		<wp:post_date_gmt>2011-10-01 14:00:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-september-24th-through-october-1st</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="browser"><![CDATA[browser]]></category>
		<category domain="post_tag" nicename="console"><![CDATA[console]]></category>
		<category domain="post_tag" nicename="continuous"><![CDATA[continuous]]></category>
		<category domain="post_tag" nicename="countdown-js"><![CDATA[countdown.js]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="cube"><![CDATA[cube]]></category>
		<category domain="post_tag" nicename="data"><![CDATA[data]]></category>
		<category domain="post_tag" nicename="debug"><![CDATA[debug]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="headless"><![CDATA[headless]]></category>
		<category domain="post_tag" nicename="integration"><![CDATA[integration]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="live"><![CDATA[live]]></category>
		<category domain="post_tag" nicename="modal"><![CDATA[modal]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[mongodb]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="nodes"><![CDATA[nodes]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[nosql]]></category>
		<category domain="post_tag" nicename="paul-irish"><![CDATA[paul irish]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="post_tag" nicename="prefixer"><![CDATA[prefixer]]></category>
		<category domain="post_tag" nicename="require"><![CDATA[require()]]></category>
		<category domain="post_tag" nicename="reveal-js"><![CDATA[reveal.js]]></category>
		<category domain="post_tag" nicename="static"><![CDATA[static]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="timer"><![CDATA[timer]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="unittest"><![CDATA[unittest]]></category>
		<category domain="post_tag" nicename="v8"><![CDATA[v8]]></category>
		<category domain="post_tag" nicename="visualization"><![CDATA[visualization]]></category>
		<category domain="post_tag" nicename="visualizer-js"><![CDATA[visualizer.js]]></category>
		<category domain="post_tag" nicename="zombie-js"><![CDATA[zombie.js]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 1st from 14:50 to 20:12</title>
		<link>http://gregs.tcias.co.uk/2011/10/01/bookmarks-for-october-1st-from-1450-to-2012/</link>
		<pubDate>Sat, 01 Oct 2011 20:01:37 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=764</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 1st from 14:50 to 20:12:</p>
<ul>
<li><a href="http://www.acm.uiuc.edu/workshops/zsh/toc.html">Zsh Workshop: Table of Contents</a> </li>
<li><a href="https://github.com/koush/node/wiki/%22async%22-support-in-node.js">&quot;async&quot; support in node.js - GitHub</a> </li>
<li><a href="https://stripe.com/">Stripe</a> </li>
<li><a href="http://thinkvitamin.com/code/javascript/organize-your-code-with-requirejs/?utm_source=javascriptweekly&amp;utm_medium=email">thinkvitamin.com</a> </li>
<li><a href="http://smashinghub.com/jquery-visual-effects-tutorials.htm?utm_source=twitterfeed&amp;utm_medium=twitter">13 jQuery Visual Effects Tutorials That Can Help You More Effectively</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>764</wp:post_id>
		<wp:post_date>2011-10-01 21:01:37</wp:post_date>
		<wp:post_date_gmt>2011-10-01 20:01:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-1st-from-1450-to-2012</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="post_tag" nicename="api"><![CDATA[api]]></category>
		<category domain="post_tag" nicename="async"><![CDATA[async]]></category>
		<category domain="post_tag" nicename="callbacks"><![CDATA[callbacks]]></category>
		<category domain="post_tag" nicename="creditcard"><![CDATA[creditcard]]></category>
		<category domain="post_tag" nicename="examples"><![CDATA[examples]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="ohmyzsh"><![CDATA[ohmyzsh]]></category>
		<category domain="post_tag" nicename="payments"><![CDATA[payments]]></category>
		<category domain="post_tag" nicename="require-js"><![CDATA[require.js]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="zsh"><![CDATA[zsh]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 1st from 21:38 to 22:18</title>
		<link>http://gregs.tcias.co.uk/2011/10/02/bookmarks-for-october-1st-from-2138-to-2146/</link>
		<pubDate>Sat, 01 Oct 2011 23:00:02 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/02/bookmarks-for-october-1st-from-2138-to-2146/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 1st from 21:38 to 22:18:</p>
<ul>
<li><a href="http://arturadib.com/hello-backbonejs/">Hello Backbone.js Tutorial</a> </li>
<li><a href="http://mapicons.nicolasmollet.com/">Map Icons Collection | Google Maps Icons, Map Markers, Free POI Icons, GIS Symbols</a> </li>
<li><a href="http://endtwist.github.com/kerning.js/">Kerning.js</a> </li>
<li><a href="http://sassymothereffingtextshadow.com/?utm_source=html5weekly&amp;utm_medium=email">Sassy Mother Effing Text Shadow</a> </li>
<li><a href="http://moeedm.com/sandbox/pulse/?utm_source=html5weekly&amp;utm_medium=email">Pulse</a> </li>
<li><a href="http://smus.com/game-asset-loader?utm_source=html5weekly&amp;utm_medium=email">Loading Large Assets in Modern HTML5 Games</a> </li>
<li><a href="http://www.snailinaturtleneck.com/blog/2011/09/28/mms-the-mongo-monitoring-service/?utm_source=NoSQL+Weekly+List&amp;utm_campaign=6c802b9ca2-NoSQL_Weekly_Issue_44_September_29_2011&amp;utm_medium=email">Getting Started with MMS</a> </li>
<li><a href="http://www.10gen.com/mongodb-monitoring-service?utm_source=NoSQL+Weekly+List&amp;utm_campaign=6c802b9ca2-NoSQL_Weekly_Issue_44_September_29_2011&amp;utm_medium=email">10gen - MongoDB Monitoring Service (MMS)</a> </li>
<li><a href="https://github.com/tinkerpop/gremlin/wiki">Gemlin Home - GitHub</a> </li>
<li><a href="http://markorodriguez.com/2011/09/22/a-graph-based-movie-recommender-engine/?utm_source=NoSQL+Weekly+List&amp;utm_campaign=6c802b9ca2-NoSQL_Weekly_Issue_44_September_29_2011&amp;utm_medium=email">A Graph-Based Movie Recommender Engine</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>766</wp:post_id>
		<wp:post_date>2011-10-02 00:00:02</wp:post_date>
		<wp:post_date_gmt>2011-10-01 23:00:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-1st-from-2138-to-2146</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="application-cache"><![CDATA[application cache]]></category>
		<category domain="post_tag" nicename="asset-management"><![CDATA[asset management]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="fonts"><![CDATA[fonts]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="graph"><![CDATA[graph]]></category>
		<category domain="post_tag" nicename="gremlin"><![CDATA[gremlin]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="icons"><![CDATA[icons]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="kerning"><![CDATA[kerning]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="maps"><![CDATA[maps]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[mongodb]]></category>
		<category domain="post_tag" nicename="monitoring"><![CDATA[monitoring]]></category>
		<category domain="post_tag" nicename="neo4j"><![CDATA[neo4j]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[nosql]]></category>
		<category domain="post_tag" nicename="pulse"><![CDATA[pulse]]></category>
		<category domain="post_tag" nicename="recommendation"><![CDATA[recommendation]]></category>
		<category domain="post_tag" nicename="sass"><![CDATA[sass]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 8th through October 9th</title>
		<link>http://gregs.tcias.co.uk/2011/10/09/bookmarks-for-october-8th-through-october-9th/</link>
		<pubDate>Sun, 09 Oct 2011 14:02:54 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=769</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 8th through October 9th:</p>
<ul>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="https://github.com/zynga/scroller?utm_source=javascriptweekly&amp;utm_medium=email">zynga/scroller - GitHub</a> </li>
<li><a href="http://www.html5rocks.com/en/mobile/optimization-and-performance.html">HTML5 Rocks - HTML5 Techniques for Optimizing Mobile Performance</a> </li>
<li><a href="http://quirktools.com/screenfly/?utm_source=html5weekly&amp;utm_medium=email">Screenfly by QuirkTools &mdash; Test Your Website at Different Screen Resolutions</a> </li>
<li><a href="https://github.com/makeable/Notificon?utm_source=html5weekly&amp;utm_medium=email">makeable/Notificon - GitHub</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>769</wp:post_id>
		<wp:post_date>2011-10-09 15:02:54</wp:post_date>
		<wp:post_date_gmt>2011-10-09 14:02:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-8th-through-october-9th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="animations"><![CDATA[animations]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="beautiful"><![CDATA[beautiful]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="examples"><![CDATA[examples]]></category>
		<category domain="post_tag" nicename="favicon"><![CDATA[favicon]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jstestdriver"><![CDATA[jsTestDriver]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="magazine"><![CDATA[magazine]]></category>
		<category domain="post_tag" nicename="math"><![CDATA[math]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="modules"><![CDATA[modules]]></category>
		<category domain="post_tag" nicename="notification"><![CDATA[notification]]></category>
		<category domain="post_tag" nicename="optimization"><![CDATA[optimization]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[performance]]></category>
		<category domain="post_tag" nicename="physics"><![CDATA[physics]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
		<category domain="post_tag" nicename="qunit"><![CDATA[qunit]]></category>
		<category domain="post_tag" nicename="screen"><![CDATA[screen]]></category>
		<category domain="post_tag" nicename="size"><![CDATA[size]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tools"><![CDATA[tools]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="ui"><![CDATA[ui]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 11th through October 20th</title>
		<link>http://gregs.tcias.co.uk/2011/10/20/bookmarks-for-october-11th-through-october-20th/</link>
		<pubDate>Thu, 20 Oct 2011 21:02:54 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=771</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 11th through October 20th:</p>
<ul>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="https://github.com/zynga/scroller?utm_source=javascriptweekly&amp;utm_medium=email">zynga/scroller - GitHub</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://meiert.com/en/indices/css-properties/">CSS Properties Index &ndash; Jens O. Meiert</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>771</wp:post_id>
		<wp:post_date>2011-10-20 22:02:54</wp:post_date>
		<wp:post_date_gmt>2011-10-20 21:02:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-11th-through-october-20th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="animations"><![CDATA[animations]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="background"><![CDATA[background]]></category>
		<category domain="post_tag" nicename="beautiful"><![CDATA[beautiful]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="desktop"><![CDATA[desktop]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="examples"><![CDATA[examples]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jstestdriver"><![CDATA[jsTestDriver]]></category>
		<category domain="post_tag" nicename="layer"><![CDATA[layer]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="lifehacker"><![CDATA[lifehacker]]></category>
		<category domain="post_tag" nicename="magazine"><![CDATA[magazine]]></category>
		<category domain="post_tag" nicename="math"><![CDATA[math]]></category>
		<category domain="post_tag" nicename="modules"><![CDATA[modules]]></category>
		<category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="physics"><![CDATA[physics]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
		<category domain="post_tag" nicename="properties"><![CDATA[properties]]></category>
		<category domain="post_tag" nicename="qunit"><![CDATA[qunit]]></category>
		<category domain="post_tag" nicename="reference"><![CDATA[reference]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="ui"><![CDATA[ui]]></category>
		<category domain="post_tag" nicename="work"><![CDATA[work]]></category>
		<category domain="post_tag" nicename="workflow"><![CDATA[workflow]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 20th from 22:42 to 22:42</title>
		<link>http://gregs.tcias.co.uk/2011/10/21/bookmarks-for-october-20th-from-2242-to-2242/</link>
		<pubDate>Thu, 20 Oct 2011 23:00:01 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/21/bookmarks-for-october-20th-from-2242-to-2242/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 20th from 22:42 to 22:42:</p>
<ul>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>774</wp:post_id>
		<wp:post_date>2011-10-21 00:00:01</wp:post_date>
		<wp:post_date_gmt>2011-10-20 23:00:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-20th-from-2242-to-2242</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="animations"><![CDATA[animations]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="background"><![CDATA[background]]></category>
		<category domain="post_tag" nicename="beautiful"><![CDATA[beautiful]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="desktop"><![CDATA[desktop]]></category>
		<category domain="post_tag" nicename="examples"><![CDATA[examples]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jstestdriver"><![CDATA[jsTestDriver]]></category>
		<category domain="post_tag" nicename="layer"><![CDATA[layer]]></category>
		<category domain="post_tag" nicename="lifehacker"><![CDATA[lifehacker]]></category>
		<category domain="post_tag" nicename="magazine"><![CDATA[magazine]]></category>
		<category domain="post_tag" nicename="math"><![CDATA[math]]></category>
		<category domain="post_tag" nicename="modules"><![CDATA[modules]]></category>
		<category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
		<category domain="post_tag" nicename="qunit"><![CDATA[qunit]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="work"><![CDATA[work]]></category>
		<category domain="post_tag" nicename="workflow"><![CDATA[workflow]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 20th from 23:02 to 23:02</title>
		<link>http://gregs.tcias.co.uk/2011/10/22/bookmarks-for-october-20th-from-2302-to-2302/</link>
		<pubDate>Fri, 21 Oct 2011 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/22/bookmarks-for-october-20th-from-2302-to-2302/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 20th from 23:02 to 23:02:</p>
<ul>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>775</wp:post_id>
		<wp:post_date>2011-10-22 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-10-21 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-20th-from-2302-to-2302</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="animations"><![CDATA[animations]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="background"><![CDATA[background]]></category>
		<category domain="post_tag" nicename="beautiful"><![CDATA[beautiful]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="desktop"><![CDATA[desktop]]></category>
		<category domain="post_tag" nicename="examples"><![CDATA[examples]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jstestdriver"><![CDATA[jsTestDriver]]></category>
		<category domain="post_tag" nicename="layer"><![CDATA[layer]]></category>
		<category domain="post_tag" nicename="lifehacker"><![CDATA[lifehacker]]></category>
		<category domain="post_tag" nicename="magazine"><![CDATA[magazine]]></category>
		<category domain="post_tag" nicename="math"><![CDATA[math]]></category>
		<category domain="post_tag" nicename="modules"><![CDATA[modules]]></category>
		<category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
		<category domain="post_tag" nicename="qunit"><![CDATA[qunit]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="work"><![CDATA[work]]></category>
		<category domain="post_tag" nicename="workflow"><![CDATA[workflow]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 23rd from 13:48 to 18:40</title>
		<link>http://gregs.tcias.co.uk/2011/10/24/bookmarks-for-october-23rd-from-1348-to-1348/</link>
		<pubDate>Sun, 23 Oct 2011 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/24/bookmarks-for-october-23rd-from-1348-to-1348/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 23rd from 13:48 to 18:40:</p>
<ul>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>777</wp:post_id>
		<wp:post_date>2011-10-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-10-23 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-23rd-from-1348-to-1348</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="animations"><![CDATA[animations]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="background"><![CDATA[background]]></category>
		<category domain="post_tag" nicename="beautiful"><![CDATA[beautiful]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="desktop"><![CDATA[desktop]]></category>
		<category domain="post_tag" nicename="examples"><![CDATA[examples]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jstestdriver"><![CDATA[jsTestDriver]]></category>
		<category domain="post_tag" nicename="layer"><![CDATA[layer]]></category>
		<category domain="post_tag" nicename="lifehacker"><![CDATA[lifehacker]]></category>
		<category domain="post_tag" nicename="magazine"><![CDATA[magazine]]></category>
		<category domain="post_tag" nicename="math"><![CDATA[math]]></category>
		<category domain="post_tag" nicename="modules"><![CDATA[modules]]></category>
		<category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
		<category domain="post_tag" nicename="qunit"><![CDATA[qunit]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="work"><![CDATA[work]]></category>
		<category domain="post_tag" nicename="workflow"><![CDATA[workflow]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 24th from 09:33 to 23:44</title>
		<link>http://gregs.tcias.co.uk/2011/10/25/bookmarks-for-october-24th-from-0933-to-0933/</link>
		<pubDate>Mon, 24 Oct 2011 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/25/bookmarks-for-october-24th-from-0933-to-0933/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 24th from 09:33 to 23:44:</p>
<ul>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://learningthreejs.com/blog/2011/10/17/lets-make-a-3d-game-microphysics-js/?utm_source=javascriptweekly&amp;utm_medium=email">Learning Three.js: Lets Make a 3D Game: microphysics.js</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>
<li><a href="http://willmore.eu/software/isolator/">Isolator</a> </li>
<li><a href="http://weblog.bocoup.com/organizing-your-backbone-js-application-with-modules?utm_source=javascriptweekly&amp;utm_medium=email">Organizing Your Backbone.js Application With Modules &ndash; Organizing Your Backbone.js Application With Modules &ndash; Bocoup Web Log</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://coding.smashingmagazine.com/2011/10/04/quick-look-math-animations-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">A Quick Look Into The Math Of Animations With JavaScript - Smashing Coding</a> </li>
<li><a href="http://blogs.lessthandot.com/index.php/WebDev/UIDevelopment/Javascript/getting-started-with-javascript-unit">Less Than Dot - Blog - Getting Started with JavaScript Unit Testing</a> </li>
<li><a href="http://addyosmani.com/futureproofjs/?utm_source=javascriptweekly&amp;utm_medium=email">Future-proofing Your JavaScript Applications For Improved Scalability</a> </li>
<li><a href="http://www.jsmag.com/?utm_source=javascriptweekly&amp;utm_medium=email">JsMag - the magazine for JavaScript developers</a> </li>
<li><a href="http://beautifuljs.net/?utm_source=javascriptweekly&amp;utm_medium=email">Beautiful JS</a> </li>
<li><a href="https://github.com/tcorral/Design-Patterns-in-Javascript?utm_source=javascriptweekly&amp;utm_medium=email">tcorral/Design-Patterns-in-Javascript - GitHub</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>783</wp:post_id>
		<wp:post_date>2011-10-25 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-10-24 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-24th-from-0933-to-0933</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="callback"><![CDATA[$.callback]]></category>
		<category domain="post_tag" nicename="acl"><![CDATA[acl]]></category>
		<category domain="post_tag" nicename="alice-js"><![CDATA[alice.js]]></category>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="post_tag" nicename="animations"><![CDATA[animations]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="background"><![CDATA[background]]></category>
		<category domain="post_tag" nicename="beautiful"><![CDATA[beautiful]]></category>
		<category domain="post_tag" nicename="callbacks"><![CDATA[callbacks]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="desktop"><![CDATA[desktop]]></category>
		<category domain="post_tag" nicename="engine"><![CDATA[engine]]></category>
		<category domain="post_tag" nicename="examples"><![CDATA[examples]]></category>
		<category domain="post_tag" nicename="falsey"><![CDATA[falsey]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="guard-js"><![CDATA[guard.js]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="jstestdriver"><![CDATA[jsTestDriver]]></category>
		<category domain="post_tag" nicename="layer"><![CDATA[layer]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="lifehacker"><![CDATA[lifehacker]]></category>
		<category domain="post_tag" nicename="list-js"><![CDATA[list.js]]></category>
		<category domain="post_tag" nicename="lists"><![CDATA[lists]]></category>
		<category domain="post_tag" nicename="magazine"><![CDATA[magazine]]></category>
		<category domain="post_tag" nicename="math"><![CDATA[math]]></category>
		<category domain="post_tag" nicename="mmo"><![CDATA[mmo]]></category>
		<category domain="post_tag" nicename="modules"><![CDATA[modules]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="pay"><![CDATA[pay]]></category>
		<category domain="post_tag" nicename="physics"><![CDATA[physics]]></category>
		<category domain="post_tag" nicename="physics-js"><![CDATA[physics.js]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
		<category domain="post_tag" nicename="qunit"><![CDATA[qunit]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="searchable"><![CDATA[searchable]]></category>
		<category domain="post_tag" nicename="sortable"><![CDATA[sortable]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="terse"><![CDATA[terse]]></category>
		<category domain="post_tag" nicename="truthy"><![CDATA[truthy]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="work"><![CDATA[work]]></category>
		<category domain="post_tag" nicename="workflow"><![CDATA[workflow]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 25th from 09:47 to 22:53</title>
		<link>http://gregs.tcias.co.uk/2011/10/26/bookmarks-for-october-25th-from-0947-to-0947/</link>
		<pubDate>Tue, 25 Oct 2011 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/26/bookmarks-for-october-25th-from-0947-to-0947/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 25th from 09:47 to 22:53:</p>
<ul>
<li><a href="http://datamapper.org/">DataMapper - DataMapper</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="https://developers.facebook.com/html5/?utm_source=html5weekly&amp;utm_medium=email">Facebook HTML5 Resource Center - Facebook Developers</a> </li>
<li><a href="http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html?utm_source=rubyweekly&amp;utm_medium=email">What Ruby&rsquo;s ||= (Double Pipe / Or Equals) Really Does</a> </li>
<li><a href="http://rubysource.com/getting-started-with-padrino-and-bdd/?utm_source=rubyweekly&amp;utm_medium=email">Getting Started with Padrino and BDD &raquo; RubySource</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://www.engineyard.com/blog/2011/ruby-concurrency-and-you/?utm_source=rubyweekly&amp;utm_medium=email">Ruby, Concurrency, and You | Engine Yard Ruby on Rails Blog</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="https://developers.facebook.com/html5/?utm_source=html5weekly&amp;utm_medium=email">Facebook HTML5 Resource Center - Facebook Developers</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="http://rubysource.com/getting-started-with-padrino-and-bdd/?utm_source=rubyweekly&amp;utm_medium=email">Getting Started with Padrino and BDD &raquo; RubySource</a> </li>
<li><a href="http://datamapper.org/">DataMapper - DataMapper</a> </li>
<li><a href="http://www.engineyard.com/blog/2011/ruby-concurrency-and-you/?utm_source=rubyweekly&amp;utm_medium=email">Ruby, Concurrency, and You | Engine Yard Ruby on Rails Blog</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html?utm_source=rubyweekly&amp;utm_medium=email">What Ruby&rsquo;s ||= (Double Pipe / Or Equals) Really Does</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://learningthreejs.com/blog/2011/10/17/lets-make-a-3d-game-microphysics-js/?utm_source=javascriptweekly&amp;utm_medium=email">Learning Three.js: Lets Make a 3D Game: microphysics.js</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="http://learningthreejs.com/blog/2011/10/17/lets-make-a-3d-game-microphysics-js/?utm_source=javascriptweekly&amp;utm_medium=email">Learning Three.js: Lets Make a 3D Game: microphysics.js</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://learningthreejs.com/blog/2011/10/17/lets-make-a-3d-game-microphysics-js/?utm_source=javascriptweekly&amp;utm_medium=email">Learning Three.js: Lets Make a 3D Game: microphysics.js</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://learningthreejs.com/blog/2011/10/17/lets-make-a-3d-game-microphysics-js/?utm_source=javascriptweekly&amp;utm_medium=email">Learning Three.js: Lets Make a 3D Game: microphysics.js</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://learningthreejs.com/blog/2011/10/17/lets-make-a-3d-game-microphysics-js/?utm_source=javascriptweekly&amp;utm_medium=email">Learning Three.js: Lets Make a 3D Game: microphysics.js</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="http://learningthreejs.com/blog/2011/10/17/lets-make-a-3d-game-microphysics-js/?utm_source=javascriptweekly&amp;utm_medium=email">Learning Three.js: Lets Make a 3D Game: microphysics.js</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="http://learningthreejs.com/blog/2011/10/17/lets-make-a-3d-game-microphysics-js/?utm_source=javascriptweekly&amp;utm_medium=email">Learning Three.js: Lets Make a 3D Game: microphysics.js</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://learningthreejs.com/blog/2011/10/17/lets-make-a-3d-game-microphysics-js/?utm_source=javascriptweekly&amp;utm_medium=email">Learning Three.js: Lets Make a 3D Game: microphysics.js</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="http://blackberry.github.com/Alice/?utm_source=javascriptweekly&amp;utm_medium=email">AliceJS</a> </li>
<li><a href="http://learningthreejs.com/blog/2011/10/17/lets-make-a-3d-game-microphysics-js/?utm_source=javascriptweekly&amp;utm_medium=email">Learning Three.js: Lets Make a 3D Game: microphysics.js</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 1 &ndash; James Padolsey</a> </li>
<li><a href="http://james.padolsey.com/javascript/truthy-falsey/?utm_source=javascriptweekly&amp;utm_medium=email">Truthy &amp; Falsey &ndash; James Padolsey</a> </li>
<li><a href="http://addyosmani.com/blog/jquery-1-7s-callbacks-feature-demystified/?utm_source=javascriptweekly&amp;utm_medium=email">Demystifying jQuery 1.7&prime;s $.Callbacks</a> </li>
<li><a href="http://javascriptmvc.com/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScriptMVC</a> </li>
<li><a href="http://rubymonk.com/#.Tp_N-_0pegw.twitter">RubyMonk - Home</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>792</wp:post_id>
		<wp:post_date>2011-10-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-10-25 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-25th-from-0947-to-0947</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="callback"><![CDATA[$.callback]]></category>
		<category domain="post_tag" nicename="acl"><![CDATA[acl]]></category>
		<category domain="post_tag" nicename="alice-js"><![CDATA[alice.js]]></category>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="build"><![CDATA[build]]></category>
		<category domain="post_tag" nicename="callbacks"><![CDATA[callbacks]]></category>
		<category domain="post_tag" nicename="coffee-script"><![CDATA[coffee-script]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="concurrency"><![CDATA[concurrency]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="cucumber"><![CDATA[cucumber]]></category>
		<category domain="post_tag" nicename="dart"><![CDATA[dart]]></category>
		<category domain="post_tag" nicename="datamapper"><![CDATA[Datamapper]]></category>
		<category domain="post_tag" nicename="engine"><![CDATA[engine]]></category>
		<category domain="post_tag" nicename="facebook"><![CDATA[facebook]]></category>
		<category domain="post_tag" nicename="falsey"><![CDATA[falsey]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="guard-js"><![CDATA[guard.js]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="ios5"><![CDATA[ios5]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="list-js"><![CDATA[list.js]]></category>
		<category domain="post_tag" nicename="lists"><![CDATA[lists]]></category>
		<category domain="post_tag" nicename="mmo"><![CDATA[mmo]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="orm"><![CDATA[orm]]></category>
		<category domain="post_tag" nicename="overview"><![CDATA[overview]]></category>
		<category domain="post_tag" nicename="padrino"><![CDATA[padrino]]></category>
		<category domain="post_tag" nicename="parallelism"><![CDATA[parallelism]]></category>
		<category domain="post_tag" nicename="pay"><![CDATA[pay]]></category>
		<category domain="post_tag" nicename="physics"><![CDATA[physics]]></category>
		<category domain="post_tag" nicename="physics-js"><![CDATA[physics.js]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="searchable"><![CDATA[searchable]]></category>
		<category domain="post_tag" nicename="sortable"><![CDATA[sortable]]></category>
		<category domain="post_tag" nicename="terse"><![CDATA[terse]]></category>
		<category domain="post_tag" nicename="truthy"><![CDATA[truthy]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="webapps"><![CDATA[webapps]]></category>
		<category domain="post_tag" nicename="288"><![CDATA[||=]]></category>
		<category domain="post_tag" nicename="289"><![CDATA[||=]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 26th from 09:51 to 23:42</title>
		<link>http://gregs.tcias.co.uk/2011/10/27/bookmarks-for-october-26th-from-0951-to-0951/</link>
		<pubDate>Wed, 26 Oct 2011 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/27/bookmarks-for-october-26th-from-0951-to-0951/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 26th from 09:51 to 23:42:</p>
<ul>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="https://developers.facebook.com/html5/?utm_source=html5weekly&amp;utm_medium=email">Facebook HTML5 Resource Center - Facebook Developers</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://rubysource.com/getting-started-with-padrino-and-bdd/?utm_source=rubyweekly&amp;utm_medium=email">Getting Started with Padrino and BDD &raquo; RubySource</a> </li>
<li><a href="http://www.engineyard.com/blog/2011/ruby-concurrency-and-you/?utm_source=rubyweekly&amp;utm_medium=email">Ruby, Concurrency, and You | Engine Yard Ruby on Rails Blog</a> </li>
<li><a href="http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html?utm_source=rubyweekly&amp;utm_medium=email">What Ruby&rsquo;s ||= (Double Pipe / Or Equals) Really Does</a> </li>
<li><a href="http://datamapper.org/">DataMapper - DataMapper</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://www.stubbornella.org/content/2009/03/27/reflows-repaints-css-performance-making-your-javascript-slow/">Reflows &amp; Repaints: CSS Performance making your JavaScript slow?</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://datamapper.org/">DataMapper - DataMapper</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="https://developers.facebook.com/html5/?utm_source=html5weekly&amp;utm_medium=email">Facebook HTML5 Resource Center - Facebook Developers</a> </li>
<li><a href="http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html?utm_source=rubyweekly&amp;utm_medium=email">What Ruby&rsquo;s ||= (Double Pipe / Or Equals) Really Does</a> </li>
<li><a href="http://rubysource.com/getting-started-with-padrino-and-bdd/?utm_source=rubyweekly&amp;utm_medium=email">Getting Started with Padrino and BDD &raquo; RubySource</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://www.engineyard.com/blog/2011/ruby-concurrency-and-you/?utm_source=rubyweekly&amp;utm_medium=email">Ruby, Concurrency, and You | Engine Yard Ruby on Rails Blog</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>
<li><a href="http://datamapper.org/">DataMapper - DataMapper</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://rubysource.com/getting-started-with-padrino-and-bdd/?utm_source=rubyweekly&amp;utm_medium=email">Getting Started with Padrino and BDD &raquo; RubySource</a> </li>
<li><a href="https://developers.facebook.com/html5/?utm_source=html5weekly&amp;utm_medium=email">Facebook HTML5 Resource Center - Facebook Developers</a> </li>
<li><a href="http://www.rubyinside.com/what-rubys-double-pipe-or-equals-really-does-5488.html?utm_source=rubyweekly&amp;utm_medium=email">What Ruby&rsquo;s ||= (Double Pipe / Or Equals) Really Does</a> </li>
<li><a href="http://www.engineyard.com/blog/2011/ruby-concurrency-and-you/?utm_source=rubyweekly&amp;utm_medium=email">Ruby, Concurrency, and You | Engine Yard Ruby on Rails Blog</a> </li>
<li><a href="https://github.com/dariocravero/the-guard.js?utm_source=javascriptweekly&amp;utm_medium=email">dariocravero/the-guard.js - GitHub</a> </li>
<li><a href="http://www.isogenicengine.com/?utm_source=javascriptweekly&amp;utm_medium=email">Home - Isogenic Engine</a> </li>
<li><a href="http://listjs.com/">List.js - Add search, sort and flexibility to plain HTML lists with cross-browser native JavaScript by @javve</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>803</wp:post_id>
		<wp:post_date>2011-10-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-10-26 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-26th-from-0951-to-0951</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="acl"><![CDATA[acl]]></category>
		<category domain="post_tag" nicename="balancer"><![CDATA[balancer]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="bouncy"><![CDATA[bouncy]]></category>
		<category domain="post_tag" nicename="browser"><![CDATA[browser]]></category>
		<category domain="post_tag" nicename="build"><![CDATA[build]]></category>
		<category domain="post_tag" nicename="coffee-script"><![CDATA[coffee-script]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="concurrency"><![CDATA[concurrency]]></category>
		<category domain="post_tag" nicename="conversion"><![CDATA[conversion]]></category>
		<category domain="post_tag" nicename="cucumber"><![CDATA[cucumber]]></category>
		<category domain="post_tag" nicename="cucumber-js"><![CDATA[cucumber.js]]></category>
		<category domain="post_tag" nicename="currency"><![CDATA[currency]]></category>
		<category domain="post_tag" nicename="dart"><![CDATA[dart]]></category>
		<category domain="post_tag" nicename="datamapper"><![CDATA[Datamapper]]></category>
		<category domain="post_tag" nicename="engine"><![CDATA[engine]]></category>
		<category domain="post_tag" nicename="exchange"><![CDATA[exchange]]></category>
		<category domain="post_tag" nicename="facebook"><![CDATA[facebook]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="guard-js"><![CDATA[guard.js]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="https"><![CDATA[https]]></category>
		<category domain="post_tag" nicename="ios5"><![CDATA[ios5]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[json]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="list-js"><![CDATA[list.js]]></category>
		<category domain="post_tag" nicename="lists"><![CDATA[lists]]></category>
		<category domain="post_tag" nicename="literal"><![CDATA[literal]]></category>
		<category domain="post_tag" nicename="load"><![CDATA[load]]></category>
		<category domain="post_tag" nicename="mmo"><![CDATA[mmo]]></category>
		<category domain="post_tag" nicename="module"><![CDATA[module]]></category>
		<category domain="post_tag" nicename="money-js"><![CDATA[money.js]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="object"><![CDATA[object]]></category>
		<category domain="post_tag" nicename="open"><![CDATA[open]]></category>
		<category domain="post_tag" nicename="orm"><![CDATA[orm]]></category>
		<category domain="post_tag" nicename="overview"><![CDATA[overview]]></category>
		<category domain="post_tag" nicename="padrino"><![CDATA[padrino]]></category>
		<category domain="post_tag" nicename="parallelism"><![CDATA[parallelism]]></category>
		<category domain="post_tag" nicename="pattern"><![CDATA[pattern]]></category>
		<category domain="post_tag" nicename="pay"><![CDATA[pay]]></category>
		<category domain="post_tag" nicename="proxy"><![CDATA[proxy]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rates"><![CDATA[rates]]></category>
		<category domain="post_tag" nicename="reflow"><![CDATA[reflow]]></category>
		<category domain="post_tag" nicename="require-js"><![CDATA[require.js]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="searchable"><![CDATA[searchable]]></category>
		<category domain="post_tag" nicename="sortable"><![CDATA[sortable]]></category>
		<category domain="post_tag" nicename="source"><![CDATA[source]]></category>
		<category domain="post_tag" nicename="spyon"><![CDATA[spyOn]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="thoughtworker"><![CDATA[thoughtworker]]></category>
		<category domain="post_tag" nicename="thoughtworks"><![CDATA[thoughtworks]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="webapps"><![CDATA[webapps]]></category>
		<category domain="post_tag" nicename="326"><![CDATA[||=]]></category>
		<category domain="post_tag" nicename="327"><![CDATA[||=]]></category>
		<category domain="post_tag" nicename="328"><![CDATA[||=]]></category>
		<category domain="post_tag" nicename="329"><![CDATA[||=]]></category>
		<category domain="post_tag" nicename="330"><![CDATA[||=]]></category>
		<category domain="post_tag" nicename="331"><![CDATA[||=]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 26th through October 27th</title>
		<link>http://gregs.tcias.co.uk/2011/10/28/bookmarks-for-october-26th-from-2352-to-2352/</link>
		<pubDate>Thu, 27 Oct 2011 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/28/bookmarks-for-october-26th-from-2352-to-2352/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 26th through October 27th:</p>
<ul>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>809</wp:post_id>
		<wp:post_date>2011-10-28 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-10-27 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-26th-from-2352-to-2352</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="balancer"><![CDATA[balancer]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="bouncy"><![CDATA[bouncy]]></category>
		<category domain="post_tag" nicename="conversion"><![CDATA[conversion]]></category>
		<category domain="post_tag" nicename="cucumber"><![CDATA[cucumber]]></category>
		<category domain="post_tag" nicename="cucumber-js"><![CDATA[cucumber.js]]></category>
		<category domain="post_tag" nicename="currency"><![CDATA[currency]]></category>
		<category domain="post_tag" nicename="dart"><![CDATA[dart]]></category>
		<category domain="post_tag" nicename="exchange"><![CDATA[exchange]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="https"><![CDATA[https]]></category>
		<category domain="post_tag" nicename="ios5"><![CDATA[ios5]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[json]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="literal"><![CDATA[literal]]></category>
		<category domain="post_tag" nicename="load"><![CDATA[load]]></category>
		<category domain="post_tag" nicename="module"><![CDATA[module]]></category>
		<category domain="post_tag" nicename="money-js"><![CDATA[money.js]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="object"><![CDATA[object]]></category>
		<category domain="post_tag" nicename="open"><![CDATA[open]]></category>
		<category domain="post_tag" nicename="overview"><![CDATA[overview]]></category>
		<category domain="post_tag" nicename="pattern"><![CDATA[pattern]]></category>
		<category domain="post_tag" nicename="proxy"><![CDATA[proxy]]></category>
		<category domain="post_tag" nicename="rates"><![CDATA[rates]]></category>
		<category domain="post_tag" nicename="require-js"><![CDATA[require.js]]></category>
		<category domain="post_tag" nicename="source"><![CDATA[source]]></category>
		<category domain="post_tag" nicename="spyon"><![CDATA[spyOn]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="thoughtworker"><![CDATA[thoughtworker]]></category>
		<category domain="post_tag" nicename="thoughtworks"><![CDATA[thoughtworks]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 28th from 09:43 to 16:53</title>
		<link>http://gregs.tcias.co.uk/2011/10/29/bookmarks-for-october-28th-from-0943-to-0943/</link>
		<pubDate>Fri, 28 Oct 2011 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/29/bookmarks-for-october-28th-from-0943-to-0943/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 28th from 09:43 to 16:53:</p>
<ul>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>821</wp:post_id>
		<wp:post_date>2011-10-29 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-10-28 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-28th-from-0943-to-0943</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="balancer"><![CDATA[balancer]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="bouncy"><![CDATA[bouncy]]></category>
		<category domain="post_tag" nicename="conversion"><![CDATA[conversion]]></category>
		<category domain="post_tag" nicename="cucumber"><![CDATA[cucumber]]></category>
		<category domain="post_tag" nicename="cucumber-js"><![CDATA[cucumber.js]]></category>
		<category domain="post_tag" nicename="currency"><![CDATA[currency]]></category>
		<category domain="post_tag" nicename="dart"><![CDATA[dart]]></category>
		<category domain="post_tag" nicename="exchange"><![CDATA[exchange]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="https"><![CDATA[https]]></category>
		<category domain="post_tag" nicename="ios5"><![CDATA[ios5]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[json]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="literal"><![CDATA[literal]]></category>
		<category domain="post_tag" nicename="load"><![CDATA[load]]></category>
		<category domain="post_tag" nicename="module"><![CDATA[module]]></category>
		<category domain="post_tag" nicename="money-js"><![CDATA[money.js]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="object"><![CDATA[object]]></category>
		<category domain="post_tag" nicename="open"><![CDATA[open]]></category>
		<category domain="post_tag" nicename="overview"><![CDATA[overview]]></category>
		<category domain="post_tag" nicename="pattern"><![CDATA[pattern]]></category>
		<category domain="post_tag" nicename="proxy"><![CDATA[proxy]]></category>
		<category domain="post_tag" nicename="rates"><![CDATA[rates]]></category>
		<category domain="post_tag" nicename="require-js"><![CDATA[require.js]]></category>
		<category domain="post_tag" nicename="source"><![CDATA[source]]></category>
		<category domain="post_tag" nicename="spyon"><![CDATA[spyOn]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="thoughtworker"><![CDATA[thoughtworker]]></category>
		<category domain="post_tag" nicename="thoughtworks"><![CDATA[thoughtworks]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 29th from 00:03 to 23:37</title>
		<link>http://gregs.tcias.co.uk/2011/10/30/bookmarks-for-october-29th-from-0003-to-0013/</link>
		<pubDate>Sat, 29 Oct 2011 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/30/bookmarks-for-october-29th-from-0003-to-0013/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 29th from 00:03 to 23:37:</p>
<ul>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>830</wp:post_id>
		<wp:post_date>2011-10-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-10-29 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-29th-from-0003-to-0013</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="balancer"><![CDATA[balancer]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="bouncy"><![CDATA[bouncy]]></category>
		<category domain="post_tag" nicename="conversion"><![CDATA[conversion]]></category>
		<category domain="post_tag" nicename="cucumber"><![CDATA[cucumber]]></category>
		<category domain="post_tag" nicename="cucumber-js"><![CDATA[cucumber.js]]></category>
		<category domain="post_tag" nicename="currency"><![CDATA[currency]]></category>
		<category domain="post_tag" nicename="dart"><![CDATA[dart]]></category>
		<category domain="post_tag" nicename="exchange"><![CDATA[exchange]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="https"><![CDATA[https]]></category>
		<category domain="post_tag" nicename="ios5"><![CDATA[ios5]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[json]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="literal"><![CDATA[literal]]></category>
		<category domain="post_tag" nicename="load"><![CDATA[load]]></category>
		<category domain="post_tag" nicename="module"><![CDATA[module]]></category>
		<category domain="post_tag" nicename="money-js"><![CDATA[money.js]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="object"><![CDATA[object]]></category>
		<category domain="post_tag" nicename="open"><![CDATA[open]]></category>
		<category domain="post_tag" nicename="overview"><![CDATA[overview]]></category>
		<category domain="post_tag" nicename="pattern"><![CDATA[pattern]]></category>
		<category domain="post_tag" nicename="proxy"><![CDATA[proxy]]></category>
		<category domain="post_tag" nicename="rates"><![CDATA[rates]]></category>
		<category domain="post_tag" nicename="require-js"><![CDATA[require.js]]></category>
		<category domain="post_tag" nicename="source"><![CDATA[source]]></category>
		<category domain="post_tag" nicename="spyon"><![CDATA[spyOn]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="thoughtworker"><![CDATA[thoughtworker]]></category>
		<category domain="post_tag" nicename="thoughtworks"><![CDATA[thoughtworks]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 29th through October 30th</title>
		<link>http://gregs.tcias.co.uk/2011/10/31/bookmarks-for-october-30th-from-0037-to-0037/</link>
		<pubDate>Mon, 31 Oct 2011 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/10/31/bookmarks-for-october-30th-from-0037-to-0037/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 29th through October 30th:</p>
<ul>
<li><a href="http://olabini.com/blog/2011/10/javascript-in-the-small/">JavaScript in the small | Ola Bini: Programming Language Synchronicity</a> </li>
<li><a href="http://josscrowcroft.github.com/money.js/">money.js / fx() - javascript currency conversion library</a> </li>
<li><a href="http://josscrowcroft.github.com/open-exchange-rates/?utm_source=javascriptweekly&amp;utm_medium=email">Open Source Exchange Rates API - free, hourly-updated JSON currency data</a> </li>
<li><a href="https://github.com/cucumber/cucumber-js?utm_source=javascriptweekly&amp;utm_medium=email">cucumber/cucumber-js - GitHub</a> </li>
<li><a href="http://substack.net/posts/5bd18d?utm_source=javascriptweekly&amp;utm_medium=email">bounce HTTP requests around with bouncy :: The Universe of Discord</a> </li>
<li><a href="https://github.com/searls/jasmine-stealth">searls/jasmine-stealth - GitHub</a> </li>
<li><a href="http://agilewarrior.wordpress.com/2011/10/26/javascript-model-view-controller-example/">Javascript Model-View-Controller example &laquo; The Agile Warrior</a> </li>
<li><a href="http://www.dartlang.org/?utm_source=javascriptweekly&amp;utm_medium=email">Dart : Structured web programming</a> </li>
<li><a href="http://www.mobilexweb.com/blog/ios-5-iphone-and-ipad-html5?utm_source=html5weekly&amp;utm_medium=email">Safari on iOS 5, HTML5 evolution for iPhone and iPad | Mobile Web Programming</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>847</wp:post_id>
		<wp:post_date>2011-10-31 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-10-31 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-30th-from-0037-to-0037</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="addy"><![CDATA[Addy]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="balancer"><![CDATA[balancer]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="bouncy"><![CDATA[bouncy]]></category>
		<category domain="post_tag" nicename="client"><![CDATA[client]]></category>
		<category domain="post_tag" nicename="component"><![CDATA[component]]></category>
		<category domain="post_tag" nicename="conversion"><![CDATA[conversion]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="cucumber"><![CDATA[cucumber]]></category>
		<category domain="post_tag" nicename="cucumber-js"><![CDATA[cucumber.js]]></category>
		<category domain="post_tag" nicename="currency"><![CDATA[currency]]></category>
		<category domain="post_tag" nicename="dart"><![CDATA[dart]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="dom"><![CDATA[dom]]></category>
		<category domain="post_tag" nicename="exchange"><![CDATA[exchange]]></category>
		<category domain="post_tag" nicename="facade"><![CDATA[facade]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="https"><![CDATA[https]]></category>
		<category domain="post_tag" nicename="ios5"><![CDATA[ios5]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[json]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="literal"><![CDATA[literal]]></category>
		<category domain="post_tag" nicename="load"><![CDATA[load]]></category>
		<category domain="post_tag" nicename="mediator"><![CDATA[mediator]]></category>
		<category domain="post_tag" nicename="model"><![CDATA[model]]></category>
		<category domain="post_tag" nicename="module"><![CDATA[module]]></category>
		<category domain="post_tag" nicename="money-js"><![CDATA[money.js]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="object"><![CDATA[object]]></category>
		<category domain="post_tag" nicename="open"><![CDATA[open]]></category>
		<category domain="post_tag" nicename="osmani"><![CDATA[Osmani]]></category>
		<category domain="post_tag" nicename="overview"><![CDATA[overview]]></category>
		<category domain="post_tag" nicename="pattern"><![CDATA[pattern]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="proxy"><![CDATA[proxy]]></category>
		<category domain="post_tag" nicename="rates"><![CDATA[rates]]></category>
		<category domain="post_tag" nicename="require-js"><![CDATA[require.js]]></category>
		<category domain="post_tag" nicename="shadow"><![CDATA[shadow]]></category>
		<category domain="post_tag" nicename="source"><![CDATA[source]]></category>
		<category domain="post_tag" nicename="spinners"><![CDATA[spinners]]></category>
		<category domain="post_tag" nicename="spyon"><![CDATA[spyOn]]></category>
		<category domain="post_tag" nicename="ssh"><![CDATA[ssh]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="terminal"><![CDATA[terminal]]></category>
		<category domain="post_tag" nicename="terminology"><![CDATA[terminology]]></category>
		<category domain="post_tag" nicename="thoughtworker"><![CDATA[thoughtworker]]></category>
		<category domain="post_tag" nicename="thoughtworks"><![CDATA[thoughtworks]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for October 31st from 08:53 to 23:39</title>
		<link>http://gregs.tcias.co.uk/2011/11/01/bookmarks-for-october-31st-from-0853-to-0853/</link>
		<pubDate>Tue, 01 Nov 2011 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/11/01/bookmarks-for-october-31st-from-0853-to-0853/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for October 31st from 08:53 to 23:39:</p>
<ul>
<li><a href="http://hubot.github.com/">HUBOT</a> </li>
<li><a href="http://www.catonmat.net/blog/announcing-testling/?utm_source=javascriptweekly&amp;utm_medium=email">Announcing Testling - Automated Cross-Browser JavaScript Testing - good coders code, great reuse</a> </li>
<li><a href="http://www.limejs.com/?utm_source=html5weekly&amp;utm_medium=email">LimeJS HTML5 Game Framework</a> </li>
<li><a href="http://www.netmagazine.com/tutorials/masterclass-css-animations?utm_source=html5weekly&amp;utm_medium=email">A masterclass in CSS animations | Tutorial | .net magazine</a> </li>
<li><a href="http://html5doctor.com/element-index/?utm_source=html5weekly&amp;utm_medium=email">Element Index | HTML5 Doctor</a> </li>
<li><a href="http://pusher.com/">Pusher | HTML5 WebSocket Powered Realtime Messaging Service</a> </li>
<li><a href="http://backbonetutorials.com/organizing-backbone-using-modules/?utm_source=javascriptweekly&amp;utm_medium=email">Organizing your application using Modules (require.js) - Backbone.js Tutorials</a> </li>
<li><a href="http://googletesting.blogspot.com/2011/10/scriptcover-makes-javascript-coverage.html?utm_source=javascriptweekly&amp;utm_medium=email">Google Testing Blog: ScriptCover makes Javascript coverage analysis easy</a> </li>
<li><a href="http://railwayjs.com/?utm_source=javascriptweekly&amp;utm_medium=email">RailwayJS</a> </li>
<li><a href="http://addyosmani.com/scalablejs/?utm_source=javascriptweekly&amp;utm_medium=email">Scalable JavaScript Design Patterns</a> </li>
<li><a href="http://www.catonmat.net/blog/announcing-testling/?utm_source=javascriptweekly&amp;utm_medium=email">Announcing Testling - Automated Cross-Browser JavaScript Testing - good coders code, great reuse</a> </li>
<li><a href="http://cssload.net/?utm_source=html5weekly&amp;utm_medium=email">Loading CSS spinners and bars generator for AJAX &amp; JQuery</a> </li>
<li><a href="http://googletesting.blogspot.com/2011/10/scriptcover-makes-javascript-coverage.html?utm_source=javascriptweekly&amp;utm_medium=email">Google Testing Blog: ScriptCover makes Javascript coverage analysis easy</a> </li>
<li><a href="http://backbonetutorials.com/organizing-backbone-using-modules/?utm_source=javascriptweekly&amp;utm_medium=email">Organizing your application using Modules (require.js) - Backbone.js Tutorials</a> </li>
<li><a href="https://github.com/liftoff/GateOne?utm_source=html5weekly&amp;utm_medium=email">liftoff/GateOne - GitHub</a> </li>
<li><a href="http://www.xanthir.com/blog/?utm_source=html5weekly&amp;utm_medium=email">Tab Completion</a> </li>
<li><a href="http://jaffathecake.posterous.com/html-component-model-the-shadow-dom?utm_source=html5weekly&amp;utm_medium=email">HTML Component Model &amp; the Shadow DOM - Cream of tag soup</a> </li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>872</wp:post_id>
		<wp:post_date>2011-11-01 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-11-01 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-october-31st-from-0853-to-0853</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="addy"><![CDATA[Addy]]></category>
		<category domain="post_tag" nicename="animations"><![CDATA[animations]]></category>
		<category domain="post_tag" nicename="api"><![CDATA[api]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="balancer"><![CDATA[balancer]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="bouncy"><![CDATA[bouncy]]></category>
		<category domain="post_tag" nicename="browser"><![CDATA[browser]]></category>
		<category domain="post_tag" nicename="chrome"><![CDATA[chrome]]></category>
		<category domain="post_tag" nicename="client"><![CDATA[client]]></category>
		<category domain="post_tag" nicename="code"><![CDATA[code]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="component"><![CDATA[component]]></category>
		<category domain="post_tag" nicename="conversion"><![CDATA[conversion]]></category>
		<category domain="post_tag" nicename="coverage"><![CDATA[coverage]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="cucumber"><![CDATA[cucumber]]></category>
		<category domain="post_tag" nicename="cucumber-js"><![CDATA[cucumber.js]]></category>
		<category domain="post_tag" nicename="currency"><![CDATA[currency]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="dom"><![CDATA[dom]]></category>
		<category domain="post_tag" nicename="element"><![CDATA[element]]></category>
		<category domain="post_tag" nicename="exchange"><![CDATA[exchange]]></category>
		<category domain="post_tag" nicename="facade"><![CDATA[facade]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="https"><![CDATA[https]]></category>
		<category domain="post_tag" nicename="hubot"><![CDATA[hubot]]></category>
		<category domain="post_tag" nicename="index"><![CDATA[index]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[json]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="lime-js"><![CDATA[lime.js]]></category>
		<category domain="post_tag" nicename="load"><![CDATA[load]]></category>
		<category domain="post_tag" nicename="mediator"><![CDATA[mediator]]></category>
		<category domain="post_tag" nicename="model"><![CDATA[model]]></category>
		<category domain="post_tag" nicename="module"><![CDATA[module]]></category>
		<category domain="post_tag" nicename="money-js"><![CDATA[money.js]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="open"><![CDATA[open]]></category>
		<category domain="post_tag" nicename="osmani"><![CDATA[Osmani]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="post_tag" nicename="proxy"><![CDATA[proxy]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rates"><![CDATA[rates]]></category>
		<category domain="post_tag" nicename="service"><![CDATA[service]]></category>
		<category domain="post_tag" nicename="shadow"><![CDATA[shadow]]></category>
		<category domain="post_tag" nicename="source"><![CDATA[source]]></category>
		<category domain="post_tag" nicename="spinners"><![CDATA[spinners]]></category>
		<category domain="post_tag" nicename="ssh"><![CDATA[ssh]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="terminal"><![CDATA[terminal]]></category>
		<category domain="post_tag" nicename="terminology"><![CDATA[terminology]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="testling"><![CDATA[testling]]></category>
		<category domain="post_tag" nicename="tool"><![CDATA[tool]]></category>
		<category domain="post_tag" nicename="touch"><![CDATA[touch]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="websockets"><![CDATA[WebSockets]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Meerkats have arrived! http://...</title>
		<link>http://gregs.tcias.co.uk/2011/11/04/meerkats-have-arrived-http/</link>
		<pubDate>Fri, 04 Nov 2011 12:03:41 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/11/04/meerkats-have-arrived-http/</guid>
		<description></description>
		<content:encoded><![CDATA[Meerkats have arrived! <a href="http://t.co/kjyEAEFV" rel="nofollow">http://t.co/kjyEAEFV</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>905</wp:post_id>
		<wp:post_date>2011-11-04 12:03:41</wp:post_date>
		<wp:post_date_gmt>2011-11-04 12:03:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>meerkats-have-arrived-http</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[132427792976588800]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>And more :) http://t.co/PK9vnv...</title>
		<link>http://gregs.tcias.co.uk/2011/11/04/and-more-httpt-copk9vnv/</link>
		<pubDate>Fri, 04 Nov 2011 12:21:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/11/04/and-more-httpt-copk9vnv/</guid>
		<description></description>
		<content:encoded><![CDATA[And more :) <a href="http://t.co/PK9vnvCE" rel="nofollow">http://t.co/PK9vnvCE</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>906</wp:post_id>
		<wp:post_date>2011-11-04 12:21:00</wp:post_date>
		<wp:post_date_gmt>2011-11-04 12:21:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>and-more-httpt-copk9vnv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[132432152225779712]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Thanks all for yesterday&#039;s lov...</title>
		<link>http://gregs.tcias.co.uk/2011/11/15/thanks-all-for-yesterdays-lov/</link>
		<pubDate>Tue, 15 Nov 2011 07:53:38 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/11/15/thanks-all-for-yesterdays-lov/</guid>
		<description></description>
		<content:encoded><![CDATA[Thanks all for yesterday's lovely birthday wishes!!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>981</wp:post_id>
		<wp:post_date>2011-11-15 07:53:38</wp:post_date>
		<wp:post_date_gmt>2011-11-15 07:53:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thanks-all-for-yesterdays-lov</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[136351134095912960]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for November 15th through November 22nd</title>
		<link>http://gregs.tcias.co.uk/2011/11/22/bookmarks-for-november-15th-through-november-22nd/</link>
		<pubDate>Tue, 22 Nov 2011 22:00:38 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=989</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for November 15th through November 22nd:</p>
<ul>
<li><a href="https://developer.mozilla.org/en/CSS/CSS_Reference?utm_source=html5weekly&amp;utm_medium=email">CSS Reference - MDN</a> </li>
<li><a href="http://derbyjs.com/?utm_source=javascriptweekly&amp;utm_medium=email">Derby</a> </li>
<li><a href="http://addyosmani.com/blog/exploring-javascripts-logical-or-operator/?utm_source=javascriptweekly&amp;utm_medium=email">Exploring JavaScript&rsquo;s Logical OR Operator</a> </li>
<li><a href="http://www.andismith.com/blog/2011/11/on-and-off/?utm_source=javascriptweekly&amp;utm_medium=email">Using jQuery .on() and .off() &ndash; AndiSmith.com</a> </li>
<li><a href="http://about.travis-ci.org/blog/first_class_nodejs_support_on_travis_ci/?utm_source=javascriptweekly&amp;utm_medium=email">Travis CI: Announcing &quot;first class&quot; Node.js project support!</a> </li>
<li><a href="http://flatironjs.org/">flatironjs.org</a> </li>
<li><a href="https://github.com/nbartlomiej/coffee-guard-caat-jessie?utm_source=html5weekly&amp;utm_medium=email">nbartlomiej/coffee-guard-caat-jessie - GitHub</a> </li>
<li><a href="http://selectivizr.com/?utm_source=html5weekly&amp;utm_medium=email">Selectivizr - CSS3 pseudo-class and attribute selectors for IE 6-8</a> </li>
<li><a href="http://tympanus.net/Tutorials/OriginalHoverEffects/index.html">Original Hover Effects with CSS3</a> </li>
<li><a href="http://www.hacksparrow.com/using-redis-with-node-js.html?utm_source=NoSQL+Weekly+Newsletter&amp;utm_campaign=73f88f5065-NoSQL_Weekly_Issue_46_October_13_2011&amp;utm_medium=email">Using Redis with Node.js</a> </li>
<li><a href="http://speakerdeck.com/u/naoya/p/using-only-coffeescript-to-build-an-smartphone-application?utm_source=javascriptweekly&amp;utm_medium=email">Using only CoffeeScript to build an SmartPhone Application // Speaker Deck</a> </li>
<li><a href="http://paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/">Conditional stylesheets vs CSS hacks? Answer: Neither! &laquo; Paul Irish</a> </li>
<li><a href="http://railsapps.github.com/rails-html5-boilerplate.html?utm_source=rubyweekly&amp;utm_medium=email">Guide to HTML5 Boilerplate for Rails Developers</a> </li>
<li><a href="http://technosophos.com/content/nodejs-debugging-built-debugger?utm_source=javascriptweekly&amp;utm_medium=email">Node.js Debugging with the Built-in Debugger | TechnoSophos</a> </li>
<li><a href="https://gist.github.com/1321768?utm_source=javascriptweekly&amp;utm_medium=email">Four ways to do Pub/Sub with jQuery 1.7 and jQuery UI (in the future) &mdash; Gist</a> </li>
<li><a href="http://james.padolsey.com/javascript/terse-javascript-101-part-2/?utm_source=javascriptweekly&amp;utm_medium=email">Terse JavaScript 101 &ndash; part 2 &ndash; James Padolsey</a> </li>
<li><a href="http://net.tutsplus.com/tutorials/javascript-ajax/getting-started-with-spine-mobile/?utm_source=javascriptweekly&amp;utm_medium=email">Getting Started with Spine Mobile | Nettuts+</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>989</wp:post_id>
		<wp:post_date>2011-11-22 22:00:38</wp:post_date>
		<wp:post_date_gmt>2011-11-22 22:00:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-november-15th-through-november-22nd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="off"><![CDATA[.off()]]></category>
		<category domain="post_tag" nicename="on"><![CDATA[.on()]]></category>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="post_tag" nicename="boilerplate"><![CDATA[boilerplate]]></category>
		<category domain="post_tag" nicename="ci"><![CDATA[ci]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="comments"><![CDATA[comments]]></category>
		<category domain="post_tag" nicename="conditional"><![CDATA[conditional]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="debugging"><![CDATA[debugging]]></category>
		<category domain="post_tag" nicename="derby"><![CDATA[derby]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[Github]]></category>
		<category domain="post_tag" nicename="guard"><![CDATA[guard]]></category>
		<category domain="post_tag" nicename="hacks"><![CDATA[hacks]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[howto]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="ie"><![CDATA[ie]]></category>
		<category domain="post_tag" nicename="irish"><![CDATA[irish]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jessie"><![CDATA[jessie]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="mozilla"><![CDATA[mozilla]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="operator"><![CDATA[operator]]></category>
		<category domain="post_tag" nicename="paul"><![CDATA[paul]]></category>
		<category domain="post_tag" nicename="project"><![CDATA[project]]></category>
		<category domain="post_tag" nicename="pseudo-class"><![CDATA[pseudo-class]]></category>
		<category domain="post_tag" nicename="pubsub"><![CDATA[pub/sub]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="redis"><![CDATA[redis]]></category>
		<category domain="post_tag" nicename="reference"><![CDATA[reference]]></category>
		<category domain="post_tag" nicename="spine-mobile"><![CDATA[spine mobile]]></category>
		<category domain="post_tag" nicename="spine-js"><![CDATA[spine.js]]></category>
		<category domain="post_tag" nicename="terse"><![CDATA[terse]]></category>
		<category domain="post_tag" nicename="titanium"><![CDATA[titanium]]></category>
		<category domain="post_tag" nicename="transitions"><![CDATA[transitions]]></category>
		<category domain="post_tag" nicename="travis"><![CDATA[travis]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="395"><![CDATA[||]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Another great talk from @paul_...</title>
		<link>http://gregs.tcias.co.uk/2011/11/23/another-great-talk-from-paul_/</link>
		<pubDate>Wed, 23 Nov 2011 21:19:57 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/11/23/another-great-talk-from-paul_/</guid>
		<description></description>
		<content:encoded><![CDATA[Another great talk from @<a href="http://twitter.com/paul_irish" class="aktt_username">paul_irish</a> : <a href="http://t.co/VTmeQwEb" rel="nofollow">http://t.co/VTmeQwEb</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1006</wp:post_id>
		<wp:post_date>2011-11-23 21:19:57</wp:post_date>
		<wp:post_date_gmt>2011-11-23 21:19:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>another-great-talk-from-paul_</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[139453155111993344]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cappuccino take away , Italian...</title>
		<link>http://gregs.tcias.co.uk/2011/11/28/cappuccino-take-away-italian/</link>
		<pubDate>Mon, 28 Nov 2011 12:40:07 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/11/28/cappuccino-take-away-italian/</guid>
		<description></description>
		<content:encoded><![CDATA[Cappuccino take away , Italian style <a href="http://t.co/aCgbMV2P" rel="nofollow">http://t.co/aCgbMV2P</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1035</wp:post_id>
		<wp:post_date>2011-11-28 12:40:07</wp:post_date>
		<wp:post_date_gmt>2011-11-28 12:40:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cappuccino-take-away-italian</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[141134268964413441]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for December 1st through December 2nd</title>
		<link>http://gregs.tcias.co.uk/2011/12/09/bookmarks-for-december-1st-through-december-2nd/</link>
		<pubDate>Fri, 09 Dec 2011 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/12/09/bookmarks-for-december-1st-through-december-2nd/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for December 1st through December 2nd:</p>
<ul>
<li><a href="http://autotelicum.github.com/Smooth-CoffeeScript/SmoothCoffeeScript.html?utm_source=javascriptweekly&amp;utm_medium=email">Smooth CoffeeScript</a> </li>
<li><a href="http://projects.nikhilk.net/ScriptSharp?utm_source=javascriptweekly&amp;utm_medium=email">Script#</a> </li>
<li><a href="http://thejacklawson.com/Clark/?utm_source=javascriptweekly&amp;utm_medium=email">Clark</a> </li>
<li><a href="https://github.com/DataZombies/DBi?utm_source=javascriptweekly&amp;utm_medium=email">DataZombies/DBi - GitHub</a> </li>
<li><a href="http://facedetection.jaysalvat.com/?utm_source=javascriptweekly&amp;utm_medium=email">Face Detection jQuery Plugin</a> </li>
<li><a href="http://visionmedia.github.com/mocha/?utm_source=javascriptweekly&amp;utm_medium=email">Mocha - the fun, simple, flexible JavaScript test framework</a> </li>
<li><a href="http://www.re-cycledair.com/creating-jquery-plugins?utm_source=javascriptweekly&amp;utm_medium=email">Creating jQuery Plugins | Re-Cycled Air</a> </li>
<li><a href="http://raynos.org/blog/17/Improving-ES5-OO-with-pd?utm_source=javascriptweekly&amp;utm_medium=email">Raynos.org</a> </li>
<li><a href="http://tobyho.com/2011/11/16/7-common-js-mistakes-or-confusions/?utm_source=javascriptweekly&amp;utm_medium=email">7 Common Javascript Mistakes or Confusions</a> </li>
<li><a href="http://www.everyday.im/learning/porting-jquery-to-zepto.html?utm_source=javascriptweekly&amp;utm_medium=email">Porting from jQuery to Zepto</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1053</wp:post_id>
		<wp:post_date>2011-12-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-12-09 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-december-1st-through-december-2nd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ascii"><![CDATA[ascii]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="face_detection"><![CDATA[face_detection]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="mistakes"><![CDATA[mistakes]]></category>
		<category domain="post_tag" nicename="mocha"><![CDATA[mocha]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="oo"><![CDATA[OO]]></category>
		<category domain="post_tag" nicename="oop"><![CDATA[oop]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="post_tag" nicename="script"><![CDATA[script#]]></category>
		<category domain="post_tag" nicename="sparklines"><![CDATA[sparklines]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="tools"><![CDATA[tools]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="websql"><![CDATA[WebSQL]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Yay for snow! http://t.co/yvWE...</title>
		<link>http://gregs.tcias.co.uk/2011/12/16/yay-for-snow-httpt-coyvwe/</link>
		<pubDate>Fri, 16 Dec 2011 07:55:07 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/12/16/yay-for-snow-httpt-coyvwe/</guid>
		<description></description>
		<content:encoded><![CDATA[Yay for snow! <a href="http://t.co/yvWE5dJo" rel="nofollow">http://t.co/yvWE5dJo</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1054</wp:post_id>
		<wp:post_date>2011-12-16 07:55:07</wp:post_date>
		<wp:post_date_gmt>2011-12-16 07:55:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>yay-for-snow-httpt-coyvwe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[147585529549041665]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for December 6th through December 17th</title>
		<link>http://gregs.tcias.co.uk/2011/12/20/bookmarks-for-december-6th-through-december-17th/</link>
		<pubDate>Tue, 20 Dec 2011 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/12/20/bookmarks-for-december-6th-through-december-17th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for December 6th through December 17th:</p>
<ul>
<li><a href="http://intridea.com/2011/8/25/hire-a-guard-for-your-project?blog=company">Hire a Guard for Your Project | Intridea Blog</a> </li>
<li><a href="http://marc-abramowitz.com/archives/2011/11/30/brew-install-growlnotify-1-2-2-on-os-x-10-6-snow-leopard/">brew install growlnotify-1.2.2 on OS X 10.6 (Snow Leopard) &laquo; Marc Abramowitz</a> </li>
<li><a href="http://travis-ci.org/#!/dscape/nano">Travis CI - Distributed build platform for the open source community</a> </li>
<li><a href="http://www.keyframesandcode.com/resources/javascript/deconstructed/?utm_source=javascriptweekly&amp;utm_medium=email">JS Libs Deconstructed</a> </li>
<li><a href="https://github.com/visionmedia/debug?utm_source=javascriptweekly&amp;utm_medium=email">visionmedia/debug - GitHub</a> </li>
<li><a href="http://xoxco.com/projects/code/breakpoints/">Breakpoints.js - XOXCO - Web and Community Development</a> </li>
<li><a href="http://writings.nunojob.com/2011/12/Mock-Testing-CouchDB-Using-NodeJS-With-Nock-And-TAP.html?utm_source=javascriptweekly&amp;utm_medium=email">Nuno's Notebook &mdash; Mock Testing CouchDB in node.js with Nock and TAP</a> </li>
<li><a href="http://www.catonmat.net/blog/nodejs-modules-dnode/?utm_source=javascriptweekly&amp;utm_medium=email">Node.js modules you should know about: dnode - good coders code, great reuse</a> </li>
<li><a href="http://perfectionkills.com/">Perfection kills</a> </li>
<li><a href="http://hirojs.com/">Hiro - small yet powerful testing framework for JavaScript</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1055</wp:post_id>
		<wp:post_date>2011-12-20 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-12-20 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-december-6th-through-december-17th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blog"><![CDATA[blog]]></category>
		<category domain="post_tag" nicename="breakpoint-js"><![CDATA[breakpoint.js]]></category>
		<category domain="post_tag" nicename="ci"><![CDATA[ci]]></category>
		<category domain="post_tag" nicename="couchdb"><![CDATA[couchdb]]></category>
		<category domain="post_tag" nicename="debug"><![CDATA[debug]]></category>
		<category domain="post_tag" nicename="deconstructed"><![CDATA[deconstructed]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="dnode"><![CDATA[dnode]]></category>
		<category domain="post_tag" nicename="fabrics-js"><![CDATA[fabrics.js]]></category>
		<category domain="post_tag" nicename="growlnotify-brew-1-2-fix"><![CDATA[growlnotify brew 1.2 fix]]></category>
		<category domain="post_tag" nicename="hiro-js"><![CDATA[hiro.js]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="javascript-coffeescript-sass-ruby-guard"><![CDATA[javascript coffeescript sass ruby guard]]></category>
		<category domain="post_tag" nicename="libraries"><![CDATA[libraries]]></category>
		<category domain="post_tag" nicename="mock"><![CDATA[mock]]></category>
		<category domain="post_tag" nicename="module"><![CDATA[module]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[nosql]]></category>
		<category domain="post_tag" nicename="responsive"><![CDATA[responsive]]></category>
		<category domain="post_tag" nicename="responsive_design"><![CDATA[responsive_design]]></category>
		<category domain="post_tag" nicename="rpc"><![CDATA[rpc]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="travis"><![CDATA[travis]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for December 19th through December 25th</title>
		<link>http://gregs.tcias.co.uk/2011/12/26/bookmarks-for-december-19th-through-december-25th/</link>
		<pubDate>Mon, 26 Dec 2011 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2011/12/26/bookmarks-for-december-19th-through-december-25th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for December 19th through December 25th:</p>
<ul>
<li><a href="http://dochub.io/?utm_source=html5weekly&amp;utm_medium=email#css/">dochub | Instant Documentation Search</a> </li>
<li><a href="http://amix.dk/blog/post/19661?utm_source=html5weekly&amp;utm_medium=email">Truncating text using only CSS - amix.dk</a> </li>
<li><a href="http://net.tutsplus.com/tutorials/databases/getting-started-with-mongodb/?utm_source=NoSQL+Weekly+Newsletter&amp;utm_campaign=6d9ba5afb7-NoSQL_Weekly_Issue_53_December_1_2011&amp;utm_medium=email">Getting Started with MongoDB | Nettuts+</a> </li>
<li><a href="http://designshack.net/articles/css/how-to-build-a-responsive-frankenstein-framework-with-less/">How to Build a Responsive Frankenstein Framework With LESS | Design Shack</a> </li>
<li><a href="http://jondot.github.com/moxy/?utm_source=rubyweekly&amp;utm_medium=email">moxy</a> </li>
<li><a href="https://github.com/rails/jbuilder?utm_source=rubyweekly&amp;utm_medium=email">rails/jbuilder - GitHub</a> </li>
<li><a href="http://mobile-patterns.com/ui-that-i-heart">Mobile UI Patterns | UI that I Heart</a> </li>
<li><a href="http://trentwalton.com/2010/07/14/css-webkit-appearance/">CSS Webkit Appearance | Trent Walton</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1056</wp:post_id>
		<wp:post_date>2011-12-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>2011-12-26 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-december-19th-through-december-25th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css-less-responsive"><![CDATA[css less responsive]]></category>
		<category domain="post_tag" nicename="css-text-truncation"><![CDATA[css text truncation]]></category>
		<category domain="post_tag" nicename="documentation-search-searchable-css-html-javascript"><![CDATA[documentation search searchable css html javascript]]></category>
		<category domain="post_tag" nicename="mobile-ui-patterns"><![CDATA[mobile ui patterns]]></category>
		<category domain="post_tag" nicename="mongodb-tutorial"><![CDATA[mongodb tutorial]]></category>
		<category domain="post_tag" nicename="ruby-json-builder-dsl"><![CDATA[ruby json builder dsl]]></category>
		<category domain="post_tag" nicename="ruby-moxy-mock-proxy-library"><![CDATA[ruby moxy mock proxy library]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="webkit-css3-form"><![CDATA[webkit css3 form]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for December 25th through January 4th</title>
		<link>http://gregs.tcias.co.uk/2012/01/06/bookmarks-for-december-25th-through-january-4th/</link>
		<pubDate>Fri, 06 Jan 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/01/06/bookmarks-for-december-25th-through-january-4th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for December 25th through January 4th:</p>
<ul>
<li><a href="http://www.daniel-azuma.com/blog/archives/category/tech/georails?utm_source=rubyweekly&amp;utm_medium=email">GeoRails | Daniel Azuma</a> </li>
<li><a href="https://github.com/Zikes/circle-menu?utm_source=javascriptweekly&amp;utm_medium=email">Zikes/circle-menu - GitHub</a> </li>
<li><a href="http://lab.victorcoulon.fr/css/path-menu/">Path menu in pure CSS3</a> </li>
<li><a href="http://warpspire.com/posts/kss/">Knyle Style Sheets &mdash; Warpspire</a> </li>
<li><a href="http://darcyclarke.me/development/quick-tip-get-gravatar-images-from-emails-with-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">Quick Tip: Get Gravatar Images from Emails with JavaScript</a> </li>
<li><a href="http://demo-mongodb-logger.catware.org/">MongodbLogger</a> </li>
<li><a href="http://qooxdoo.org/">qooxdoo &raquo; Home</a> </li>
<li><a href="http://bits.shutterstock.com/?p=103">Introducing Rickshaw: A JavaScript toolkit for creating interactive time series graphs | shutterbits</a> </li>
<li><a href="http://www.jackkinsella.ie/2011/12/05/janki-method.html?utm_source=rubyweekly&amp;utm_medium=email">Janki Method | Jack Kinsella - Rails Developer London</a> </li>
<li><a href="https://www.mint.com/accounting">Nothing found for Accounting</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1057</wp:post_id>
		<wp:post_date>2012-01-06 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-01-06 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-december-25th-through-january-4th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="documentation"><![CDATA[documentation]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="geo"><![CDATA[geo]]></category>
		<category domain="post_tag" nicename="graphs"><![CDATA[graphs]]></category>
		<category domain="post_tag" nicename="gravatar"><![CDATA[gravatar]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="learning"><![CDATA[learning]]></category>
		<category domain="post_tag" nicename="logger"><![CDATA[logger]]></category>
		<category domain="post_tag" nicename="menu"><![CDATA[menu]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[mongodb]]></category>
		<category domain="post_tag" nicename="parser"><![CDATA[parser]]></category>
		<category domain="post_tag" nicename="path"><![CDATA[path]]></category>
		<category domain="post_tag" nicename="qooxdoo"><![CDATA[qooxdoo]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rickshaw"><![CDATA[rickshaw]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="visualization"><![CDATA[visualization]]></category>
		<category domain="post_tag" nicename="404"><![CDATA[||]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for January 5th through January 9th</title>
		<link>http://gregs.tcias.co.uk/2012/01/10/bookmarks-for-january-5th-through-january-9th/</link>
		<pubDate>Tue, 10 Jan 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/01/10/bookmarks-for-january-5th-through-january-9th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for January 5th through January 9th:</p>
<ul>
<li><a href="http://mobilewebbestpractices.com/">Mobile Web Best Practices | Helping People Make Mobile Web Experiences</a> </li>
<li><a href="http://www.uiparade.com/">Ui Parade &ndash; User Interface Inspiration</a> </li>
<li><a href="http://freshbrewedcode.com/derekgreer/2011/12/08/solid-javascript-single-responsibility-principle/?utm_source=javascriptweekly&amp;utm_medium=email">SOLID JavaScript: The Single Responsibility Principle</a> </li>
<li><a href="http://www.catonmat.net/blog/nodejs-modules-lazy/">Node.js modules you should know about: lazy - good coders code, great reuse</a> </li>
<li><a href="https://www.windowsazure.com/en-us/develop/nodejs/">Node.js - Develop - Windows Azure</a> </li>
<li><a href="http://sequelizejs.com/?utm_source=javascriptweekly&amp;utm_medium=email#installation">Sequelize &raquo; A MySQL Object-Relational-Mapper for NodeJS</a> </li>
<li><a href="http://mud.mitplw.com/JSGestureRecognizer/?utm_source=javascriptweekly&amp;utm_medium=email">BuzaMoto JSTapGestureRecognizer</a> </li>
<li><a href="http://addyosmani.com/blog/50-jquery-snippets-for-developers/">50 jQuery Snippets That Will Help You Become A Better JavaScript Developer</a> </li>
<li><a href="https://github.com/FGRibreau/forever-webui?utm_source=javascriptweekly&amp;utm_medium=email">FGRibreau/forever-webui - GitHub</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1058</wp:post_id>
		<wp:post_date>2012-01-10 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-01-10 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-january-5th-through-january-9th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="administration"><![CDATA[administration]]></category>
		<category domain="post_tag" nicename="azure"><![CDATA[azure]]></category>
		<category domain="post_tag" nicename="best-practice"><![CDATA[best practice]]></category>
		<category domain="post_tag" nicename="gesture"><![CDATA[gesture]]></category>
		<category domain="post_tag" nicename="gestures"><![CDATA[gestures]]></category>
		<category domain="post_tag" nicename="inspiration"><![CDATA[inspiration]]></category>
		<category domain="post_tag" nicename="interface"><![CDATA[interface]]></category>
		<category domain="post_tag" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="lazy"><![CDATA[Lazy]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="list"><![CDATA[list]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="module"><![CDATA[module]]></category>
		<category domain="post_tag" nicename="mysql-2"><![CDATA[mysql]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="oo"><![CDATA[OO]]></category>
		<category domain="post_tag" nicename="sequelize"><![CDATA[sequelize]]></category>
		<category domain="post_tag" nicename="server"><![CDATA[server]]></category>
		<category domain="post_tag" nicename="snippets"><![CDATA[snippets]]></category>
		<category domain="post_tag" nicename="solid"><![CDATA[SOLID]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="ui"><![CDATA[ui]]></category>
		<category domain="post_tag" nicename="ux"><![CDATA[ux]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<category domain="post_tag" nicename="webkit"><![CDATA[webkit]]></category>
		<category domain="post_tag" nicename="windows-2"><![CDATA[windows]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for January 16th through January 17th</title>
		<link>http://gregs.tcias.co.uk/2012/01/18/bookmarks-for-january-16th-through-january-17th/</link>
		<pubDate>Wed, 18 Jan 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/01/18/bookmarks-for-january-16th-through-january-17th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for January 16th through January 17th:</p>
<ul>
<li><a href="http://www.netmagazine.com/tutorials/getting-started-html5-geolocation?utm_source=html5weekly&amp;utm_medium=email">Getting started with HTML5 geolocation | Tutorial | .net magazine</a> </li>
<li><a href="http://maxdemarzi.com/2012/01/13/neo4j-on-heroku-part-one/">Neo4j on Heroku &ndash; Part One &laquo; Max De Marzi</a> </li>
<li><a href="http://line25.com/tutorials/how-to-create-a-vibrant-cloud-icon-in-photoshop">How To Create a Vibrant Cloud Icon in Photoshop</a> </li>
<li><a href="http://rezitech.github.com/syze/?utm_source=javascriptweekly&amp;utm_medium=email">syze: Think @media queries powered by Javascript</a> </li>
<li><a href="http://css-tricks.com/custom-events-are-pretty-cool/?utm_source=javascriptweekly&amp;utm_medium=email">Custom Events are Pretty Cool | CSS-Tricks</a> </li>
<li><a href="http://killdream.github.com/blog/2011/10/understanding-javascript-oop/index.html?utm_source=javascriptweekly&amp;utm_medium=email">Understanding JavaScript OOP &mdash; Sorella's Basement</a> </li>
<li><a href="http://bartaz.github.com/impress.js/?utm_source=html5weekly&amp;utm_medium=email#/overview">impress.js | presentation tool based on the power of CSS3 transforms and transitions in modern browsers | by Bartek Szopka @bartaz</a> </li>
<li><a href="http://medialize.github.com/URI.js/?utm_source=javascriptweekly&amp;utm_medium=email">URI.js - URLs in Javascript</a> </li>
<li><a href="http://isotope.metafizzy.co/">Isotope</a> </li>
<li><a href="http://creativejs.com/category/12-days-of-creativejs/?utm_source=javascriptweekly&amp;utm_medium=email">12 days of CreativeJS | CreativeJS</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1059</wp:post_id>
		<wp:post_date>2012-01-18 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-01-18 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-january-16th-through-january-17th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="2d"><![CDATA[2d]]></category>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="post_tag" nicename="canvas"><![CDATA[canvas]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="custom-events"><![CDATA[custom events]]></category>
		<category domain="post_tag" nicename="es5"><![CDATA[es5]]></category>
		<category domain="post_tag" nicename="geo"><![CDATA[geo]]></category>
		<category domain="post_tag" nicename="geolocation"><![CDATA[geolocation]]></category>
		<category domain="post_tag" nicename="graph-database"><![CDATA[graph database]]></category>
		<category domain="post_tag" nicename="heroku"><![CDATA[heroku]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="impress-js"><![CDATA[impress.js]]></category>
		<category domain="post_tag" nicename="isotope"><![CDATA[isotope]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="layout"><![CDATA[layout]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="media-queries"><![CDATA[media queries]]></category>
		<category domain="post_tag" nicename="neo4j"><![CDATA[neo4j]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[nosql]]></category>
		<category domain="post_tag" nicename="oop"><![CDATA[oop]]></category>
		<category domain="post_tag" nicename="photoshop"><![CDATA[photoshop]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
		<category domain="post_tag" nicename="recommendation"><![CDATA[recommendation]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="url"><![CDATA[url]]></category>
		<category domain="post_tag" nicename="url-js"><![CDATA[url.js]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for January 18th through January 22nd</title>
		<link>http://gregs.tcias.co.uk/2012/01/25/bookmarks-for-january-18th-through-january-22nd/</link>
		<pubDate>Wed, 25 Jan 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/01/25/bookmarks-for-january-18th-through-january-22nd/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for January 18th through January 22nd:</p>
<ul>
<li><a href="http://niemann.blogs.nytimes.com/">Abstract Sunday Blog - NYTimes.com</a> </li>
<li><a href="https://github.com/codejoust/session.js?utm_source=javascriptweekly&amp;utm_medium=email">codejoust/session.js - GitHub</a> </li>
<li><a href="https://github.com/csnover/dojo-boilerplate?utm_source=javascriptweekly&amp;utm_medium=email">csnover/dojo-boilerplate - GitHub</a> </li>
<li><a href="https://github.com/maccman/macgap?utm_source=javascriptweekly&amp;utm_medium=email">maccman/macgap - GitHub</a> </li>
<li><a href="http://weblog.bocoup.com/introducing-the-backbone-boilerplate/?utm_source=javascriptweekly&amp;utm_medium=email">Introducing The Backbone Boilerplate - Bocoup</a> </li>
<li><a href="http://blog.errorception.com/2012/01/writing-quality-third-party-js-part-1.html?utm_source=javascriptweekly&amp;utm_medium=email">{errorception} blog: Writing Quality Third-Party JS - Part 1: The First Rule</a> </li>
<li><a href="http://mynorthernlights.visitnorway.com/uk/">Norway &ndash; the land of the northern lights</a> </li>
<li><a href="http://autotelicum.github.com/Smooth-CoffeeScript/interactive/interactive-coffeescript.html?utm_source=javascriptweekly&amp;utm_medium=email">Interactive Smooth CoffeeScript</a> </li>
<li><a href="http://www.kendoui.com/blogs/teamblog/posts/12-01-06/what_you_may_not_know_about_jquery.aspx?utm_source=javascriptweekly&amp;utm_medium=email">Kendo Blog Posts &gt; What You May Not Know About jQuery</a> </li>
<li><a href="http://maxdemarzi.com/2012/01/06/gremlin-with-neography/?utm_source=NoSQL+Weekly+Newsletter&amp;utm_campaign=2e245dcb3c-NoSQL_Weekly_Issue_59_January_12_2012&amp;utm_medium=email">Gremlin with Neography &laquo; Max De Marzi</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1060</wp:post_id>
		<wp:post_date>2012-01-25 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-01-25 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-january-18th-through-january-22nd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="end"><![CDATA[.end()]]></category>
		<category domain="post_tag" nicename="prevall"><![CDATA[.prevAll()]]></category>
		<category domain="post_tag" nicename="slice"><![CDATA[.slice()]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="boilerplate"><![CDATA[boilerplate]]></category>
		<category domain="post_tag" nicename="book"><![CDATA[book]]></category>
		<category domain="post_tag" nicename="cofeescript"><![CDATA[cofeescript]]></category>
		<category domain="post_tag" nicename="dojo"><![CDATA[dojo]]></category>
		<category domain="post_tag" nicename="doodle"><![CDATA[doodle]]></category>
		<category domain="post_tag" nicename="dsl"><![CDATA[dsl]]></category>
		<category domain="post_tag" nicename="great-design"><![CDATA[great design]]></category>
		<category domain="post_tag" nicename="gremlin"><![CDATA[gremlin]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[howto]]></category>
		<category domain="post_tag" nicename="information"><![CDATA[information]]></category>
		<category domain="post_tag" nicename="interactive"><![CDATA[interactive]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="macgap"><![CDATA[macgap]]></category>
		<category domain="post_tag" nicename="map"><![CDATA[map]]></category>
		<category domain="post_tag" nicename="native-app"><![CDATA[native app]]></category>
		<category domain="post_tag" nicename="revolution"><![CDATA[revolution]]></category>
		<category domain="post_tag" nicename="session"><![CDATA[session]]></category>
		<category domain="post_tag" nicename="session-js"><![CDATA[session.js]]></category>
		<category domain="post_tag" nicename="smooth-coffeescript"><![CDATA[smooth coffeescript]]></category>
		<category domain="post_tag" nicename="third-party-code"><![CDATA[third party code]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="webvie"><![CDATA[WebVie]]></category>
		<category domain="post_tag" nicename="write"><![CDATA[write]]></category>
		<category domain="post_tag" nicename="xcode"><![CDATA[xcode]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for January 25th from 16:58 to 21:41</title>
		<link>http://gregs.tcias.co.uk/2012/01/26/bookmarks-for-january-25th-from-1658-to-2141/</link>
		<pubDate>Thu, 26 Jan 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/01/26/bookmarks-for-january-25th-from-1658-to-2141/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for January 25th from 16:58 to 21:41:</p>
<ul>
<li><a href="http://www.codeproject.com/KB/HTML/SpaceShoot.aspx?utm_source=html5weekly&amp;utm_medium=email">SpaceShoot - A multiplayer game in HTML5 - CodeProject&reg;</a> </li>
<li><a href="http://css-tricks.com/better-tabs-with-round-out-borders/?utm_source=html5weekly&amp;utm_medium=email">(Better) Tabs with Round Out Borders | CSS-Tricks</a> </li>
<li><a href="http://www.adityaravishankar.com/2011/11/command-and-conquer-programming-an-rts-game-in-html5-and-javascript/?utm_source=html5weekly&amp;utm_medium=email">Command and Conquer &ndash; Programming an RTS game in HTML5 and Javascript | Aditya Ravi Shankar</a> </li>
<li><a href="http://blog.responsivenews.co.uk/">Responsive News</a> </li>
<li><a href="http://boingboing.net/2012/01/02/roboto.html?utm_source=hackernewsletter&amp;utm_medium=email">Domo Arigato, Mr Roboto - Boing Boing</a> </li>
<li><a href="http://verekia.com/initializr/responsive-template?utm_source=hackernewsletter&amp;utm_medium=email">Initializr: With Great Templates Comes Great Responsivity! | @verekia's blog</a> </li>
<li><a href="https://github.com/jrburke/r.js/">jrburke/r.js - GitHub</a> </li>
<li><a href="http://backbonetutorials.com/">Backbone.js Tutorials</a> </li>
<li><a href="http://www.visitorjs.com/details?utm_source=hackernewsletter&amp;utm_medium=email">visitor.js: Website Personalization Using Geolocation and Other Visitor Data</a> </li>
<li><a href="http://matt.might.net/articles/programmers-resolutions/?utm_source=twitterfeed&amp;utm_medium=twitter?utm_source=hackernewsletter&amp;utm_medium=email">12 resolutions for programmers</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1061</wp:post_id>
		<wp:post_date>2012-01-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-01-26 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-january-25th-from-1658-to-2141</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="bbc"><![CDATA[bbc]]></category>
		<category domain="post_tag" nicename="blog"><![CDATA[blog]]></category>
		<category domain="post_tag" nicename="boilerplate"><![CDATA[boilerplate]]></category>
		<category domain="post_tag" nicename="build"><![CDATA[build]]></category>
		<category domain="post_tag" nicename="combine"><![CDATA[combine]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="font-face"><![CDATA[font-face]]></category>
		<category domain="post_tag" nicename="fonts"><![CDATA[fonts]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="initializr"><![CDATA[initializr]]></category>
		<category domain="post_tag" nicename="intentions"><![CDATA[intentions]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="localisation"><![CDATA[localisation]]></category>
		<category domain="post_tag" nicename="math"><![CDATA[math]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="multiplayer"><![CDATA[multiplayer]]></category>
		<category domain="post_tag" nicename="personalisation"><![CDATA[personalisation]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[programming]]></category>
		<category domain="post_tag" nicename="r-js"><![CDATA[r.js]]></category>
		<category domain="post_tag" nicename="resolutions"><![CDATA[resolutions]]></category>
		<category domain="post_tag" nicename="responsive"><![CDATA[responsive]]></category>
		<category domain="post_tag" nicename="roboto"><![CDATA[roboto]]></category>
		<category domain="post_tag" nicename="round-borders"><![CDATA[round borders]]></category>
		<category domain="post_tag" nicename="session"><![CDATA[session]]></category>
		<category domain="post_tag" nicename="tabs"><![CDATA[tabs]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorials"><![CDATA[tutorials]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<category domain="post_tag" nicename="visitor-js"><![CDATA[visitor.js]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for January 25th from 22:15 to 23:50</title>
		<link>http://gregs.tcias.co.uk/2012/01/27/bookmarks-for-january-25th-from-2215-to-2350/</link>
		<pubDate>Fri, 27 Jan 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/01/27/bookmarks-for-january-25th-from-2215-to-2350/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for January 25th from 22:15 to 23:50:</p>
<ul>
<li><a href="http://www.joezimjs.com/javascript/javascript-design-patterns-decorator/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScript Design Patterns: Decorator | Joe Zim's JS Blog</a> </li>
<li><a href="http://shichuan.github.com/javascript-patterns/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScript pattern and antipattern collection</a> </li>
<li><a href="http://www.javageneration.com/?p=839">Chaker Nakhli's Blog &raquo; Blog Archive &raquo; Backbone.js by example &ndash; Part 1</a> </li>
<li><a href="http://miamicoder.com/2011/building-a-jquery-mobile-application-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Building a jQuery Mobile Application, Part 1</a> </li>
<li><a href="http://emberjs.com/">Ember.js - Documentation</a> </li>
<li><a href="http://codebrief.com/2012/01/the-top-10-javascript-mvc-frameworks-reviewed/?utm_source=javascriptweekly&amp;utm_medium=email">The Top 10 Javascript MVC Frameworks Reviewed - CodeBrief</a> </li>
<li><a href="http://addyosmani.com/blog/understanding-mvc-and-mvp-for-javascript-and-backbone-developers/?utm_source=javascriptweekly&amp;utm_medium=email">Understanding MVC And MVP (For JavaScript And Backbone Developers)</a> </li>
<li><a href="http://awardwinningfjords.com/2009/06/16/iphone-style-checkboxes.html?utm_source=html5weekly&amp;utm_medium=email">Introducing iPhone-style Checkboxes &laquo; Thomas Reynolds</a> </li>
<li><a href="https://github.com/marstall/shim?utm_source=html5weekly&amp;utm_medium=email">marstall/shim - GitHub</a> </li>
<li><a href="http://jpschwinghamer.com/sandbox/leds?utm_source=html5weekly&amp;utm_medium=email">CSS3 Daft Punk LEDs</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1062</wp:post_id>
		<wp:post_date>2012-01-27 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-01-27 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-january-25th-from-2215-to-2350</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="checkbox"><![CDATA[checkbox]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="decorator"><![CDATA[decorator]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="ember-js"><![CDATA[ember.js]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="iphone"><![CDATA[iphone]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="led"><![CDATA[led]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="mvp"><![CDATA[mvp]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="review"><![CDATA[review]]></category>
		<category domain="post_tag" nicename="series"><![CDATA[series]]></category>
		<category domain="post_tag" nicename="synchronised-browsing"><![CDATA[synchronised browsing]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Just stumbled across Weinre ht...</title>
		<link>http://gregs.tcias.co.uk/2012/01/26/just-stumbled-across-weinre-ht/</link>
		<pubDate>Thu, 26 Jan 2012 11:12:52 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/01/26/just-stumbled-across-weinre-ht/</guid>
		<description></description>
		<content:encoded><![CDATA[Just stumbled across Weinre <a href="http://t.co/K3Pvnsjb" rel="nofollow">http://t.co/K3Pvnsjb</a> - mobile browser debugging - yay!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1063</wp:post_id>
		<wp:post_date>2012-01-26 11:12:52</wp:post_date>
		<wp:post_date_gmt>2012-01-26 11:12:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>just-stumbled-across-weinre-ht</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[162493199552753664]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for January 26th through January 30th</title>
		<link>http://gregs.tcias.co.uk/2012/01/31/bookmarks-for-january-26th-through-january-30th/</link>
		<pubDate>Tue, 31 Jan 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/01/31/bookmarks-for-january-26th-through-january-30th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for January 26th through January 30th:</p>
<ul>
<li><a href="http://mediaqueri.es/">Media Queries</a> </li>
<li><a href="http://css1k.com/#html5colors">CSS1K</a> </li>
<li><a href="http://videojs.com/?utm_source=html5weekly&amp;utm_medium=email">HTML5 Video Player | Video.js</a> </li>
<li><a href="http://tympanus.net/codrops/2012/01/17/sliding-image-panels-with-css3/?utm_source=html5weekly&amp;utm_medium=email">Sliding Image Panels with CSS3 | Codrops</a> </li>
<li><a href="http://tympanus.net/codrops/2012/01/22/how-to-spice-up-your-menu-with-css3/?utm_source=html5weekly&amp;utm_medium=email">How to spice up your menu with CSS3 | Codrops</a> </li>
<li><a href="http://notes.unwieldy.net/post/16047334773/the-paste-wasteland?utm_source=html5weekly&amp;utm_medium=email">The Paste Wasteland ◇ notes.unwieldy</a> </li>
<li><a href="https://gethopper.com/you">Hopper &mdash; save links, text, images, and files in moments.</a> </li>
<li><a href="http://active.tutsplus.com/tutorials/games/an-introduction-to-the-html5-gamepad-api/?utm_source=html5weekly&amp;utm_medium=email">An Introduction to the HTML5 Gamepad API | Activetuts+</a> </li>
<li><a href="http://tumultco.com/blog/2012/01/20/easy-html5-animations-in-ibooks-using-tumult-hype-and-ibooks-author/?utm_source=html5weekly&amp;utm_medium=email">Easy HTML5 Animations in iBooks using Tumult Hype and iBooks Author | Tumult Inc. Blog</a> </li>
<li><a href="http://www.kendoui.com/blogs/teamblog/posts/12-01-24/intro_to_the_kendo_ui_mobile_beta.aspx?utm_source=html5weekly&amp;utm_medium=email">Kendo Blog Posts &gt; Intro to the Kendo UI Mobile Beta</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1064</wp:post_id>
		<wp:post_date>2012-01-31 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-01-31 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-january-26th-through-january-30th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="1k"><![CDATA[1k]]></category>
		<category domain="post_tag" nicename="api"><![CDATA[api]]></category>
		<category domain="post_tag" nicename="boilerplate"><![CDATA[boilerplate]]></category>
		<category domain="post_tag" nicename="canvas"><![CDATA[canvas]]></category>
		<category domain="post_tag" nicename="controller"><![CDATA[controller]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css1k"><![CDATA[css1k]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="event"><![CDATA[event]]></category>
		<category domain="post_tag" nicename="gamepad"><![CDATA[gamepad]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="ibooks"><![CDATA[iBooks]]></category>
		<category domain="post_tag" nicename="image"><![CDATA[image]]></category>
		<category domain="post_tag" nicename="inspiration"><![CDATA[inspiration]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="kendo"><![CDATA[kendo]]></category>
		<category domain="post_tag" nicename="media-queries"><![CDATA[media queries]]></category>
		<category domain="post_tag" nicename="menu"><![CDATA[menu]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="onpaste"><![CDATA[onPaste]]></category>
		<category domain="post_tag" nicename="panels"><![CDATA[panels]]></category>
		<category domain="post_tag" nicename="paste"><![CDATA[paste]]></category>
		<category domain="post_tag" nicename="paste-bin"><![CDATA[paste bin]]></category>
		<category domain="post_tag" nicename="service"><![CDATA[service]]></category>
		<category domain="post_tag" nicename="sharing"><![CDATA[sharing]]></category>
		<category domain="post_tag" nicename="sliding"><![CDATA[sliding]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="video-js"><![CDATA[video.js]]></category>
		<category domain="post_tag" nicename="xbox"><![CDATA[xbox]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for January 31st through February 3rd</title>
		<link>http://gregs.tcias.co.uk/2012/02/03/bookmarks-for-january-31st-through-february-3rd/</link>
		<pubDate>Fri, 03 Feb 2012 01:04:26 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1065</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for January 31st through February 3rd:</p>
<ul>
<li><a href="http://thenounproject.com/mission/">Mission | NounProject</a> </li>
<li><a href="http://www.pentotype.com/?utm_source=hackernewsletter&amp;utm_medium=email">wireframes for great apps | pentotype</a> </li>
<li><a href="http://themesquirrel.com/?utm_source=hackernewsletter&amp;utm_medium=email">ThemeSquirrel</a> </li>
<li><a href="http://documentup.com/?utm_source=hackernewsletter&amp;utm_medium=email">DocumentUp</a> </li>
<li><a href="http://hastebin.com/about.md">hastebin - the elegant pastebin - about</a> </li>
<li><a href="http://middlemanapp.com/">Middleman: Hand-crafted frontend development</a> </li>
<li><a href="http://shortboredsurfer.com/2011/09/making-a-mobile-usability-testing-sled-the-macgyver-way/">Making a mobile usability testing sled the MacGyver way</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1065</wp:post_id>
		<wp:post_date>2012-02-03 01:04:26</wp:post_date>
		<wp:post_date_gmt>2012-02-03 01:04:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-january-31st-through-february-3rd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="code"><![CDATA[code]]></category>
		<category domain="post_tag" nicename="documentation"><![CDATA[documentation]]></category>
		<category domain="post_tag" nicename="documentup"><![CDATA[DocumentUp]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[Github]]></category>
		<category domain="post_tag" nicename="haml"><![CDATA[haml]]></category>
		<category domain="post_tag" nicename="hastebin"><![CDATA[hastebin]]></category>
		<category domain="post_tag" nicename="icons"><![CDATA[icons]]></category>
		<category domain="post_tag" nicename="inspiration"><![CDATA[inspiration]]></category>
		<category domain="post_tag" nicename="middleman"><![CDATA[middleman]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="noun-project"><![CDATA[noun project]]></category>
		<category domain="post_tag" nicename="productivity"><![CDATA[productivity]]></category>
		<category domain="post_tag" nicename="prototype"><![CDATA[prototype]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="sass"><![CDATA[sass]]></category>
		<category domain="post_tag" nicename="sharing"><![CDATA[sharing]]></category>
		<category domain="post_tag" nicename="simple"><![CDATA[simple]]></category>
		<category domain="post_tag" nicename="sinatra"><![CDATA[sinatra]]></category>
		<category domain="post_tag" nicename="sled"><![CDATA[sled]]></category>
		<category domain="post_tag" nicename="symbols"><![CDATA[symbols]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="themes"><![CDATA[themes]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="url-shortner"><![CDATA[url shortner]]></category>
		<category domain="post_tag" nicename="usability"><![CDATA[usability]]></category>
		<category domain="post_tag" nicename="user-testing"><![CDATA[user testing]]></category>
		<category domain="post_tag" nicename="wireframe"><![CDATA[wireframe]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I got a 8.0/10 in Color, a col...</title>
		<link>http://gregs.tcias.co.uk/2012/02/03/i-got-a-8-010-in-color-a-col/</link>
		<pubDate>Fri, 03 Feb 2012 00:59:31 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/02/03/i-got-a-8-010-in-color-a-col/</guid>
		<description></description>
		<content:encoded><![CDATA[I got a 8.0/10 in Color, a color matching game <a href="http://t.co/bQteOquB" rel="nofollow">http://t.co/bQteOquB</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1067</wp:post_id>
		<wp:post_date>2012-02-03 00:59:31</wp:post_date>
		<wp:post_date_gmt>2012-02-03 00:59:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-got-a-8-010-in-color-a-col</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[165237949087219714]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I don&#039;t know, but it made me l...</title>
		<link>http://gregs.tcias.co.uk/2012/02/08/i-dont-know-but-it-made-me-l/</link>
		<pubDate>Wed, 08 Feb 2012 20:11:34 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/02/08/i-dont-know-but-it-made-me-l/</guid>
		<description></description>
		<content:encoded><![CDATA[I don't know, but it made me laugh <a href="https://t.co/JjqulLHN" rel="nofollow">https://t.co/JjqulLHN</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1068</wp:post_id>
		<wp:post_date>2012-02-08 20:11:34</wp:post_date>
		<wp:post_date_gmt>2012-02-08 20:11:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-dont-know-but-it-made-me-l</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[167339811819102208]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for February 9th from 22:06 to 22:57</title>
		<link>http://gregs.tcias.co.uk/2012/02/10/bookmarks-for-february-9th-from-2206-to-2257/</link>
		<pubDate>Fri, 10 Feb 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/02/10/bookmarks-for-february-9th-from-2206-to-2257/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for February 9th from 22:06 to 22:57:</p>
<ul>
<li><a href="http://paulrogersstudio.com/?section=gallery&amp;gallery_id=27">paulrogersstudio Posters</a> </li>
<li><a href="https://saucelabs.com/">Cross browser testing with Selenium - Sauce Labs</a> </li>
<li><a href="http://www.turnjs.com/?utm_source=html5weekly&amp;utm_medium=email#home">turn.js - The page flip effect for HTML5</a> </li>
<li><a href="http://jacklmoore.com/notes/css3-ribbon-menu/?utm_source=html5weekly&amp;utm_medium=email">CSS Ribbon Menu</a> </li>
<li><a href="http://www.colorzilla.com/gradient-editor/?utm_source=html5weekly&amp;utm_medium=email">Ultimate CSS Gradient Generator - ColorZilla.com</a> </li>
<li><a href="http://dl.dropbox.com/u/39519/talks/cssperf/index.html">CSS PERFORMANCE</a> </li>
<li><a href="http://calendar.perfplanet.com/2011/css-selector-performance-has-changed-for-the-better/">Performance Calendar &raquo; CSS Selector Performance has changed! (For the better)</a> </li>
<li><a href="http://markdalgleish.com/projects/stellar.js/?utm_source=javascriptweekly&amp;utm_medium=email">Stellar.js</a> </li>
<li><a href="http://www.humblesoftware.com/flotr2/index">flotr2</a> </li>
<li><a href="http://msdn.microsoft.com/en-us/magazine/hh781029.aspx?utm_source=javascriptweekly&amp;utm_medium=email">Client Insight - Getting Started with Knockout</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1069</wp:post_id>
		<wp:post_date>2012-02-10 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-02-10 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-february-9th-from-2206-to-2257</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="browser"><![CDATA[browser]]></category>
		<category domain="post_tag" nicename="canvas"><![CDATA[canvas]]></category>
		<category domain="post_tag" nicename="charts"><![CDATA[charts]]></category>
		<category domain="post_tag" nicename="cloud"><![CDATA[cloud]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="generator"><![CDATA[generator]]></category>
		<category domain="post_tag" nicename="gradient"><![CDATA[gradient]]></category>
		<category domain="post_tag" nicename="inspiration"><![CDATA[inspiration]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="knockout-js"><![CDATA[knockout.js]]></category>
		<category domain="post_tag" nicename="menu"><![CDATA[menu]]></category>
		<category domain="post_tag" nicename="nav"><![CDATA[nav]]></category>
		<category domain="post_tag" nicename="page"><![CDATA[page]]></category>
		<category domain="post_tag" nicename="parallax"><![CDATA[parallax]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[performance]]></category>
		<category domain="post_tag" nicename="ribbon"><![CDATA[ribbon]]></category>
		<category domain="post_tag" nicename="saucelabs"><![CDATA[saucelabs]]></category>
		<category domain="post_tag" nicename="selector"><![CDATA[selector]]></category>
		<category domain="post_tag" nicename="selenium"><![CDATA[selenium]]></category>
		<category domain="post_tag" nicename="stellar-js"><![CDATA[stellar.js]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="tools"><![CDATA[tools]]></category>
		<category domain="post_tag" nicename="transitions"><![CDATA[transitions]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="turn-js"><![CDATA[turn.js]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nancy Duarte: The secret struc...</title>
		<link>http://gregs.tcias.co.uk/2012/02/15/nancy-duarte-the-secret-struc/</link>
		<pubDate>Wed, 15 Feb 2012 22:57:23 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/02/15/nancy-duarte-the-secret-struc/</guid>
		<description></description>
		<content:encoded><![CDATA[Nancy Duarte: The secret structure of great talks <a href="http://t.co/OwbJdUF1" rel="nofollow">http://t.co/OwbJdUF1</a> #<a href="http://search.twitter.com/search?q=%23TED" class="aktt_hashtag">TED</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1070</wp:post_id>
		<wp:post_date>2012-02-15 22:57:23</wp:post_date>
		<wp:post_date_gmt>2012-02-15 22:57:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nancy-duarte-the-secret-struc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[169918253823565824]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for February 15th from 21:24 to 22:32</title>
		<link>http://gregs.tcias.co.uk/2012/02/17/bookmarks-for-february-15th-from-2124-to-2232/</link>
		<pubDate>Fri, 17 Feb 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/02/17/bookmarks-for-february-15th-from-2124-to-2232/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for February 15th from 21:24 to 22:32:</p>
<ul>
<li><a href="http://devcenter.heroku.com/articles/getting-started-ios-development-sinatra-cedar#create_your_ios_client_app">Getting Started with iOS Development using Sinatra on Heroku / Cedar | Heroku Dev Center</a> </li>
<li><a href="http://anders.janmyr.com/2012/01/finding-with-git.html">The Tapir's Tale: Finding with Git</a> </li>
<li><a href="http://book.mixu.net/">Table of Contents - Mixu's Node book - Mixu's Node book</a> </li>
<li><a href="http://kiro.me/textualizer/?utm_source=javascriptweekly&amp;utm_medium=email">Textualizer</a> </li>
<li><a href="https://github.com/jairajs89/Touchy.js?utm_source=javascriptweekly&amp;utm_medium=email">jairajs89/Touchy.js - GitHub</a> </li>
<li><a href="http://needim.github.com/noty/?utm_source=javascriptweekly&amp;utm_medium=email">noty - a jquery notification plugin</a> </li>
<li><a href="https://github.com/twolfson/File-Watcher?utm_source=javascriptweekly&amp;utm_medium=email">twolfson/File-Watcher - GitHub</a> </li>
<li><a href="https://github.com/elabs/serenade.js?utm_source=javascriptweekly&amp;utm_medium=email">elabs/serenade.js - GitHub</a> </li>
<li><a href="http://nodebits.org/?utm_source=javascriptweekly&amp;utm_medium=email">Nodebits - Bits of inspiration to keep the node spirit alive</a> </li>
<li><a href="http://tumblr.dangercove.com/post/17213260067/html5-web-notifications?utm_source=html5weekly&amp;utm_medium=email">Danger Cove, HTML5 Web Notifications</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1071</wp:post_id>
		<wp:post_date>2012-02-17 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-02-17 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-february-15th-from-2124-to-2232</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="post_tag" nicename="blame"><![CDATA[blame]]></category>
		<category domain="post_tag" nicename="book"><![CDATA[book]]></category>
		<category domain="post_tag" nicename="browser"><![CDATA[browser]]></category>
		<category domain="post_tag" nicename="client"><![CDATA[client]]></category>
		<category domain="post_tag" nicename="event"><![CDATA[event]]></category>
		<category domain="post_tag" nicename="file-watcher"><![CDATA[File-Watcher]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="grep"><![CDATA[grep]]></category>
		<category domain="post_tag" nicename="heroku"><![CDATA[heroku]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="inspiration"><![CDATA[inspiration]]></category>
		<category domain="post_tag" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="log"><![CDATA[log]]></category>
		<category domain="post_tag" nicename="macruby"><![CDATA[macruby]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="notification"><![CDATA[notification]]></category>
		<category domain="post_tag" nicename="notify"><![CDATA[notify]]></category>
		<category domain="post_tag" nicename="refresh"><![CDATA[refresh]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="serenade-js"><![CDATA[serenade.js]]></category>
		<category domain="post_tag" nicename="server"><![CDATA[server]]></category>
		<category domain="post_tag" nicename="sinatra"><![CDATA[sinatra]]></category>
		<category domain="post_tag" nicename="text"><![CDATA[text]]></category>
		<category domain="post_tag" nicename="tips"><![CDATA[tips]]></category>
		<category domain="post_tag" nicename="touch"><![CDATA[touch]]></category>
		<category domain="post_tag" nicename="touchy-js"><![CDATA[touchy.js]]></category>
		<category domain="post_tag" nicename="tricks"><![CDATA[tricks]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for February 20th from 20:09 to 21:41</title>
		<link>http://gregs.tcias.co.uk/2012/02/21/bookmarks-for-february-20th-from-2009-to-2141/</link>
		<pubDate>Tue, 21 Feb 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/02/21/bookmarks-for-february-20th-from-2009-to-2141/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for February 20th from 20:09 to 21:41:</p>
<ul>
<li><a href="http://www.sequencejs.com/?utm_source=javascriptweekly&amp;utm_medium=email">Sequence.js - The jQuery Slider Plugin with Infinite Style</a> </li>
<li><a href="https://github.com/commadelimited/jQuery-Mobile-Bootstrap-Theme?utm_source=javascriptweekly&amp;utm_medium=email">commadelimited/jQuery-Mobile-Bootstrap-Theme - GitHub</a> </li>
<li><a href="https://github.com/maccman/ace?utm_source=javascriptweekly&amp;utm_medium=email">maccman/ace - GitHub</a> </li>
<li><a href="http://liamkaufman.com/blog/2012/02/11/12-pushing-files-to-the-browser-using-deliveryjs-socketio-and-nodejs/?utm_source=javascriptweekly&amp;utm_medium=email">Pushing Files to the Browser Using Delivery.js, Socket.IO and Node.js - Liam Kaufman</a> </li>
<li><a href="http://ariya.ofilabs.com/2012/02/tracking-javascript-execution-during-startup.html?utm_source=javascriptweekly&amp;utm_medium=email">Tracking JavaScript execution during startup | don't code today</a> </li>
<li><a href="http://www.elijahmanor.com/2012/02/find-jquery-bug-4-animations-gone-wild.html?utm_source=javascriptweekly&amp;utm_medium=email">Web Dev .NET: Find the jQuery Bug #4: Animations Gone Wild</a> </li>
<li><a href="http://blog.mixu.net/2011/02/03/javascript-node-js-and-for-loops/?utm_source=javascriptweekly&amp;utm_medium=email">Javascript, node.js and for loops &laquo; Mixu's tech blog</a> </li>
<li><a href="http://matt.might.net/articles/javascript-warts/?utm_source=javascriptweekly&amp;utm_medium=email">JavaScript: Warts and workarounds</a> </li>
<li><a href="http://www.mobjectify.com/edit/">mobjectify - Easy mockups for the mobile web</a> </li>
<li><a href="http://www.jqmgallery.com/page/4/">jQuery Mobile Examples - JQM Gallery</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1072</wp:post_id>
		<wp:post_date>2012-02-21 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-02-21 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-february-20th-from-2009-to-2141</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ace"><![CDATA[ace]]></category>
		<category domain="post_tag" nicename="analysis"><![CDATA[analysis]]></category>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="post_tag" nicename="bootstrap"><![CDATA[bootstrap]]></category>
		<category domain="post_tag" nicename="builder"><![CDATA[builder]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="examples"><![CDATA[examples]]></category>
		<category domain="post_tag" nicename="execution"><![CDATA[execution]]></category>
		<category domain="post_tag" nicename="file"><![CDATA[file]]></category>
		<category domain="post_tag" nicename="for-loop"><![CDATA[for loop]]></category>
		<category domain="post_tag" nicename="hover"><![CDATA[hover]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="logging"><![CDATA[logging]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="prototype"><![CDATA[prototype]]></category>
		<category domain="post_tag" nicename="push"><![CDATA[push]]></category>
		<category domain="post_tag" nicename="queue"><![CDATA[queue]]></category>
		<category domain="post_tag" nicename="refactoring"><![CDATA[refactoring]]></category>
		<category domain="post_tag" nicename="sinatra"><![CDATA[sinatra]]></category>
		<category domain="post_tag" nicename="slider"><![CDATA[slider]]></category>
		<category domain="post_tag" nicename="socket-io"><![CDATA[socket.io]]></category>
		<category domain="post_tag" nicename="startup"><![CDATA[startup]]></category>
		<category domain="post_tag" nicename="theme"><![CDATA[theme]]></category>
		<category domain="post_tag" nicename="this"><![CDATA[this]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for February 23rd through March 1st</title>
		<link>http://gregs.tcias.co.uk/2012/03/02/bookmarks-for-february-23rd-through-march-1st/</link>
		<pubDate>Fri, 02 Mar 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/03/02/bookmarks-for-february-23rd-through-march-1st/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for February 23rd through March 1st:</p>
<ul>
<li><a href="http://github.bagwanpankaj.com/humongous/">Humongous Gem@Github</a> </li>
<li><a href="http://coenraets.org/blog/2012/02/sample-app-with-backbone-js-and-twitter-bootstrap/?utm_source=hackernewsletter&amp;utm_medium=email">Sample App with Backbone.js and Twitter Bootstrap</a> </li>
<li><a href="http://kennethreitz.com/xcode-gcc-and-homebrew.html?utm_source=hackernewsletter&amp;utm_medium=email">Xcode, GCC, and Homebrew</a> </li>
<li><a href="http://samsaffron.com/archive/2012/02/17/stop-paying-your-jquery-tax?utm_source=hackernewsletter&amp;utm_medium=email">Stop paying your jQuery tax</a> </li>
<li><a href="http://www.ibm.com/developerworks/library/j-coffeescript/?utm_source=javascriptweekly&amp;utm_medium=email">Functional JavaScript with CoffeeScript and Node</a> </li>
<li><a href="http://seanhess.github.com/2012/02/20/functional_javascript.html?utm_source=javascriptweekly&amp;utm_medium=email">Learn from Haskell - Functional, Reusable JavaScript</a> </li>
<li><a href="http://mathiasbynens.be/notes/javascript-identifiers?utm_source=javascriptweekly&amp;utm_medium=email">Valid JavaScript variable names &middot; Mathias Bynens</a> </li>
<li><a href="http://gitboxapp.com/">Gitbox &mdash; The version control app on a Mac</a> </li>
<li><a href="http://rubydoc.info/gems/alterego/0.0.3/frames?utm_source=rubyweekly&amp;utm_medium=email">File: README &mdash; Documentation by YARD 0.7.3</a> </li>
<li><a href="http://stevesouders.com/mobileperf/mobileperfbkm.php">Mobile Perf bookmarklet</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1073</wp:post_id>
		<wp:post_date>2012-03-02 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-03-02 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-february-23rd-through-march-1st</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="authentication"><![CDATA[authentication]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="bookmarklet"><![CDATA[bookmarklet]]></category>
		<category domain="post_tag" nicename="brew"><![CDATA[brew]]></category>
		<category domain="post_tag" nicename="database"><![CDATA[database]]></category>
		<category domain="post_tag" nicename="debugging"><![CDATA[debugging]]></category>
		<category domain="post_tag" nicename="defered"><![CDATA[defered]]></category>
		<category domain="post_tag" nicename="functional"><![CDATA[functional]]></category>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="gui"><![CDATA[gui]]></category>
		<category domain="post_tag" nicename="haskell"><![CDATA[haskell]]></category>
		<category domain="post_tag" nicename="installer"><![CDATA[installer]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="loading"><![CDATA[loading]]></category>
		<category domain="post_tag" nicename="management"><![CDATA[management]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[mongodb]]></category>
		<category domain="post_tag" nicename="names"><![CDATA[names]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="two-factor"><![CDATA[two-factor]]></category>
		<category domain="post_tag" nicename="variable"><![CDATA[variable]]></category>
		<category domain="post_tag" nicename="xcode"><![CDATA[xcode]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for March 7th through March 8th</title>
		<link>http://gregs.tcias.co.uk/2012/03/09/bookmarks-for-march-7th-through-march-8th/</link>
		<pubDate>Fri, 09 Mar 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/03/09/bookmarks-for-march-7th-through-march-8th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for March 7th through March 8th:</p>
<ul>
<li><a href="http://radio.uxder.com/?utm_source=javascriptweekly&amp;utm_medium=email">Radio.js | Chainable and Depencency-free Pub/Sub for JavaScript</a> </li>
<li><a href="http://andreehansson.se/the-basics-of-jquery/?utm_source=javascriptweekly&amp;utm_medium=email">The Basics of jQuery &mdash; Andr&eacute;e Hansson</a> </li>
<li><a href="http://badassjs.com/post/18503583619/coffeephysics-a-fast-new-physics-engine-written-in?utm_source=javascriptweekly&amp;utm_medium=email">CoffeePhysics: A Fast New Physics Engine Written in CoffeeScript - Badass JavaScript</a> </li>
<li><a href="http://artemyankov.com/post/18307807152/how-to-find-facebook-users-on-match-com-by-using-face?utm_source=hackernewsletter&amp;utm_medium=email">Artem Yankov - How to Find Facebook Users on Match.com by Using Face Recognition Tools</a> </li>
<li><a href="http://towerjs.org/?utm_source=hackernewsletter&amp;utm_medium=email">Tower.js - Full Stack Web Framework for Node.js and the Browser</a> </li>
<li><a href="http://oesmith.github.com/morris.js/?utm_source=hackernewsletter&amp;utm_medium=email">Morris.js</a> </li>
<li><a href="http://www.submarinecablemap.com/?utm_source=hackernewsletter&amp;utm_medium=email">Submarine Cable Map</a> </li>
<li><a href="https://github.com/sstephenson/brochure">sstephenson/brochure</a> </li>
<li><a href="https://github.com/darcyclarke/Front-end-Developer-Interview-Questions">darcyclarke/Front-end-Developer-Interview-Questions</a> </li>
<li><a href="http://inspectelement.com/tutorials/pull-down-for-navigation-a-responsive-solution/">Pull Down for Navigation - Inspect Element</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1074</wp:post_id>
		<wp:post_date>2012-03-09 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-03-09 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-march-7th-through-march-8th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="application"><![CDATA[application]]></category>
		<category domain="post_tag" nicename="cables"><![CDATA[cables]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="dev"><![CDATA[dev]]></category>
		<category domain="post_tag" nicename="engine"><![CDATA[engine]]></category>
		<category domain="post_tag" nicename="face"><![CDATA[face]]></category>
		<category domain="post_tag" nicename="facebook"><![CDATA[facebook]]></category>
		<category domain="post_tag" nicename="face_detection"><![CDATA[face_detection]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="front-end"><![CDATA[front end]]></category>
		<category domain="post_tag" nicename="graphs"><![CDATA[graphs]]></category>
		<category domain="post_tag" nicename="interview"><![CDATA[interview]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="map"><![CDATA[map]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="nav"><![CDATA[nav]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="physics"><![CDATA[physics]]></category>
		<category domain="post_tag" nicename="prototype"><![CDATA[prototype]]></category>
		<category domain="post_tag" nicename="pubsub"><![CDATA[pub/sub]]></category>
		<category domain="post_tag" nicename="pulldown"><![CDATA[pulldown]]></category>
		<category domain="post_tag" nicename="questions"><![CDATA[questions]]></category>
		<category domain="post_tag" nicename="rack"><![CDATA[rack]]></category>
		<category domain="post_tag" nicename="radio-js"><![CDATA[radio.js]]></category>
		<category domain="post_tag" nicename="raphael"><![CDATA[raphael]]></category>
		<category domain="post_tag" nicename="recognition"><![CDATA[recognition]]></category>
		<category domain="post_tag" nicename="redis"><![CDATA[redis]]></category>
		<category domain="post_tag" nicename="restore"><![CDATA[restore]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="template"><![CDATA[template]]></category>
		<category domain="post_tag" nicename="tower-js"><![CDATA[tower.js]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="world"><![CDATA[World]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for March 14th through March 15th</title>
		<link>http://gregs.tcias.co.uk/2012/03/16/bookmarks-for-march-14th-through-march-15th/</link>
		<pubDate>Fri, 16 Mar 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/03/16/bookmarks-for-march-14th-through-march-15th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for March 14th through March 15th:</p>
<ul>
<li><a href="http://agilityjs.com/">Agility.js Javascript MVC library</a> </li>
<li><a href="http://dailyjs.com/2010/09/30/framework-part-32/">DailyJS: Let's Make a Framework: Node Packaging</a> </li>
<li><a href="http://wekeroad.com/2012/02/25/testing-your-model-with-mocha-mongo-and-nodejs/">Testing Your Model with Mocha, Mongo, and NodeJS | Rob Conery</a> </li>
<li><a href="http://bloggemdano.blogspot.com/2012/02/expectthat-with-coffeescript-zombie.html">Random Ravings of a Red Headed Code Monkey: ExpectThat with CoffeeScript, Zombie, Mocha, and Node</a> </li>
<li><a href="http://blog.james-carr.org/2012/01/16/blog-rolling-with-mongodb-node-js-and-coffeescript/">Blog Rolling with MongoDB, Node.js and Coffeescript | James Carr</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1075</wp:post_id>
		<wp:post_date>2012-03-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-03-16 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-march-14th-through-march-15th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="build"><![CDATA[build]]></category>
		<category domain="post_tag" nicename="coffeescript"><![CDATA[coffeescript]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="jake"><![CDATA[jake]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jsmin"><![CDATA[jsmin]]></category>
		<category domain="post_tag" nicename="mocha"><![CDATA[mocha]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[mongodb]]></category>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="post_tag" nicename="node-jake"><![CDATA[node-jake]]></category>
		<category domain="post_tag" nicename="node-jsmin"><![CDATA[node-jsmin]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="should"><![CDATA[should]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="zombie-js"><![CDATA[zombie.js]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Brilliant: http://t.co/NwxvO3e...</title>
		<link>http://gregs.tcias.co.uk/2012/03/19/brilliant-httpt-conwxvo3e/</link>
		<pubDate>Mon, 19 Mar 2012 10:27:25 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/03/19/brilliant-httpt-conwxvo3e/</guid>
		<description></description>
		<content:encoded><![CDATA[Brilliant: <a href="http://t.co/NwxvO3eL" rel="nofollow">http://t.co/NwxvO3eL</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1076</wp:post_id>
		<wp:post_date>2012-03-19 10:27:25</wp:post_date>
		<wp:post_date_gmt>2012-03-19 10:27:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>brilliant-httpt-conwxvo3e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[181688317883064320]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for March 15th through March 22nd</title>
		<link>http://gregs.tcias.co.uk/2012/03/24/bookmarks-for-march-15th-through-march-22nd/</link>
		<pubDate>Sat, 24 Mar 2012 00:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/03/24/bookmarks-for-march-15th-through-march-22nd/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for March 15th through March 22nd:</p>
<ul>
<li><a href="http://addyosmani.github.com/basket.js/?utm_source=javascriptweekly&amp;utm_medium=email">basket.js - a simple script loader that caches scripts with localStorage</a> </li>
<li><a href="https://github.com/ChiperSoft/Kalendae?utm_source=javascriptweekly&amp;utm_medium=emailjava">ChiperSoft/Kalendae &middot; GitHub</a> </li>
<li><a href="http://www.remotesynthesis.com/post.cfm/50-javascript-html5-frameworks-and-related-tools?utm_source=javascriptweekly&amp;utm_medium=email">50+ JavaScript &amp; HTML5 Frameworks and Related Tools : Remote Synthesis</a> </li>
<li><a href="http://weblogs.asp.net/dwahlin/archive/2012/02/26/jquery-tip-5-using-jquery-s-end-function-to-work-with-sets.aspx?utm_source=javascriptweekly&amp;utm_medium=email">jQuery Tip #5: Using jQuery&rsquo;s end() Function to Work with Sets - Dan Wahlin's WebLog</a> </li>
<li><a href="http://trigger.io/cross-platform-application-development-blog/2012/03/02/how-to-build-fast-html5-mobile-apps-using-backbone-js-zepto-js-and-trigger-io/?utm_source=javascriptweekly&amp;utm_medium=email">How to build fast HTML5 mobile apps using backbone.js, zepto.js and trigger.io &ndash; Cross Platform Dev Blog</a> </li>
<li><a href="http://fortawesome.github.com/Font-Awesome/?utm_source=html5weekly&amp;utm_medium=email">Font Awesome, the iconic font designed for use with Twitter Bootstrap</a> </li>
<li><a href="http://www.youtube.com/playlist?list=PL2CB1F80266E986EA">Sass Tutorials - YouTube</a> </li>
<li><a href="http://designshack.net/articles/css/whats-the-deal-with-display-inline-block/">What&rsquo;s the Deal With Display: Inline-Block? | Design Shack</a> </li>
<li><a href="http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/?utm_source=html5weekly&amp;utm_medium=email">Replacing the -9999px hack (new image replacement) &ndash; Jeffrey Zeldman Presents The Daily Report</a> </li>
<li><a href="http://technotales.wordpress.com/2011/05/21/node-jslint-and-vim/">Node, JSLint and Vim &laquo; Jonathan&rsquo;s Techno-tales</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1077</wp:post_id>
		<wp:post_date>2012-03-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-03-24 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-march-15th-through-march-22nd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="end"><![CDATA[.end()]]></category>
		<category domain="post_tag" nicename="calendar"><![CDATA[calendar]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="fir"><![CDATA[fir]]></category>
		<category domain="post_tag" nicename="float"><![CDATA[float]]></category>
		<category domain="post_tag" nicename="fonts"><![CDATA[fonts]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="iconic"><![CDATA[iconic]]></category>
		<category domain="post_tag" nicename="icons"><![CDATA[icons]]></category>
		<category domain="post_tag" nicename="image-replacement"><![CDATA[image replacement]]></category>
		<category domain="post_tag" nicename="inline-block"><![CDATA[inline-block]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="jslint"><![CDATA[jslint]]></category>
		<category domain="post_tag" nicename="kalendae"><![CDATA[Kalendae]]></category>
		<category domain="post_tag" nicename="list"><![CDATA[list]]></category>
		<category domain="post_tag" nicename="loader"><![CDATA[loader]]></category>
		<category domain="post_tag" nicename="localstorage"><![CDATA[localStorage]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="pictogram"><![CDATA[pictogram]]></category>
		<category domain="post_tag" nicename="sass"><![CDATA[sass]]></category>
		<category domain="post_tag" nicename="scrip"><![CDATA[scrip]]></category>
		<category domain="post_tag" nicename="trigger-io"><![CDATA[trigger.io]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="video"><![CDATA[video]]></category>
		<category domain="post_tag" nicename="widget"><![CDATA[widget]]></category>
		<category domain="post_tag" nicename="youtube"><![CDATA[youtube]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for March 29th from 20:53 to 22:22</title>
		<link>http://gregs.tcias.co.uk/2012/03/31/bookmarks-for-march-29th-from-2053-to-2222/</link>
		<pubDate>Fri, 30 Mar 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/03/31/bookmarks-for-march-29th-from-2053-to-2222/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for March 29th from 20:53 to 22:22:</p>
<ul>
<li><a href="https://github.com/natew/obtvse">NateW/obtvse</a> </li>
<li><a href="http://dcurt.is/codename-svbtle?utm_source=hackernewsletter&amp;utm_medium=email">Codename: Svbtle by Dustin Curtis</a> </li>
<li><a href="http://css-tricks.com/examples/IconFont/?utm_source=hackernewsletter&amp;utm_medium=email">Icon Fonts are Awesome</a> </li>
<li><a href="http://maps.stamen.com/?utm_source=hackernewsletter&amp;utm_medium=email#watercolor/12/51.5041/-0.1253">maps.stamen.com</a> </li>
<li><a href="http://www.pushing-pixels.org/2011/11/04/about-those-vector-icons.html?utm_source=hackernewsletter&amp;utm_medium=email">About those vector icons &middot; Pushing Pixels</a> </li>
<li><a href="http://0xfe.muthanna.com/rubyrefresher/?utm_source=hackernewsletter&amp;utm_medium=email">The Ruby Refresher</a> </li>
<li><a href="http://smoothiecharts.org/?utm_source=hackernewsletter&amp;utm_medium=email">Smoothie Charts</a> </li>
<li><a href="http://jhollingworth.github.com/bootstrap-wysihtml5/?utm_source=hackernewsletter&amp;utm_medium=email">bootstrap-wysihtml5</a> </li>
<li><a href="http://www.ryancollins.me/?p=1041">Pure CSS Clickable Events Without :target</a> </li>
<li><a href="http://www.webdigi.co.uk/blog/2012/using-an-ios-device-to-control-a-game-on-your-browser/?utm_source=html5weekly&amp;utm_medium=email">Using an iOS device to control a game on your browser - PHP, Web and IT stuff</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1078</wp:post_id>
		<wp:post_date>2012-03-31 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-03-30 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-march-29th-from-2053-to-2222</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="target"><![CDATA[:target]]></category>
		<category domain="post_tag" nicename="accelerometer"><![CDATA[accelerometer]]></category>
		<category domain="post_tag" nicename="blog"><![CDATA[blog]]></category>
		<category domain="post_tag" nicename="bootstrap"><![CDATA[bootstrap]]></category>
		<category domain="post_tag" nicename="charts"><![CDATA[charts]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="dropdown"><![CDATA[dropdown]]></category>
		<category domain="post_tag" nicename="editor"><![CDATA[editor]]></category>
		<category domain="post_tag" nicename="events"><![CDATA[events]]></category>
		<category domain="post_tag" nicename="fonts"><![CDATA[fonts]]></category>
		<category domain="post_tag" nicename="graphs"><![CDATA[graphs]]></category>
		<category domain="post_tag" nicename="hci"><![CDATA[hci]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="icon"><![CDATA[icon]]></category>
		<category domain="post_tag" nicename="icons"><![CDATA[icons]]></category>
		<category domain="post_tag" nicename="interface"><![CDATA[interface]]></category>
		<category domain="post_tag" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="knowledge"><![CDATA[knowledge]]></category>
		<category domain="post_tag" nicename="maps"><![CDATA[maps]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="obtvse"><![CDATA[obtvse]]></category>
		<category domain="post_tag" nicename="openstreetmap"><![CDATA[openstreetmap]]></category>
		<category domain="post_tag" nicename="platform"><![CDATA[platform]]></category>
		<category domain="post_tag" nicename="refresher"><![CDATA[refresher]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="socket-io"><![CDATA[socket.io]]></category>
		<category domain="post_tag" nicename="streaming"><![CDATA[streaming]]></category>
		<category domain="post_tag" nicename="svbtle"><![CDATA[svbtle]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="types"><![CDATA[types]]></category>
		<category domain="post_tag" nicename="vector"><![CDATA[vector]]></category>
		<category domain="post_tag" nicename="watercolour"><![CDATA[watercolour]]></category>
		<category domain="post_tag" nicename="writing"><![CDATA[writing]]></category>
		<category domain="post_tag" nicename="wysiwyg"><![CDATA[wysiwyg]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I just uploaded &quot;James on the ...</title>
		<link>http://gregs.tcias.co.uk/2012/04/01/i-just-uploaded-james-on-the/</link>
		<pubDate>Sun, 01 Apr 2012 15:51:36 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/04/01/i-just-uploaded-james-on-the/</guid>
		<description></description>
		<content:encoded><![CDATA[I just uploaded "James on the trampoline" on Vimeo: <a href="http://t.co/rDAVpRmu" rel="nofollow">http://t.co/rDAVpRmu</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1079</wp:post_id>
		<wp:post_date>2012-04-01 16:51:36</wp:post_date>
		<wp:post_date_gmt>2012-04-01 15:51:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-just-uploaded-james-on-the</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[186480946105692160]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for April 9th through April 18th</title>
		<link>http://gregs.tcias.co.uk/2012/04/19/bookmarks-for-april-9th-through-april-18th/</link>
		<pubDate>Wed, 18 Apr 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/04/19/bookmarks-for-april-9th-through-april-18th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for April 9th through April 18th:</p>
<ul>
<li><a href="http://locachejs.org/">locache.js</a> </li>
<li><a href="http://ffffallback.com/">FFFFALLBACK - A simple tool for bulletproof web typography.</a> </li>
<li><a href="http://fontsinuse.com/">Fonts In Use &ndash; Type at work in the real world.</a> </li>
<li><a href="http://webtreats.mysitemyway.com/category/photoshop-resources/patterns/page/4/">Patterns | WebTreats ETC - Part 4</a> </li>
<li><a href="https://developer.mozilla.org/fr/demos/detail/the-box/launch">The Box | Demo Studio | Mozilla Developer Network</a> </li>
<li><a href="http://gun.io/blog/how-to-github-fork-branch-and-pull-request/">How to GitHub: Fork, Branch, Track, Squash and Pull Request - Gun.io</a> </li>
<li><a href="http://browserquest.mozilla.org/">BrowserQuest</a> </li>
<li><a href="http://hint.fm/wind/">Wind Map</a> </li>
<li><a href="http://evanmiller.org/how-not-to-sort-by-average-rating.html">How Not To Sort By Average Rating</a> </li>
<li><a href="http://www.lukew.com/ff/entry.asp?1514">LukeW | Multi-Device Layout Patterns</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1080</wp:post_id>
		<wp:post_date>2012-04-19 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-04-18 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-april-9th-through-april-18th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="post_tag" nicename="algorithm"><![CDATA[algorithm]]></category>
		<category domain="post_tag" nicename="background"><![CDATA[background]]></category>
		<category domain="post_tag" nicename="backgrounds"><![CDATA[backgrounds]]></category>
		<category domain="post_tag" nicename="branch"><![CDATA[branch]]></category>
		<category domain="post_tag" nicename="browser"><![CDATA[browser]]></category>
		<category domain="post_tag" nicename="cache"><![CDATA[cache]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="fallback"><![CDATA[fallback]]></category>
		<category domain="post_tag" nicename="fonts"><![CDATA[fonts]]></category>
		<category domain="post_tag" nicename="fork"><![CDATA[Fork]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[Github]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[howto]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="inspiration"><![CDATA[inspiration]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="layout"><![CDATA[layout]]></category>
		<category domain="post_tag" nicename="localstorage"><![CDATA[localStorage]]></category>
		<category domain="post_tag" nicename="map"><![CDATA[map]]></category>
		<category domain="post_tag" nicename="mmo"><![CDATA[mmo]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="pattern"><![CDATA[pattern]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="ranking"><![CDATA[ranking]]></category>
		<category domain="post_tag" nicename="rating"><![CDATA[rating]]></category>
		<category domain="post_tag" nicename="rebase"><![CDATA[rebase]]></category>
		<category domain="post_tag" nicename="responsive"><![CDATA[responsive]]></category>
		<category domain="post_tag" nicename="rpg"><![CDATA[rpg]]></category>
		<category domain="post_tag" nicename="sorting"><![CDATA[sorting]]></category>
		<category domain="post_tag" nicename="sprite3d"><![CDATA[sprite3d]]></category>
		<category domain="post_tag" nicename="statistics"><![CDATA[statistics]]></category>
		<category domain="post_tag" nicename="tools"><![CDATA[tools]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<category domain="post_tag" nicename="visualisation"><![CDATA[visualisation]]></category>
		<category domain="post_tag" nicename="visualization"><![CDATA[visualization]]></category>
		<category domain="post_tag" nicename="wind"><![CDATA[wind]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for April 24th from 21:59 to 23:33</title>
		<link>http://gregs.tcias.co.uk/2012/04/26/bookmarks-for-april-24th-from-2159-to-2333/</link>
		<pubDate>Wed, 25 Apr 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/04/26/bookmarks-for-april-24th-from-2159-to-2333/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for April 24th from 21:59 to 23:33:</p>
<ul>
<li><a href="http://clear.youyuxi.com/">HTML5 Clear</a> </li>
<li><a href="https://github.com/zynga/viewporter">zynga/viewporter &middot; GitHub</a> </li>
<li><a href="https://developers.facebook.com/html5/blog/post/2012/04/17/making-a-speedy-html5-game/?utm_source=html5weekly&amp;utm_medium=email">Making a Speedy HTML5 Game - Facebook Developers</a> </li>
<li><a href="https://developers.google.com/chrome-developer-tools/docs/scripts-breakpoints?utm_source=html5weekly&amp;utm_medium=email">Chrome Developer Tools: Breakpoints - Chrome Developer Tools &mdash; Google Developers</a> </li>
<li><a href="http://html5test.com/">The HTML5 test - How well does your browser support HTML5?</a> </li>
<li><a href="http://jtaby.com/2012/04/23/modern-web-development-part-1.html">Modern Web Development</a> </li>
<li><a href="http://paulirish.com/2011/dom-html5-css3-performance/">DOM, HTML5, &amp; CSS3 Performance &laquo; Paul Irish</a> </li>
<li><a href="http://www.webkitbits.com/post/20911443176/webkit-filter-is-the-new-hotness-and-its-coming?utm_source=html5weekly&amp;utm_medium=email">-webkit-filter is the new hotness, and it&rsquo;s coming... &mdash; WebKitbits</a> </li>
<li><a href="http://blog.joshsoftware.com/2012/04/12/real-time-games-using-html5-websockets-nodejs-and-socket-io/?utm_source=html5weekly&amp;utm_medium=email">Real-time Games using HTML5, WebSockets, nodejs and socket.io | Josh Software &ndash; Where Programming is an Art!</a> </li>
<li><a href="http://buildnewgames.com/mobile-game-primer/?utm_source=html5weekly&amp;utm_medium=email">Mobile Game Primer - Build New Games</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1081</wp:post_id>
		<wp:post_date>2012-04-26 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-04-25 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-april-24th-from-2159-to-2333</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="breakpoints"><![CDATA[breakpoints]]></category>
		<category domain="post_tag" nicename="browser"><![CDATA[browser]]></category>
		<category domain="post_tag" nicename="ccs3"><![CDATA[ccs3]]></category>
		<category domain="post_tag" nicename="chrome"><![CDATA[chrome]]></category>
		<category domain="post_tag" nicename="comparison"><![CDATA[comparison]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="demo"><![CDATA[demo]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="dom"><![CDATA[dom]]></category>
		<category domain="post_tag" nicename="facebook"><![CDATA[facebook]]></category>
		<category domain="post_tag" nicename="filter"><![CDATA[filter]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="inspector"><![CDATA[inspector]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="overview"><![CDATA[overview]]></category>
		<category domain="post_tag" nicename="paul-irish"><![CDATA[paul irish]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[performance]]></category>
		<category domain="post_tag" nicename="redis"><![CDATA[redis]]></category>
		<category domain="post_tag" nicename="reporting"><![CDATA[reporting]]></category>
		<category domain="post_tag" nicename="socket-io"><![CDATA[socket.io]]></category>
		<category domain="post_tag" nicename="test"><![CDATA[test]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="viewport"><![CDATA[viewport]]></category>
		<category domain="post_tag" nicename="viewporter"><![CDATA[viewporter]]></category>
		<category domain="post_tag" nicename="webkit"><![CDATA[webkit]]></category>
		<category domain="post_tag" nicename="zynga"><![CDATA[zynga]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for April 24th through April 29th</title>
		<link>http://gregs.tcias.co.uk/2012/04/30/bookmarks-for-april-24th-through-april-29th/</link>
		<pubDate>Sun, 29 Apr 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/04/30/bookmarks-for-april-24th-through-april-29th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for April 24th through April 29th:</p>
<ul>
<li><a href="https://devcenter.heroku.com/articles/realtime-polyglot-app-node-ruby-mongodb-socketio">Building a Real-time, Polyglot Application with Node.js, Ruby, MongoDB and Socket.IO | Heroku Dev Center</a> </li>
<li><a href="https://github.com/styleguide/ruby?utm_source=rubyweekly&amp;utm_medium=email">Ruby &middot; Styleguide</a> </li>
<li><a href="http://blog.carbonfive.com/2012/03/18/how-to-test-external-apis/?utm_source=rubyweekly&amp;utm_medium=email">How to Test External APIs | The Carbon Emitter</a> </li>
<li><a href="https://github.com/adamdbradley/foresight.js?utm_source=html5weekly&amp;utm_medium=email">adamdbradley/foresight.js</a> </li>
<li><a href="http://dabblet.com/gist/2076449?utm_source=html5weekly&amp;utm_medium=email">CSS States ✿ dabblet.com</a> </li>
<li><a href="http://www.clicktorelease.com/code/css3dclouds/#?utm_source=html5weekly&amp;utm_medium=email">CSS 3D Clouds</a> </li>
<li><a href="http://www.dllu.net/pong/?utm_source=html5weekly&amp;utm_medium=email">DLLU::Electric Potential Pong</a> </li>
<li><a href="https://developers.google.com/chrome/mobile/docs/debugging">Remote Debugging - Google Chrome for Android &mdash; Google Developers</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1093</wp:post_id>
		<wp:post_date>2012-04-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-04-29 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-april-24th-through-april-29th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="post_tag" nicename="api"><![CDATA[api]]></category>
		<category domain="post_tag" nicename="architecture"><![CDATA[architecture]]></category>
		<category domain="post_tag" nicename="chrome"><![CDATA[chrome]]></category>
		<category domain="post_tag" nicename="clouds"><![CDATA[clouds]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="debugging"><![CDATA[debugging]]></category>
		<category domain="post_tag" nicename="foresight-js"><![CDATA[foresight.js]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[Github]]></category>
		<category domain="post_tag" nicename="high"><![CDATA[high]]></category>
		<category domain="post_tag" nicename="high-resolution"><![CDATA[high-resolution]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="images"><![CDATA[images]]></category>
		<category domain="post_tag" nicename="infinite"><![CDATA[infinite]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[mongodb]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="pong"><![CDATA[pong]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="remote"><![CDATA[remote]]></category>
		<category domain="post_tag" nicename="resolution"><![CDATA[resolution]]></category>
		<category domain="post_tag" nicename="rspec"><![CDATA[rspec]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="socket-io"><![CDATA[socket.io]]></category>
		<category domain="post_tag" nicename="styleguide"><![CDATA[styleguide]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="transitions"><![CDATA[transitions]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for May 3rd from 22:01 to 22:45</title>
		<link>http://gregs.tcias.co.uk/2012/05/04/bookmarks-for-may-3rd-from-2201-to-2245/</link>
		<pubDate>Thu, 03 May 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/05/04/bookmarks-for-may-3rd-from-2201-to-2245/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for May 3rd from 22:01 to 22:45:</p>
<ul>
<li><a href="http://timeline.verite.co/#embed">Timeline</a> </li>
<li><a href="http://webdesign.tutsplus.com/tutorials/site-elements/orman-clarks-vertical-navigation-menu-the-css3-version/">Orman Clark&rsquo;s Vertical Navigation Menu: The CSS3 Version | Webdesigntuts+</a> </li>
<li><a href="http://webdesigntutsplus.s3.amazonaws.com/tuts/291_vertical_menu/demo/index.html">Vertical Navigation Menu: CSS3 Coded</a> </li>
<li><a href="http://luis-almeida.github.com/filtrify/?utm_source=javascriptweekly&amp;utm_medium=email">Filtrify</a> </li>
<li><a href="http://siong1987.com/posts/introducting-backbone-routes/?utm_source=javascriptweekly&amp;utm_medium=email">Introducing Backbone Routes</a> </li>
<li><a href="http://js1k.com/2012-love/demo/1282">JS1k, 1k demo submission [1282]</a> </li>
<li><a href="http://manuel.kiessling.net/2012/04/02/tutorial-developing-html5-canvas-games-for-facebook-with-javascript-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">Tutorial: Developing HTML5 Canvas Games for Facebook with JavaScript &ndash; Part 1 &raquo; The Log Book of Manuel Kiessling</a> </li>
<li><a href="http://anders.janmyr.com/2012/04/writing-node-module.html?utm_source=javascriptweekly&amp;utm_medium=email">The Tapir's Tale: Writing a Node Module</a> </li>
<li><a href="http://www.websanova.com/tutorials/javascript/extending-javascript-the-right-way?utm_source=javascriptweekly&amp;utm_medium=email">Extending JavaScript &ndash; The Right Way | Websanova</a> </li>
<li><a href="http://developer.yahoo.com/blogs/ydn/posts/2012/04/yahoo%E2%80%99s-mojito-is-now-open-source/?utm_source=javascriptweekly&amp;utm_medium=email">Yahoo!&rsquo;s Mojito is Now Open Source &middot; YDN Blog</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1098</wp:post_id>
		<wp:post_date>2012-05-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-05-03 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-may-3rd-from-2201-to-2245</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aggregator"><![CDATA[aggregator]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="canvas"><![CDATA[canvas]]></category>
		<category domain="post_tag" nicename="ci"><![CDATA[ci]]></category>
		<category domain="post_tag" nicename="client"><![CDATA[client]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="extending"><![CDATA[extending]]></category>
		<category domain="post_tag" nicename="filtering"><![CDATA[filtering]]></category>
		<category domain="post_tag" nicename="flickr"><![CDATA[flickr]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="inspiration"><![CDATA[inspiration]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="js1k"><![CDATA[js1k]]></category>
		<category domain="post_tag" nicename="menu"><![CDATA[menu]]></category>
		<category domain="post_tag" nicename="minecraft"><![CDATA[minecraft]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="mochito"><![CDATA[mochito]]></category>
		<category domain="post_tag" nicename="module"><![CDATA[module]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="npm"><![CDATA[npm]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="post_tag" nicename="routes"><![CDATA[routes]]></category>
		<category domain="post_tag" nicename="server"><![CDATA[server]]></category>
		<category domain="post_tag" nicename="timeline"><![CDATA[timeline]]></category>
		<category domain="post_tag" nicename="travis"><![CDATA[travis]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<category domain="post_tag" nicename="vimeo"><![CDATA[vimeo]]></category>
		<category domain="post_tag" nicename="yahoo"><![CDATA[yahoo]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Swipe zepto port</title>
		<link>http://gregs.tcias.co.uk/2012/05/03/swipe-zepto-port/</link>
		<pubDate>Thu, 03 May 2012 22:02:58 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1099</guid>
		<description></description>
		<content:encoded><![CDATA[After many moons and a series of Postalicious links, finally a blog post! Over Easter, I stumbled across a <a href="https://github.com/torkiljohnsen/swipe">swipe library</a> that allows you to create a swipe-able interface a la Path. Since I am working quite a bit with <a href="http://zeptojs.com/">ZeptoJS</a> these days I had a stab at porting it over. You can find my fork <a href="https://github.com/gregstewart/swipe">here</a>. 

<a href="http://www.torkiljohnsen.com/">Torkil</a> has kindly merged some of the changes I have into his repo. Go check out Torkil's work, it's pretty awesome! ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1099</wp:post_id>
		<wp:post_date>2012-05-03 23:02:58</wp:post_date>
		<wp:post_date_gmt>2012-05-03 22:02:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swipe-zepto-port</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="github"><![CDATA[Github]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Started reading Mobile First (...</title>
		<link>http://gregs.tcias.co.uk/2012/05/05/started-reading-mobile-first/</link>
		<pubDate>Sat, 05 May 2012 12:43:23 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/05/05/started-reading-mobile-first/</guid>
		<description></description>
		<content:encoded><![CDATA[Started reading Mobile First (<a href="http://t.co/CrreFoXE" rel="nofollow">http://t.co/CrreFoXE</a>) (at Raynes Park, London) — <a href="http://t.co/S1a34Nkh" rel="nofollow">http://t.co/S1a34Nkh</a> ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1104</wp:post_id>
		<wp:post_date>2012-05-05 13:43:23</wp:post_date>
		<wp:post_date_gmt>2012-05-05 12:43:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>started-reading-mobile-first</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[198754767558819840]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for May 6th from 22:38 to 23:12</title>
		<link>http://gregs.tcias.co.uk/2012/05/07/bookmarks-for-may-6th-from-2238-to-2312/</link>
		<pubDate>Sun, 06 May 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/05/07/bookmarks-for-may-6th-from-2238-to-2312/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for May 6th from 22:38 to 23:12:</p>
<ul>
<li><a href="http://delicious.com/developers">Delicious.com - Discover Yourself!</a> </li>
<li><a href="http://develop.github.com/">Develop.GitHub - Home</a> </li>
<li><a href="https://github.com/hanklords/flickraw">hanklords/flickraw</a> </li>
<li><a href="http://www.flickr.com/services/api/">Flickr Services</a> </li>
<li><a href="https://github.com/seejohnrun/google_plus">seejohnrun/google_plus</a> </li>
<li><a href="https://developers.google.com/+/api/">Google+ API - Google+ Platform &mdash; Google Developers</a> </li>
<li><a href="http://www.foodspotting.com/api">Foodspotting | API Documentation</a> </li>
<li><a href="https://github.com/soundcloud/ruby-api-wrapper/wiki">Soundcloud Ruby API Wrapper &middot; soundcloud/ruby-api-wrapper Wiki</a> </li>
<li><a href="http://developers.soundcloud.com/">SoundCloud Developers</a> </li>
<li><a href="https://github.com/jnunemaker/twitter">jnunemaker/twitter</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1105</wp:post_id>
		<wp:post_date>2012-05-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-05-06 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-may-6th-from-2238-to-2312</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="api"><![CDATA[api]]></category>
		<category domain="post_tag" nicename="delicious"><![CDATA[delicious]]></category>
		<category domain="post_tag" nicename="flickr"><![CDATA[flickr]]></category>
		<category domain="post_tag" nicename="foodspotting"><![CDATA[foodspotting]]></category>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[Github]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="soundcloud"><![CDATA[soundcloud]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for May 13th through May 15th</title>
		<link>http://gregs.tcias.co.uk/2012/05/16/bookmarks-for-may-13th-through-may-15th/</link>
		<pubDate>Tue, 15 May 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/05/16/bookmarks-for-may-13th-through-may-15th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for May 13th through May 15th:</p>
<ul>
<li><a href="http://www.igvita.com/2012/04/09/driving-google-chrome-via-websocket-api/?utm_source=rubyweekly&amp;utm_medium=email">Driving Google Chrome via WebSocket API - igvita.com</a> </li>
<li><a href="http://www.thomashardy.me.uk/using-html5-localstorage-on-a-form?utm_source=html5weekly&amp;utm_medium=email">Using HTML5 localStorage on a form | Thomas Hardy - Web Developer</a> </li>
<li><a href="http://retinajs.com/?utm_source=html5weekly&amp;utm_medium=email">Retina.js | Retina graphics for your website</a> </li>
<li><a href="http://dh.karelia.com/retina/?utm_source=html5weekly&amp;utm_medium=email">Compression Tester</a> </li>
<li><a href="http://cssarrowplease.com/?utm_source=html5weekly&amp;utm_medium=email">cssarrowplease</a> </li>
<li><a href="http://www.luxanimals.com/blog/article/combining_easel_box2d?utm_source=html5weekly&amp;utm_medium=email">Luxurious Animals&reg; Blog - Combining Easel.js and Box2d in Canvas</a> </li>
<li><a href="http://blogs.msdn.com/b/davrous/archive/2012/04/06/modernizing-your-html5-canvas-games-with-offline-apis-file-apis-css3-amp-hardware-scaling.aspx?utm_source=html5weekly&amp;utm_medium=email">Modernizing your HTML5 Canvas games Part 1: hardware scaling &amp; CSS3 - David Rousset - Site Home - MSDN Blogs</a> </li>
<li><a href="http://www.paulund.co.uk/css3-animated-media-queries?utm_source=html5weekly&amp;utm_medium=email">CSS3 Animated Media Queries</a> </li>
<li><a href="http://pragmaticstudio.com/screencasts/rubymotion?utm_source=rubyweekly&amp;utm_medium=email">The Pragmatic Studio | RubyMotion Screencast</a> </li>
<li><a href="http://www.mikeperham.com/2012/05/05/five-common-rails-mistakes/?utm_source=rubyweekly&amp;utm_medium=email">Five Common Rails Mistakes | Mike Perham</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1112</wp:post_id>
		<wp:post_date>2012-05-16 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-05-15 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-may-13th-through-may-15th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="animated"><![CDATA[animated]]></category>
		<category domain="post_tag" nicename="arrows"><![CDATA[arrows]]></category>
		<category domain="post_tag" nicename="box2d"><![CDATA[box2d]]></category>
		<category domain="post_tag" nicename="bubble"><![CDATA[bubble]]></category>
		<category domain="post_tag" nicename="bubbles"><![CDATA[bubbles]]></category>
		<category domain="post_tag" nicename="canvas"><![CDATA[canvas]]></category>
		<category domain="post_tag" nicename="chrome"><![CDATA[chrome]]></category>
		<category domain="post_tag" nicename="code"><![CDATA[code]]></category>
		<category domain="post_tag" nicename="code-review"><![CDATA[code review]]></category>
		<category domain="post_tag" nicename="compression"><![CDATA[compression]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="debugging"><![CDATA[debugging]]></category>
		<category domain="post_tag" nicename="dev"><![CDATA[dev]]></category>
		<category domain="post_tag" nicename="easel-js"><![CDATA[easel.js]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="ipad"><![CDATA[ipad]]></category>
		<category domain="post_tag" nicename="iphone"><![CDATA[iphone]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="localstorage"><![CDATA[localStorage]]></category>
		<category domain="post_tag" nicename="media-queries"><![CDATA[media queries]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="remote"><![CDATA[remote]]></category>
		<category domain="post_tag" nicename="retina"><![CDATA[retina]]></category>
		<category domain="post_tag" nicename="retina-js"><![CDATA[retina.js]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="rubymotion"><![CDATA[RubyMotion]]></category>
		<category domain="post_tag" nicename="speech"><![CDATA[speech]]></category>
		<category domain="post_tag" nicename="tester"><![CDATA[tester]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="watch-later"><![CDATA[watch later]]></category>
		<category domain="post_tag" nicename="websockets"><![CDATA[WebSockets]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I just liked &quot;2011/03 Mike Mon...</title>
		<link>http://gregs.tcias.co.uk/2012/05/23/i-just-liked-201103-mike-mon/</link>
		<pubDate>Wed, 23 May 2012 08:24:27 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/05/23/i-just-liked-201103-mike-mon/</guid>
		<description></description>
		<content:encoded><![CDATA[I just liked "2011/03 Mike Monteiro | F*ck You. Pay Me." on Vimeo: <a href="http://t.co/SF51BvEe" rel="nofollow">http://t.co/SF51BvEe</a> ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1115</wp:post_id>
		<wp:post_date>2012-05-23 09:24:27</wp:post_date>
		<wp:post_date_gmt>2012-05-23 08:24:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-just-liked-201103-mike-mon</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[205212585526697984]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for May 16th through May 18th</title>
		<link>http://gregs.tcias.co.uk/2012/05/24/bookmarks-for-may-16th-through-may-18th/</link>
		<pubDate>Wed, 23 May 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/05/24/bookmarks-for-may-16th-through-may-18th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for May 16th through May 18th:</p>
<ul>
<li><a href="http://blog.firmhouse.com/complete-guide-to-serving-your-rails-assets-over-s3-with-asset_sync?utm_source=rubyweekly&amp;utm_medium=email">Complete guide to serving your Rails assets over S3 with asset_sync &mdash; Firmhouse Blog</a> </li>
<li><a href="http://42floors.com/blog/posts/user-authentication-with-rails-and-backbone-js?utm_source=rubyweekly&amp;utm_medium=email">User Authentication with Rails and Backbone.js - Find Office Space - 42Floors</a> </li>
<li><a href="http://dublintech.blogspot.co.uk/2012/04/javascript-language-z-cheat-sheet.html?utm_source=javascriptweekly&amp;utm_medium=email">Dublin Tech: JavaScript language a- z cheat sheet</a> </li>
<li><a href="http://www.meteor.com/main">Meteor</a> </li>
<li><a href="http://carlosaguayo.posterous.com/html5-localstorage-events-cross-window-messag?utm_source=html5weekly&amp;utm_medium=email">Cross Window Messaging with HTML5 LocalStorage Events - Carlos Aguayo's Space</a> </li>
<li><a href="http://uxdesign.smashingmagazine.com/2012/04/10/ui-patterns-for-mobile-apps-search-sort-filter/m">UI Patterns For Mobile Apps: Search, Sort And Filter | Smashing UX Design</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1116</wp:post_id>
		<wp:post_date>2012-05-24 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-05-23 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-may-16th-through-may-18th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="amazon"><![CDATA[amazon]]></category>
		<category domain="post_tag" nicename="assets"><![CDATA[assets]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="cheatsheet"><![CDATA[cheatsheet]]></category>
		<category domain="post_tag" nicename="cross"><![CDATA[cross]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="inspiration"><![CDATA[inspiration]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="localstorage"><![CDATA[localStorage]]></category>
		<category domain="post_tag" nicename="messaging"><![CDATA[messaging]]></category>
		<category domain="post_tag" nicename="meteor"><![CDATA[meteor]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="patterns"><![CDATA[patterns]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="realtime"><![CDATA[realtime]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="s3"><![CDATA[s3]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="window"><![CDATA[window]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for May 30th through June 6th</title>
		<link>http://gregs.tcias.co.uk/2012/06/07/bookmarks-for-may-30th-through-june-6th/</link>
		<pubDate>Wed, 06 Jun 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/06/07/bookmarks-for-may-30th-through-june-6th/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for May 30th through June 6th:</p>
<ul>
<li><a href="http://creativejs.com/resources/requestanimationframe/?utm_source=javascriptweekly&amp;utm_medium=email">requestAnimationFrame | CreativeJS</a> </li>
<li><a href="http://peter.michaux.ca/articles/mixins-and-constructor-functions?utm_source=javascriptweekly&amp;utm_medium=email">peter.michaux.ca - Mixins and Constructor Functions</a> </li>
<li><a href="https://devcenter.heroku.com/articles/ios-photo-sharing-geo-location-service?utm_source=rubyweekly&amp;utm_medium=email">Building an iOS Photo-sharing and Geolocation Mobile Client and API | Heroku Dev Center</a> </li>
<li><a href="http://railsapps.github.com/tutorial-rails-bootstrap-devise-cancan.html?utm_source=rubyweekly&amp;utm_medium=email">tutorial rails bootstrap devise cancan &middot; RailsApps</a> </li>
<li><a href="http://inspiredm.com/mobile-a-serious-contender-to-the-desktop-computer/">Mobile: A Serious Contender to the Desktop Computer | Inspired Magazine</a> </li>
<li><a href="http://blizzard.github.com/api-wow-docs/">Blizzard Community Platform API Documentation</a> </li>
<li><a href="http://tinnedfruit.com/2011/03/03/testing-backbone-apps-with-jasmine-sinon.html">Testing Backbone applications with Jasmine and Sinon &ndash; Part 1 &ndash; Tinned Fruit</a> </li>
<li><a href="http://liquidmedia.ca/blog/2011/02/backbone-js-part-3/">An Intro to Backbone.js: Part 3 &ndash; Binding a Collection to a View - Liquid Media</a> </li>
<li><a href="http://tinnedfruit.com/2011/03/25/testing-backbone-apps-with-jasmine-sinon-2.html">Testing Backbone applications with Jasmine and Sinon &ndash; Part 2. Models and Collections &ndash; Tinned Fruit</a> </li>
<li><a href="http://www.knockmeout.net/2011/08/simplifying-and-cleaning-up-views-in.html">Simplifying and cleaning up views in KnockoutJS - Knock Me Out</a> </li>

</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1117</wp:post_id>
		<wp:post_date>2012-06-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-06-06 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-may-30th-through-june-6th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="post_tag" nicename="api"><![CDATA[api]]></category>
		<category domain="post_tag" nicename="armory"><![CDATA[armory]]></category>
		<category domain="post_tag" nicename="authentication"><![CDATA[authentication]]></category>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="best-practice"><![CDATA[best practice]]></category>
		<category domain="post_tag" nicename="blizzard"><![CDATA[blizzard]]></category>
		<category domain="post_tag" nicename="bootstrap"><![CDATA[bootstrap]]></category>
		<category domain="post_tag" nicename="cancan"><![CDATA[cancan]]></category>
		<category domain="post_tag" nicename="devise"><![CDATA[devise]]></category>
		<category domain="post_tag" nicename="heroku"><![CDATA[heroku]]></category>
		<category domain="post_tag" nicename="ios"><![CDATA[ios]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="knockout-js"><![CDATA[knockout.js]]></category>
		<category domain="post_tag" nicename="mixins"><![CDATA[mixins]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="observables"><![CDATA[observables]]></category>
		<category domain="post_tag" nicename="observer"><![CDATA[observer]]></category>
		<category domain="post_tag" nicename="pattern"><![CDATA[pattern]]></category>
		<category domain="post_tag" nicename="photo"><![CDATA[photo]]></category>
		<category domain="post_tag" nicename="raf"><![CDATA[raf]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="requestanimationframe"><![CDATA[requestAnimationFrame]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="sharing"><![CDATA[sharing]]></category>
		<category domain="post_tag" nicename="sinon-js"><![CDATA[sinon.js]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>backbone-jasmine</title>
		<link>http://gregs.tcias.co.uk/2012/06/25/backbone-jasmine/</link>
		<pubDate>Sun, 24 Jun 2012 23:08:38 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1118</guid>
		<description></description>
		<content:encoded><![CDATA[<p>More for my own sanity than anything else, I'll be building up a simple interface, that will query an API and display the results in a view. The process will involve writing a test in Jasmine and then writing some code to make it pass.</p>

<p>The idea is that there will be a:</p>

<ul>
<li>Search View</li>
<li>Search Model</li>
<li>A List View</li>
<li>A List collection</li>
<li>A Result/List Item that will form part of the List Collection</li>
<li>Some routes to bind the two views together</li>
</ul>

<h2>Set-up</h2>

<p>To get started everything is in the setup branch. I have also included a simple node https server to serve up the the SpecRunner file (running on http://localhost:3000), a few helper libraries (jasmine-jquery and jasmine-sinon) with additional matchers.</p>

<h2>Search form</h2>

<p>Basically I intend to hit the blizzard API to retrieve the feed of a given character on a given realm. To start off let's create a search view and get started with a really basic test to load a fixture and make sure it's been been loaded (<a href="https://github.com/gregstewart/backbone-jasmine/commit/de9247810ec74ab647f61258f955843651f99800">see commit</a>).</p>

<p>Next let's set up Backbone.js to bind to that fixture. It's a good idea to namespace your JS, so we'll introduce a BackboneJasmine namespace for all of the code. This is now a global variable, so the gobal namespace checker will complain, so we need to update the globalNameSpaceChecker.spec.js file to allow this variable.</p>

<p>Next we can go ahead and create our search view (<a href="https://github.com/gregstewart/backbone-jasmine/commit/dc4ad52fb76a78a75324ce2b5440ee5ba84724c1">see commit</a>).</p>

<pre><code>beforeEach(function () {
    loadFixtures('search-form.html')
    this.view = new BackboneJasmine.SearchView();
});

it('should load a fixture', function () {
    expect($('section.search-form')).toExist();
});

describe('instantiation', function () {

    it('should create search container', function () {
        expect(this.view.el.nodeName).toEqual('SECTION');
    });
});
</code></pre>

<p>Right now there's a blank container, time to add some form fields. It would be nice to bind these fields to a model and set some default values. Furthermore at a later stage the model will be used to validate the field values. Let's put some tests around creating a Search View Model, instantiating it with some default values. Here's the test code:</p>

<pre><code>beforeEach(function() {
   this.model = new BackboneJasmine.SearchModel();
});

it('should instantiate', function() {
    expect(this.model.get('characterName')).toBe('Artaios');
    expect(this.model.get('realm')).toBe('Aman\'thul');
});
</code></pre>

<p>Time to build up the SearchModel and make sure it instantiates with sensible defaults (see SearchModel.js for <a href="https://github.com/gregstewart/backbone-jasmine/commit/8f65bebc21aadc613cff3e37d7a83e917fa4e1f0">commit</a>).</p>

<p>Backbone has a validate() method, that gets called whenever an attribute is set or the model is saved. This in turn triggers an error event when things aren't quite right. So let's try and put it to use and write some tests around not being able to set an empty character and realm.</p>

<pre><code>describe('validation', function () {

    beforeEach(function () {
        this.errorEventSpy = sinon.spy();
        this.model.bind('error', this.errorEventSpy);

        this.changeEventSpy = sinon.spy();
        this.model.bind('change', this.changeEventSpy);
    });

    it('should not allow an empty character name', function() {
        this.model.set({characterName: ''});

        expect(this.changeEventSpy).not.toHaveBeenCalled();
        expect(this.errorEventSpy).toHaveBeenCalled();
        expect(this.model.get('characterName')).toBe(this.characterName);
    });

    it('should not allow an empty realm name', function() {
        this.model.set({realm: ''});

        expect(this.changeEventSpy).not.toHaveBeenCalled();
        expect(this.errorEventSpy).toHaveBeenCalled();
        expect(this.model.get('realm')).toBe(this.realm);
    });
});
</code></pre>

<p>I am using <a href="http://sinonjs.org/">sinon</a> for spying in these examples and I have also pulled in a bunch of <a href="https://github.com/froots/jasmine-sinon">custom matchers</a>. The code to help the tests pass can found @ <a href="https://github.com/gregstewart/backbone-jasmine/commit/89e9e320c10f45c238dd574427840ca41ddb7f4e">commit</a>.</p>

<p>Time to hook the code into back into the View Model, let's start by taking the default values from the model and putting into the view. Here's the test code:</p>

<pre><code>it('should populate the form fields with values from the model', function() {
   expect($('#characterName').val()).toBe(this.view.model.get('characterName'));
   expect($('#realm').val()).toBe(this.view.model.get('realm'));
});
</code></pre>

<p>The code to make this test pass can be found <a href="https://github.com/gregstewart/backbone-jasmine/commit/eeebc6eb515eddb8e6f7aada4237819bfa2161c9">here</a></p>

<p>With some basic validation in place, it's time to return to the view and write some tests around saving values set in the view back to the model and also make sure the validation is triggered.</p>

<pre><code>describe('saving values back to the model', function() {

    it('should save entered values back to our model', function() {
        var name = 'Some name',
            realm = 'Some realm';

        $('#characterName').val(name);
        $('#realm').val(realm);

        $('button').trigger('click');

        expect(this.view.model.get('characterName')).toBe(name);
        expect(this.view.model.get('realm')).toBe(realm);
    });

});
</code></pre>

<p>Now write some code to make the test pass, by first binding an event to a click action which calls a method to set the values in the model <a href="https://github.com/gregstewart/backbone-jasmine/commit/11b26e0">here</a>. Likewise we can now test that the we cannot store empty values:</p>

<pre><code>describe('validation fails', function() {
    it('should not save values if the validation fails', function() {
        var originalName = this.view.model.get('characterName'),
            originalRealm = this.view.model.get('realm');

        $('#characterName').val('');
        $('#realm').val('');

        $('button').trigger('click');

        expect(this.view.model.get('characterName')).toBe(originalName);
        expect(this.view.model.get('realm')).toBe(originalRealm);

    });
});
</code></pre>

<p>Making use of the error event that has been raised by the model, let's see if we can't push something into the view to help fix those errors. Let start by testing for an error class and a data-error attribute. The test has been re-worked a little:</p>

<pre><code>describe('validation fails', function() {
    beforeEach(function() {
        this.originalName = this.view.model.get('characterName'),
        this.originalRealm = this.view.model.get('realm');

        $('#characterName').val('');
        $('#realm').val('');

        $('button').trigger('click');
    });

    .....

    it('should show error messages in the UI', function() {
        expect($('#characterName')).toHaveClass('error');
        expect($('#characterName').data('error')).toBeDefined();
        expect($('#characterName').data('error')).toBe('empty character name supplied');
    });
});
</code></pre>

<p>The code to make this test pass can be found <a href="https://github.com/gregstewart/backbone-jasmine/commit/b96aedc">here</a>. Let's expand this test a little and play with spies and test that the setError method was actually called. I am doing this because it's a concept I am wrestling with. Short of <a href="http://stackoverflow.com/questions/10865364/qunit-sinon-js-backbone-unit-test-frustration-sinon-spy-appears-to-fail-to-d">monkey patching</a>, I have not been able to set up spies on events that are bound when the view initialises. However, you can set a spy on a method gets called as part of the event execution (such as the setError method in this case). So the test is updated as follows:</p>

<pre><code>beforeEach(function() {
    var spy = sinon.spy(this.view, 'setError');
    this.originalName = this.view.model.get('characterName'),
    this.originalRealm = this.view.model.get('realm');

    $('#characterName').val('');
    $('#realm').val('');

    $('button').trigger('click');
});

afterEach(function() {
    this.view.setError.restore();
});

...

it('should show error messages in the UI', function() {
    expect(this.view.setError).toHaveBeenCalled();
    expect($('#characterName')).toHaveClass('error');
    expect($('#characterName').data('error')).toBeDefined();
    expect($('#characterName').data('error')).toBe('empty character name supplied');
});
</code></pre>

<p>I already new the code was being called, but I feel happier now that I can assert that the method is being called and not just the outcome. Let's extend this and actually render an error message.</p>

<pre><code>beforeEach(function() {
    var spy = sinon.spy(this.view, 'setError'),
        spyShowError = sinon.spy(this.view, 'showError');
    this.originalName = this.view.model.get('characterName');
    this.originalRealm = this.view.model.get('realm');

    $('#characterName').val('');
    $('#realm').val('');

    $('button').trigger('click');
});

afterEach(function() {
    this.view.setError.restore();
    this.view.showError.restore();
});

...

it('should display an error message', function() {
    expect(this.view.showError).toHaveBeenCalled();
    expect($('#characterName').prev()).toHaveClass('error-message');
    expect($('#characterName').prev().text()).toBe($('#characterName').data('error'));
});
</code></pre>

<p>Time to add a <a href="https://github.com/gregstewart/backbone-jasmine/commit/7e8e0c1">'showError'</a> method that will prepend a div to the element in question and insert the text stored in the element's data-error attribute. And this for now at least concludes the search view part.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1118</wp:post_id>
		<wp:post_date>2012-06-25 00:08:38</wp:post_date>
		<wp:post_date_gmt>2012-06-24 23:08:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>backbone-jasmine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I just liked &quot;GLOBE&#039;S ELECTRIC...</title>
		<link>http://gregs.tcias.co.uk/2012/07/03/i-just-liked-globes-electric/</link>
		<pubDate>Tue, 03 Jul 2012 09:59:11 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/07/03/i-just-liked-globes-electric/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I just liked "GLOBE'S ELECTRIC BLUE HEAVEN" on Vimeo: <a href="http://t.co/sPzne2wg" rel="nofollow">http://t.co/sPzne2wg</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1124</wp:post_id>
		<wp:post_date>2012-07-03 10:59:11</wp:post_date>
		<wp:post_date_gmt>2012-07-03 09:59:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-just-liked-globes-electric</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[220094326934487040]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>backbone-jasmine - part 2 - testing routes</title>
		<link>http://gregs.tcias.co.uk/2012/07/03/backbone-jasmine-part-2-testing-routes/</link>
		<pubDate>Tue, 03 Jul 2012 14:07:50 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1126</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The code for this post can be found over at <a href="https://github.com/gregstewart/backbone-jasmine/tree/application-router">GitHub</a></p>

<h2>Routes</h2>

<p>Before dealing with the submission and fetching results, a quick detour into routes where the application is glued together. What follows are some tests to make sure the routes defined are being triggered when we navigate to the url, starting with the index action:</p>

<pre><code>describe('Application routes', function() {
    beforeEach(function() {
        this.router = new BackboneJasmine.ApplicationRouter();
        this.routerSpy = sinon.spy();

        try {
            Backbone.history.start({silent: true, pushState: true});
        } catch(e) {
        }

        this.router.navigate('/javascript/spec/SpecRunner.html');
    });

    afterEach(function() {
        this.router.navigate('/javascript/spec/SpecRunner.html');
        Backbone.history.stop();
    });

    it('should by default call the index route', function() {
        this.router.bind('route:index', this.routerSpy, this);
        this.router.navigate('', {trigger: true});

        expect(this.routerSpy).toHaveBeenCalledOnce();
        expect(this.routerSpy).toHaveBeenCalledWith();
    });

});
</code></pre>

<p>And here's the ApplicationRouter file to make the test pass:</p>

<pre><code>var BackboneJasmine = BackboneJasmine || {};

BackboneJasmine.ApplicationRouter = Backbone.Router.extend({
    routes: {
        '': 'index',
    },

    index: function() {

    }
});
</code></pre>

<p>A search route is also needed, test first:</p>

<pre><code>it('should call the search route when #search is navigated to', function() {
    this.router.bind('route:search', this.routerSpy, this);
    this.router.navigate('search/1/2', {trigger: true});

    expect(this.routerSpy).toHaveBeenCalledOnce();
    expect(this.routerSpy).toHaveBeenCalledWith('1','2');
});
</code></pre>

<p>And the code to make it pass:</p>

<pre><code>routes: {
    '': 'index',
    'search/:realm/:character': 'search'
},

...

search: function(realm, character) {
}
</code></pre>

<p>Now that the scaffold for the application is done, it's time to flesh it out starting with the index route and making it initialise the search interface (SearchView). Start off with editing our initial beforeEach and afterEach</p>

<pre><code>beforeEach(function() {
    this.router = new BackboneJasmine.ApplicationRouter();
    this.searchViewStub = sinon.stub(BackboneJasmine, 'SearchView').returns(new Backbone.View());

    ...
});

afterEach(function() {
    this.searchViewStub.restore();
    ...
});
</code></pre>

<p>Now for the actual test:</p>

<pre><code>describe('index', function() {
    beforeEach(function() {
        this.router.index();
    });

    it('should created the search view', function() {
        expect(this.searchViewStub).toHaveBeenCalledOnce();
    });
});
</code></pre>

<p>A stub was created for our SearchView and we are now watching this and want to make sure it gets called when we call the index function. To make the test pass simply instantiate the SearchView in the ApplicationRouter.js file:</p>

<pre><code>index: function() {
    this.searchView = new BackboneJasmine.SearchView();
},
</code></pre>

<p>That's it for now with regards to the routes, I'll coming back to these once the search component has been completed.</p>

<h2>Demo</h2>

<p>In the root of the code there's a little demo index.html file that you can browse to if you are using the 'node app.js' server, just go to: <a href="http://localhost:3000/index.html">http://localhost:3000/index.html</a>.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1126</wp:post_id>
		<wp:post_date>2012-07-03 15:07:50</wp:post_date>
		<wp:post_date_gmt>2012-07-03 14:07:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>backbone-jasmine-part-2-testing-routes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Archives</title>
		<link>http://gregs.tcias.co.uk/2008/01/04/archives/</link>
		<pubDate>Fri, 04 Jan 2008 03:58:13 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=461</guid>
		<description></description>
		<content:encoded><![CDATA[Do not edit this page]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>461</wp:post_id>
		<wp:post_date>2008-01-04 14:58:13</wp:post_date>
		<wp:post_date_gmt>2008-01-04 03:58:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>archives</wp:post_name>
		<wp:status>static</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[archives.php]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for July 3rd from 09:33 to 10:52</title>
		<link>http://gregs.tcias.co.uk/2012/07/04/bookmarks-for-july-3rd-from-0933-to-1052/</link>
		<pubDate>Tue, 03 Jul 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/07/04/bookmarks-for-july-3rd-from-0933-to-1052/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>These are my links for July 3rd from 09:33 to 10:52:</p>

<ul>
<li><a href="https://github.com/GoogleChrome/textdrive-app?utm_source=javascriptweekly&amp;utm_medium=email">GoogleChrome/textdrive-app &middot; GitHub</a> </li>
<li><a href="http://mozakai.blogspot.co.uk/2012/06/bananabread-02-levels.html?utm_source=javascriptweekly&amp;utm_medium=email">azakai: BananaBread 0.2: Levels!</a> </li>
<li><a href="http://davidshariff.com/blog/what-is-the-execution-context-in-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">What is the Execution Context &amp; Stack in JavaScript? | David Shariff | Front End User Interface Engineer</a> </li>
<li><a href="http://yeoman.io/">yeoman.io</a> </li>
<li><a href="http://angularjs.org/">AngularJS &mdash; Superheroic JavaScript MVC Framework</a> </li>
<li><a href="http://railscasts.com/episodes/360-facebook-authentication?view=asciicast">#360 Facebook Authentication - RailsCasts</a> </li>
<li><a href="http://hunterpowers.com/data-scraping-and-more-with-ruby-nokogiri-sinatra-and-heroku/?utm_source=rubyweekly&amp;utm_medium=email">Data Scraping And More With Ruby, Nokogiri, Sinatra And Heroku - Hunter Powers</a> </li>
<li><a href="http://www.drurly.com/blog/2012/06/26/reddit-in-10-lines-of-code/?utm_source=rubyweekly&amp;utm_medium=email">Tutorial: Reddit in 10 Lines of Code - Dru Riley</a> </li>
<li><a href="https://github.com/canarymason/breakpoint?utm_source=html5weekly&amp;utm_medium=email">canarymason/breakpoint &middot; GitHub</a> </li>
<li><a href="http://www.alistapart.com/articles/building-books-with-css3/?utm_source=html5weekly&amp;utm_medium=email">A List Apart: Articles: Building Books with CSS3</a> </li>

</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1130</wp:post_id>
		<wp:post_date>2012-07-04 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-07-03 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-july-3rd-from-0933-to-1052</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="authentication"><![CDATA[authentication]]></category>
		<category domain="post_tag" nicename="bananabread"><![CDATA[bananabread]]></category>
		<category domain="post_tag" nicename="book"><![CDATA[book]]></category>
		<category domain="post_tag" nicename="breakpoints"><![CDATA[breakpoints]]></category>
		<category domain="post_tag" nicename="build"><![CDATA[build]]></category>
		<category domain="post_tag" nicename="chrome"><![CDATA[chrome]]></category>
		<category domain="post_tag" nicename="context"><![CDATA[context]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="editor"><![CDATA[editor]]></category>
		<category domain="post_tag" nicename="epub"><![CDATA[epub]]></category>
		<category domain="post_tag" nicename="execution"><![CDATA[execution]]></category>
		<category domain="post_tag" nicename="facebook"><![CDATA[facebook]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="front-end"><![CDATA[front end]]></category>
		<category domain="post_tag" nicename="game"><![CDATA[game]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="layout"><![CDATA[layout]]></category>
		<category domain="post_tag" nicename="media-queries"><![CDATA[media queries]]></category>
		<category domain="post_tag" nicename="nokogiri"><![CDATA[nokogiri]]></category>
		<category domain="post_tag" nicename="pdf"><![CDATA[pdf]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="reddit"><![CDATA[reddit]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="sass"><![CDATA[sass]]></category>
		<category domain="post_tag" nicename="scraping"><![CDATA[scraping]]></category>
		<category domain="post_tag" nicename="sinatra"><![CDATA[sinatra]]></category>
		<category domain="post_tag" nicename="text"><![CDATA[text]]></category>
		<category domain="post_tag" nicename="tools"><![CDATA[tools]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="yeoman"><![CDATA[yeoman]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I just liked &quot;B&#124;P Mobile Resea...</title>
		<link>http://gregs.tcias.co.uk/2012/07/25/i-just-liked-bp-mobile-resea/</link>
		<pubDate>Wed, 25 Jul 2012 08:34:49 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/07/25/i-just-liked-bp-mobile-resea/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I just liked "B|P Mobile Research" on Vimeo: <a href="http://t.co/wSKjImQV" rel="nofollow">http://t.co/wSKjImQV</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1131</wp:post_id>
		<wp:post_date>2012-07-25 09:34:49</wp:post_date>
		<wp:post_date_gmt>2012-07-25 08:34:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-just-liked-bp-mobile-resea</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[228045627785887744]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for August 17th through August 29th</title>
		<link>http://gregs.tcias.co.uk/2012/08/30/bookmarks-for-august-17th-through-august-29th/</link>
		<pubDate>Wed, 29 Aug 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/08/30/bookmarks-for-august-17th-through-august-29th/</guid>
		<description></description>
		<content:encoded><![CDATA[These are my links for August 17th through August 29th:



<ul>
<li><a href="http://24ways.org/2011/conditional-loading-for-responsive-designs">24 ways: Conditional Loading for Responsive Designs</a> </li>
<li><a href="http://mobile.smashingmagazine.com/2012/08/22/separate-mobile-responsive-website-presidential-smackdown/">Separate Mobile Website Vs. Responsive Website | Smashing Mobile</a> </li>
<li><a href="http://goodfil.ms/blog/posts/2012/08/13/angularjs-and-the-goodfilms-mobile-site-part-1/?utm_source=javascriptweekly&amp;utm_medium=email">AngularJS and the Goodfilms mobile site - Part 1 - Bad films are bad</a> </li>
<li><a href="https://hacks.mozilla.org/2012/08/remote-debugging-on-firefox-for-android/?utm_source=html5weekly&amp;utm_medium=email">Remote Debugging on Firefox for Android ✩ Mozilla Hacks &ndash; the Web developer blog</a> </li>
<li><a href="http://byfat.xxx/burn-your-idols">YES PLS LETS BURNNNN | $$$ fat</a> </li>
<li><a href="http://mofarahrunningawayfromthings.tumblr.com/">Mo Farah Running Away From Things</a> </li>
<li><a href="http://boxcar.io/">Instant Notifications for Facebook, Twitter, Email and More! &mdash; Boxcar</a> </li>
<li><a href="http://google-opensource.blogspot.co.uk/2012/08/leak-finder-new-tool-for-javascript.html?utm_source=javascriptweekly&amp;utm_medium=email">Leak Finder: a new tool for JavaScript - Google Open Source Blog</a> </li>
<li><a href="http://buildnewgames.com/garbage-collector-friendly-code/?utm_source=javascriptweekly&amp;utm_medium=email">High-Performance, Garbage-Collector-Friendly Code - Build New Games</a> </li>
<li><a href="http://weblog.bocoup.com/getting-bitwise-with-javascript/?utm_source=javascriptweekly&amp;utm_medium=email">Getting Bitwise with JavaScript - Bocoup</a> </li>

</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1135</wp:post_id>
		<wp:post_date>2012-08-30 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-08-29 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-august-17th-through-august-29th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="angular-js"><![CDATA[angular.js]]></category>
		<category domain="post_tag" nicename="api"><![CDATA[api]]></category>
		<category domain="post_tag" nicename="arduino"><![CDATA[arduino]]></category>
		<category domain="post_tag" nicename="bitwise"><![CDATA[bitwise]]></category>
		<category domain="post_tag" nicename="boxcar"><![CDATA[boxcar]]></category>
		<category domain="post_tag" nicename="burn-your-idols"><![CDATA[burn your idols]]></category>
		<category domain="post_tag" nicename="conditional-loading"><![CDATA[conditional loading]]></category>
		<category domain="post_tag" nicename="debugging"><![CDATA[debugging]]></category>
		<category domain="post_tag" nicename="finding"><![CDATA[finding]]></category>
		<category domain="post_tag" nicename="firefox"><![CDATA[firefox]]></category>
		<category domain="post_tag" nicename="how-to"><![CDATA[how-to]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="inspiration"><![CDATA[inspiration]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="leaks"><![CDATA[leaks]]></category>
		<category domain="post_tag" nicename="memory"><![CDATA[memory]]></category>
		<category domain="post_tag" nicename="mo-farah"><![CDATA[Mo Farah]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="notification"><![CDATA[notification]]></category>
		<category domain="post_tag" nicename="olympics"><![CDATA[olympics]]></category>
		<category domain="post_tag" nicename="presidential"><![CDATA[presidential]]></category>
		<category domain="post_tag" nicename="push"><![CDATA[push]]></category>
		<category domain="post_tag" nicename="remote"><![CDATA[remote]]></category>
		<category domain="post_tag" nicename="responsive"><![CDATA[responsive]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android - Google Chrome remote debugging in two, no three simple steps</title>
		<link>http://gregs.tcias.co.uk/2012/09/06/android-google-chrome-remote-debugging-in-two-no-three-simple-steps/</link>
		<pubDate>Thu, 06 Sep 2012 13:08:57 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1137</guid>
		<description></description>
		<content:encoded><![CDATA[Simply enabling Open Chrome on your phone → Settings → Developer Tools → check Enable USB Web debugging and running the following command:



<pre><code>adb forward tcp:9222 localabstract:chrome_devtools_remote
</code></pre>

are not quite enough to be able to bring up the Remote Webkit inspector. Remember to also check the box for Settings → Developer options → USB debugging and then you are good to go!


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1137</wp:post_id>
		<wp:post_date>2012-09-06 14:08:57</wp:post_date>
		<wp:post_date_gmt>2012-09-06 13:08:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android-google-chrome-remote-debugging-in-two-no-three-simple-steps</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[android]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="category" nicename="mobile"><![CDATA[mobile]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bookmarks for August 31st through September 6th</title>
		<link>http://gregs.tcias.co.uk/2012/09/07/bookmarks-for-august-31st-through-september-6th/</link>
		<pubDate>Thu, 06 Sep 2012 23:00:00 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/09/07/bookmarks-for-august-31st-through-september-6th/</guid>
		<description></description>
		<content:encoded><![CDATA[These are my links for August 31st through September 6th:



<ul>
<li><a href="http://typeworship.com/">Type Worship</a> </li>
<li><a href="http://thoughtbot.com/neat/">Bourbon Neat</a> </li>
<li><a href="http://susy.oddbird.net/">Susy: Responsive grids for Compass</a> </li>
<li><a href="http://updates.html5rocks.com/2012/08/Stick-your-landings-position-sticky-lands-in-WebKit">Stick your landings! position: sticky lands in WebKit - HTML5Rocks Updates</a> </li>
<li><a href="http://www.mydigitallife.info/configure-and-enable-gzip-compression-with-mod_deflate-to-speed-up-apache-and-save-bandwidth/">Configure and Enable GZIP Compression with mod_deflate to Speed Up Apache and Save Bandwidth &laquo; My Digital Life</a> </li>
<li><a href="https://github.com/seanpowell/Email-Boilerplate?utm_source=hackernewsletter&amp;utm_medium=email">seanpowell/Email-Boilerplate &middot; GitHub</a> </li>
<li><a href="http://tent.io/">Tent - the decentralized social web</a> </li>
<li><a href="http://labs.ft.com/2012/08/navigator-online-here-be-dragons/">navigator.onLine: here be dragons | FT Labs</a> </li>
<li><a href="http://aws.amazon.com/glacier/?utm_source=hackernewsletter&amp;utm_medium=email">Amazon Glacier</a> </li>
<li><a href="http://aaronparecki.com/2012/236/article/1/you-should-not-be-displaying-relative-dates">You should not be displaying relative dates - Aaron Parecki</a> </li>

</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1140</wp:post_id>
		<wp:post_date>2012-09-07 00:00:00</wp:post_date>
		<wp:post_date_gmt>2012-09-06 23:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bookmarks-for-august-31st-through-september-6th</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apache"><![CDATA[apache]]></category>
		<category domain="post_tag" nicename="backup"><![CDATA[backup]]></category>
		<category domain="post_tag" nicename="boilerplate"><![CDATA[boilerplate]]></category>
		<category domain="post_tag" nicename="css-2"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="dates"><![CDATA[dates]]></category>
		<category domain="post_tag" nicename="decentralised"><![CDATA[decentralised]]></category>
		<category domain="post_tag" nicename="displaying"><![CDATA[displaying]]></category>
		<category domain="post_tag" nicename="email"><![CDATA[email]]></category>
		<category domain="post_tag" nicename="fonts"><![CDATA[fonts]]></category>
		<category domain="post_tag" nicename="gem"><![CDATA[gem]]></category>
		<category domain="post_tag" nicename="grid"><![CDATA[grid]]></category>
		<category domain="post_tag" nicename="gzip"><![CDATA[gzip]]></category>
		<category domain="post_tag" nicename="html5"><![CDATA[html5]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<category domain="post_tag" nicename="online"><![CDATA[online]]></category>
		<category domain="post_tag" nicename="positionsticky"><![CDATA[position:sticky]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="post_tag" nicename="sass"><![CDATA[sass]]></category>
		<category domain="post_tag" nicename="social-network"><![CDATA[social network]]></category>
		<category domain="post_tag" nicename="storage"><![CDATA[storage]]></category>
		<category domain="post_tag" nicename="tent"><![CDATA[tent]]></category>
		<category domain="post_tag" nicename="tent-io"><![CDATA[tent.io]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="typography"><![CDATA[typography]]></category>
		<category domain="post_tag" nicename="window-navigator-online"><![CDATA[window.navigator.online]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screencast on CSS critic - a l...</title>
		<link>http://gregs.tcias.co.uk/2012/09/12/screencast-on-css-critic-a-l/</link>
		<pubDate>Wed, 12 Sep 2012 16:22:15 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/09/12/screencast-on-css-critic-a-l/</guid>
		<description></description>
		<content:encoded><![CDATA[Screencast on CSS critic - a lightweight testing framework for CSS: <a href="http://t.co/SFl1zDqs" rel="nofollow">http://t.co/SFl1zDqs</a> via @<a href="http://twitter.com/youtube" class="aktt_username">youtube</a>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1141</wp:post_id>
		<wp:post_date>2012-09-12 17:22:15</wp:post_date>
		<wp:post_date_gmt>2012-09-12 16:22:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screencast-on-css-critic-a-l</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[245920266453135360]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Therapeutic Refactoring by Kat...</title>
		<link>http://gregs.tcias.co.uk/2012/09/22/therapeutic-refactoring-by-kat/</link>
		<pubDate>Sat, 22 Sep 2012 13:31:16 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/2012/09/22/therapeutic-refactoring-by-kat/</guid>
		<description></description>
		<content:encoded><![CDATA[Therapeutic Refactoring by Katrina Owen: <a href="http://t.co/iUp2trUS" rel="nofollow">http://t.co/iUp2trUS</a> via @<a href="http://twitter.com/youtube" class="aktt_username">youtube</a>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1142</wp:post_id>
		<wp:post_date>2012-09-22 14:31:16</wp:post_date>
		<wp:post_date_gmt>2012-09-22 13:31:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>therapeutic-refactoring-by-kat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tumble"><![CDATA[tumble]]></category>
		<category domain="post_tag" nicename="tweets"><![CDATA[tweets]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>aktt_twitter_id</wp:meta_key>
			<wp:meta_value><![CDATA[249501115178164225]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Maven example POM file to build with Jasmine, JSlint, SASS and YUI</title>
		<link>http://gregs.tcias.co.uk/2012/11/07/maven-example-pom-file-to-build-with-jasmine-jslint-sass-and-yui/</link>
		<pubDate>Wed, 07 Nov 2012 14:11:33 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1149</guid>
		<description></description>
		<content:encoded><![CDATA[Since we seem to be repeating these steps time and again here's an example of a POM file to run JSLint, Jasmine, SASS and YUI as part of the build Maven build process:



<pre><code>&lt;build&gt;
   &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;com.github.searls&lt;/groupId&gt;
            &lt;artifactId&gt;jasmine-maven-plugin&lt;/artifactId&gt;
            &lt;version&gt;1.2.0.0&lt;/version&gt;
            &lt;extensions&gt;true&lt;/extensions&gt;
            &lt;executions&gt;
                &lt;execution&gt;
                    &lt;goals&gt;
                        &lt;goal&gt;test&lt;/goal&gt;
                    &lt;/goals&gt;
                &lt;/execution&gt;
            &lt;/executions&gt;
            &lt;configuration&gt;
                &lt;jsSrcDir&gt;${project.basedir}/src/main/js&lt;/jsSrcDir&gt;
                &lt;jsTestSrcDir&gt;${project.basedir}/src/test/js&lt;/jsTestSrcDir&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;

        &lt;plugin&gt;
            &lt;groupId&gt;org.jasig.maven&lt;/groupId&gt;
            &lt;artifactId&gt;sass-maven-plugin&lt;/artifactId&gt;
            &lt;version&gt;1.0.0&lt;/version&gt;
            &lt;executions&gt;
                &lt;execution&gt;
                    &lt;phase&gt;generate-resources&lt;/phase&gt;
                    &lt;goals&gt;
                        &lt;goal&gt;update-stylesheets&lt;/goal&gt;
                    &lt;/goals&gt;
                &lt;/execution&gt;
            &lt;/executions&gt;
            &lt;configuration&gt;
                &lt;sassSourceDirectory&gt;${project.basedir}/src/main&lt;/sassSourceDirectory&gt;
                &lt;baseOutputDirectory&gt;${project.build.directory}/classes/assets/stylesheets&lt;/baseOutputDirectory&gt;
                &lt;sassOptions&gt;
                    &lt;cache_location&gt;'${project.build.directory}/sass_cache'&lt;/cache_location&gt;
                    &lt;always_update&gt;true&lt;/always_update&gt;
                    &lt;style&gt;:compressed&lt;/style&gt;
                &lt;/sassOptions&gt;
            &lt;/configuration&gt;
            &lt;dependencies&gt;
                &lt;dependency&gt;
                    &lt;groupId&gt;com.google.guava&lt;/groupId&gt;
                    &lt;artifactId&gt;guava&lt;/artifactId&gt;
                    &lt;version&gt;13.0.1&lt;/version&gt;
                &lt;/dependency&gt;
            &lt;/dependencies&gt;
        &lt;/plugin&gt;

        &lt;plugin&gt;
            &lt;groupId&gt;com.googlecode.jslint4java&lt;/groupId&gt;
            &lt;artifactId&gt;jslint4java-maven-plugin&lt;/artifactId&gt;
            &lt;version&gt;2.0.2&lt;/version&gt;
            &lt;executions&gt;
                &lt;execution&gt;
                    &lt;id&gt;lint&lt;/id&gt;
                    &lt;phase&gt;process-resources&lt;/phase&gt;
                    &lt;goals&gt;
                        &lt;goal&gt;lint&lt;/goal&gt;
                    &lt;/goals&gt;
                    &lt;configuration&gt;
                        &lt;failOnError&gt;true&lt;/failOnError&gt;
                        &lt;sourceFolders&gt;
                            &lt;sourceFolder&gt;${project.basedir}/src/main/js&lt;/sourceFolder&gt;
                        &lt;/sourceFolders&gt;
                        &lt;options&gt;
                            &lt;predef&gt;jQuery, $&lt;/predef&gt;
                            &lt;browser&gt;true&lt;/browser&gt;
                        &lt;/options&gt;
                    &lt;/configuration&gt;
                &lt;/execution&gt;
            &lt;/executions&gt;
        &lt;/plugin&gt;

        &lt;plugin&gt;
            &lt;groupId&gt;net.alchim31.maven&lt;/groupId&gt;
            &lt;version&gt;1.3.0&lt;/version&gt;
            &lt;artifactId&gt;yuicompressor-maven-plugin&lt;/artifactId&gt;
            &lt;executions&gt;
                &lt;execution&gt;
                    &lt;phase&gt;generate-resources&lt;/phase&gt;
                    &lt;goals&gt;
                        &lt;goal&gt;compress&lt;/goal&gt;
                    &lt;/goals&gt;
                &lt;/execution&gt;
            &lt;/executions&gt;
            &lt;configuration&gt;
                &lt;nosuffix&gt;true&lt;/nosuffix&gt;
                &lt;preserveAllSemiColons&gt;true&lt;/preserveAllSemiColons&gt;
                &lt;sourceDirectory&gt;${project.basedir}/src/main/js/&lt;/sourceDirectory&gt;
                &lt;outputDirectory&gt;${project.build.directory}/js-min/&lt;/outputDirectory&gt;
                &lt;excludes&gt;
                    &lt;exclude&gt;**/vendor/*.js&lt;/exclude&gt;
                &lt;/excludes&gt;
                &lt;aggregations&gt;
                    &lt;aggregation&gt;
                        &lt;insertNewLine&gt;true&lt;/insertNewLine&gt;
                        &lt;output&gt;${project.build.directory}/classes/assets/js/all.js&lt;/output&gt;
                        &lt;includes&gt;
                            &lt;include&gt;${project.build.directory}/js-min/HelloWorld.js&lt;/include&gt;
                        &lt;/includes&gt;
                    &lt;/aggregation&gt;
                &lt;/aggregations&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1149</wp:post_id>
		<wp:post_date>2012-11-07 14:11:33</wp:post_date>
		<wp:post_date_gmt>2012-11-07 14:11:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>maven-example-pom-file-to-build-with-jasmine-jslint-sass-and-yui</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[maven]]></category>
		<category domain="post_tag" nicename="sass"><![CDATA[sass]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>aktt_notify_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Backbone-Jasmine: part 3 - Search Results</title>
		<link>http://gregs.tcias.co.uk/2012/12/22/backbone-jasmine-part-3-search-results/</link>
		<pubDate>Sat, 22 Dec 2012 09:52:41 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1154</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In the following we will leverage Backbone Collections and the fetch feature in order to make a call to the service, receive some JSON and build up an array of models from that response. Let's start with creating the collection tests:</p>

<pre><code>describe('Search Collection', function() {

    beforeEach(function() {
        this.collection = new BackboneJasmine.SearchCollection();
    });

    it('should initialise with an empty collection', function() {
        expect(this.collection.length).toBe(0);
    });
});
</code></pre>

<p>Next populating the collection with some dummy data:</p>

<pre><code>describe('fetch', function() {
    beforeEach(function() {
        this.server = sinon.fakeServer.create();
        this.server.respondWith('GET', '/search', [
            200,
            {"Content-Type": "application/json"},
            this.response
        ]);
    });

    afterEach(function() {
        this.server.restore();
        this.collection.reset();
    });

    it('should populate the collection', function() {

        this.collection.fetch();
        this.server.respond();

        expect(this.server.requests.length)
            .toEqual(1);
        expect(this.server.requests[0].method)
            .toEqual("GET");
        expect(this.server.requests[0].url)
            .toEqual("/search");

        expect(this.collection.length).toBe(JSON.parse(this.response).feed.length);
    })
});
</code></pre>

<p>Since the API is for a character's feed, let's call our model Feed. The call to fetch() will go away get the JSON and magically take the data and create one feed model for each feed entry returned and store it in the collection. However because the response is wrapped within a feed object, the collection object also has a parse method to handle the response and let Backbone to work the magic described previously.</p>

<pre><code>var BackboneJasmine = BackboneJasmine || {};

BackboneJasmine.SearchCollection = Backbone.Collection.extend({
    model: BackboneJasmine.Feed,
    url:'search',

    parse:function (response) {
        return response.feed;
    }
});
</code></pre>

<p>All the code is in the <a href="https://github.com/gregstewart/backbone-jasmine/commit/cfe636e">'Search Results branch'</a>.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1154</wp:post_id>
		<wp:post_date>2012-12-22 09:52:41</wp:post_date>
		<wp:post_date_gmt>2012-12-22 09:52:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>backbone-jasmine-part-3-search-results</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_notify</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregated_ids</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:0:{}s:8:"facebook";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregation_log</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:1356171236;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356173057;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356175822;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356180245;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356187462;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356202074;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356231603;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356275634;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356362164;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356535864;O:8:"stdClass":1:{s:6:"manual";b:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Backbone-Jasmine - part 4: Display Results</title>
		<link>http://gregs.tcias.co.uk/2012/12/23/backbone-jasmine-part-4-display-results/</link>
		<pubDate>Sun, 23 Dec 2012 09:53:51 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1157</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Display Results</h2>

<p>Time to display the response back to the user, to this end we'll leverage Underscore.js built-in templating language. Our template to represent the Feed model will end up looking something like this:</p>

<pre><code>&lt;dl&gt;
    &lt;dt&gt;itemId&lt;/dt&gt;
    &lt;dd&gt;&lt;%= itemId %&gt;&lt;/dd&gt;
    &lt;dt&gt;timestamp&lt;/dt&gt;
    &lt;dd&gt;&lt;%= timestamp %&gt;&lt;/dd&gt;
    &lt;dt&gt;type&lt;/dt&gt;
    &lt;dd&gt;&lt;%= type %&gt;&lt;/dd&gt;
    &lt;dt&gt;featOfStrength&lt;/dt&gt;
    &lt;dd&gt;&lt;%= featOfStrength %&gt;&lt;/dd&gt;
    &lt;dt&gt;name&lt;/dt&gt;
    &lt;dd&gt;&lt;%= name %&gt;&lt;/dd&gt;
    &lt;dt&gt;quantity&lt;/dt&gt;
    &lt;dd&gt;&lt;%= quantity %&gt;&lt;/dd&gt;
&lt;/dl&gt;
</code></pre>

<p>We'll use a FeedView to populate the template, so given what we know about the FeedModel and the JS template, let's go ahead and write some tests to populate the template from the model.</p>

<pre><code>describe('Feed View', function () {
    beforeEach(function() {
        loadFixtures('search-results.html');
    });

    it('should render a view item based on model values', function () {
        var feedModel = new BackboneJasmine.Feed({
                'itemId':'1',
                'timestamp':'1',
                'type': 'LOOT',
                'featOfStrength': 'Feat of Strength',
                'name': 'Name',
                'quantity': '1'
            }),
            view = new BackboneJasmine.FeedView({model:feedModel}),
            el = '';

        view.render();

        el = $(view.el).find('dl dd');

        expect($(el[0]).text()).toBe(view.model.get('itemId'));
        expect($(el[1]).text()).toBe(view.model.get('timestamp'));
        expect($(el[2]).text()).toBe(view.model.get('type'));
        expect($(el[3]).text()).toBe(view.model.get('featOfStrength'));
        expect($(el[4]).text()).toBe(view.model.get('name'));
        expect($(el[5]).text()).toBe(view.model.get('quantity'));
    });
});
</code></pre>

<p>To get the tests to pass we need to first create a FeedView object and it will look as follows:</p>

<pre><code>var BackboneJasmine = BackboneJasmine || {};

BackboneJasmine.FeedView = Backbone.View.extend({

    tagName: 'li',
    className: 'feed',
    model: BackboneJasmine.Feed,

    render: function() {
        var variables = {
            itemId: this.model.get('itemId'),
            timestamp: this.model.get('timestamp'),
            type: this.model.get('type'),
            featOfStrength: this.model.get('featOfStrength'),
            name: this.model.get('name'),
            quantity: this.model.get('quantity')
        };

        var template = _.template($('#result-item').html(), variables);
        this.$el.html(template);
    }

});
</code></pre>

<p>The next step involves building out the result view, which will be bound to our collection and display multiple FeedViews. Let's start by fleshing out the test a little to get us started</p>

<pre><code>describe('Result View', function() {
    beforeEach(function() {

    });

    it('should load a fixture', function () {
        expect($('section.search-results')).toExist();
    });

    it('should display a result data', function() {

        var els = $('.search-results &gt; ul li');
        expect($('.search-results')).not.toBeHidden();
        expect(els.length).not.toBe(0);
        expect(els.find('dl &gt; dd').first().text()).toBe('77022');
    });
});
</code></pre>

<p>We can get the first test to pass easily by creating our fixture and adding it to the spec, but we'll also need to start start pulling our result view, which will be populated with our response fixture:</p>

<pre><code>beforeEach(function() {
    loadFixtures('search-results.html');
    this.response = readFixtures('feed.json');

    this.view = new BackboneJasmine.ResultView();
    this.view.collection.add(JSON.parse(this.response).feed);
    this.view.render();
});
</code></pre>

<p>With this in place, we can build out the ResultView object.</p>

<pre><code>var BackboneJasmine = BackboneJasmine || {};

BackboneJasmine.ResultView = Backbone.View.extend({
    el: 'section.search-results',

    initialize: function() {
        _.bindAll(this, 'addFeed');

        this.collection = new BackboneJasmine.SearchCollection();
        this.$el.hide();
        this.render();
    },

    render: function() {
        this.$el.show();
        this.collection.each(this.addFeed);
    },

    addFeed: function(feed) {
        var view = new BackboneJasmine.FeedView({model: feed}),
            feedItem = view.render().el;
        this.$el.find('ul').append(feedItem);
    }

});
</code></pre>

<p><a href="backbone-jasmine/commit/7581346">'This is an idealistic view'</a> of syncing data between your services and your UI. Next up I'll look at customising the collection fetch method and later on extend this to make a JSONP call.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1157</wp:post_id>
		<wp:post_date>2012-12-23 09:53:51</wp:post_date>
		<wp:post_date_gmt>2012-12-23 09:53:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>backbone-jasmine-part-4-display-results</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="backbone-js"><![CDATA[backbone.js]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
		<category domain="post_tag" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregated_ids</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:0:{}s:8:"facebook";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregation_log</wp:meta_key>
			<wp:meta_value><![CDATA[a:13:{i:1356257727;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356260364;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356263948;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356268435;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356270245;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356273084;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356280182;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356288236;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356302688;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356331516;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356374772;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356462040;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356635805;O:8:"stdClass":1:{s:6:"manual";b:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_notify</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What is a closure in JavaScript?</title>
		<link>http://gregs.tcias.co.uk/2012/12/24/what-is-a-closure-in-javascript/</link>
		<pubDate>Mon, 24 Dec 2012 13:05:12 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1161</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If we turn to Google, invariably you are led to <a href="http://stackoverflow.com/questions/111102/how-do-javascript-closures-work">Stackoverflow</a>. There's a ton of information in that post, but I am going to try and put it into my on words so that the information sticks. A closure is a function with an inner function keyword AND you return that inner function. The inner function has access to the private member variables of the outer function. Here's an example</p>

<pre><code> function foo(x) {
   var tmp = 3;
   return function (y) {
     alert(x + y + (++tmp));
   }
 }
 var bar = foo(2); // bar is now a closure.      
 bar(10);
</code></pre>

<p>But what is happening here? For starters we are creating our closure by calling bar = foo(2). So bar holds a reference to our closure, i.e. we are assigning bar a reference to our inner function. Of note as well is that the inner function is being returned from the outer function before being executed.</p>

<p>Now we invoke bar(10) which alerts 16, because bar() can see tmp and x. When you run bar(10) again and you get a slightly different result (i.e. 17) and that is because both x and tmp are still alive and well, and since tmp was incremented by 1 we know get 17 instead of 16. Also we have effectively we have closed over the internal variables, i.e. we can't access tmp.</p>

<p>In this case our inner function here is an anonymous function, it could just as easily have been written as follows:</p>

<pre><code> function foo(x) {
   var tmp = 3;
   alertSum = function (y) {
     alert(x + y + (++tmp));
   };       
   return alertSum;
 }
 var bar = foo(2); // bar is now a closure.
 bar(10);
</code></pre>

<p>A closure is a special kind of object that combines both a function and the environment <a href="https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Closures">it was created in</a>. The 'environment' refers to the local variables that are in scope, when the closure was created. In the previous example from Stackoverflow, that would be tmp and x. When the closure was created the value of tmp was 3, but then you invoked bar(10) the first time it's value was incremented to 4. Now as described we invoked bar(10) again and got 17, because tmp now had a value of 5.</p>

<p>This combination of data and function, resembled key Object Oriented design construct, where it differs, is that we only work with one method here, where in OO an object has data and one or more methods that interact with the objects data.</p>

<p>Sometimes closures are also called function factories, because you can create new functions based on the initial value passed into the closure when you created it. Consider this example from the Mozilla article:</p>

<pre><code> function makeAdder(x) {
   return function(y) {
     return x + y;
   };
 }

 var add5 = makeAdder(5);
 var add10 = makeAdder(10);

 print(add5(2));  // 7
 print(add10(2)); // 12
</code></pre>

<p>It's always helpful to come up with your own example, so how about using a closure to create a dice maker? If you have ever played Dungeon and Dragons, you need a bunch of different dice to play. Now we could use a closure as a function factory to create x number of sided dice and return a roll method that we could invoke on that die:</p>

<pre><code> function dieMaker(x) {
     var sides = x;

     function getRandomInt(min, max) {
       return Math.floor(Math.random() * (max - min + 1)) + min;
     }

     roll = function() {
         return getRandomInt(1, sides);                        
     }

     return roll;
 }​;

 var sixSidedDie = dieMaker(6);
 alert(sixSidedDie());
</code></pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1161</wp:post_id>
		<wp:post_date>2012-12-24 13:05:12</wp:post_date>
		<wp:post_date_gmt>2012-12-24 13:05:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-is-a-closure-in-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="closure"><![CDATA[closure]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_social_aggregation_log</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:1356355809;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356357612;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356361204;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356365676;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356373828;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356389044;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356418738;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356462041;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356549361;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356723026;O:8:"stdClass":1:{s:6:"manual";b:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregated_ids</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:0:{}s:8:"facebook";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jQuery Dial</title>
		<link>http://gregs.tcias.co.uk/2012/12/26/jquery-dial/</link>
		<pubDate>Wed, 26 Dec 2012 13:41:42 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1182</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A long with some of my work colleagues we recently built a jQuery Dial/Knob UI control that we decided to open-source and share with others. We tested it against the following browsers:</p>

<ul>
<li>Chrome 23</li>
<li>Opera 12.11</li>
<li>Safari 6.0.2</li>
<li>Firefox 17</li>
<li>IE6+</li>
</ul>

<p>Check out the <a href="http://gregstewart.github.com/orbital-dial/">project page</a>, for instructions on how to use it and a working example. Let me know about your thoughts or indeed any issues.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1182</wp:post_id>
		<wp:post_date>2012-12-26 13:41:42</wp:post_date>
		<wp:post_date_gmt>2012-12-26 13:41:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery-dial</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="github"><![CDATA[Github]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[mobile]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregated_ids</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:0:{}s:8:"facebook";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregation_log</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:1356530335;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356533091;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356535865;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356540238;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356547673;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356562741;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356591599;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356635806;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356723027;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1356896641;O:8:"stdClass":1:{s:6:"manual";b:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>So you want to write some user journey tests</title>
		<link>http://gregs.tcias.co.uk/2013/04/26/so-you-want-to-write-some-user-journey-tests/</link>
		<pubDate>Fri, 26 Apr 2013 15:41:04 +0000</pubDate>
		<dc:creator>gregs</dc:creator>
		<guid isPermaLink="false">http://gregs.tcias.co.uk/?p=1202</guid>
		<description></description>
		<content:encoded><![CDATA[<p>On past projects I have relied on WebDriver to automate and write User Journey tests. This involved using either .Net or Java, which is fine, however much to my delight I was informed that <a href="https://code.google.com/p/selenium/wiki/WebDriverJs">there is a JavaScript</a> version! Here's a brief outline on how to get started with WebDriverJS and let the good times roll!</p>

<p>If you have node installed then you are good to go. If not, off you go ahead and <a href="http://nodejs.org/">install it now</a> (you can build it from source too if you are that way inclined).</p>

<ol>
<li>open up your favourite terminal window and install selenium webdriver using npm: <code>npm install selenium-webdriver</code></li>
<li>WebDriverJS uses <a href="http://visionmedia.github.io/mocha/">Mocha</a> as it's test runner, so go ahead and install that next: <code>npm install -g mocha</code></li>
<li>You will also <a href="https://code.google.com/p/selenium/downloads/list">need the selenium standalone server</a> (I suggest you put the selenium stand alone server jar in a vendor folder in your project).</li>
</ol>

<p>That's all the software you will need, but before we get stuck in, I like to to follow a folder structure that looks a little like this:</p>

<pre><code>vendor
test
    functional
        helpers
    unit
</code></pre>

<p>Right let's write some code! I'll start off with a few helper node modules (these live in test/functional/helpers) that'll make things a little bit more re-usable. Let's start with a helper to start the selenium server:</p>

<pre><code>var assert = require('assert'),
    fs = require('fs'),
    remote = require('selenium-webdriver/remote'),
    SELENIUM = '../vendor/selenium/selenium-server-standalone-2.32.0.jar',
    server;

exports.setUpServer = function () {
    var jar = process.env.SELENIUM;
    if(!jar) {
        jar = SELENIUM;
    }
    assert.ok(!!jar, 'SELENIUM variable not set');
    assert.ok(fs.existsSync(jar), 'The specified jar does not exist: ' + jar);
    server = new remote.SeleniumServer({ jar: jar, port: 4444 });

    server.start();

    return server;
}
</code></pre>

<p>And now for the WebDriver helper:</p>

<pre><code>var webdriver = require('selenium-webdriver');

exports.setUpWebDriver = function(server) {
    return new webdriver.Builder().
        usingServer(server.address()).
        withCapabilities({ 'browserName': 'firefox' }).
        build();
};

exports.By = webdriver.By;
</code></pre>

<p>This setup assumes you have FireFox installed, as it's the simplest browser to get started with, but you can use a bunch of different ones. Now for our test, which will go to a page and assert the value of a title is correct.</p>

<pre><code>var assert = require('assert'),
    test = require('selenium-webdriver/testing'),
    serverHelper = require('./helpers/server.helper'),
    webDriverHelper = require('./helpers/webdriver.helper'),
    driver,
    server;

test.before(function () {
    server = serverHelper.setUpServer();
    driver = webDriverHelper.setUpWebDriver(server);

    driver.get('http://www.google.co.uk/');
});


test.describe('Homepage view', function () {

    test.it('should have the correct title', function () {
        driver.getTitle().then(function (title) {
            assert.equal(title, 'Google');
        });
    });
});

test.after(function () {
    driver.quit();
    server.stop();
});
</code></pre>

<p>This file lives in your functional test folder and let's call it test-journey.js. It basically sets up the server and driver (i.e. starts our browser and navigates to Google), before running the simple title assertion and when done, closes the browser and server. To run this test, in your terminal window inside test/functional, type:</p>

<pre><code>mocha -R list test-journey.js
</code></pre>

<p>Keep your fingers crossed and after a few moments FireFox should fire up and run the test. If the test passed, then your console should display something like this:</p>

<p>. Homepage view should have the correct title: 407ms</p>

<p>1 test complete (13 seconds)</p>

<p>Pretty straightforward, no?</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1202</wp:post_id>
		<wp:post_date>2013-04-26 16:41:04</wp:post_date>
		<wp:post_date_gmt>2013-04-26 15:41:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>so-you-want-to-write-some-user-journey-tests</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="functional"><![CDATA[functional]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="post_tag" nicename="javascript-2"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="mocha"><![CDATA[mocha]]></category>
		<category domain="category" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="selenium"><![CDATA[selenium]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="post_tag" nicename="user-journeys"><![CDATA[user journeys]]></category>
		<category domain="post_tag" nicename="web-driver"><![CDATA[web-driver]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_broadcast_content</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14489409;s:139:"So you want to write some user journey tests: On past projects I have relied on WebDriver to automate a... http://gregs.tcias.co.uk/?p=1202";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_notify</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_broadcast_meta</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14489409;a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregated_ids</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:0:{}s:8:"facebook";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_aggregation_log</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:1366992002;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1366993817;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1366996582;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1367000272;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1367008656;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1367023436;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1367052329;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1367095612;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1367183058;O:8:"stdClass":1:{s:6:"manual";b:0;}i:1367356493;O:8:"stdClass":1:{s:6:"manual";b:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_social_broadcasted_ids</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14489409;a:1:{i:327809767538036737;a:3:{s:7:"message";s:3000:"eyJjb29yZGluYXRlcyI6bnVsbCwiaW5fcmVwbHlfdG9fc3RhdHVzX2lkIjpudWxsLCJ1c2VyIjp7Im5hbWUiOiJHcmVnIFN0ZXdhcnQiLCJnZW9fZW5hYmxlZCI6dHJ1ZSwiaWRfc3RyIjoiMTQ0ODk0MDkiLCJwcm9maWxlX3NpZGViYXJfYm9yZGVyX2NvbG9yIjoiZmZmOGFkIiwibGlzdGVkX2NvdW50IjoyLCJlbnRpdGllcyI6eyJ1cmwiOnsidXJscyI6W3sidXJsIjoiaHR0cDpcL1wvZ3JlZ3MudGNpYXMuY28udWtcLyIsImluZGljZXMiOlswLDI1XSwiZGlzcGxheV91cmwiOm51bGwsImV4cGFuZGVkX3VybCI6bnVsbH1dfSwiZGVzY3JpcHRpb24iOnsidXJscyI6W119fSwic3RhdHVzZXNfY291bnQiOjMwMSwidmVyaWZpZWQiOmZhbHNlLCJpZCI6IjE0NDg5NDA5IiwicHJvZmlsZV9iYWNrZ3JvdW5kX3RpbGUiOmZhbHNlLCJwcm9maWxlX2ltYWdlX3VybCI6Imh0dHA6XC9cL2EwLnR3aW1nLmNvbVwvcHJvZmlsZV9pbWFnZXNcLzY2Njk0NTUyXC93aWxkY2FyZF9ub3JtYWwucG5nIiwicHJvZmlsZV9zaWRlYmFyX2ZpbGxfY29sb3IiOiJmNmZmZDEiLCJmb2xsb3dfcmVxdWVzdF9zZW50IjpmYWxzZSwicHJvZmlsZV9pbWFnZV91cmxfaHR0cHMiOiJodHRwczpcL1wvdHdpbWcwLWEuYWthbWFpaGQubmV0XC9wcm9maWxlX2ltYWdlc1wvNjY2OTQ1NTJcL3dpbGRjYXJkX25vcm1hbC5wbmciLCJjcmVhdGVkX2F0IjoiV2VkIEFwciAyMyAwODoyMzo1MCArMDAwMCAyMDA4IiwibGFuZyI6ImVuIiwiZGVmYXVsdF9wcm9maWxlX2ltYWdlIjpmYWxzZSwidXRjX29mZnNldCI6MCwiZmF2b3VyaXRlc19jb3VudCI6MCwicHJvZmlsZV9iYWNrZ3JvdW5kX2NvbG9yIjoiRkZGMDREIiwibm90aWZpY2F0aW9ucyI6ZmFsc2UsImlzX3RyYW5zbGF0b3IiOmZhbHNlLCJwcm90ZWN0ZWQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6bnVsbCwiY29udHJpYnV0b3JzX2VuYWJsZWQiOmZhbHNlLCJzY3JlZW5fbmFtZSI6Il9ncmVnX3N0ZXdhcnRfIiwicHJvZmlsZV9iYWNrZ3JvdW5kX2ltYWdlX3VybCI6Imh0dHA6XC9cL2EwLnR3aW1nLmNvbVwvaW1hZ2VzXC90aGVtZXNcL3RoZW1lMTlcL2JnLmdpZiIsInRpbWVfem9uZSI6IkxvbmRvbiIsImZvbGxvd2luZyI6ZmFsc2UsInVybCI6Imh0dHA6XC9cL2dyZWdzLnRjaWFzLmNvLnVrXC8iLCJmb2xsb3dlcnNfY291bnQiOjU4LCJwcm9maWxlX2xpbmtfY29sb3IiOiIwMDk5Q0MiLCJmcmllbmRzX2NvdW50Ijo5MCwibG9jYXRpb24iOiJXaW1ibGVkb24iLCJkZWZhdWx0X3Byb2ZpbGUiOmZhbHNlLCJwcm9maWxlX3VzZV9iYWNrZ3JvdW5kX2ltYWdlIjp0cnVlLCJwcm9maWxlX2JhY2tncm91bmRfaW1hZ2VfdXJsX2h0dHBzIjoiaHR0cHM6XC9cL3R3aW1nMC1hLmFrYW1haWhkLm5ldFwvaW1hZ2VzXC90aGVtZXNcL3RoZW1lMTlcL2JnLmdpZiIsInByb2ZpbGVfdGV4dF9jb2xvciI6IjMzMzMzMyJ9LCJpbl9yZXBseV90b19zY3JlZW5fbmFtZSI6bnVsbCwiaW5fcmVwbHlfdG9fc3RhdHVzX2lkX3N0ciI6bnVsbCwiZW50aXRpZXMiOnsiaGFzaHRhZ3MiOltdLCJ1c2VyX21lbnRpb25zIjpbXSwidXJscyI6W3sidXJsIjoiaHR0cDpcL1wvdC5jb1wvc2pnUHpvNmhFWSIsImluZGljZXMiOlsxMDcsMTI5XSwiZGlzcGxheV91cmwiOiJncmVncy50Y2lhcy5jby51a1wvP3A9MTIwMiIsImV4cGFuZGVkX3VybCI6Imh0dHA6XC9cL2dyZWdzLnRjaWFzLmNvLnVrXC8/cD0xMjAyIn1dfSwiZmF2b3JpdGVkIjpmYWxzZSwic291cmNlIjoiPGEgaHJlZj1cImh0dHBzOlwvXC9zb3ByZXN0by5tYWlsY2hpbXAuY29tXCIgcmVsPVwibm9mb2xsb3dcIj5Tb2NpYWwgUHJveHkgYnkgTWFpbGNoaW1wPFwvYT4iLCJjcmVhdGVkX2F0IjoiRnJpIEFwciAyNiAxNTo0MTo1MyArMDAwMCAyMDEzIiwiaW5fcmVwbHlfdG9fdXNlcl9pZF9zdHIiOm51bGwsInBsYWNlIjpudWxsLCJpZCI6IjMyNzgwOTc2NzUzODAzNjczNyIsImluX3JlcGx5X3RvX3VzZXJfaWQiOm51bGwsInJldHdlZXRfY291bnQiOjAsInRleHQiOiJTbyB5b3Ugd2FudCB0byB3cml0ZSBzb21lIHVzZXIgam91cm5leSB0ZXN0czogT24gcGFzdCBwcm9qZWN0cyBJIGhhdmUgcmVsaWVkIG9uIFdlYkRyaXZlciB0byBhdXRvbWF0ZSBhLi4uIGh0dHA6XC9cL3QuY29cL3NqZ1B6bzZoRVkiLCJnZW8iOm51bGwsInJldHdlZXRlZCI6ZmFsc2UsInBvc3NpYmx5X3NlbnNpdGl2ZSI6ZmFsc2UsImlkX3N0ciI6IjMyNzgwOTc2NzUzODAzNjczNyIsImNvbnRyaWJ1dG9ycyI6bnVsbCwidHJ1bmNhdGVkIjpmYWxzZX0=";s:4:"urls";a:2:{i:0;s:81:"http://gregs.tcias.co.uk/2013/04/26/so-you-want-to-write-some-user-journey-tests/";i:1;s:32:"http://gregs.tcias.co.uk/?p=1202";}s:7:"account";O:8:"stdClass":1:{s:4:"user";O:8:"stdClass":38:{s:2:"id";s:8:"14489409";s:6:"id_str";s:8:"14489409";s:4:"name";s:12:"Greg Stewart";s:11:"screen_name";s:14:"_greg_stewart_";s:8:"location";s:9:"Wimbledon";s:3:"url";s:25:"http://gregs.tcias.co.uk/";s:11:"description";s:0:"";s:9:"protected";s:1:"0";s:15:"followers_count";s:2:"55";s:13:"friends_count";s:2:"74";s:12:"listed_count";s:1:"1";s:10:"created_at";s:30:"Wed Apr 23 08:23:50 +0000 2008";s:16:"favourites_count";s:1:"0";s:10:"utc_offset";s:1:"0";s:9:"time_zone";s:6:"London";s:11:"geo_enabled";s:1:"1";s:8:"verified";s:1:"0";s:14:"statuses_count";s:3:"288";s:4:"lang";s:2:"en";s:6:"status";a:10:{s:10:"created_at";s:30:"Sat Sep 22 13:31:16 +0000 2012";s:2:"id";s:18:"249501115178164225";s:6:"id_str";s:18:"249501115178164225";s:4:"text";s:74:"Therapeutic Refactoring by Katrina Owen: http://t.co/iUp2trUS via @youtube";s:6:"source";s:12:"Tweet Button";s:9:"truncated";s:1:"0";s:13:"retweet_count";s:1:"0";s:9:"favorited";s:1:"0";s:9:"retweeted";s:1:"0";s:18:"possibly_sensitive";s:1:"0";}s:20:"contributors_enabled";s:1:"0";s:13:"is_translator";s:1:"0";s:24:"profile_background_color";s:6:"FFF04D";s:28:"profile_background_image_url";s:48:"http://a0.twimg.com/images/themes/theme19/bg.gif";s:34:"profile_background_image_url_https";s:50:"https://si0.twimg.com/images/themes/theme19/bg.gif";s:23:"profile_background_tile";s:1:"0";s:17:"profile_image_url";s:63:"http://a0.twimg.com/profile_images/66694552/wildcard_normal.png";s:23:"profile_image_url_https";s:65:"https://si0.twimg.com/profile_images/66694552/wildcard_normal.png";s:18:"profile_link_color";s:6:"0099CC";s:28:"profile_sidebar_border_color";s:6:"FFF8AD";s:26:"profile_sidebar_fill_color";s:6:"F6FFD1";s:18:"profile_text_color";s:6:"333333";s:28:"profile_use_background_image";s:1:"1";s:15:"default_profile";s:1:"0";s:21:"default_profile_image";s:1:"0";s:9:"following";s:1:"0";s:19:"follow_request_sent";s:1:"0";s:13:"notifications";s:1:"0";}}}}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
